"Index","Method Name","Method Signature","Commit Count","Change Types","Commit Message","Commit ID","Commit Author"
"1","readResource","readResource","1","Body Change","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"2","TweetBench","TweetBench","1","Body Change","update benchmarks
","b37460af802e21cee798d8c266dc57908a600972","Sam Pullara"
"3","testCompilation","testCompilation","1","Body Change","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"4","testExecution","testExecution","1","Body Change","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"5","testTimeline","testTimeline","1","Body Change","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"6","main","main","4","Exceptions Change","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"7","main","main","4","Exceptions Change","Merge pull request #183 from mbooth101/jackson

Standardise on a single version of jackson (2.7.4)","b9c0b01083a9dc3b2d5df36c54d8ba46c285bde6","Sam Pullara"
"8","main","main","4","Body Change, Exceptions Change, MultiChange","measure the amount of memory allocated running a mustache. down to a single allocation for the scope list.
","f1af955ed9d4fb95ee08e2a33fe44885bd16bc1e","Sam Pullara"
"9","main","main","4","Exceptions Change","make this not thrash the guards
","e6eabef54e3f98600c0e7a71e8974c5f33ce2bbe","Sam Pullara"
"10","JsonMap","JsonMap","1","Modifier Change","update benchmarks
","b37460af802e21cee798d8c266dc57908a600972","Sam Pullara"
"11","convert","convert","1","Body Change","Merge pull request #183 from mbooth101/jackson

Standardise on a single version of jackson (2.7.4)","b9c0b01083a9dc3b2d5df36c54d8ba46c285bde6","Sam Pullara"
"12","readStringFromURL","readStringFromURL","2","File Renamed","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"13","readStringFromURL","readStringFromURL","2","Body Change, Introduced, MultiChange","this is somewhat slower on the synthetic benchmarks but twice as fast on real data with a real writer.
","2edf8dec8dfc23d322007a178da9606241d13540","Sam Pullara"
"14","benchEscapeHTML","benchEscapeHTML","1","Body Change, Introduced, MultiChange","this is somewhat slower on the synthetic benchmarks but twice as fast on real data with a real writer.
","2edf8dec8dfc23d322007a178da9606241d13540","Sam Pullara"
"15","benchEscapeHTMLwithSW","benchEscapeHTMLwithSW","1","Body Change, Introduced, MultiChange","this is somewhat slower on the synthetic benchmarks but twice as fast on real data with a real writer.
","2edf8dec8dfc23d322007a178da9606241d13540","Sam Pullara"
"16","testSingleThreaded","testSingleThreaded","3","Exceptions Change","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"17","testSingleThreaded","testSingleThreaded","3","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"18","testSingleThreaded","testSingleThreaded","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"19","testSingleThreadedClass","testSingleThreadedClass","2","Body Change, Exceptions Change, Introduced, MultiChange","compare using json vs using an object
","c8c8443c0dc0de0b0f77bcb3c55b5ab36af72915","Sam Pullara"
"20","testSingleThreadedClass","testSingleThreadedClass","2","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"21","testContextPrecedence","testContextPrecedence","2","Body Change, Exceptions Change, Introduced, MultiChange","add a fix for context precedence test. we were treating the entire dot notation as missing rather than just the segment.
","60f0c15d7b973c57eee40a31f07052ef3d97a7af","Sam Pullara"
"22","testContextPrecedence","testContextPrecedence","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"23","testCompiler","testCompiler","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"24","testCompiler","testCompiler","4","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"25","testCompiler","testCompiler","4","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"26","testCompiler","testCompiler","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"27","createMustacheFactory","createMustacheFactory","2","File Renamed","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"28","createMustacheFactory","createMustacheFactory","2","Body Change, Introduced, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"29","testMultithreaded","testMultithreaded","4","Exceptions Change","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"30","testMultithreaded","testMultithreaded","4","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"31","testMultithreaded","testMultithreaded","4","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"32","testMultithreaded","testMultithreaded","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"33","getScope","getScope","1","Modifier Change","add it to the benchmarks. not impressive.
","a651178ef1ea9ef069805288077a72dfa5c98173","Sam Pullara"
"34","getMustache","getMustache","2","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"35","getMustache","getMustache","2","Body Change","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"36","singlethreaded","singlethreaded","3","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"37","singlethreaded","singlethreaded","3","Body Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"38","singlethreaded","singlethreaded","3","Body Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"39","time","time","1","Body Change, Introduced, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"40","setUp","setUp","2","Exceptions Change","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"41","setUp","setUp","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"42","JsonCapturer","JsonCapturer","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"43","setUp","setUp","2","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"44","setUp","setUp","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"45","skip","skip","2","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"46","skip","skip","2","Body Change, Introduced, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"47","testCompiler","testCompiler","3","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"48","testCompiler","testCompiler","3","Body Change","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"49","testCompiler","testCompiler","3","Modifier Change","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"50","testComplex","testComplex","6","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"51","testComplex","testComplex","6","Body Change, Exceptions Change, MultiChange","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"52","testComplex","testComplex","6","Body Change, Exceptions Change, MultiChange","Merge branch 'jruby'
","8ee9a4dde5399e89d2e621e3d994f77fb12da0bd","Sam Pullara"
"53","testComplex","testComplex","6","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"54","testComplex","testComplex","6","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"55","testComplex","testComplex","6","Modifier Change","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"56","createMustacheFactory","createMustacheFactory","2","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"57","createMustacheFactory","createMustacheFactory","2","Body Change, Introduced, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"58","testComplexFlapping","testComplexFlapping","4","Body Change, Exceptions Change, Introduced, MultiChange","break through on how to optimize this. keep previous working calls around and check them first.
","7ce14997c02f0fbaec8b3bba4965cbbc03ffcae8","Sam Pullara"
"59","testComplexFlapping","testComplexFlapping","4","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"60","testComplexFlapping","testComplexFlapping","4","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"61","testComplexFlapping","testComplexFlapping","4","Modifier Change","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"62","testParallelComplex","testParallelComplex","5","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"63","testParallelComplex","testParallelComplex","5","Body Change, Exceptions Change, MultiChange","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"64","testParallelComplex","testParallelComplex","5","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"65","testParallelComplex","testParallelComplex","5","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"66","testParallelComplex","testParallelComplex","5","Modifier Change","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"67","testParallelComplexNoExecutor","testParallelComplexNoExecutor","5","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"68","testParallelComplexNoExecutor","testParallelComplexNoExecutor","5","Body Change, Exceptions Change, MultiChange","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"69","testParallelComplexNoExecutor","testParallelComplexNoExecutor","5","Body Change, Exceptions Change, MultiChange","set the CI property or environment variable to turn off benchmarks
","ca6bb03128e3b1d991744080aadf8e51880b0542","Sam Pullara"
"70","testParallelComplexNoExecutor","testParallelComplexNoExecutor","5","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"71","testParallelComplexNoExecutor","testParallelComplexNoExecutor","5","Modifier Change","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"72","complextest","complextest","2","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"73","complextest","complextest","2","Return Type Change, Body Change, Exceptions Change, MultiChange","switch to nullwriter. this gets all that messy buffering out of the way.
","c4d4fec0f18cd15b1b055537a09fbbcc7ef88078","Sam Pullara"
"74","testFieldsIgnored","testFieldsIgnored","1","Body Change","better test name for mapobjecthandler
","c402e4ee28c347e0d3437021d01da6085ff53fbd","Henoch Yehayes"
"75","testMethodsIgnored","testMethodsIgnored","1","Body Change","better test name for mapobjecthandler
","c402e4ee28c347e0d3437021d01da6085ff53fbd","Henoch Yehayes"
"76","testSimple","testSimple","4","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"77","testSimple","testSimple","4","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"78","testSimple","testSimple","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"79","testSimple","testSimple","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"80","testSafeSimple","testSafeSimple","2","Body Change, Exceptions Change, Introduced, MultiChange","ISSUE-264: introduction of a SafeMustacheFactory for use when using untrusted templates
","7d9c23713412d7e60847c9771a6745f3e0bafd78","Sam Pullara"
"81","testSafeSimple","testSafeSimple","2","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"82","testSafe","testSafe","2","Body Change, Exceptions Change, Introduced, MultiChange","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"83","testSafe","testSafe","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"84","LocalizedMustacheResolver","LocalizedMustacheResolver","1","Body Change, Introduced, MultiChange","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"85","getReader","getReader","2","Body Change, Introduced, MultiChange","simple example of i18n templates similar to the way freemarker does things.
","f76cd04426cdb338df14230c52bb7749869f2977","Sam Pullara"
"86","getReader","getReader","2","Body Change","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"87","testSimpleI18N","testSimpleI18N","4","Body Change, Exceptions Change, Introduced, MultiChange","simple example of i18n templates similar to the way freemarker does things.
","f76cd04426cdb338df14230c52bb7749869f2977","Sam Pullara"
"88","testSimpleI18N","testSimpleI18N","4","Body Change, Exceptions Change, MultiChange","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"89","testSimpleI18N","testSimpleI18N","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"90","testSimpleI18N","testSimpleI18N","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"91","testRootCheck","testRootCheck","2","Body Change, Exceptions Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"92","testRootCheck","testRootCheck","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"93","testIssue280","testIssue280","2","Body Change, Exceptions Change, Introduced, MultiChange","ISSUR-280: example of delaying parsing and execution when you don't need it cached, though you could still cache it yourself.
","8c97ec40dc3ce5ce38dc8601bbfea8ffc45f1e87","Sam Pullara"
"94","testIssue280","testIssue280","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"95","testSimpleFiltered","testSimpleFiltered","7","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"96","testSimpleFiltered","testSimpleFiltered","7","Body Change, Exceptions Change, MultiChange","filter template text at the beginning of a mustache or a partial
","28cf324e5ef656f52273dbcc845002fadae328f6","Sam Pullara"
"97","testSimpleFiltered","testSimpleFiltered","7","Exceptions Change","fix some edge cases for filtering text
","d0eadf646a048ea73ebc8f423aaed5060c33c7ea","Sam Pullara"
"98","testSimpleFiltered","testSimpleFiltered","7","Body Change, Exceptions Change, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"99","testSimpleFiltered","testSimpleFiltered","7","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"100","testSimpleFiltered","testSimpleFiltered","7","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"101","testSimpleFiltered","testSimpleFiltered","7","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"102","testTypedSimple","testTypedSimple","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"103","testTypedSimple","testTypedSimple","3","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"104","testTypedSimple","testTypedSimple","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"105","createMustacheFactory","createMustacheFactory","3","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"106","createMustacheFactory","createMustacheFactory","3","Body Change, Introduced, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"107","createMustacheFactory","createMustacheFactory","3","Modifier Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"108","testRecurision","testRecurision","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","6d4f0b7fe0087fb94985041e59c8f83732b57b47","Sam Pullara"
"109","testRecurision","testRecurision","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"110","testRecurision","testRecurision","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"111","testRecurision","testRecurision","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"112","testRecursionWithInheritance","testRecursionWithInheritance","6","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #54 from nicoulaj/issue-53

Add test for #53","09a8a9f505f9baf4b9442e2e34a512639e1bd7b5","Sam Pullara"
"113","testRecursionWithInheritance","testRecursionWithInheritance","6","Body Change, Exceptions Change, MultiChange","disable this test until we can figure out a way to fix it, if these two features arent at odds with one another
","97f1ff6791938229a612a906b126f634862bd9f4","Sam Pullara"
"114","testRecursionWithInheritance","testRecursionWithInheritance","6","Body Change, Exceptions Change, MultiChange","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"115","testRecursionWithInheritance","testRecursionWithInheritance","6","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"116","testRecursionWithInheritance","testRecursionWithInheritance","6","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"117","testRecursionWithInheritance","testRecursionWithInheritance","6","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"118","testPartialRecursionWithInheritance","testPartialRecursionWithInheritance","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","2464000de341a76bfe506e62385f3e2e2d066f33","Sam Pullara"
"119","testPartialRecursionWithInheritance","testPartialRecursionWithInheritance","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"120","testPartialRecursionWithInheritance","testPartialRecursionWithInheritance","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"121","testPartialRecursionWithInheritance","testPartialRecursionWithInheritance","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"122","testChainedInheritance","testChainedInheritance","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"123","testChainedInheritance","testChainedInheritance","3","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"124","testChainedInheritance","testChainedInheritance","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"125","testDefaultValue","testDefaultValue","3","Body Change, Exceptions Change, Introduced, MultiChange","show how to change the behavior of object lookups
","89276b9e692230dea1525d4fc1a2e23aa39f10da","Sam Pullara"
"126","testDefaultValue","testDefaultValue","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"127","testDefaultValue","testDefaultValue","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"128","testSimplePragma","testSimplePragma","4","Body Change, Exceptions Change, Introduced, MultiChange","start pragma support
","a78f2081d62ae9bb369fcee790e6b8a42b939e1e","Sam Pullara"
"129","testSimplePragma","testSimplePragma","4","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"130","testSimplePragma","testSimplePragma","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"131","testSimplePragma","testSimplePragma","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"132","isItOk","isItOk","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"133","isItOk","isItOk","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","314ad154203528561723490786716d2c8a425cd3","Sam Pullara"
"134","testNestedAccessWithSimpleObjectHandler","testNestedAccessWithSimpleObjectHandler","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","314ad154203528561723490786716d2c8a425cd3","Sam Pullara"
"135","testNestedAccessWithSimpleObjectHandler","testNestedAccessWithSimpleObjectHandler","2","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"136","getOutput","getOutput","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"137","getOutput","getOutput","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","314ad154203528561723490786716d2c8a425cd3","Sam Pullara"
"138","testClosingReader","testClosingReader","2","Body Change, Introduced, MultiChange","close the reader
","ced640c933e59229b9c61a882dbe60d511ca8a08","Sam Pullara"
"139","testClosingReader","testClosingReader","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"140","testMultipleWrappers","testMultipleWrappers","5","Body Change, Exceptions Change, Introduced, MultiChange","allow for changes to the object types at the lowest level. still need to work on what that means for maps.
","e8895b489445488c3b4749c4b739ead7ce585e33","Sam Pullara"
"141","testMultipleWrappers","testMultipleWrappers","5","Exceptions Change","guard negative wrappers
","4e3df23482684b80f82739150dd631b38a003602","Sam Pullara"
"142","testMultipleWrappers","testMultipleWrappers","5","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"143","testMultipleWrappers","testMultipleWrappers","5","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"144","testMultipleWrappers","testMultipleWrappers","5","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"145","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change, Exceptions Change, Introduced, MultiChange","add an iterable of latches test
","b2d050cb27d102881ad4e998fa6e1b256374f332","Sam Pullara"
"146","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change, Exceptions Change, MultiChange","fix a bug in the way nested latched writers were being evaluated
","0f01230210fc5226e4e03fdc616b6bab4efbc697","Sam Pullara"
"147","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change, Exceptions Change, MultiChange","this is more reliable than using timing
","6e803a6bdf414e577b9a4f57060c3c4551e099c5","Sam Pullara"
"148","testNestedLatchesIterable","testNestedLatchesIterable","10","Exceptions Change","fix this test from potentially failing
","cd8ac87fb50318b05e81dc29530ef641ec6fc3bd","Sam Pullara"
"149","testNestedLatchesIterable","testNestedLatchesIterable","10","Exceptions Change","the race could be won
","8e49baf9e5392320a2436d3cddcd27490492de5e","Sam Pullara"
"150","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"151","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"152","testNestedLatchesIterable","testNestedLatchesIterable","10","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"153","testNestedLatchesIterable","testNestedLatchesIterable","10","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"154","testNestedLatchesIterable","testNestedLatchesIterable","10","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"155","testConcurrency","testConcurrency","6","Body Change, Exceptions Change, Introduced, MultiChange","add a very explicit concurrency test
","cddee4978a31d25d7f239649ba3efa05a1150eeb","Sam Pullara"
"156","testConcurrency","testConcurrency","6","Body Change, Exceptions Change, MultiChange","add an example of using asynchronous execution of functions
","08a6834faa1a06f188ef951bf6869eeb689ed98d","Sam Pullara"
"157","testConcurrency","testConcurrency","6","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"158","testConcurrency","testConcurrency","6","Exceptions Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"159","testConcurrency","testConcurrency","6","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"160","testConcurrency","testConcurrency","6","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"161","testNestedLatches","testNestedLatches","7","Body Change, Exceptions Change, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"162","testNestedLatches","testNestedLatches","7","Body Change, Exceptions Change, MultiChange","fix a bug in the way nested latched writers were being evaluated
","0f01230210fc5226e4e03fdc616b6bab4efbc697","Sam Pullara"
"163","testNestedLatches","testNestedLatches","7","Exceptions Change","check for out of order components due to bug report. nothing found so far.
","69f9d76ff96c70fc50aabeb5d36f7c560465da0d","Sam Pullara"
"164","testNestedLatches","testNestedLatches","7","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"165","testNestedLatches","testNestedLatches","7","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"166","testNestedLatches","testNestedLatches","7","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"167","testNestedLatches","testNestedLatches","7","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"168","testBrokenSimple","testBrokenSimple","4","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"169","testBrokenSimple","testBrokenSimple","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"170","testBrokenSimple","testBrokenSimple","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"171","testBrokenSimple","testBrokenSimple","4","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"172","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"173","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"174","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"175","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"176","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"177","testIsNotEmpty","testIsNotEmpty","7","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"178","testIsNotEmpty","testIsNotEmpty","7","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"179","execute","execute","1","Body Change, Introduced, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"180","execute","execute","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"181","testImmutableList","testImmutableList","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"182","testImmutableList","testImmutableList","3","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"183","testImmutableList","testImmutableList","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"184","testOptional","testOptional","4","Body Change, Exceptions Change, Introduced, MultiChange","add support for optional
","8119b7f9fe96e61eec64eafeb4dfaaceefca5bf6","Sam Pullara"
"185","testOptional","testOptional","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"186","testOptional","testOptional","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"187","testOptional","testOptional","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"188","testComment","testComment","4","Body Change, Exceptions Change, Introduced, MultiChange","comments can appear in template text
","15bd7077d67e580f3990b70fa8a85fa7a8405777","Sam Pullara"
"189","testComment","testComment","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"190","testComment","testComment","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"191","testComment","testComment","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"192","testNumber0IsFalse","testNumber0IsFalse","4","Body Change, Exceptions Change, Introduced, MultiChange","testNumber0IsFalse
","486277d05b97480dd4036732231667985e54fbc1","Sam Pullara"
"193","testNumber0IsFalse","testNumber0IsFalse","4","Body Change, Exceptions Change, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"194","testNumber0IsFalse","testNumber0IsFalse","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"195","testNumber0IsFalse","testNumber0IsFalse","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"196","testSecurity","testSecurity","4","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"197","testSecurity","testSecurity","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"198","testSecurity","testSecurity","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"199","testSecurity","testSecurity","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"200","testIdentitySimple","testIdentitySimple","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"201","testIdentitySimple","testIdentitySimple","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"202","testIdentitySimple","testIdentitySimple","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"203","testProperties","testProperties","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"204","testProperties","testProperties","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"205","testProperties","testProperties","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"206","testSimpleWithMap","testSimpleWithMap","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"207","testSimpleWithMap","testSimpleWithMap","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"208","testSimpleWithMap","testSimpleWithMap","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"209","testReflectiveAccessThroughInterface","testReflectiveAccessThroughInterface","2","Body Change, Introduced, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"210","testReflectiveAccessThroughInterface","testReflectiveAccessThroughInterface","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"211","testPartialWithTF","testPartialWithTF","5","Body Change, Exceptions Change, Introduced, MultiChange","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"212","testPartialWithTF","testPartialWithTF","5","Exceptions Change","get rid of Nullable
","b3e072a612b70d45fd099f8ded1d0f90b0d36a4c","Sam Pullara"
"213","testPartialWithTF","testPartialWithTF","5","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"214","testPartialWithTF","testPartialWithTF","5","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"215","testPartialWithTF","testPartialWithTF","5","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"216","testFunctions","testFunctions","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","b38a02adf34212c1911690f8451eca9a86aaf247","Sam Pullara"
"217","testFunctions","testFunctions","4","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"218","testFunctions","testFunctions","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"219","testFunctions","testFunctions","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"220","testComplex","testComplex","4","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"221","testComplex","testComplex","4","Body Change","allow for changes to the object types at the lowest level. still need to work on what that means for maps.
","e8895b489445488c3b4749c4b739ead7ce585e33","Sam Pullara"
"222","testComplex","testComplex","4","Exceptions Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"223","testComplex","testComplex","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"224","testComplexParallel","testComplexParallel","1","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"225","testSerialCallable","testSerialCallable","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"226","testSerialCallable","testSerialCallable","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"227","testSerialCallable","testSerialCallable","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"228","testDynamicPartial","testDynamicPartial","5","Body Change, Exceptions Change, Introduced, MultiChange","add a test that implements dyanmic partial behavior
","eaee8ce2640413b20ddb405b8ee8018d73da913c","Sam Pullara"
"229","testDynamicPartial","testDynamicPartial","5","Body Change, Exceptions Change, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"230","testDynamicPartial","testDynamicPartial","5","Body Change, Exceptions Change, MultiChange","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"231","testDynamicPartial","testDynamicPartial","5","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"232","testDynamicPartial","testDynamicPartial","5","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"233","testReadme","testReadme","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"234","testReadme","testReadme","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"235","testReadme","testReadme","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"236","testReadmeSerial","testReadmeSerial","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"237","testReadmeSerial","testReadmeSerial","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"238","testReadmeSerial","testReadmeSerial","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"239","testReadmeParallel","testReadmeParallel","1","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"240","desc","desc","3","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"241","desc","desc","3","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"242","desc","desc","3","Exceptions Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"243","testDeferred","testDeferred","3","Body Change, Exceptions Change, Introduced, MultiChange","merge
","0f11cb5d658fa0a197843b8029a76fc5842bd27f","Sam Pullara"
"244","testDeferred","testDeferred","3","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"245","testDeferred","testDeferred","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"246","testMultipleCallsWithDifferentScopes","testMultipleCallsWithDifferentScopes","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #23 from mcampo/master

I added two tests, one for simple Object scopes that passes, and another one for Map scopes that fails","f53d600950552cfbfcf8add3b0f1e585c6f1b363","Sam Pullara"
"247","testMultipleCallsWithDifferentScopes","testMultipleCallsWithDifferentScopes","4","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"248","testMultipleCallsWithDifferentScopes","testMultipleCallsWithDifferentScopes","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"249","testMultipleCallsWithDifferentScopes","testMultipleCallsWithDifferentScopes","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"250","testMultipleCallsWithDifferentMapScopes","testMultipleCallsWithDifferentMapScopes","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #23 from mcampo/master

I added two tests, one for simple Object scopes that passes, and another one for Map scopes that fails","f53d600950552cfbfcf8add3b0f1e585c6f1b363","Sam Pullara"
"251","testMultipleCallsWithDifferentMapScopes","testMultipleCallsWithDifferentMapScopes","4","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"252","testMultipleCallsWithDifferentMapScopes","testMultipleCallsWithDifferentMapScopes","4","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"253","testMultipleCallsWithDifferentMapScopes","testMultipleCallsWithDifferentMapScopes","4","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"254","testRelativePathsSameDir","testRelativePathsSameDir","3","Body Change, Exceptions Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"255","testRelativePathsSameDir","testRelativePathsSameDir","3","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"256","testRelativePathsSameDir","testRelativePathsSameDir","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"257","testRelativePathsRootDir","testRelativePathsRootDir","3","Body Change, Exceptions Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"258","testRelativePathsRootDir","testRelativePathsRootDir","3","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"259","testRelativePathsRootDir","testRelativePathsRootDir","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"260","testPathsWithExtension","testPathsWithExtension","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #110 from mjeanroy/master

fix partials resolution when name ends with extension","0ca6b5123e05bb7d16af9fa1ca69150cccbcc42c","Sam Pullara"
"261","testPathsWithExtension","testPathsWithExtension","3","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"262","testPathsWithExtension","testPathsWithExtension","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"263","testRelativePathsTemplateFunction","testRelativePathsTemplateFunction","3","Body Change, Exceptions Change, Introduced, MultiChange","add a test to make sure relative paths inside template functions work correctly
","c0655b732da0274463192af0aa47f394825a1273","Sam Pullara"
"264","testRelativePathsTemplateFunction","testRelativePathsTemplateFunction","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"265","testRelativePathsTemplateFunction","testRelativePathsTemplateFunction","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"266","testRelativePathFail","testRelativePathFail","2","Body Change, Exceptions Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"267","testRelativePathFail","testRelativePathFail","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"268","testVariableInhertiance","testVariableInhertiance","3","Body Change, Exceptions Change, Introduced, MultiChange","example of doing terrible things with a pragma and overriding behavior
","2346a6d676561a7863591b481d675dbaf74afb60","Sam Pullara"
"269","testVariableInhertiance","testVariableInhertiance","3","Body Change, Exceptions Change, MultiChange","ISSUE-201: added a new operator for use with template inheritance. {{?name}}{{/name}} will only be included in the template if the ""name"" section is overridden.
","a1197f7789b24d694f16dad29f917e9be43f0dc2","Sam Pullara"
"270","testVariableInhertiance","testVariableInhertiance","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"271","testIterator","testIterator","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"272","testIterator","testIterator","3","Body Change, Exceptions Change, MultiChange","ISSUE-202: add a test that shows how to change the null scope behavior. changing this for everyone I think may be an issue though all the tests pass.
","c762c26142debb4333c237f2f0a3cb040d202413","Sam Pullara"
"273","testIterator","testIterator","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"274","testObjectArray","testObjectArray","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"275","testObjectArray","testObjectArray","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"276","testObjectArray","testObjectArray","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"277","testBaseArray","testBaseArray","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"278","testBaseArray","testBaseArray","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"279","testBaseArray","testBaseArray","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"280","testEmptyString","testEmptyString","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"281","testEmptyString","testEmptyString","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"282","testEmptyString","testEmptyString","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"283","testPrivate","testPrivate","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"284","testPrivate","testPrivate","3","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"285","testPrivate","testPrivate","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"286","testSingleCurly","testSingleCurly","3","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"287","testSingleCurly","testSingleCurly","3","Exceptions Change","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"288","testSingleCurly","testSingleCurly","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"289","testPragma","testPragma","5","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"290","testPragma","testPragma","5","Body Change, Exceptions Change, MultiChange","Merge pull request #101 from sbuettner/master

Allow access to the name of a code for template analysis.","3c72547457d88e3a685ef88e7b00f33adb436364","Sam Pullara"
"291","testPragma","testPragma","5","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"292","testPragma","testPragma","5","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"293","testPragma","testPragma","5","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"294","testPragmaWhiteSpaceHandling","testPragmaWhiteSpaceHandling","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #131 from sbuettner/master

Preserve template whitespaces when rendering pragmas.","a5b7ec1c847da7b983aabc5f6abec4a592d777da","Sam Pullara"
"295","testPragmaWhiteSpaceHandling","testPragmaWhiteSpaceHandling","3","Body Change","add a test that implements dyanmic partial behavior
","eaee8ce2640413b20ddb405b8ee8018d73da913c","Sam Pullara"
"296","testPragmaWhiteSpaceHandling","testPragmaWhiteSpaceHandling","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"297","testNotIterableCallable","testNotIterableCallable","4","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"298","testNotIterableCallable","testNotIterableCallable","4","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"299","testNotIterableCallable","testNotIterableCallable","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"300","testNotIterableCallable","testNotIterableCallable","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"301","get","get","2","Body Change, Introduced, MultiChange","add an example test that checks to see that all parts of a map were used during execution
","1313a4a83d26b795f5d08b501791c6003e5a45eb","Sam Pullara"
"302","get","get","2","Body Change","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"303","check","check","4","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"304","check","check","4","Body Change, Introduced, MultiChange","add an example test that checks to see that all parts of a map were used during execution
","1313a4a83d26b795f5d08b501791c6003e5a45eb","Sam Pullara"
"305","check","check","4","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"306","check","check","4","Modifier Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"307","testAccessTracker","testAccessTracker","2","Body Change, Exceptions Change, Introduced, MultiChange","add an example test that checks to see that all parts of a map were used during execution
","1313a4a83d26b795f5d08b501791c6003e5a45eb","Sam Pullara"
"308","testAccessTracker","testAccessTracker","2","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"309","createBaseMap","createBaseMap","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"310","createBaseMap","createBaseMap","2","Body Change, Introduced, MultiChange","add an example test that checks to see that all parts of a map were used during execution
","1313a4a83d26b795f5d08b501791c6003e5a45eb","Sam Pullara"
"311","testMismatch","testMismatch","2","Body Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"312","testMismatch","testMismatch","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"313","testInvalidDelimiters","testInvalidDelimiters","2","Body Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"314","testInvalidDelimiters","testInvalidDelimiters","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"315","testEmptyDot","testEmptyDot","2","Body Change, Introduced, MultiChange","ISSUE-291: fix substring issue with empty dot
","304f71a02f7a6be5dec373e0cd00eab3de11d8f3","Sam Pullara"
"316","testEmptyDot","testEmptyDot","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"317","testCase","testCase","1","Body Change, Introduced, MultiChange","add a test for null breaking execute
","43fd04aa9b3d8e3a4879491d0ae42a102b66d352","Sam Pullara"
"318","testTemplateFunction","testTemplateFunction","4","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"319","testTemplateFunction","testTemplateFunction","4","Body Change, Exceptions Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"320","testTemplateFunction","testTemplateFunction","4","Body Change, Exceptions Change, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"321","testTemplateFunction","testTemplateFunction","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"322","testSuperField","testSuperField","2","Body Change, Exceptions Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"323","testSuperField","testSuperField","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"324","testRelativePathsDotDotDir","testRelativePathsDotDotDir","3","Body Change, Exceptions Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"325","testRelativePathsDotDotDir","testRelativePathsDotDotDir","3","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"326","testRelativePathsDotDotDir","testRelativePathsDotDotDir","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"327","testRelativePathsDotDotDirOverride","testRelativePathsDotDotDirOverride","3","Body Change, Exceptions Change, Introduced, MultiChange","allow partial resolution to be overridden
","5370d9c78d64817931d67c63b34e90d437dcacf6","Sam Pullara"
"328","testRelativePathsDotDotDirOverride","testRelativePathsDotDotDirOverride","3","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"329","testRelativePathsDotDotDirOverride","testRelativePathsDotDotDirOverride","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"330","testOverrideExtension","testOverrideExtension","5","Body Change, Exceptions Change, Introduced, MultiChange","test overriding the extension behavior for partials
","ef5ec9e31328606449df059384fcf0df0d7c8915","Sam Pullara"
"331","testOverrideExtension","testOverrideExtension","5","Exceptions Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"332","testOverrideExtension","testOverrideExtension","5","Body Change, Exceptions Change, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"333","testOverrideExtension","testOverrideExtension","5","Exceptions Change","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"334","testOverrideExtension","testOverrideExtension","5","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"335","testEmptyMustache","testEmptyMustache","2","Body Change, Introduced, MultiChange","#74: throw a proper exception for an empty mustache tag
","b23aad7b02307622b045ee6a6c8fd9555f379b8a","Sam Pullara"
"336","testEmptyMustache","testEmptyMustache","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"337","testMustacheNotFoundException","testMustacheNotFoundException","2","Body Change, Introduced, MultiChange","Merge pull request #104 from sbuettner/master

Add special MustacheNotFoundException to differentiate between compiler ...","40854d122f0003ac88b51e06f623485eb1e07d2d","Sam Pullara"
"338","testMustacheNotFoundException","testMustacheNotFoundException","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"339","testImplicitIteratorNoScope","testImplicitIteratorNoScope","3","Body Change, Exceptions Change, Introduced, MultiChange","add a fix for issue 56 with a test
","3d765d58f09ec9111d21374fd1c20f47d2909096","Sam Pullara"
"340","testImplicitIteratorNoScope","testImplicitIteratorNoScope","3","Body Change, Exceptions Change, MultiChange","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"341","testImplicitIteratorNoScope","testImplicitIteratorNoScope","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"342","testImplicitIteratorWithScope","testImplicitIteratorWithScope","4","Body Change, Exceptions Change, Introduced, MultiChange","fix a coercion bug and checkin a regression test for it.
","92a09dae699af7fc0c66250e903287721e806833","Sam Pullara"
"343","testImplicitIteratorWithScope","testImplicitIteratorWithScope","4","Exceptions Change","make this test more stringent
","d3f5a6680744957a80888665737e8683fdd5b182","Sam Pullara"
"344","testImplicitIteratorWithScope","testImplicitIteratorWithScope","4","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"345","testImplicitIteratorWithScope","testImplicitIteratorWithScope","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"346","testCR","testCR","2","Body Change, Introduced, MultiChange","copy carriage returns to the output
","ae6c109ebb28653e99a15079aa53cf65696268b1","Sam Pullara"
"347","testCR","testCR","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"348","testOutputDelimiters","testOutputDelimiters","2","Body Change, Introduced, MultiChange","show how to escape delimiters
","4f392b981d4abcc23c222fa1f77cf69b1004e251","Sam Pullara"
"349","testOutputDelimiters","testOutputDelimiters","2","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"350","testImproperlyClosedVariable","testImproperlyClosedVariable","3","Body Change, Exceptions Change, Introduced, MultiChange","test improperly closed tags
","9efa19d595f893527ff218683e70db2ae4d8fb2d","Sam Pullara"
"351","testImproperlyClosedVariable","testImproperlyClosedVariable","3","Exceptions Change","ISSUE-266: add a character location for an improperly closed variable
","a05a3ff3cf8675d1225f2e6b7cff2988ee80ad69","Sam Pullara"
"352","testImproperlyClosedVariable","testImproperlyClosedVariable","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"353","testLambdaExceptions","testLambdaExceptions","2","Body Change, Introduced, MultiChange","catch exceptions from functions and report where they fail
","a925db0148765279a303db7f63050180b54354d4","Sam Pullara"
"354","testLambdaExceptions","testLambdaExceptions","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"355","testDirectoryInsteadOfFile","testDirectoryInsteadOfFile","2","Body Change, Introduced, MultiChange","ISSUE-268: If the resulting template is a directory we should fail
","efb67c494c79bc0a5da169fe78d2c19a884cd435","Sam Pullara"
"356","testDirectoryInsteadOfFile","testDirectoryInsteadOfFile","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"357","testLimitedDepthRecursion","testLimitedDepthRecursion","3","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","86a03af6140ce34056f675ed8902cef6860106e5","Sam Pullara"
"358","testLimitedDepthRecursion","testLimitedDepthRecursion","3","Body Change","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"359","testLimitedDepthRecursion","testLimitedDepthRecursion","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"360","testIssue191","testIssue191","3","Body Change, Exceptions Change, Introduced, MultiChange","ISSUE-191: add a test for this issue
","0c7e10216b0ad0d8b3950fbeb504d6aa810bcbc2","Sam Pullara"
"361","testIssue191","testIssue191","3","Exceptions Change","Remove guava as a dependency

Guava was used in a test for issue 191, but is incidental to the test,
which relates to rendering of partial templates.

Replace usage of `ImmutableMap` with `singletonMap` from the JCL
","c259f5c5e95a5ed362f7f12df5f9d77fa7fa80e1","Russell Howe"
"362","testIssue191","testIssue191","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"363","testMalformedTag","testMalformedTag","2","Body Change, Introduced, MultiChange","Issue70: add end of file detection for open tags with a test
","949f81e1044f3281299b997213465b918fc7e739","Sam Pullara"
"364","testMalformedTag","testMalformedTag","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"365","testTemplateFunctionWithData","testTemplateFunctionWithData","3","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","ce71932f5ff4ddb015d867181468df8b7d4d8f2a","Sam Pullara"
"366","testTemplateFunctionWithData","testTemplateFunctionWithData","3","Body Change","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"367","testTemplateFunctionWithData","testTemplateFunctionWithData","3","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"368","testTemplateFunctionWithImplicitParams","testTemplateFunctionWithImplicitParams","4","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","ce71932f5ff4ddb015d867181468df8b7d4d8f2a","Sam Pullara"
"369","testTemplateFunctionWithImplicitParams","testTemplateFunctionWithImplicitParams","4","Body Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"370","testTemplateFunctionWithImplicitParams","testTemplateFunctionWithImplicitParams","4","Body Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"371","testTemplateFunctionWithImplicitParams","testTemplateFunctionWithImplicitParams","4","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"372","testOverrideValueCode","testOverrideValueCode","5","Body Change, Exceptions Change, Introduced, MultiChange","show how to customize valuecode to do things differently
","1a50d718029685a3cc99a9b33518e29d8f3717d4","Sam Pullara"
"373","testOverrideValueCode","testOverrideValueCode","5","Body Change, Exceptions Change, MultiChange","pull the warning message out
","9fef41ad3ba82de13f23de3f29c7121bb47c129c","Sam Pullara"
"374","testOverrideValueCode","testOverrideValueCode","5","Exceptions Change","used the wrong stream
","c0e3690e006414d2142be582bc0df2b25714d1b3","Sam Pullara"
"375","testOverrideValueCode","testOverrideValueCode","5","Exceptions Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"376","testOverrideValueCode","testOverrideValueCode","5","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"377","testPropertyWithDot","testPropertyWithDot","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","ce71932f5ff4ddb015d867181468df8b7d4d8f2a","Sam Pullara"
"378","testPropertyWithDot","testPropertyWithDot","3","Exceptions Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"379","testPropertyWithDot","testPropertyWithDot","3","Modifier Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"380","testLeavingAloneMissingVariables","testLeavingAloneMissingVariables","5","Body Change, Exceptions Change, Introduced, MultiChange","show how to override the behavior of the value codes
","3349f214d2a545c14ed70eb56611accc5d286894","Sam Pullara"
"381","testLeavingAloneMissingVariables","testLeavingAloneMissingVariables","5","Exceptions Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"382","testLeavingAloneMissingVariables","testLeavingAloneMissingVariables","5","Exceptions Change","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"383","testLeavingAloneMissingVariables","testLeavingAloneMissingVariables","5","Body Change, Exceptions Change, MultiChange","fix the test so that it properly works when there is trailing text
","e274b65f343ed6c0200adfd852576ab8752319f4","Sam Pullara"
"384","testLeavingAloneMissingVariables","testLeavingAloneMissingVariables","5","Modifier Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"385","initParallel","initParallel","1","Body Change","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"386","setUp","setUp","2","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"387","setUp","setUp","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"388","testMap","testMap","4","Body Change, Exceptions Change, Introduced, MultiChange","add a map test
","01bdebd3634d5d58180b27907c3329f45994ca3c","Sam Pullara"
"389","testMap","testMap","4","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"390","testMap","testMap","4","Body Change, Exceptions Change, MultiChange","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"391","testMap","testMap","4","Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"392","inheritance","inheritance","1","-","one issue with inheritance with the full spec test. disabling for now.
","1bda90ec201f04312fa5a3b0e468f29bde1eca5a","Sam Pullara"
"393","dynamicnames","dynamicnames","1","Introduced","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"394","toString","toString","1","Body Change","passes the latest tests submitted by matt cheely
","f33b7156eec7aa73f7616477ba672e905d20fc31","Sam Pullara"
"395","testInitialMiss","testInitialMiss","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"396","testMapInitialMiss","testMapInitialMiss","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"397","testMultiScopeInitialHit","testMultiScopeInitialHit","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"398","testMultiScopeInitialHit2","testMultiScopeInitialHit2","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"399","testMultiScopeInitialMiss","testMultiScopeInitialMiss","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"400","testMultiScopeInitialMiss2","testMultiScopeInitialMiss2","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"401","interpolations","interpolations","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"402","interpolations","interpolations","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"403","sections","sections","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"404","sections","sections","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"405","delimiters","delimiters","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"406","delimiters","delimiters","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"407","inverted","inverted","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"408","inverted","inverted","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"409","partials","partials","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"410","partials","partials","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"411","lambdas","lambdas","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"412","lambdas","lambdas","2","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"413","inheritance","inheritance","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","d4effc05bf3d7655541034777d6762ea9728014a","Sam Pullara"
"414","inheritance","inheritance","3","Exceptions Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"415","inheritance","inheritance","3","Modifier Change, Exceptions Change, MultiChange","update to the latest spec tests
","2d814a7552c8e644bed1038edf367299490a91b7","Sam Pullara"
"416","dynamicnames","dynamicnames","1","Body Change, Exceptions Change, Introduced, MultiChange","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"417","run","run","5","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","b38a02adf34212c1911690f8451eca9a86aaf247","Sam Pullara"
"418","run","run","5","Body Change","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"419","run","run","5","Body Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"420","run","run","5","Body Change","removed reflection from spec test
","261ef9c620017bac09bbda8dda3529822799f978","Henoch Yehayes"
"421","run","run","5","Body Change","remove usage of immutablemap
","7b5b6006608e0acb033ea1ebcf19de7dc77b977b","Henoch Yehayes"
"422","transformOutput","transformOutput","2","File Renamed","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"423","transformOutput","transformOutput","2","Body Change, Introduced, MultiChange","added spec tests for full spec conformity
","42629d08fc0adee43bef6749a48ddef4e70c57af","David Poetzsch-Heffter"
"424","createMustacheFactory","createMustacheFactory","3","File Renamed","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"425","createMustacheFactory","createMustacheFactory","3","Body Change, Introduced, MultiChange","share tests between indy and the compiler module
","e5647f778b3eebda68a68e921b50ba44817a80bf","Sam Pullara"
"426","createMustacheFactory","createMustacheFactory","3","Body Change","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"427","getSpec","getSpec","2","Exceptions Change","now working with map guards in place
","36e7a72cb127c977f85e166a366a282eec611d41","Sam Pullara"
"428","getSpec","getSpec","2","Body Change, Exceptions Change, MultiChange","switch from using the .json spec tests to using the .yml spec tests. apparently they are somewhat inconsistent.
","cc9e4aa86618f0b82cb0ade729295beaf72e2904","Sam Pullara"
"429","singletonMapWithConstantLambda","singletonMapWithConstantLambda","1","Body Change, Introduced, MultiChange","remove usage of immutablemap
","7b5b6006608e0acb033ea1ebcf19de7dc77b977b","Henoch Yehayes"
"430","singletonMap","singletonMap","1","Body Change, Introduced, MultiChange","remove usage of immutablemap
","7b5b6006608e0acb033ea1ebcf19de7dc77b977b","Henoch Yehayes"
"431","testEscape","testEscape","6","Exceptions Change","fix up the tests for the escaping change
","e1e3b8a7c6d354170cd7372db428c0886cb028ee","Sam Pullara"
"432","testEscape","testEscape","6","Body Change, Exceptions Change, MultiChange","remove partial scope and make escaping escaped html the default to be more inline with the specification.
","06b01f06145b088c334d0424c6eb22ccc8904ce4","Sam Pullara"
"433","testEscape","testEscape","6","Body Change, Exceptions Change, MultiChange","increase escaping performance by 3-4x in the common clean case and 2x in the encoding case.
","de0639c6383416e5b6bf82484fa9eb0d3ad156e9","Sam Pullara"
"434","testEscape","testEscape","6","Exceptions Change","Add additional escape characters for non-standard quotes or no quotes for attributes
","4e0b75d3bf6a503dae276d8b477ff863a86aa7b9","Sam Pullara"
"435","testEscape","testEscape","6","Exceptions Change","reversed these by accident
","7d72d1dc2e75b1eb0bedac3aab8e5c4a0053f127","Sam Pullara"
"436","testEscape","testEscape","6","Modifier Change, Exceptions Change, MultiChange","Remove usage of jUnit 3.x TestCase

Align the test suite with junit 4.x APIs.

Convert BenchmarkTest into a junit test.
","5c3735ec1c47437d03d1d460103cdd69be1516a6","Russell Howe"
"437","testArrayOutput","testArrayOutput","1","Body Change","show how you can use decoratedcollection for toStringing an array
","082d49303b6869269d99304b049541e18a2c7833","Sam Pullara"
"438","testNested","testNested","1","Body Change, Exceptions Change, Introduced, MultiChange","Question about nested loops
","1917fe3ecaffa7817efb34d1c62af494c4958637","spullara"
"439","testFail","testFail","2","Body Change, Exceptions Change, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"440","testFail","testFail","2","Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"441","testStrSubstitutor","testStrSubstitutor","1","Body Change, Exceptions Change, Introduced, MultiChange","add support for more esoteric changes of mustache delimiters
","d8936b4c331e7d40eaad6e5d65b30cff0beb06e7","Sam Pullara"
"442","testStrSubstitutor2","testStrSubstitutor2","1","Body Change, Exceptions Change, Introduced, MultiChange","add support for more esoteric changes of mustache delimiters
","d8936b4c331e7d40eaad6e5d65b30cff0beb06e7","Sam Pullara"
"443","testTemporarilyChangeDelimiters","testTemporarilyChangeDelimiters","1","Body Change, Exceptions Change, Introduced, MultiChange","check in two example tests
","8e103e327c3bf3dfcfcdff3636c9356cf05eedac","Sam Pullara"
"444","testKeyValues","testKeyValues","1","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","9c2081108c96be366646ccaadd5ff2aca4779a29","Sam Pullara"
"445","testMethodAccessDisallowed","testMethodAccessDisallowed","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"446","testMethodAccessAllowed","testMethodAccessAllowed","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"447","testSimpleHandlerMethodAccessDisallowed","testSimpleHandlerMethodAccessDisallowed","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"448","testSimpleHandlerMethodAccessAllowed","testSimpleHandlerMethodAccessAllowed","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"449","testCommentBlock","testCommentBlock","2","Exceptions Change","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"450","testCommentBlock","testCommentBlock","2","Body Change, Exceptions Change, MultiChange","Merge pull request #173 from samfraser/bug_172-Comments-not-valid-in-ExtendCode-block

BUG-172: fix issue if there is a comment in an ExtendCode block","eca08ca2bd58898310d302e63da185a568aee81a","Sam Pullara"
"451","testCommentInline","testCommentInline","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #173 from samfraser/bug_172-Comments-not-valid-in-ExtendCode-block

BUG-172: fix issue if there is a comment in an ExtendCode block","eca08ca2bd58898310d302e63da185a568aee81a","Sam Pullara"
"452","testInlineCommentWithinExtendCodeBlock","testInlineCommentWithinExtendCodeBlock","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #173 from samfraser/bug_172-Comments-not-valid-in-ExtendCode-block

BUG-172: fix issue if there is a comment in an ExtendCode block","eca08ca2bd58898310d302e63da185a568aee81a","Sam Pullara"
"453","getRoot","getRoot","2","File Renamed","fix up some duplicate code
","1f5606fd0aeb0003c2b2b34ad28cb82437145b40","Sam Pullara"
"454","getRoot","getRoot","2","Body Change, Introduced, MultiChange","Merge pull request #173 from samfraser/bug_172-Comments-not-valid-in-ExtendCode-block

BUG-172: fix issue if there is a comment in an ExtendCode block","eca08ca2bd58898310d302e63da185a568aee81a","Sam Pullara"
"455","testTranslation","testTranslation","2","Body Change, Exceptions Change, MultiChange","Fix a bug with scala case classes causing debug to fail.
","e8039c55b3425e9e34ca251cce54baaaa22a3614","Sam Pullara"
"456","testTranslation","testTranslation","2","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"457","setUp","setUp","2","Exceptions Change","Fix a bug with scala case classes causing debug to fail.
","e8039c55b3425e9e34ca251cce54baaaa22a3614","Sam Pullara"
"458","setUp","setUp","2","Body Change, Exceptions Change, MultiChange","tests work in the resources directory for maven
","1da1327e14496ceb999d587d391ddda0af491bbd","Sam Pullara"
"459","testArrayIndexExtension","testArrayIndexExtension","2","Body Change, Exceptions Change, MultiChange","add a fix for context precedence test. we were treating the entire dot notation as missing rather than just the segment.
","60f0c15d7b973c57eee40a31f07052ef3d97a7af","Sam Pullara"
"460","testArrayIndexExtension","testArrayIndexExtension","2","Body Change, Exceptions Change, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"461","testThrowMustacheExceptionInCaseOfNullHandler","testThrowMustacheExceptionInCaseOfNullHandler","2","Body Change, Exceptions Change, Introduced, MultiChange","test: verify that a MustacheException is thrown when the hanlder is null
","5c7d15dc121ffc309df655ba10deefc25f8890df","danglotb"
"462","testThrowMustacheExceptionInCaseOfNullHandler","testThrowMustacheExceptionInCaseOfNullHandler","2","Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"463","setUp","setUp","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"464","testDefaultPage1","testDefaultPage1","2","Exceptions Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"465","testDefaultPage1","testDefaultPage1","2","Exceptions Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"466","testOverridePage1","testOverridePage1","2","Exceptions Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"467","testOverridePage1","testOverridePage1","2","Exceptions Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"468","testOverridePage2","testOverridePage2","2","Exceptions Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"469","testOverridePage2","testOverridePage2","2","Exceptions Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"470","testMustacheNotFoundException","testMustacheNotFoundException","2","Exceptions Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"471","testMustacheNotFoundException","testMustacheNotFoundException","2","Body Change, Exceptions Change, MultiChange","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"472","testSubInPartial","testSubInPartial","1","Body Change","new test
","e558837dcbee810340e0e3a92978a3aa3514e13d","Sam Pullara"
"473","testPartialInSub","testPartialInSub","1","Body Change, Exceptions Change, Introduced, MultiChange","failed to repro the reported bug with this, might as well add this regression test though.
","da796c396e856faf4014abda6461168c21c248bf","Sam Pullara"
"474","testMultipleExtensions","testMultipleExtensions","1","Body Change, Exceptions Change, Introduced, MultiChange","Clone the partial before replacing the codes so we can share them.
","2b3af8b18c58b7415f6f4d9f45442194e1741a13","Sam Pullara"
"475","testParentReplace","testParentReplace","2","Body Change, Exceptions Change, Introduced, MultiChange","Fixes extension issue. need to adjust whitespace handling.
","024f1ea6bb8eb320568a71d8dde648be6deee9e8","Sam Pullara"
"476","testParentReplace","testParentReplace","2","Exceptions Change","Merge pull request #41 from gw0/bug-subblockcaching

Added inheritance test with sub block replacement that fails while caching","51cb337f7b6f1d420b0817cdda14832601d61ff3","Sam Pullara"
"477","testSubBlockCaching","testSubBlockCaching","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #41 from gw0/bug-subblockcaching

Added inheritance test with sub block replacement that fails while caching","51cb337f7b6f1d420b0817cdda14832601d61ff3","Sam Pullara"
"478","testClientMethod","testClientMethod","1","Body Change, Exceptions Change, Introduced, MultiChange","fix for replacing a value inside an iterable in a super template
","20f2fe3115571d700c9230f3750acdcc539dc16e","Sam Pullara"
"479","testSubSubCaching","testSubSubCaching","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'gw0-bug-subblockcaching'
","f293c274b573dec9a1ff33e2582731468a88e549","Sam Pullara"
"480","testSubSubCaching","testSubSubCaching","2","Modifier Change","Merge pull request #48 from gw0/bug-subblockcaching

Improved inheritance test with sub sub replacing block that fails while caching","d30e9fdd312d3f4928e2e2308935d73ae987dc54","Sam Pullara"
"481","testSubSubCaching2","testSubSubCaching2","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #48 from gw0/bug-subblockcaching

Improved inheritance test with sub sub replacing block that fails while caching","d30e9fdd312d3f4928e2e2308935d73ae987dc54","Sam Pullara"
"482","testNested","testNested","1","Body Change, Exceptions Change, Introduced, MultiChange","nested inheritance test
","a96ab39c93a51d01d0f3eef240d2f202154619d9","Sam Pullara"
"483","testDiffExt","testDiffExt","1","Body Change, Exceptions Change, Introduced, MultiChange","refs #168 Enabling different file extension
","88770279e1cd73895cd31dbf96b6ffc022424d3c","si0005hp"
"484","testParser","testParser","2","Exceptions Change","simplify things
","071a1334ba886335defa3cd1e79cf6bcb852671b","Sam Pullara"
"485","testParser","testParser","2","Body Change, Exceptions Change, MultiChange","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"486","testSimple","testSimple","2","Exceptions Change","simplify things
","071a1334ba886335defa3cd1e79cf6bcb852671b","Sam Pullara"
"487","testSimple","testSimple","2","Body Change, Exceptions Change, MultiChange","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"488","testIterable","testIterable","2","Body Change, Exceptions Change, MultiChange","simplify things
","071a1334ba886335defa3cd1e79cf6bcb852671b","Sam Pullara"
"489","testIterable","testIterable","2","Body Change, Exceptions Change, MultiChange","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"490","testCollectPoints","testCollectPoints","1","Body Change, Exceptions Change, Introduced, MultiChange","fix a bug in the inverter
","91b98eae12123f58eb1a2a7f56744b5a05cffb53","Sam Pullara"
"491","testNoNode","testNoNode","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #90 from panghy/master

fix issue in WriteCode where inversion ignores regex in template","4a750a9ed92c4d01c37d3b9e0ad2c5a14728351b","Sam Pullara"
"492","testToJson","testToJson","2","Body Change, Exceptions Change, MultiChange","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"493","testToJson","testToJson","2","Body Change, Exceptions Change, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"494","testToJson2","testToJson2","2","Body Change, Exceptions Change, Introduced, MultiChange","add a second test
","96308a0ee4f6efb15b8536717eb6e80d2f465985","Sam Pullara"
"495","testToJson2","testToJson2","2","Body Change, Exceptions Change, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"496","testToJson3","testToJson3","2","Body Change, Exceptions Change, Introduced, MultiChange","converted to use regex rather than straight text. pretty good.
","a3f54f78a518f0c6cbebe701104251d11ce9a8dd","Sam Pullara"
"497","testToJson3","testToJson3","2","Body Change, Exceptions Change, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"498","testToJson4","testToJson4","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","9c2081108c96be366646ccaadd5ff2aca4779a29","Sam Pullara"
"499","testToJson4","testToJson4","2","Body Change, Exceptions Change, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"500","testToJson5","testToJson5","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge pull request #90 from panghy/master

fix issue in WriteCode where inversion ignores regex in template","4a750a9ed92c4d01c37d3b9e0ad2c5a14728351b","Sam Pullara"
"501","testToJson5","testToJson5","2","Body Change, Exceptions Change, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"502","output","output","2","File Renamed","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"503","output","output","2","Body Change, Exceptions Change, Introduced, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"504","testDiskstats","testDiskstats","1","Body Change, Exceptions Change, Introduced, MultiChange","add another test case
","d5e0b3bd7ee07c1ac7e1edad271cc57170afb784","Sam Pullara"
"505","writeNode","writeNode","2","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"506","writeNode","writeNode","2","Body Change, Exceptions Change, MultiChange","converted to use regex rather than straight text. pretty good.
","a3f54f78a518f0c6cbebe701104251d11ce9a8dd","Sam Pullara"
"507","testAbstractClass","testAbstractClass","1","Body Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"508","testAbstractClassNoDots","testAbstractClassNoDots","1","Body Change","Update tests for jUnit 4.x

Introduce use of assertThrows() from jUnit 4.x

Clean up exception declarations in tests
","9896a263138b8401c6cf1c2b68a180e3aff8b67f","Russell Howe"
"509","getReaderNullRootAndResourceHasRelativePath","getReaderNullRootAndResourceHasRelativePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"510","getReaderNullRootAndResourceHasRelativePath","getReaderNullRootAndResourceHasRelativePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"511","getReaderWithRootAndResourceHasRelativePath","getReaderWithRootAndResourceHasRelativePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"512","getReaderWithRootAndResourceHasRelativePath","getReaderWithRootAndResourceHasRelativePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"513","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasRelativePath","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasRelativePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"514","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasRelativePath","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasRelativePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"515","getReaderWithRootAndResourceHasAbsolutePath","getReaderWithRootAndResourceHasAbsolutePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"516","getReaderWithRootAndResourceHasAbsolutePath","getReaderWithRootAndResourceHasAbsolutePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"517","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasAbsolutePath","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasAbsolutePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"518","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasAbsolutePath","getReaderWithRootThatHasTrailingForwardSlashAndResourceHasAbsolutePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"519","getReaderNullRootDoesNotFindFileWithAbsolutePath","getReaderNullRootDoesNotFindFileWithAbsolutePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"520","getReaderNullRootDoesNotFindFileWithAbsolutePath","getReaderNullRootDoesNotFindFileWithAbsolutePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"521","getReaderWithRootAndResourceHasDoubleDotRelativePath","getReaderWithRootAndResourceHasDoubleDotRelativePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"522","getReaderWithRootAndResourceHasDoubleDotRelativePath","getReaderWithRootAndResourceHasDoubleDotRelativePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"523","getReaderWithRootAndResourceHasDotRelativePath","getReaderWithRootAndResourceHasDotRelativePath","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"524","getReaderWithRootAndResourceHasDotRelativePath","getReaderWithRootAndResourceHasDotRelativePath","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"525","getReaderNullRootAndResourceHasInvalidPathThrows","getReaderNullRootAndResourceHasInvalidPathThrows","1","Body Change","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"526","getReaderWithRootAndResourceHasInvalidPathThrows","getReaderWithRootAndResourceHasInvalidPathThrows","1","Body Change","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"527","getReaderNullRootAndResourceIsDirectory","getReaderNullRootAndResourceIsDirectory","3","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"528","getReaderNullRootAndResourceIsDirectory","getReaderNullRootAndResourceIsDirectory","3","Exceptions Change","ISSUE-268: Fix ClasspathResolverTest

Commit efb67c494c79bc0a5da169fe78d2c19a884cd435 changed the behaviour of
ClasspathResolver, breaking the test.

Fix the test to match the intended behaviour of the class.
","e1422496ef1b8968b73bc4870a9cb5ce95c13eec","Russell Howe"
"529","getReaderNullRootAndResourceIsDirectory","getReaderNullRootAndResourceIsDirectory","3","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"530","getReaderWithRootAndResourceIsDirectory","getReaderWithRootAndResourceIsDirectory","3","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"531","getReaderWithRootAndResourceIsDirectory","getReaderWithRootAndResourceIsDirectory","3","Exceptions Change","ISSUE-268: Fix ClasspathResolverTest

Commit efb67c494c79bc0a5da169fe78d2c19a884cd435 changed the behaviour of
ClasspathResolver, breaking the test.

Fix the test to match the intended behaviour of the class.
","e1422496ef1b8968b73bc4870a9cb5ce95c13eec","Russell Howe"
"532","getReaderWithRootAndResourceIsDirectory","getReaderWithRootAndResourceIsDirectory","3","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"533","getReaderWithRootAndResourceAboveRoot","getReaderWithRootAndResourceAboveRoot","2","Body Change, Exceptions Change, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"534","getReaderWithRootAndResourceAboveRoot","getReaderWithRootAndResourceAboveRoot","2","Exceptions Change","Replace hamcrest assertions with jUnit assertions

Hamcrest isn't really adding anything here, so we may as well just use
the junit assertion APIs
","01054a7a038fd01ece73a12cdd328c1374652107","Russell Howe"
"535","getReaderWithoutContextClassLoader","getReaderWithoutContextClassLoader","1","Body Change, Exceptions Change, Introduced, MultiChange","Fix ClasspathResolver for non-context class loader case

Broke the case where the context class loader can't actually find the resource and the fallback has to be used. Also added a test case to catch this specific regression.
","adb82eb650ea36c20850cf822d41ce764c0a65b0","Ian Levesque"
"536","textExplicitNullMapValue","textExplicitNullMapValue","1","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"537","calla","calla","2","Exceptions Change","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"538","calla","calla","2","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"539","callb","callb","2","Exceptions Change","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"540","callb","callb","2","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"541","callc","callc","2","Exceptions Change","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"542","callc","callc","2","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"543","testConcurrentExecution","testConcurrentExecution","3","Body Change, Exceptions Change, MultiChange","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"544","testConcurrentExecution","testConcurrentExecution","3","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"545","testConcurrentExecution","testConcurrentExecution","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"546","render","render","1","Body Change, Exceptions Change, Introduced, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"547","testConcurrentExecutionWithConcurrentTemplate","testConcurrentExecutionWithConcurrentTemplate","3","Body Change, Exceptions Change, MultiChange","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"548","testConcurrentExecutionWithConcurrentTemplate","testConcurrentExecutionWithConcurrentTemplate","3","Body Change, Exceptions Change, MultiChange","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"549","testConcurrentExecutionWithConcurrentTemplate","testConcurrentExecutionWithConcurrentTemplate","3","Body Change, Exceptions Change, MultiChange","do some minor refactorings
","5542b0ae9e4896431f75c606fce77222a1d89fe4","Sam Pullara"
"550","execute","execute","1","Modifier Change, Body Change, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"551","execute","execute","4","Deleted","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"552","execute","execute","4","Body Change, Introduced, MultiChange","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"553","execute","execute","4","Body Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"554","execute","execute","4","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"555","execute","execute","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"556","run","run","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"557","invert","invert","1","Introduced","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"558","MustacheException","MustacheException","1","Body Change","Merge pull request #104 from sbuettner/master

Add special MustacheNotFoundException to differentiate between compiler ...","40854d122f0003ac88b51e06f623485eb1e07d2d","Sam Pullara"
"559","MustacheException","MustacheException","1","Body Change","Merge pull request #104 from sbuettner/master

Add special MustacheNotFoundException to differentiate between compiler ...","40854d122f0003ac88b51e06f623485eb1e07d2d","Sam Pullara"
"560","MustacheException","MustacheException","1","Body Change, Introduced, MultiChange","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"561","MustacheException","MustacheException","1","Body Change, Introduced, MultiChange","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"562","MustacheException","MustacheException","1","Body Change, Introduced, MultiChange","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"563","getContext","getContext","2","File Renamed","Merge pull request #104 from sbuettner/master

Add special MustacheNotFoundException to differentiate between compiler ...","40854d122f0003ac88b51e06f623485eb1e07d2d","Sam Pullara"
"564","getContext","getContext","2","Body Change, Introduced, MultiChange","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"565","find","find","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"566","iterate","iterate","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"567","falsey","falsey","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"568","stringify","stringify","1","-","Merge pull request #42 from mcheely/override-to-string

Make object -> string conversion extendable","b8da237953598948a2e3d9a441bfec1052a95d1f","Sam Pullara"
"569","makeList","makeList","3","File Renamed","Merge pull request #42 from mcheely/override-to-string

Make object -> string conversion extendable","b8da237953598948a2e3d9a441bfec1052a95d1f","Sam Pullara"
"570","makeList","makeList","3","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"571","makeList","makeList","3","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"572","FallbackMustacheFactory","FallbackMustacheFactory","1","Body Change","remove a couple warnings from compilation
","a9d4f77c07aa9e707924daa368e32658b863ae37","Sam Pullara"
"573","FallbackMustacheFactory","FallbackMustacheFactory","1","Body Change","remove a couple warnings from compilation
","a9d4f77c07aa9e707924daa368e32658b863ae37","Sam Pullara"
"574","FallbackMustacheFactory","FallbackMustacheFactory","4","Body Change, Introduced, MultiChange","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"575","FallbackMustacheFactory","FallbackMustacheFactory","4","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"576","FallbackMustacheFactory","FallbackMustacheFactory","4","Body Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"577","FallbackMustacheFactory","FallbackMustacheFactory","4","Modifier Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"578","getReader","getReader","1","Body Change","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"579","equals","equals","2","Body Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"580","equals","equals","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"581","value","value","1","Body Change","deoptimize on guard failure
","96793166768cc2433b17cc6e8c1d4dc6eb50e2dc","Sam Pullara"
"582","iterable","iterable","1","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"583","notIterable","notIterable","4","Body Change","deoptimize on guard failure
","96793166768cc2433b17cc6e8c1d4dc6eb50e2dc","Sam Pullara"
"584","notIterable","notIterable","4","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"585","notIterable","notIterable","4","Body Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"586","notIterable","notIterable","4","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"587","GuardException","GuardException","1","-","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"588","GuardException","GuardException","1","Body Change","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"589","call","call","1","Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"590","flush","flush","2","Exceptions Change","fix a bug in the way nested latched writers were being evaluated
","0f01230210fc5226e4e03fdc616b6bab4efbc697","Sam Pullara"
"591","flush","flush","2","Body Change, Exceptions Change, MultiChange","coerce on the way in as well for handling things like scala maps
","0284f21e53bdee8ba04d9423db99da049b860951","Sam Pullara"
"592","close","close","2","Body Change, Exceptions Change, MultiChange","fix a bug in the way nested latched writers were being evaluated
","0f01230210fc5226e4e03fdc616b6bab4efbc697","Sam Pullara"
"593","close","close","2","Body Change, Exceptions Change, MultiChange","another stab at getting latched writer to work in all cases
","161d3b8a787feef53b8b3dad8e8bd8193d635014","Sam Pullara"
"594","await","await","2","File Renamed","fix a bug in the way nested latched writers were being evaluated
","0f01230210fc5226e4e03fdc616b6bab4efbc697","Sam Pullara"
"595","await","await","2","Body Change, Introduced, MultiChange","another stab at getting latched writer to work in all cases
","161d3b8a787feef53b8b3dad8e8bd8193d635014","Sam Pullara"
"596","escape","escape","6","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"597","escape","escape","6","Body Change, Deleted, MultiChange","remove partial scope and make escaping escaped html the default to be more inline with the specification.
","06b01f06145b088c334d0424c6eb22ccc8904ce4","Sam Pullara"
"598","escape","escape","6","Body Change, Introduced, MultiChange","increase escaping performance by 3-4x in the common clean case and 2x in the encoding case.
","de0639c6383416e5b6bf82484fa9eb0d3ad156e9","Sam Pullara"
"599","escape","escape","6","Body Change","Add additional escape characters for non-standard quotes or no quotes for attributes
","4e0b75d3bf6a503dae276d8b477ff863a86aa7b9","Sam Pullara"
"600","escape","escape","6","Body Change","improve performance across the board for escaping
","1f35cafae9e3797c0df7dcc10afb4033e31b8afa","Sam Pullara"
"601","escape","escape","6","Body Change","this is somewhat slower on the synthetic benchmarks but twice as fast on real data with a real writer.
","2edf8dec8dfc23d322007a178da9606241d13540","Sam Pullara"
"602","get","get","1","Body Change, Introduced, MultiChange","share find code between Map/Simple object handlers
","c4c5a6f6c8d4b5251814526eac8b0b90ca474f1c","Sam Pullara"
"603","find","find","1","Body Change, Introduced, MultiChange","share find code between Map/Simple object handlers
","c4c5a6f6c8d4b5251814526eac8b0b90ca474f1c","Sam Pullara"
"604","areMethodsAccessible","areMethodsAccessible","1","Body Change","merge
","912ddc30dd7211401cb24bceac705165bc43fbc1","Sam Pullara"
"605","GuardedWrapper","GuardedWrapper","6","File Renamed","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"606","GuardedWrapper","GuardedWrapper","6","Body Change, Introduced, MultiChange","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"607","GuardedWrapper","GuardedWrapper","6","Body Change","optimized guards when using classes
","ea03d61a26826e2ef36c3abb831ca4d96180d8dd","Sam Pullara"
"608","GuardedWrapper","GuardedWrapper","6","Body Change","turn compilation off by default
","ea6910027810f492144e050afae3bf2d2019e2a3","Sam Pullara"
"609","GuardedWrapper","GuardedWrapper","6","Body Change","refactor the compilation stuff into a separate package
","023e84dd00a1cdf6ada46d484e9ace235e4e496d","Sam Pullara"
"610","GuardedWrapper","GuardedWrapper","6","Body Change","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"611","call","call","1","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"612","guardCall","guardCall","2","File Renamed","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"613","guardCall","guardCall","2","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"614","hashCode","hashCode","3","Body Change","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"615","hashCode","hashCode","3","Body Change","trying to recover some of the performance lost with correctness
","a170d4251498a98c81b40b309f125e0003a566fb","Sam Pullara"
"616","hashCode","hashCode","3","Body Change","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"617","equals","equals","1","Body Change","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"618","getGuards","getGuards","4","File Renamed","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"619","getGuards","getGuards","4","Body Change, Introduced, MultiChange","maybe time to break this out into a simple jdk5 / optimized jdk7 modules
","76242782947856f39caf3a4b5020c9821eb6d81c","Sam Pullara"
"620","getGuards","getGuards","4","File Renamed","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"621","getGuards","getGuards","4","Body Change, Introduced, MultiChange","now convert indy completely to using the new codegen stuff
","28a1827c2d2b5f5c8035996672f63b129173e0bf","Sam Pullara"
"622","toString","toString","2","File Renamed","now only a small performance regression from the original flawed model. need to determine if we also need to cache.
","bc489c317d7899ca14f8a0d39278b09313b5d8d3","Sam Pullara"
"623","toString","toString","2","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"624","MissingWrapper","MissingWrapper","1","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"625","toString","toString","2","File Renamed","Merge pull request #28 from mcheely/fix-explicit-map-nulls

Fix bug causing (Hash)Maps with explicitly set nulls to fail","94c031a425caec292ca74c81ed90809d76386898","Sam Pullara"
"626","toString","toString","2","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"627","get","get","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"628","get","get","2","Body Change","make this not thrash the guards
","e6eabef54e3f98600c0e7a71e8974c5f33ce2bbe","Sam Pullara"
"629","createAndGet","createAndGet","3","File Renamed","make more of them comilable
","ac528f2046d150c6d3024d19653d563162008468","Sam Pullara"
"630","createAndGet","createAndGet","3","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"631","createAndGet","createAndGet","3","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"632","getWrapper","getWrapper","3","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"633","getWrapper","getWrapper","3","Body Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"634","getWrapper","getWrapper","3","Body Change","show how to customize valuecode to do things differently
","1a50d718029685a3cc99a9b33518e29d8f3717d4","Sam Pullara"
"635","logWarning","logWarning","2","Body Change, Introduced, MultiChange","pull the warning message out
","9fef41ad3ba82de13f23de3f29c7121bb47c129c","Sam Pullara"
"636","logWarning","logWarning","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"637","apply","apply","1","-","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"638","getMethod","getMethod","1","Body Change, Exceptions Change, Introduced, MultiChange","more repeatable compilation benchmark
","7128679f9cbc87b4609003c583b4fc4d183d04b8","Sam Pullara"
"639","findMember","findMember","2","Body Change","ensure java11 String.value method is not matched
","f7a0c86f1c640d66f2456f94267f3de3d4ba1f57","Romain Manni-Bucau"
"640","findMember","findMember","2","Body Change","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"641","findMemberOnClass","findMemberOnClass","2","Body Change, Introduced, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"642","findMemberOnClass","findMemberOnClass","2","Body Change","ISSUE-291: fix substring issue with empty dot
","304f71a02f7a6be5dec373e0cd00eab3de11d8f3","Sam Pullara"
"643","checkClass","checkClass","3","File Renamed","make more of them comilable
","ac528f2046d150c6d3024d19653d563162008468","Sam Pullara"
"644","checkClass","checkClass","3","Body Change, Introduced, MultiChange","ISSUE #256: backwards compatible change that will search for methods on interfaces and superclass if the class itself isn't public
","89793f3b56ba7699011a494f152b36a54b9eb8d9","spullara"
"645","checkClass","checkClass","3","Modifier Change","ISSUE-264: introduction of a SafeMustacheFactory for use when using untrusted templates
","7d9c23713412d7e60847c9771a6745f3e0bafd78","Sam Pullara"
"646","apply","apply","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"647","toString","toString","1","Body Change","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"648","apply","apply","1","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"649","WrappedGuard","WrappedGuard","2","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"650","WrappedGuard","WrappedGuard","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"651","apply","apply","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"652","toString","toString","2","File Renamed","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"653","toString","toString","2","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"654","apply","apply","1","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"655","apply","apply","1","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"656","equals","equals","3","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"657","equals","equals","3","Body Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"658","equals","equals","3","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"659","apply","apply","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"660","ReflectionWrapper","ReflectionWrapper","1","Body Change, Introduced, MultiChange","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"661","unwrap","unwrap","2","File Renamed","guard negative wrappers
","4e3df23482684b80f82739150dd631b38a003602","Sam Pullara"
"662","unwrap","unwrap","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"663","call","call","1","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"664","toString","toString","1","Body Change, Introduced, MultiChange","Better error messages when something fails
","f8411b894082add4c782fef749434eb86466e375","Sam Pullara"
"665","getWrappers","getWrappers","2","File Renamed","guard negative wrappers
","4e3df23482684b80f82739150dd631b38a003602","Sam Pullara"
"666","getWrappers","getWrappers","2","Body Change, Introduced, MultiChange","maybe time to break this out into a simple jdk5 / optimized jdk7 modules
","76242782947856f39caf3a4b5020c9821eb6d81c","Sam Pullara"
"667","getTargetDescription","getTargetDescription","3","File Renamed","guard negative wrappers
","4e3df23482684b80f82739150dd631b38a003602","Sam Pullara"
"668","getTargetDescription","getTargetDescription","3","Body Change, Introduced, MultiChange","Merge pull request #103 from rustyx/master

Improved reflection error handling","334801b41e6ddb3993d7ea53a13737a1e697de72","Sam Pullara"
"669","getTargetDescription","getTargetDescription","3","Body Change","#232 fix NPE ReflectionWrapper.getTargetDescription() if arguments==null
","69517212bf7206452aef9ef0b485dba706ce2ea4","Jeff Kirby"
"670","elementsToString","elementsToString","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"671","elementToString","elementToString","2","File Renamed","guard negative wrappers
","4e3df23482684b80f82739150dd631b38a003602","Sam Pullara"
"672","elementToString","elementToString","2","Body Change, Introduced, MultiChange","Merge pull request #103 from rustyx/master

Improved reflection error handling","334801b41e6ddb3993d7ea53a13737a1e697de72","Sam Pullara"
"673","unwrap","unwrap","1","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"674","find","find","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"675","find","find","2","Body Change","fix dot notation handling when an objecthandler mutates the type of the scope
","81cc33f8e60734c81ba5658ff56520e7487190fc","Sam Pullara"
"676","findWrapper","findWrapper","2","Body Change, Introduced, MultiChange","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"677","findWrapper","findWrapper","2","Body Change","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"678","createMissingWrapper","createMissingWrapper","2","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"679","createMissingWrapper","createMissingWrapper","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"680","createDotGuard","createDotGuard","1","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"681","createWrappedGuard","createWrappedGuard","1","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"682","createNullGuard","createNullGuard","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"683","createNullGuard","createNullGuard","2","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"684","createDepthGuard","createDepthGuard","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","dcfa172710cbf677211aba78d91f45c87afd0d74","Sam Pullara"
"685","createDepthGuard","createDepthGuard","2","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"686","createClassGuard","createClassGuard","1","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"687","createMapGuard","createMapGuard","1","Body Change, Introduced, MultiChange","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"688","createWrapper","createWrapper","2","Body Change, Introduced, MultiChange","simplify the guard -- gets rid of the synthetic method!
","c3767bf56ad97913737904156f40bbc958bc8a58","Sam Pullara"
"689","createWrapper","createWrapper","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"690","createBinding","createBinding","1","Body Change, Introduced, MultiChange","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"691","areMethodsAccessible","areMethodsAccessible","1","Body Change, Introduced, MultiChange","merge
","912ddc30dd7211401cb24bceac705165bc43fbc1","Sam Pullara"
"692","checkMethod","checkMethod","1","Body Change","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"693","checkField","checkField","1","Body Change","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"694","SafeMustacheFactory","SafeMustacheFactory","1","Body Change","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"695","SafeMustacheFactory","SafeMustacheFactory","1","Body Change","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"696","createMustacheVisitor","createMustacheVisitor","1","Body Change","ISSUE-264: add tests for all the disallowed behavior
","c17bb110161848e444576e93170a2a696770e9d3","Sam Pullara"
"697","createMustacheVisitor","createMustacheVisitor","8","Body Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"698","createMustacheVisitor","createMustacheVisitor","8","Body Change","remove partial scope and make escaping escaped html the default to be more inline with the specification.
","06b01f06145b088c334d0424c6eb22ccc8904ce4","Sam Pullara"
"699","createMustacheVisitor","createMustacheVisitor","8","Body Change","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"700","createMustacheVisitor","createMustacheVisitor","8","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"701","createMustacheVisitor","createMustacheVisitor","8","Body Change","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"702","createMustacheVisitor","createMustacheVisitor","8","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"703","createMustacheVisitor","createMustacheVisitor","8","Body Change","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"704","createMustacheVisitor","createMustacheVisitor","8","Body Change","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"705","handle","handle","1","-","Merge pull request #101 from sbuettner/master

Allow access to the name of a code for template analysis.","3c72547457d88e3a685ef88e7b00f33adb436364","Sam Pullara"
"706","DefaultMustacheFactory","DefaultMustacheFactory","2","Body Change","Make the DefaultMustacheFactory more extensible. Also fix a subtle fragment caching bug.
","078745b04accc1b0e24e9a4faf25e5d4cec6c5d4","Sam Pullara"
"707","DefaultMustacheFactory","DefaultMustacheFactory","2","Body Change","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"708","DefaultMustacheFactory","DefaultMustacheFactory","2","File Renamed","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"709","DefaultMustacheFactory","DefaultMustacheFactory","2","Body Change, Introduced, MultiChange","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"710","DefaultMustacheFactory","DefaultMustacheFactory","1","Body Change, Introduced, MultiChange","ISSUE-197: change the name of the variable to make it more obvious what you should pass to it
","b71540f93a5a7bf9d688ab3035d717764c3a1e33","Sam Pullara"
"711","DefaultMustacheFactory","DefaultMustacheFactory","1","Body Change","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"712","resolvePartialPath","resolvePartialPath","4","Body Change, Introduced, MultiChange","allow partial resolution to be overridden
","5370d9c78d64817931d67c63b34e90d437dcacf6","Sam Pullara"
"713","resolvePartialPath","resolvePartialPath","4","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","2464000de341a76bfe506e62385f3e2e2d066f33","Sam Pullara"
"714","resolvePartialPath","resolvePartialPath","4","Body Change","Merge pull request #110 from mjeanroy/master

fix partials resolution when name ends with extension","0ca6b5123e05bb7d16af9fa1ca69150cccbcc42c","Sam Pullara"
"715","resolvePartialPath","resolvePartialPath","4","Body Change","refs #168 Enabling different file extension
","88770279e1cd73895cd31dbf96b6ffc022424d3c","si0005hp"
"716","ensureForwardSlash","ensureForwardSlash","2","File Renamed","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"717","ensureForwardSlash","ensureForwardSlash","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","d4effc05bf3d7655541034777d6762ea9728014a","Sam Pullara"
"718","getReader","getReader","5","Body Change","Merge pull request #45 from gw0/bug-encoding

Corrected encoding bug for File resources.","28a5927d3593cc58ac6d71f0317beddb1533981a","Sam Pullara"
"719","getReader","getReader","5","Body Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"720","getReader","getReader","5","Body Change","more test coverage
","7f64a09168ec51eb2091d94eb97705ce852232a3","Sam Pullara"
"721","getReader","getReader","5","Body Change","add support for the context classloader
","4b048b67cadd4bc8260b94ae0b2c44a4ceccc55b","Sam Pullara"
"722","getReader","getReader","5","Body Change","Merge pull request #105 from sbuettner/master

Add a MustacheResolver that decouples template resolving from the DefaultMustacheFactory.","e5c173ebaa4e2f187b92c47a93f566810ed2fd86","Sam Pullara"
"723","encode","encode","2","Body Change","Optimize encoding by removing the regex and replacing it with custom parsing code.
","dde8dce04d1dc5967fd56c10c061ac085902e10f","Sam Pullara"
"724","encode","encode","2","Body Change","move the htmlescaping logic out and refactor it
","313480480e9d6dbb5eb12437bc7e551ccd20c2a7","Sam Pullara"
"725","setExecutorService","setExecutorService","1","Body Change","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"726","getFragment","getFragment","5","File Renamed","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"727","getFragment","getFragment","5","Body Change, Introduced, MultiChange","Make the DefaultMustacheFactory more extensible. Also fix a subtle fragment caching bug.
","078745b04accc1b0e24e9a4faf25e5d4cec6c5d4","Sam Pullara"
"728","getFragment","getFragment","5","Body Change","this looks like a initialization concurrency bug we saw at twitter
","24d3785827836708cc3ea38038086b0581f099e1","Sam Pullara"
"729","getFragment","getFragment","5","Body Change","failed to repro the reported bug with this, might as well add this regression test though.
","da796c396e856faf4014abda6461168c21c248bf","Sam Pullara"
"730","getFragment","getFragment","5","Body Change","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"731","getFragmentCacheFunction","getFragmentCacheFunction","1","Body Change, Introduced, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"732","compile","compile","7","Modifier Change, Body Change, MultiChange","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"733","compile","compile","7","Modifier Change, Body Change, MultiChange","move to using a LoaderCache for mustaches
","f94143957b359cc8dc9d2853e0bb754c49ca40ad","Sam Pullara"
"734","compile","compile","7","Body Change","Make the DefaultMustacheFactory more extensible. Also fix a subtle fragment caching bug.
","078745b04accc1b0e24e9a4faf25e5d4cec6c5d4","Sam Pullara"
"735","compile","compile","7","Body Change","this looks like a initialization concurrency bug we saw at twitter
","24d3785827836708cc3ea38038086b0581f099e1","Sam Pullara"
"736","compile","compile","7","Body Change","failed to repro the reported bug with this, might as well add this regression test though.
","da796c396e856faf4014abda6461168c21c248bf","Sam Pullara"
"737","compile","compile","7","Body Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"738","compile","compile","7","Body Change","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"739","compile","compile","1","Body Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"740","compile","compile","2","Body Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"741","compile","compile","2","Body Change","post compilation we can remove the thread local partial cache as it is only needed to handle recursion during the compilation step
","f1591fd815d25a57487090c6bb5f67d06e195305","Sam Pullara"
"742","filterText","filterText","1","Body Change, Introduced, MultiChange","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"743","setRecursionLimit","setRecursionLimit","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","86a03af6140ce34056f675ed8902cef6860106e5","Sam Pullara"
"744","getRecursionLimit","getRecursionLimit","2","File Renamed","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"745","getRecursionLimit","getRecursionLimit","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","86a03af6140ce34056f675ed8902cef6860106e5","Sam Pullara"
"746","compilePartial","compilePartial","3","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","d4effc05bf3d7655541034777d6762ea9728014a","Sam Pullara"
"747","compilePartial","compilePartial","3","Body Change","Merge pull request #127 from orirawlings/multipleRecursivePartials

Fix bug for templates with multiple recursive partials","c6cdb78f0c3aa24dbb97a9c248853869454d9703","Sam Pullara"
"748","compilePartial","compilePartial","3","Body Change","take advantage of an optimization we can make when a mustache is not recursive which is very common
","e8df536002c5caf93a5e74593edfbfc8c8c17fea","Sam Pullara"
"749","createParser","createParser","2","File Renamed","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"750","createParser","createParser","2","Body Change, Introduced, MultiChange","making whitespace parsing backwards compatible
","31eeebc6f75f102b4646a64ff3229c52ad732764","David Poetzsch-Heffter"
"751","getMustacheCacheFunction","getMustacheCacheFunction","1","Body Change, Introduced, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"752","createMustacheCache","createMustacheCache","2","Body Change, Introduced, MultiChange","Make the DefaultMustacheFactory more extensible. Also fix a subtle fragment caching bug.
","078745b04accc1b0e24e9a4faf25e5d4cec6c5d4","Sam Pullara"
"753","createMustacheCache","createMustacheCache","2","Return Type Change, Body Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"754","createLambdaCache","createLambdaCache","2","Body Change, Introduced, MultiChange","Make the DefaultMustacheFactory more extensible. Also fix a subtle fragment caching bug.
","078745b04accc1b0e24e9a4faf25e5d4cec6c5d4","Sam Pullara"
"755","createLambdaCache","createLambdaCache","2","Return Type Change, Body Change, MultiChange","Moving to Java 8. Removed the dependency on Guava. Removed Scala 2.8 & 2.9. Moved to 0.9.0 and branched 0.8.x for future bug fixes.
","f8e148f09bc5e9035ea32ee30c7a2adaeddc4f23","Sam Pullara"
"756","invert","invert","2","Body Change, Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"757","invert","invert","2","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"758","DefaultMustacheVisitor","DefaultMustacheVisitor","2","File Renamed","update eof() callback with templatecontext
","674ed1acd823c5274c2fd5534717450196182e4e","Sam Pullara"
"759","DefaultMustacheVisitor","DefaultMustacheVisitor","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"760","addPragmaHandler","addPragmaHandler","1","Body Change, Introduced, MultiChange","start pragma support
","a78f2081d62ae9bb369fcee790e6b8a42b939e1e","Sam Pullara"
"761","mustache","mustache","1","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"762","checkName","checkName","1","Body Change, Introduced, MultiChange","ISSUE-201: added a new operator for use with template inheritance. {{?name}}{{/name}} will only be included in the template if the ""name"" section is overridden.
","a1197f7789b24d694f16dad29f917e9be43f0dc2","Sam Pullara"
"763","partial","partial","1","Body Change, Introduced, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"764","dynamicPartial","dynamicPartial","1","Body Change, Introduced, MultiChange","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"765","value","value","1","Body Change, Introduced, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"766","write","write","1","Body Change, Introduced, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"767","pragma","pragma","1","Body Change, Introduced, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"768","eof","eof","1","Body Change","update eof() callback with templatecontext
","674ed1acd823c5274c2fd5534717450196182e4e","Sam Pullara"
"769","comment","comment","1","Body Change, Introduced, MultiChange","comments can appear in template text
","15bd7077d67e580f3990b70fa8a85fa7a8405777","Sam Pullara"
"770","createParser","createParser","1","Body Change","making whitespace parsing backwards compatible
","31eeebc6f75f102b4646a64ff3229c52ad732764","David Poetzsch-Heffter"
"771","TranslateBundleFunction","TranslateBundleFunction","1","Modifier Change","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"772","apply","apply","1","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","84625ea5e37dd5983e4b6c4deb70ebcb8acb403d","Sam Pullara"
"773","execute","execute","1","Introduced","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"774","getCodes","getCodes","1","Modifier Change","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"775","setCodes","setCodes","1","Modifier Change","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"776","init","init","1","-","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"777","clone","clone","2","Introduced","Clone the partial before replacing the codes so we can share them.
","2b3af8b18c58b7415f6f4d9f45442194e1741a13","Sam Pullara"
"778","clone","clone","2","Modifier Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"779","clone","clone","1","Introduced","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"780","getName","getName","1","Introduced","Merge pull request #101 from sbuettner/master

Allow access to the name of a code for template analysis.","3c72547457d88e3a685ef88e7b00f33adb436364","Sam Pullara"
"781","invert","invert","2","Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"782","invert","invert","2","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"783","WriteCode","WriteCode","1","Body Change, Introduced, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"784","invert","invert","3","Body Change, Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"785","invert","invert","3","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"786","invert","invert","3","Body Change","Merge pull request #90 from panghy/master

fix issue in WriteCode where inversion ignores regex in template","4a750a9ed92c4d01c37d3b9e0ad2c5a14728351b","Sam Pullara"
"787","clone","clone","6","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"788","clone","clone","6","Body Change, Introduced, MultiChange","Clone the partial before replacing the codes so we can share them.
","2b3af8b18c58b7415f6f4d9f45442194e1741a13","Sam Pullara"
"789","clone","clone","6","Body Change","fix for replacing a value inside an iterable in a super template
","20f2fe3115571d700c9230f3750acdcc539dc16e","Sam Pullara"
"790","clone","clone","6","Body Change","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"791","clone","clone","6","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"792","clone","clone","6","Modifier Change, Body Change, MultiChange","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"793","clone","clone","3","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"794","clone","clone","3","Body Change, Introduced, MultiChange","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"795","clone","clone","3","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","2464000de341a76bfe506e62385f3e2e2d066f33","Sam Pullara"
"796","DefaultCode","DefaultCode","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"797","DefaultCode","DefaultCode","2","Body Change","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"798","invert","invert","4","Body Change, Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"799","invert","invert","4","Body Change, Exceptions Change, MultiChange","can now parse the foundationdb reports
","2056ae4982544fff21304643468fb64869e6bdb8","Sam Pullara"
"800","invert","invert","4","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"801","invert","invert","4","Body Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"802","matchAppended","matchAppended","1","Body Change, Introduced, MultiChange","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"803","init","init","5","Body Change, Introduced, MultiChange","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"804","init","init","5","Modifier Change, Body Change, MultiChange","still got to stop recursion
","ea7efbb54354cb3ab9bce42a00f9ff19e55c7822","Sam Pullara"
"805","init","init","5","Body Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"806","init","init","5","Body Change","filter template text at the beginning of a mustache or a partial
","28cf324e5ef656f52273dbcc845002fadae328f6","Sam Pullara"
"807","init","init","5","Body Change","fix some edge cases for filtering text
","d0eadf646a048ea73ebc8f423aaed5060c33c7ea","Sam Pullara"
"808","filterText","filterText","2","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"809","filterText","filterText","2","Body Change, Introduced, MultiChange","fix some edge cases for filtering text
","d0eadf646a048ea73ebc8f423aaed5060c33c7ea","Sam Pullara"
"810","get","get","3","File Renamed","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"811","get","get","3","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"812","get","get","3","Body Change","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"813","execute","execute","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"814","tag","tag","3","Exceptions Change","refactor a bit and add a main method for easier benchmarking
","2c56bac25e4fea8ca7d15a1d6b964f459cdbcdac","Sam Pullara"
"815","tag","tag","3","Body Change, Exceptions Change, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"816","tag","tag","3","Modifier Change","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"817","appendText","appendText","4","Body Change","deoptimize on guard failure
","96793166768cc2433b17cc6e8c1d4dc6eb50e2dc","Sam Pullara"
"818","appendText","appendText","4","Body Change","move handling of text into a single place
","b059f7a36ea16c93147155dbe08cc2329cd4685f","Sam Pullara"
"819","appendText","appendText","4","Body Change","no reason to keep converting this string
","909fc585436a060f7388e36bb1c706a085e8103e","Sam Pullara"
"820","appendText","appendText","4","Body Change","added template-benchmark stock bench
","e8db5bf0378bbf57bbe9b8bb70f95d7577f7d217","spullara"
"821","run","run","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"822","append","append","4","Body Change","deoptimize on guard failure
","96793166768cc2433b17cc6e8c1d4dc6eb50e2dc","Sam Pullara"
"823","append","append","4","Body Change","move handling of text into a single place
","b059f7a36ea16c93147155dbe08cc2329cd4685f","Sam Pullara"
"824","append","append","4","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"825","append","append","4","Body Change","filter template text at the beginning of a mustache or a partial
","28cf324e5ef656f52273dbcc845002fadae328f6","Sam Pullara"
"826","addScope","addScope","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"827","addScope","addScope","2","Return Type Change, Body Change, MultiChange","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"828","getName","getName","1","Body Change, Introduced, MultiChange","Merge pull request #101 from sbuettner/master

Allow access to the name of a code for template analysis.","3c72547457d88e3a685ef88e7b00f33adb436364","Sam Pullara"
"829","ExtendNameCode","ExtendNameCode","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"830","identity","identity","1","Body Change","fix identity issue that was corrupting template functions for unencoded results
","a4789cac8da09ec3bcce517129b0cbcd39c31d84","Sam Pullara"
"831","ValueCode","ValueCode","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"832","execute","execute","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"833","handleCallable","handleCallable","3","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"834","handleCallable","handleCallable","3","Exceptions Change","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"835","handleCallable","handleCallable","3","Body Change, Exceptions Change, MultiChange","remove some duplicates
","6f6671b25b4f9dd87f9b82ef401b2ad76fdea895","Sam Pullara"
"836","execute","execute","1","Body Change, Exceptions Change, Introduced, MultiChange","remove some duplicates
","6f6671b25b4f9dd87f9b82ef401b2ad76fdea895","Sam Pullara"
"837","handleFunction","handleFunction","2","Body Change, Exceptions Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"838","handleFunction","handleFunction","2","Body Change","make sure we implement the spec correctly and test it. you can avoid the spec if you want by overriding this behavior.
","f1220f45f5023fec5facfbb9bea0719911783cb9","Sam Pullara"
"839","execute","execute","5","Exceptions Change","fix identity issue that was corrupting template functions for unencoded results
","a4789cac8da09ec3bcce517129b0cbcd39c31d84","Sam Pullara"
"840","execute","execute","5","Exceptions Change","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"841","execute","execute","5","Body Change, Exceptions Change, MultiChange","handle null values better
","5c95b48daeb517ef09ed9f619b62ab4e32504f92","Sam Pullara"
"842","execute","execute","5","Body Change, Exceptions Change, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"843","execute","execute","5","Body Change, Exceptions Change, MultiChange","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"844","invert","invert","5","Body Change, Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"845","invert","invert","5","Exceptions Change","simplify things
","071a1334ba886335defa3cd1e79cf6bcb852671b","Sam Pullara"
"846","invert","invert","5","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"847","invert","invert","5","Body Change","converted to use regex rather than straight text. pretty good.
","a3f54f78a518f0c6cbebe701104251d11ce9a8dd","Sam Pullara"
"848","invert","invert","5","Body Change","fix a bug in the inverter
","91b98eae12123f58eb1a2a7f56744b5a05cffb53","Sam Pullara"
"849","PartialCode","PartialCode","5","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"850","PartialCode","PartialCode","5","Body Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"851","PartialCode","PartialCode","5","Body Change","add method handles into the mix
","f0988ebe2b8a57a6f819403a49088b6bff537547","Sam Pullara"
"852","PartialCode","PartialCode","5","Body Change, Deleted, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"853","PartialCode","PartialCode","5","Body Change, Introduced, MultiChange","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"854","PartialCode","PartialCode","3","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"855","PartialCode","PartialCode","3","Body Change, Deleted, MultiChange","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"856","PartialCode","PartialCode","3","Body Change, Introduced, MultiChange","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"857","identity","identity","1","Body Change, Introduced, MultiChange","merge
","7620b6e357672bba435a98782fd9074dcf99ac4a","Sam Pullara"
"858","getCodes","getCodes","2","Body Change","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"859","getCodes","getCodes","2","Body Change","with extension, we have to bypass caching. this means that we cant have recursive extensions like you can with partials.
","2dbe9418fbb8eb4f4c8341eefbdc25a65e752a2a","Sam Pullara"
"860","execute","execute","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"861","execute","execute","2","Body Change","take advantage of an optimization we can make when a mustache is not recursive which is very common
","e8df536002c5caf93a5e74593edfbfc8c8c17fea","Sam Pullara"
"862","executePartial","executePartial","1","Body Change, Introduced, MultiChange","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"863","init","init","8","Body Change","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"864","init","init","8","Modifier Change, Body Change, MultiChange","still got to stop recursion
","ea7efbb54354cb3ab9bce42a00f9ff19e55c7822","Sam Pullara"
"865","init","init","8","Body Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"866","init","init","8","Body Change","deoptimize on guard failure
","96793166768cc2433b17cc6e8c1d4dc6eb50e2dc","Sam Pullara"
"867","init","init","8","Body Change","allow the partial name construction to be overridden
","a7de6c6b535074eee0e92af9cf0af03ae8ce3ec5","Sam Pullara"
"868","init","init","8","Body Change","fix some edge cases for filtering text
","d0eadf646a048ea73ebc8f423aaed5060c33c7ea","Sam Pullara"
"869","init","init","8","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","d4effc05bf3d7655541034777d6762ea9728014a","Sam Pullara"
"870","init","init","8","Body Change","take advantage of an optimization we can make when a mustache is not recursive which is very common
","e8df536002c5caf93a5e74593edfbfc8c8c17fea","Sam Pullara"
"871","partialName","partialName","3","Body Change, Introduced, MultiChange","allow the partial name construction to be overridden
","a7de6c6b535074eee0e92af9cf0af03ae8ce3ec5","Sam Pullara"
"872","partialName","partialName","3","Body Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"873","partialName","partialName","3","Body Change","allow partial resolution to be overridden
","5370d9c78d64817931d67c63b34e90d437dcacf6","Sam Pullara"
"874","ExtendCode","ExtendCode","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"875","ExtendCode","ExtendCode","3","Exceptions Change","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"876","ExtendCode","ExtendCode","3","Exceptions Change","refactored whitespace fixes into separate factory
","5e695fba56af672cfee78933a189502d324a875c","David Poetzsch-Heffter"
"877","replaceCodes","replaceCodes","2","Body Change, Introduced, MultiChange","Fix Issue #53 and allow recursion within extensions
","6d49acaeffe808540e95b61e2e1de4a5f6080355","Sam Pullara"
"878","replaceCodes","replaceCodes","2","Body Change","ISSUE-201: added a new operator for use with template inheritance. {{?name}}{{/name}} will only be included in the template if the ""name"" section is overridden.
","a1197f7789b24d694f16dad29f917e9be43f0dc2","Sam Pullara"
"879","init","init","7","Body Change, Introduced, MultiChange","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"880","init","init","7","Modifier Change, Body Change, MultiChange","still got to stop recursion
","ea7efbb54354cb3ab9bce42a00f9ff19e55c7822","Sam Pullara"
"881","init","init","7","Body Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"882","init","init","7","Body Change","fix some edge cases for filtering text
","d0eadf646a048ea73ebc8f423aaed5060c33c7ea","Sam Pullara"
"883","init","init","7","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"884","init","init","7","Modifier Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"885","init","init","7","Body Change","Merge pull request #173 from samfraser/bug_172-Comments-not-valid-in-ExtendCode-block

BUG-172: fix issue if there is a comment in an ExtendCode block","eca08ca2bd58898310d302e63da185a568aee81a","Sam Pullara"
"886","DefaultMustache","DefaultMustache","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"887","run","run","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"888","invert","invert","1","Body Change, Introduced, MultiChange","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"889","setCodes","setCodes","5","Modifier Change, Body Change, MultiChange","passing all the tests
","958ad9ea8cba98b03971f8348c90b2d067f3b36d","Sam Pullara"
"890","setCodes","setCodes","5","Body Change","turn compilation off by default
","ea6910027810f492144e050afae3bf2d2019e2a3","Sam Pullara"
"891","setCodes","setCodes","5","Body Change","refactor the compilation stuff into a separate package
","023e84dd00a1cdf6ada46d484e9ace235e4e496d","Sam Pullara"
"892","setCodes","setCodes","5","Body Change","broad base refactoring to create a different object handler that does code generation
","6094295131941beab5a6e82014150121436e0e80","Sam Pullara"
"893","setCodes","setCodes","5","Modifier Change","complete refactor of the compilation code into a separate module
","8e468c4fa458b6ff1bd670f75a98f48a0ea523b7","Sam Pullara"
"894","execute","execute","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","81c73c3fbf22ac2346ef5c0bafc04a9517af6f3d","Sam Pullara"
"895","execute","execute","2","Body Change","measure the amount of memory allocated running a mustache. down to a single allocation for the scope list.
","f1af955ed9d4fb95ee08e2a33fe44885bd16bc1e","Sam Pullara"
"896","init","init","1","Body Change, Introduced, MultiChange","move to using a LoaderCache for mustaches
","f94143957b359cc8dc9d2853e0bb754c49ca40ad","Sam Pullara"
"897","isRecursive","isRecursive","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"898","isRecursive","isRecursive","2","Body Change, Introduced, MultiChange","take advantage of an optimization we can make when a mustache is not recursive which is very common
","e8df536002c5caf93a5e74593edfbfc8c8c17fea","Sam Pullara"
"899","setRecursive","setRecursive","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"900","setRecursive","setRecursive","2","Body Change, Introduced, MultiChange","take advantage of an optimization we can make when a mustache is not recursive which is very common
","e8df536002c5caf93a5e74593edfbfc8c8c17fea","Sam Pullara"
"901","IterableCode","IterableCode","1","Body Change, Introduced, MultiChange","found a bug where we didnt handle callable with notiterable
","2eb044128885f5e3662e723986eae339a7ad33f8","Sam Pullara"
"902","IterableCode","IterableCode","2","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"903","IterableCode","IterableCode","2","Body Change","found a bug where we didnt handle callable with notiterable
","2eb044128885f5e3662e723986eae339a7ad33f8","Sam Pullara"
"904","execute","execute","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"905","handle","handle","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"906","handleCallable","handleCallable","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"907","handleCallable","handleCallable","2","Body Change","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"908","handleFunction","handleFunction","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"909","handleFunction","handleFunction","2","Body Change","catch exceptions from functions and report where they fail
","a925db0148765279a303db7f63050180b54354d4","Sam Pullara"
"910","writeTemplate","writeTemplate","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"911","execute","execute","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"912","next","next","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"913","next","next","2","Body Change","huge performance increase moving to a stack based scope without copying
","6124b6ffbb887af1c8c449681763aa248bc8ce67","Sam Pullara"
"914","invert","invert","6","Body Change, Exceptions Change, Introduced, MultiChange","works with values and iterables in simple cases
","30c0aab7409adff69a231ef351d1ee8dbf6cb799","Sam Pullara"
"915","invert","invert","6","Body Change, Exceptions Change, MultiChange","can now parse the foundationdb reports
","2056ae4982544fff21304643468fb64869e6bdb8","Sam Pullara"
"916","invert","invert","6","Body Change, Exceptions Change, MultiChange","simplify things
","071a1334ba886335defa3cd1e79cf6bcb852671b","Sam Pullara"
"917","invert","invert","6","Exceptions Change","refactor things with a convenience method on mustache
","7934d0dfe732ead4fbb07efc32d7469e15ad74d3","Sam Pullara"
"918","invert","invert","6","Body Change","apply some global java 7/8 adjustments
","28bab527f3e4149b858d8bc726100fe5e41516a4","Sam Pullara"
"919","invert","invert","6","Body Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"920","NotIterableCode","NotIterableCode","1","Body Change, Introduced, MultiChange","Merge branch 'master' of github.com:spullara/mustache.java
","58d79cfd042931265be0c709e1196b59fc0f229f","Sam Pullara"
"921","handle","handle","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"922","execute","execute","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"923","next","next","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"924","MustacheParser","MustacheParser","1","Body Change, Introduced, MultiChange","making whitespace parsing backwards compatible
","31eeebc6f75f102b4646a64ff3229c52ad732764","David Poetzsch-Heffter"
"925","MustacheParser","MustacheParser","3","File Renamed","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"926","MustacheParser","MustacheParser","3","Body Change, Introduced, MultiChange","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"927","MustacheParser","MustacheParser","3","Body Change","making whitespace parsing backwards compatible
","31eeebc6f75f102b4646a64ff3229c52ad732764","David Poetzsch-Heffter"
"928","compile","compile","4","Modifier Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"929","compile","compile","4","Modifier Change","Need to make this available for calling from non-default mustache factories.
","9b8cd0c53a4ae52dc0552109537ae76e90ecf4b9","Sam Pullara"
"930","compile","compile","4","Body Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"931","compile","compile","4","Body Change","Merge pull request #104 from sbuettner/master

Add special MustacheNotFoundException to differentiate between compiler ...","40854d122f0003ac88b51e06f623485eb1e07d2d","Sam Pullara"
"932","compile","compile","2","Modifier Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"933","compile","compile","2","Modifier Change","Need to make this available for calling from non-default mustache factories.
","9b8cd0c53a4ae52dc0552109537ae76e90ecf4b9","Sam Pullara"
"934","compile","compile","2","Modifier Change","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"935","compile","compile","2","Modifier Change","Need to make this available for calling from non-default mustache factories.
","9b8cd0c53a4ae52dc0552109537ae76e90ecf4b9","Sam Pullara"
"936","compile","compile","1","Body Change, Introduced, MultiChange","need to account for people putting spaces inside blocks
","edc76237f9258c819efb775f9df914e0f4835872","Sam Pullara"
"937","compile","compile","19","Body Change, Exceptions Change, Introduced, MultiChange","need to account for people putting spaces inside blocks
","edc76237f9258c819efb775f9df914e0f4835872","Sam Pullara"
"938","compile","compile","19","Body Change, Exceptions Change, MultiChange","be more explicit when start of line gets reset
","d02f2b490fed0c6bc32c4fc59beb332d71dfe334","Sam Pullara"
"939","compile","compile","19","Exceptions Change","switch from absolute from the root paths to relative paths for partials
","05261793042ff8e03c5973ce103af84cf13a5402","Sam Pullara"
"940","compile","compile","19","Body Change, Exceptions Change, MultiChange","Issue70: add end of file detection for open tags with a test
","949f81e1044f3281299b997213465b918fc7e739","Sam Pullara"
"941","compile","compile","19","Body Change, Exceptions Change, MultiChange","#74: throw a proper exception for an empty mustache tag
","b23aad7b02307622b045ee6a6c8fd9555f379b8a","Sam Pullara"
"942","compile","compile","19","Exceptions Change","converted to use regex rather than straight text. pretty good.
","a3f54f78a518f0c6cbebe701104251d11ce9a8dd","Sam Pullara"
"943","compile","compile","19","Body Change, Exceptions Change, MultiChange","copy carriage returns to the output
","ae6c109ebb28653e99a15079aa53cf65696268b1","Sam Pullara"
"944","compile","compile","19","Exceptions Change","comments can appear in template text
","15bd7077d67e580f3990b70fa8a85fa7a8405777","Sam Pullara"
"945","compile","compile","19","Exceptions Change","Merge pull request #131 from sbuettner/master

Preserve template whitespaces when rendering pragmas.","a5b7ec1c847da7b983aabc5f6abec4a592d777da","Sam Pullara"
"946","compile","compile","19","Modifier Change, Body Change, Exceptions Change, MultiChange","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"947","compile","compile","19","Body Change, Exceptions Change, MultiChange","Add TemplateContext to every MustacheException where we know it and make it available to the catcher
","710c46783c8f45568062c4bc7b0310345d600213","Sam Pullara"
"948","compile","compile","19","Exceptions Change","Better error message for invalid deliimiters.
","88718bc1699655a9a503cefc773f352b4cb1163c","Sam Pullara"
"949","compile","compile","19","Body Change, Exceptions Change, MultiChange","add support for more esoteric changes of mustache delimiters
","d8936b4c331e7d40eaad6e5d65b30cff0beb06e7","Sam Pullara"
"950","compile","compile","19","Body Change, Exceptions Change, MultiChange","ISSUE-201: added a new operator for use with template inheritance. {{?name}}{{/name}} will only be included in the template if the ""name"" section is overridden.
","a1197f7789b24d694f16dad29f917e9be43f0dc2","Sam Pullara"
"951","compile","compile","19","Exceptions Change","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"952","compile","compile","19","Exceptions Change","making whitespace parsing backwards compatible
","31eeebc6f75f102b4646a64ff3229c52ad732764","David Poetzsch-Heffter"
"953","compile","compile","19","Exceptions Change","ISSUE-264: introduction of a SafeMustacheFactory for use when using untrusted templates
","7d9c23713412d7e60847c9771a6745f3e0bafd78","Sam Pullara"
"954","compile","compile","19","Body Change, Exceptions Change, MultiChange","ISSUE-266: add a character location for an improperly closed variable
","a05a3ff3cf8675d1225f2e6b7cff2988ee80ad69","Sam Pullara"
"955","compile","compile","19","Exceptions Change","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"956","write","write","1","Body Change, Introduced, MultiChange","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"957","setAllowChangingDelimeters","setAllowChangingDelimeters","2","File Renamed","change to a proactive init method
","f0330c6cfaf396cfcfa1442a1afb51bf5aaddff2","Sam Pullara"
"958","setAllowChangingDelimeters","setAllowChangingDelimeters","2","Body Change, Introduced, MultiChange","ISSUE-264: introduction of a SafeMustacheFactory for use when using untrusted templates
","7d9c23713412d7e60847c9771a6745f3e0bafd78","Sam Pullara"
"959","TemplateContext","TemplateContext","1","Body Change","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"960","startOfLine","startOfLine","1","Body Change","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"961","equals","equals","2","Body Change","fix some nits
","03e00916f3e1a6e40993a276677f4817423ceb29","Sam Pullara"
"962","equals","equals","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"963","toString","toString","2","File Renamed","remove even more whitespace by telling the filtering method when the text is at the start of the line
","f9322251903d5d969b7d6b1e272955a722adf65d","Sam Pullara"
"964","toString","toString","2","Body Change, Introduced, MultiChange","add much more detailed exceptions and tostring methods for easier debugging of hard to debug issues like guardexceptions
","e7a6bf2962be14643284eac86ab698e472bd4143","Sam Pullara"
"965","getReader","getReader","1","Introduced","convert local docs to javadocs
","d091140a86a3ed499111e2fbfe4a9ff7528bf851","Sam Pullara"
"966","compile","compile","1","-","fix an issue with extensions
","9d0a82f730635dff7237a5052fd11716d0046299","Sam Pullara"
"967","get","get","2","-","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"968","get","get","2","Modifier Change","cleaning up some nits
","dc87817c642ea98d3ceefafbf82ad6c1fc50f749","Sam Pullara"
"969","find","find","2","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"970","find","find","2","Body Change","cleanup some code analysis complaints
","baa3841a5b62a561b9ac41c6193121c7f365ba7a","Sam Pullara"
"971","falsey","falsey","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"972","iterate","iterate","1","Body Change, Introduced, MultiChange","compiles
","4fa7447894244f9b9a67d9cfa10c7c3d5ece8117","Sam Pullara"
"973","mustache","mustache","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"974","iterable","iterable","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"975","notIterable","notIterable","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"976","partial","partial","1","Introduced","fixed whitespace handling for partials
","1ac58cd432b69eb63d92ad642594644f8e3b8bca","David Poetzsch-Heffter"
"977","dynamicPartial","dynamicPartial","1","Introduced","add support for dynamicnames
","702606fc9d1def3144fa47116d53b07237cf38a9","Sam Pullara"
"978","value","value","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"979","write","write","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"980","pragma","pragma","1","Introduced","start pragma support
","a78f2081d62ae9bb369fcee790e6b8a42b939e1e","Sam Pullara"
"981","eof","eof","1","Introduced","update eof() callback with templatecontext
","674ed1acd823c5274c2fd5534717450196182e4e","Sam Pullara"
"982","extend","extend","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"983","name","name","1","-","Merge branch 'master' of github.com:spullara/mustache.java
","397c661c2fd88593fd28d98a8cb346a365da16e1","Sam Pullara"
"984","checkName","checkName","1","Introduced","ISSUE-201: added a new operator for use with template inheritance. {{?name}}{{/name}} will only be included in the template if the ""name"" section is overridden.
","a1197f7789b24d694f16dad29f917e9be43f0dc2","Sam Pullara"
"985","comment","comment","1","Introduced","comments can appear in template text
","15bd7077d67e580f3990b70fa8a85fa7a8405777","Sam Pullara"
"986","ClasspathResolver","ClasspathResolver","1","Body Change","Merge pull request #170 from samfraser/bug_169-partials-in-JARs-not-found

BUG-169: fixed an issue with partials referenced using absolute path …","8ac71b72a840a7debc676f1093b399030e25f8aa","Sam Pullara"
"987","getReader","getReader","4","Body Change","Merge pull request #170 from samfraser/bug_169-partials-in-JARs-not-found

BUG-169: fixed an issue with partials referenced using absolute path …","8ac71b72a840a7debc676f1093b399030e25f8aa","Sam Pullara"
"988","getReader","getReader","4","Body Change","Merge branch 'master' of github.com:spullara/mustache.java
","339161fc2bae5c148881428e00ffb9b74aa0b959","Sam Pullara"
"989","getReader","getReader","4","Body Change","ISSUE-268: If the resulting template is a directory we should fail
","efb67c494c79bc0a5da169fe78d2c19a884cd435","Sam Pullara"
"990","getReader","getReader","4","Body Change","Fix ClasspathResolver for non-context class loader case

Broke the case where the context class loader can't actually find the resource and the fallback has to be used. Also added a test case to catch this specific regression.
","adb82eb650ea36c20850cf822d41ce764c0a65b0","Ian Levesque"
"991","concatResourceRootAndResourceName","concatResourceRootAndResourceName","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","4ef7f21e493eec1423e660824df97e2f21f52118","Sam Pullara"
"992","concatResourceRootAndResourceName","concatResourceRootAndResourceName","2","Body Change, Introduced, MultiChange","Merge pull request #170 from samfraser/bug_169-partials-in-JARs-not-found

BUG-169: fixed an issue with partials referenced using absolute path …","8ac71b72a840a7debc676f1093b399030e25f8aa","Sam Pullara"
"993","DefaultResolver","DefaultResolver","1","Body Change","#134 Add URIResolver
","ceed0adc89aeb990fa219db0772471bd7868d2e7","Vladislav Bauer"
"994","DefaultResolver","DefaultResolver","1","Body Change","#134 Add URIResolver
","ceed0adc89aeb990fa219db0772471bd7868d2e7","Vladislav Bauer"
"995","DefaultResolver","DefaultResolver","1","Body Change","#134 Add URIResolver
","ceed0adc89aeb990fa219db0772471bd7868d2e7","Vladislav Bauer"
"996","getReader","getReader","1","Body Change","#134 Add URIResolver
","ceed0adc89aeb990fa219db0772471bd7868d2e7","Vladislav Bauer"
"997","FileSystemResolver","FileSystemResolver","1","Body Change","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"998","FileSystemResolver","FileSystemResolver","1","Body Change, Introduced, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"999","getReader","getReader","1","Body Change","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"1000","getReaderFromPath","getReaderFromPath","2","File Renamed","Merge branch 'master' of github.com:spullara/mustache.java
","4ef7f21e493eec1423e660824df97e2f21f52118","Sam Pullara"
"1001","getReaderFromPath","getReaderFromPath","2","Body Change, Introduced, MultiChange","Add FileSystemResolver(Path) constructor

Fixes #223

Make FileSystemResolver(Path) use NIO APIs underneath and support
non-default file systems, but otherwise make its observable behavior
identical to FileSystemResolver(path.toFile()), including corner cases.

Add tests demonstrating current behavior of ClasspathResolver and
FileSystemResolver, even when that behavior is questionable.
","7fa780b347ca01f4985f17e6cb542031df2717ff","Michael Hixson"
"1002","execute","execute","1","Body Change","combine the catch clauses
","0a2d532e9f3f71dc15097b70e7e6b1def0dedb10","Sam Pullara"
