"Index","Method Name","Method Signature","Commit Count","Change Types","Commit Message","Commit ID","Commit Author"
"1","testSerialization","testSerialization","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"2","testSerialization","testSerialization","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"3","testSerialization","testSerialization","3","Body Change","Suppress warning
","5accc40c77e51cb15eb87a480e679a5012d1423e","Dave Syer"
"4","james","james","1","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"5","helen","helen","1","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"6","setup","setup","5","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"7","setup","setup","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"8","setup","setup","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"9","setup","setup","5","Body Change","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"10","setup","setup","5","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"11","testShowVetListHtml","testShowVetListHtml","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"12","testShowVetListHtml","testShowVetListHtml","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"13","testShowVetListHtml","testShowVetListHtml","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"14","testShowVetListHtml","testShowVetListHtml","4","Body Change, Exceptions Change, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"15","testShowResourcesVetList","testShowResourcesVetList","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"16","testShowResourcesVetList","testShowResourcesVetList","4","Body Change, Exceptions Change, MultiChange","Merge pull request #326 from aidenchiavatti:json-fix

* pr/326:
  Polish ""Fix content negotiation for /vets""
  Fix content negotiation for /vets
","44060315cc53e3351276e2354a98adde917451ba","Stephane Nicoll"
"17","testShowResourcesVetList","testShowResourcesVetList","4","Body Change, Exceptions Change, MultiChange","Upgrade to Spring Boot 2.2.0.RELEASE
","ce7c3f93deb53798e3842e583fecea3514e90f1e","Stephane Nicoll"
"18","testShowResourcesVetList","testShowResourcesVetList","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"19","setup","setup","6","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"20","setup","setup","6","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"21","setup","setup","6","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"22","setup","setup","6","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"23","setup","setup","6","Body Change","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"24","setup","setup","6","Body Change","Use the java.util List.of() instead of the AssetJ Lists class

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","d7cc02f3d7dc1205128f40dc433b2dfcfa1fca51","Antoine Rey"
"25","testInitCreationForm","testInitCreationForm","3","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"26","testInitCreationForm","testInitCreationForm","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"27","testInitCreationForm","testInitCreationForm","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"28","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"29","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Exceptions Change","Fix broken tests
","23f65ba7d0101adeb32f36fd8f634549ee3d6e40","Oscar Utbult"
"30","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"31","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"32","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"33","testProcessCreationFormWithBlankName","testProcessCreationFormWithBlankName","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"34","testProcessCreationFormWithDuplicateName","testProcessCreationFormWithDuplicateName","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"35","testProcessCreationFormWithMissingPetType","testProcessCreationFormWithMissingPetType","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"36","testProcessCreationFormWithInvalidBirthDate","testProcessCreationFormWithInvalidBirthDate","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"37","testInitUpdateForm","testInitUpdateForm","3","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"38","testInitUpdateForm","testInitUpdateForm","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"39","testInitUpdateForm","testInitUpdateForm","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"40","testProcessUpdateFormSuccess","testProcessUpdateFormSuccess","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"41","testProcessUpdateFormSuccess","testProcessUpdateFormSuccess","5","Exceptions Change","Fix broken tests
","23f65ba7d0101adeb32f36fd8f634549ee3d6e40","Oscar Utbult"
"42","testProcessUpdateFormSuccess","testProcessUpdateFormSuccess","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"43","testProcessUpdateFormSuccess","testProcessUpdateFormSuccess","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"44","testProcessUpdateFormSuccess","testProcessUpdateFormSuccess","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"45","testProcessUpdateFormWithInvalidBirthDate","testProcessUpdateFormWithInvalidBirthDate","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"46","testProcessUpdateFormWithBlankName","testProcessUpdateFormWithBlankName","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"47","george","george","1","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"48","setup","setup","11","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"49","setup","setup","11","Body Change","Make Pet.visits @Transient

In that way the Pet and Visit entities are more modular, and we
don't have to rely on a bit of a hack which is that Hibernate
happily maps Pet to its ID in the entity generation (but fails
if you do it at compile time).
","7ef045dac8effb41d5f24c1e1011869b59a3d0a2","Dave Syer"
"50","setup","setup","11","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"51","setup","setup","11","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"52","setup","setup","11","Body Change","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"53","setup","setup","11","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"54","setup","setup","11","Body Change","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"55","setup","setup","11","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"56","setup","setup","11","Body Change","test: remove duplicate assertion
","8f799263e00b9fcf0d8ca78d864d8b46ce3b8aea","Anyul Rivas"
"57","setup","setup","11","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"58","setup","setup","11","Body Change","Use the java.util List.of() instead of the AssetJ Lists class

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","d7cc02f3d7dc1205128f40dc433b2dfcfa1fca51","Antoine Rey"
"59","testInitCreationForm","testInitCreationForm","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"60","testInitCreationForm","testInitCreationForm","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"61","testInitCreationForm","testInitCreationForm","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"62","testInitCreationForm","testInitCreationForm","4","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"63","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"64","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"65","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"66","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"67","testProcessCreationFormSuccess","testProcessCreationFormSuccess","5","Exceptions Change","Add user friendly error message
","405cdc635b10770a2f5ed70be973cdf905cfa736","Pedro Chevallier"
"68","testProcessCreationFormHasErrors","testProcessCreationFormHasErrors","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"69","testProcessCreationFormHasErrors","testProcessCreationFormHasErrors","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"70","testProcessCreationFormHasErrors","testProcessCreationFormHasErrors","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"71","testProcessCreationFormHasErrors","testProcessCreationFormHasErrors","4","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"72","testInitFindForm","testInitFindForm","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"73","testInitFindForm","testInitFindForm","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"74","testInitFindForm","testInitFindForm","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"75","testInitFindForm","testInitFindForm","4","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"76","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"77","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"78","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"79","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Tidy up test
","e11a594ec210344faa4931f29678ed164bb546ac","Dave Syer"
"80","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"81","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","test: remove duplicate assertion
","8f799263e00b9fcf0d8ca78d864d8b46ce3b8aea","Anyul Rivas"
"82","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"83","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"84","testProcessFindFormSuccess","testProcessFindFormSuccess","9","Body Change, Exceptions Change, MultiChange","Use the java.util List.of() instead of the AssetJ Lists class

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","d7cc02f3d7dc1205128f40dc433b2dfcfa1fca51","Antoine Rey"
"85","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"86","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"87","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"88","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"89","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Tidy up test
","e11a594ec210344faa4931f29678ed164bb546ac","Dave Syer"
"90","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"91","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","test: remove duplicate assertion
","8f799263e00b9fcf0d8ca78d864d8b46ce3b8aea","Anyul Rivas"
"92","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"93","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"94","testProcessFindFormByLastName","testProcessFindFormByLastName","10","Body Change, Exceptions Change, MultiChange","Use the java.util List.of() instead of the AssetJ Lists class

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","d7cc02f3d7dc1205128f40dc433b2dfcfa1fca51","Antoine Rey"
"95","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"96","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"97","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"98","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"99","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","Tidy up test
","e11a594ec210344faa4931f29678ed164bb546ac","Dave Syer"
"100","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","test: remove duplicate assertion
","8f799263e00b9fcf0d8ca78d864d8b46ce3b8aea","Anyul Rivas"
"101","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"102","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"103","testProcessFindFormNoOwnersFound","testProcessFindFormNoOwnersFound","9","Body Change, Exceptions Change, MultiChange","Use the java.util List.of() instead of the AssetJ Lists class

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","d7cc02f3d7dc1205128f40dc433b2dfcfa1fca51","Antoine Rey"
"104","testInitUpdateOwnerForm","testInitUpdateOwnerForm","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"105","testInitUpdateOwnerForm","testInitUpdateOwnerForm","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"106","testInitUpdateOwnerForm","testInitUpdateOwnerForm","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"107","testInitUpdateOwnerForm","testInitUpdateOwnerForm","4","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"108","testProcessUpdateOwnerFormSuccess","testProcessUpdateOwnerFormSuccess","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"109","testProcessUpdateOwnerFormSuccess","testProcessUpdateOwnerFormSuccess","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"110","testProcessUpdateOwnerFormSuccess","testProcessUpdateOwnerFormSuccess","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"111","testProcessUpdateOwnerFormSuccess","testProcessUpdateOwnerFormSuccess","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"112","testProcessUpdateOwnerFormSuccess","testProcessUpdateOwnerFormSuccess","5","Exceptions Change","Add user friendly error message
","405cdc635b10770a2f5ed70be973cdf905cfa736","Pedro Chevallier"
"113","testProcessUpdateOwnerFormUnchangedSuccess","testProcessUpdateOwnerFormUnchangedSuccess","1","Body Change, Exceptions Change, Introduced, MultiChange","Use open session in view and populate model attrs

Open session in view was switched off accidentally a while ago. Also
the mapping changes recently meant that the changes to @Valid model
attributes were not being propagated correctly.

Fixes #946 and #947
","d381fb658cb435a04e2271ca85bd3e8627a5e7e4","Dave Syer"
"114","testProcessUpdateOwnerFormHasErrors","testProcessUpdateOwnerFormHasErrors","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"115","testProcessUpdateOwnerFormHasErrors","testProcessUpdateOwnerFormHasErrors","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"116","testProcessUpdateOwnerFormHasErrors","testProcessUpdateOwnerFormHasErrors","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"117","testProcessUpdateOwnerFormHasErrors","testProcessUpdateOwnerFormHasErrors","5","Body Change, Exceptions Change, MultiChange","Use open session in view and populate model attrs

Open session in view was switched off accidentally a while ago. Also
the mapping changes recently meant that the changes to @Valid model
attributes were not being propagated correctly.

Fixes #946 and #947
","d381fb658cb435a04e2271ca85bd3e8627a5e7e4","Dave Syer"
"118","testProcessUpdateOwnerFormHasErrors","testProcessUpdateOwnerFormHasErrors","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"119","testShowOwner","testShowOwner","8","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"120","testShowOwner","testShowOwner","8","Body Change, Exceptions Change, MultiChange","Make Pet.visits @Transient

In that way the Pet and Visit entities are more modular, and we
don't have to rely on a bit of a hack which is that Hibernate
happily maps Pet to its ID in the entity generation (but fails
if you do it at compile time).
","7ef045dac8effb41d5f24c1e1011869b59a3d0a2","Dave Syer"
"121","testShowOwner","testShowOwner","8","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"122","testShowOwner","testShowOwner","8","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"123","testShowOwner","testShowOwner","8","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"124","testShowOwner","testShowOwner","8","Exceptions Change","test: simplify code
","dea3432a6da7f3c7ac46826b255f75dbf68e1c88","Anyul Rivas"
"125","testShowOwner","testShowOwner","8","Body Change, Exceptions Change, MultiChange","test: improve test readability
","19f5268ac1556233f6e09aadc10fda86e9e3f1a0","Anyul Rivas"
"126","testShowOwner","testShowOwner","8","Body Change, Exceptions Change, MultiChange","test: remove duplicate assertion
","8f799263e00b9fcf0d8ca78d864d8b46ce3b8aea","Anyul Rivas"
"127","testProcessUpdateOwnerFormWithIdMismatch","testProcessUpdateOwnerFormWithIdMismatch","2","Body Change, Exceptions Change, Introduced, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"128","testProcessUpdateOwnerFormWithIdMismatch","testProcessUpdateOwnerFormWithIdMismatch","2","Body Change, Exceptions Change, MultiChange","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"129","init","init","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"130","init","init","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"131","init","init","3","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"132","testInitNewVisitForm","testInitNewVisitForm","4","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"133","testInitNewVisitForm","testInitNewVisitForm","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"134","testInitNewVisitForm","testInitNewVisitForm","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"135","testInitNewVisitForm","testInitNewVisitForm","4","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"136","testProcessNewVisitFormSuccess","testProcessNewVisitFormSuccess","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"137","testProcessNewVisitFormSuccess","testProcessNewVisitFormSuccess","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"138","testProcessNewVisitFormSuccess","testProcessNewVisitFormSuccess","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"139","testProcessNewVisitFormSuccess","testProcessNewVisitFormSuccess","5","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"140","testProcessNewVisitFormSuccess","testProcessNewVisitFormSuccess","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"141","testProcessNewVisitFormHasErrors","testProcessNewVisitFormHasErrors","5","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"142","testProcessNewVisitFormHasErrors","testProcessNewVisitFormHasErrors","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"143","testProcessNewVisitFormHasErrors","testProcessNewVisitFormHasErrors","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"144","testProcessNewVisitFormHasErrors","testProcessNewVisitFormHasErrors","5","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"145","testProcessNewVisitFormHasErrors","testProcessNewVisitFormHasErrors","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"146","setup","setup","1","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"147","testPrint","testPrint","2","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"148","testPrint","testPrint","2","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"149","shouldParse","shouldParse","3","Exceptions Change","Tidy up compiler warnings
","cf352663366ecabc4ed9aad125e7373e040bca45","Dave Syer"
"150","shouldParse","shouldParse","3","Body Change, Exceptions Change, MultiChange","Merge pull request #418 from wengertj

* pr/418:
  Polish ""Cleanup tests by using more idiomatic assertj assertions""
  Cleanup tests by using more idiomatic assertj assertions

Closes gh-418
","bebe9e50ed5d85c11768d2250461ae87ef8ecd44","Stephane Nicoll"
"151","shouldParse","shouldParse","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"152","shouldThrowParseException","shouldThrowParseException","5","Exceptions Change","Tidy up compiler warnings
","cf352663366ecabc4ed9aad125e7373e040bca45","Dave Syer"
"153","shouldThrowParseException","shouldThrowParseException","5","Body Change, Exceptions Change, MultiChange","Merge pull request #418 from wengertj

* pr/418:
  Polish ""Cleanup tests by using more idiomatic assertj assertions""
  Cleanup tests by using more idiomatic assertj assertions

Closes gh-418
","bebe9e50ed5d85c11768d2250461ae87ef8ecd44","Stephane Nicoll"
"154","shouldThrowParseException","shouldThrowParseException","5","Modifier Change, Body Change, Exceptions Change, MultiChange","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"155","shouldThrowParseException","shouldThrowParseException","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"156","shouldThrowParseException","shouldThrowParseException","5","Exceptions Change","Minor code changes are the following:
-Removed unused variables from few files.
-Added null assertions in some tests.
-Removed unnecessary throw exceptions.
","ae1bb8228c66ae885eb8022ced9bf2d6ad839e92","Mousa Al Bateh"
"157","makePetTypes","makePetTypes","1","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"158","testTriggerException","testTriggerException","9","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"159","testTriggerException","testTriggerException","9","Body Change","Configure caching properly to avoid error in vets
","80269539e27062592f4c28b0d5498f38fbc2d578","Dave Syer"
"160","testTriggerException","testTriggerException","9","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"161","testTriggerException","testTriggerException","9","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"162","testTriggerException","testTriggerException","9","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"163","testTriggerException","testTriggerException","9","Body Change, Exceptions Change, MultiChange","Update CrashControllerTests.java
","2249cbcb6f5da03a041ef1a6a20987889d6b8771","xerx593"
"164","testTriggerException","testTriggerException","9","Body Change, Exceptions Change, MultiChange","test: rewrite assertion using AssertJ for consistency
","4f78b07490d008e6fdfaf78d480b9f61567c4680","Anyul Rivas"
"165","testTriggerException","testTriggerException","9","Body Change, Exceptions Change, MultiChange","test: refactor using AssertJ assertions
","7055f0c6a6c99d89ba89be112969bb34f72212bb","Anyul Rivas"
"166","testTriggerException","testTriggerException","9","Body Change","Formatting
","c0bc91742605c3cd686ce86426cf9961f0a2c180","Dave Syer"
"167","testFindAll","testFindAll","2","Body Change, Exceptions Change, Introduced, MultiChange","Fixed Typo In PetClinicIntegrationTests
","60ddc68387816baeb0315c33670e622deff4079a","Nouman Rahman"
"168","testFindAll","testFindAll","2","Exceptions Change","Minor code changes are the following:
-Removed unused variables from few files.
-Added null assertions in some tests.
-Removed unnecessary throw exceptions.
","ae1bb8228c66ae885eb8022ced9bf2d6ad839e92","Mousa Al Bateh"
"169","testOwnerDetails","testOwnerDetails","1","Body Change, Introduced, MultiChange","Fixed Typo In PetClinicIntegrationTests
","60ddc68387816baeb0315c33670e622deff4079a","Nouman Rahman"
"170","main","main","1","File Renamed","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"171","createValidator","createValidator","3","File Renamed","removing unneeded attribute name
","754e27c00196b7652904c942b7eb7c9e23b88dd8","Mic"
"172","createValidator","createValidator","3","Body Change, Introduced, MultiChange","#18 Simplified Validator test so it doesn't have to use Spring config anymore
","a2a12c4d524624eec7196c745ac5dd3470867275","Mic"
"173","createValidator","createValidator","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"174","shouldNotValidateWhenFirstNameEmpty","shouldNotValidateWhenFirstNameEmpty","4","Body Change, Introduced, MultiChange","test methods:used should/shouldNot
","5c9ab6bd06b033afce6c2b5af1e251ad0836300b","michaelisvy"
"175","shouldNotValidateWhenFirstNameEmpty","shouldNotValidateWhenFirstNameEmpty","4","Body Change","Tidy up compiler warnings
","cf352663366ecabc4ed9aad125e7373e040bca45","Dave Syer"
"176","shouldNotValidateWhenFirstNameEmpty","shouldNotValidateWhenFirstNameEmpty","4","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"177","shouldNotValidateWhenFirstNameEmpty","shouldNotValidateWhenFirstNameEmpty","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"178","testFindAll","testFindAll","2","Exceptions Change","Docker-based integration tests don't work in native for now
","b4efc934b2cfcdb3ca6ca2fde0adb40b99dbb19d","Dave Syer"
"179","testFindAll","testFindAll","2","Exceptions Change","Minor code changes are the following:
-Removed unused variables from few files.
-Added null assertions in some tests.
-Removed unnecessary throw exceptions.
","ae1bb8228c66ae885eb8022ced9bf2d6ad839e92","Mousa Al Bateh"
"180","getById","getById","2","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"181","getById","getById","2","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"182","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"183","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"184","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change","Merge pull request #418 from wengertj

* pr/418:
  Polish ""Cleanup tests by using more idiomatic assertj assertions""
  Cleanup tests by using more idiomatic assertj assertions

Closes gh-418
","bebe9e50ed5d85c11768d2250461ae87ef8ecd44","Stephane Nicoll"
"185","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"186","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"187","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"188","shouldFindOwnersByLastName","shouldFindOwnersByLastName","7","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"189","shouldFindSingleOwnerWithPet","shouldFindSingleOwnerWithPet","5","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"190","shouldFindSingleOwnerWithPet","shouldFindSingleOwnerWithPet","5","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"191","shouldFindSingleOwnerWithPet","shouldFindSingleOwnerWithPet","5","Body Change","Merge pull request #418 from wengertj

* pr/418:
  Polish ""Cleanup tests by using more idiomatic assertj assertions""
  Cleanup tests by using more idiomatic assertj assertions

Closes gh-418
","bebe9e50ed5d85c11768d2250461ae87ef8ecd44","Stephane Nicoll"
"192","shouldFindSingleOwnerWithPet","shouldFindSingleOwnerWithPet","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"193","shouldFindSingleOwnerWithPet","shouldFindSingleOwnerWithPet","5","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"194","shouldInsertOwner","shouldInsertOwner","6","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"195","shouldInsertOwner","shouldInsertOwner","6","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"196","shouldInsertOwner","shouldInsertOwner","6","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"197","shouldInsertOwner","shouldInsertOwner","6","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"198","shouldInsertOwner","shouldInsertOwner","6","Body Change","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"199","shouldInsertOwner","shouldInsertOwner","6","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"200","shouldUpdateOwner","shouldUpdateOwner","5","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"201","shouldUpdateOwner","shouldUpdateOwner","5","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"202","shouldUpdateOwner","shouldUpdateOwner","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"203","shouldUpdateOwner","shouldUpdateOwner","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"204","shouldUpdateOwner","shouldUpdateOwner","5","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"205","shouldFindAllPetTypes","shouldFindAllPetTypes","5","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"206","shouldFindAllPetTypes","shouldFindAllPetTypes","5","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"207","shouldFindAllPetTypes","shouldFindAllPetTypes","5","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"208","shouldFindAllPetTypes","shouldFindAllPetTypes","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"209","shouldFindAllPetTypes","shouldFindAllPetTypes","5","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"210","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"211","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"212","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"213","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"214","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"215","shouldInsertPetIntoDatabaseAndGenerateId","shouldInsertPetIntoDatabaseAndGenerateId","6","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"216","shouldUpdatePetName","shouldUpdatePetName","7","Body Change, Exceptions Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"217","shouldUpdatePetName","shouldUpdatePetName","7","Body Change, Exceptions Change, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"218","shouldUpdatePetName","shouldUpdatePetName","7","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"219","shouldUpdatePetName","shouldUpdatePetName","7","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"220","shouldUpdatePetName","shouldUpdatePetName","7","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"221","shouldUpdatePetName","shouldUpdatePetName","7","Exceptions Change","test: rewrite assertions using AssertJ better readability
","9ed20bf999bd830a92e5ee7e2d014c37ded9159a","Anyul Rivas"
"222","shouldUpdatePetName","shouldUpdatePetName","7","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"223","shouldFindVets","shouldFindVets","3","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"224","shouldFindVets","shouldFindVets","3","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"225","shouldFindVets","shouldFindVets","3","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"226","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"227","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"228","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"229","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"230","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"231","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"232","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","Additional tweaks in aggregate model.

Introduced Owner.addVisit(…) to avoid that state transition to live in controller code.

Slightly polished some assertions in ClinicServiceTests.
","472575378c7b377862cc01b713cab38eaa8f9c64","Oliver Drotbohm"
"233","shouldAddNewVisitForPet","shouldAddNewVisitForPet","8","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"234","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change, Exceptions Change, Introduced, MultiChange","Move util class to test code
","095b1a35d92fada0ecc37d4bae2bcefb39abf32a","Dave Syer"
"235","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change, Exceptions Change, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"236","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change, Exceptions Change, MultiChange","Merge pull request #418 from wengertj

* pr/418:
  Polish ""Cleanup tests by using more idiomatic assertj assertions""
  Cleanup tests by using more idiomatic assertj assertions

Closes gh-418
","bebe9e50ed5d85c11768d2250461ae87ef8ecd44","Stephane Nicoll"
"237","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Modifier Change","Merge pull request #360 from arey

* pr/360:
  Polish ""Migrate tests to JUnit 5""
  Migrate tests to JUnit 5

Closes gh-360
","6e4c31c6817782a05ea13edc2cfc036c6686b7ff","Stephane Nicoll"
"238","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"239","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change, Exceptions Change, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"240","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Exceptions Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"241","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change, Exceptions Change, MultiChange","Additional tweaks in aggregate model.

Introduced Owner.addVisit(…) to avoid that state transition to live in controller code.

Slightly polished some assertions in ClinicServiceTests.
","472575378c7b377862cc01b713cab38eaa8f9c64","Oliver Drotbohm"
"242","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Exceptions Change","test: rewrite assertions using AssertJ better readability
","9ed20bf999bd830a92e5ee7e2d014c37ded9159a","Anyul Rivas"
"243","shouldFindVisitsByPetId","shouldFindVisitsByPetId","10","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"244","main","main","1","Body Change","Make sure MySQL test app works
","aa2273e955c3a5e9d17201c0f81ad3d25b602a08","Dave Syer"
"245","main","main","1","Body Change","Fix occasional stale volume in postgres tests

Fixes #1522
","3b90fac983bafce882f6f5ef2bffdb7a177a3590","Dave Syer"
"246","printProperties","printProperties","1","Body Change","Minor code changes are the following:
-Removed unused variables from few files.
-Added null assertions in some tests.
-Removed unnecessary throw exceptions.
","ae1bb8228c66ae885eb8022ced9bf2d6ad839e92","Mousa Al Bateh"
"247","getSpecialtiesInternal","getSpecialtiesInternal","2","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"248","getSpecialtiesInternal","getSpecialtiesInternal","2","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"249","getSpecialties","getSpecialties","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"250","getSpecialties","getSpecialties","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"251","getSpecialties","getSpecialties","3","Body Change","Use Java Streams to sort the Specialty objects by their name

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","73d73609b5dafb11e070f19150f66a4fc679d314","Antoine Rey"
"252","getNrOfSpecialties","getNrOfSpecialties","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"253","addSpecialty","addSpecialty","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"254","VetController","VetController","1","Body Change, Introduced, MultiChange","<fix>: rename the DI variable name in constructor.
","214a8fb87f5fb7124010b31f04f9591b9a0aa9e4","YiXuan Ding"
"255","showVetList","showVetList","1","Body Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"256","addPaginationModel","addPaginationModel","1","Body Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"257","findPaginated","findPaginated","1","Body Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"258","showResourcesVetList","showResourcesVetList","4","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"259","showResourcesVetList","showResourcesVetList","4","Modifier Change","Replace @RequestMapping by their corresponding shortcut @GetMapping and @PostMapping
","4be8ba2c4349616e1da9d8232250e20da2daec47","Antoine Rey"
"260","showResourcesVetList","showResourcesVetList","4","Modifier Change, Body Change, MultiChange","Merge pull request #326 from aidenchiavatti:json-fix

* pr/326:
  Polish ""Fix content negotiation for /vets""
  Fix content negotiation for /vets
","44060315cc53e3351276e2354a98adde917451ba","Stephane Nicoll"
"261","showResourcesVetList","showResourcesVetList","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"262","findAll","findAll","2","Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"263","findAll","findAll","2","Modifier Change","Use default cache configuration
","6da37c30d3ba6fe915b6e61324a188b81cb2fb42","Dave Syer"
"264","findAll","findAll","1","Exceptions Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"265","getVetList","getVetList","2","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"266","getVetList","getVetList","2","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"267","setBirthDate","setBirthDate","1","Body Change, Introduced, MultiChange","Merge pull request #328 from arey:feature/LocalDate

* pr/328:
  Polish ""Use Java 8 LocalDate instead of java.util.Date""
  Use Java 8 LocalDate instead of java.util.Date
","bcce2676db53b7d1b76425ce9dc0706a2b51af36","Stephane Nicoll"
"268","getBirthDate","getBirthDate","2","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"269","getBirthDate","getBirthDate","2","Return Type Change","Merge pull request #328 from arey:feature/LocalDate

* pr/328:
  Polish ""Use Java 8 LocalDate instead of java.util.Date""
  Use Java 8 LocalDate instead of java.util.Date
","bcce2676db53b7d1b76425ce9dc0706a2b51af36","Stephane Nicoll"
"270","getType","getType","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"271","setType","setType","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"272","getVisits","getVisits","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"273","getVisits","getVisits","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"274","getVisits","getVisits","3","Return Type Change, Body Change, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"275","addVisit","addVisit","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"276","addVisit","addVisit","3","Body Change","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"277","addVisit","addVisit","3","Body Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"278","VisitController","VisitController","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"279","setAllowedFields","setAllowedFields","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"280","loadPetWithVisit","loadPetWithVisit","5","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"281","loadPetWithVisit","loadPetWithVisit","5","Body Change","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"282","loadPetWithVisit","loadPetWithVisit","5","Body Change","Move Visit to owner package (it's aggregate root)
","423a3375434eb90d1631a47849fd5e56700585f7","Dave Syer"
"283","loadPetWithVisit","loadPetWithVisit","5","Body Change","Readability improvements & Use stream instread of forEach (#1055)

* Use stream instead of forEach on find PetType logic of parse()

* Improve controllers readability

* Rollback stream instead of for-each","f48227aea0e4056e1b9105494ea2f6360f3975f3","Kiyeon Cho"
"284","loadPetWithVisit","loadPetWithVisit","5","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"285","initNewVisitForm","initNewVisitForm","1","Body Change, Introduced, MultiChange","Readability improvements & Use stream instread of forEach (#1055)

* Use stream instead of forEach on find PetType logic of parse()

* Improve controllers readability

* Rollback stream instead of for-each","f48227aea0e4056e1b9105494ea2f6360f3975f3","Kiyeon Cho"
"286","processNewVisitForm","processNewVisitForm","2","Body Change, Introduced, MultiChange","Confirmation messages displayed for 'Add, edit, or update' actions
","2fe96130c083f5ed26832040468d58a7383ab79f","shadab-stack"
"287","processNewVisitForm","processNewVisitForm","2","Body Change","Fix formatting
","836d111e9950f6abedb4fef7b4a94941b8dfedd8","Dave Syer"
"288","PetTypeFormatter","PetTypeFormatter","2","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"289","PetTypeFormatter","PetTypeFormatter","2","Modifier Change","Remove unnecessary @Autowired annotation from the PetTypeFormatter

Signed-off-by: Antoine Rey <antoine.rey@free.fr>
","7f1af268ec0fc13d27f19b8d3fb58f0011fd1509","Antoine Rey"
"290","print","print","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"291","parse","parse","3","Body Change, Exceptions Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"292","parse","parse","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"293","parse","parse","3","Body Change, Exceptions Change, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"294","findPetTypes","findPetTypes","2","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"295","findPetTypes","findPetTypes","2","Modifier Change","Add new test file
-<modify>: remove `@Transactional`.
-<add>: create unit-test file related to `PetValidator`.
-<refactor>: move pet objects initialization to `@BeforeEach` setup.
","40a41375e6b55d5cf246c483d63fa9380ccb9ff1","YiXuan Ding"
"296","findByLastNameStartingWith","findByLastNameStartingWith","1","Body Change, Introduced, MultiChange","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"297","findById","findById","1","Body Change, Exceptions Change, Introduced, MultiChange","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"298","findAll","findAll","2","Introduced","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"299","findAll","findAll","2","Modifier Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"300","OwnerController","OwnerController","1","Body Change, Introduced, MultiChange","<fix>: rename the DI variable name in constructor.
","214a8fb87f5fb7124010b31f04f9591b9a0aa9e4","YiXuan Ding"
"301","setAllowedFields","setAllowedFields","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"302","findOwner","findOwner","2","Body Change, Introduced, MultiChange","Use open session in view and populate model attrs

Open session in view was switched off accidentally a while ago. Also
the mapping changes recently meant that the changes to @Valid model
attributes were not being propagated correctly.

Fixes #946 and #947
","d381fb658cb435a04e2271ca85bd3e8627a5e7e4","Dave Syer"
"303","findOwner","findOwner","2","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"304","initCreationForm","initCreationForm","1","Body Change, Introduced, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"305","processCreationForm","processCreationForm","1","Body Change, Introduced, MultiChange","Confirmation messages displayed for 'Add, edit, or update' actions
","2fe96130c083f5ed26832040468d58a7383ab79f","shadab-stack"
"306","initFindForm","initFindForm","1","Body Change, Introduced, MultiChange","Remove unnecessary model attribute
","b298af380dfe37cbab19fe8328e89adb0cdded1a","Dave Syer"
"307","processFindForm","processFindForm","2","Body Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"308","processFindForm","processFindForm","2","Body Change","985 remove lastName method param from OwnerController
","80d03f3cefadd64488fb60ce5bcd9f6ab3d44000","kvaithin"
"309","addPaginationModel","addPaginationModel","2","Body Change, Introduced, MultiChange","985 remove lastName method param from OwnerController
","80d03f3cefadd64488fb60ce5bcd9f6ab3d44000","kvaithin"
"310","addPaginationModel","addPaginationModel","2","Body Change","Remove unnecessary model change
","d11d6e8e40c18b9a74511781210745fbee109685","Dave Syer"
"311","findPaginatedForOwnersLastName","findPaginatedForOwnersLastName","1","Body Change, Introduced, MultiChange","Add pagination for owners and vets lists in HTML

Fixes #91
","8ad9c05f74a96f46dd4211766fbb0bc78d48f94d","simrin051"
"312","initUpdateOwnerForm","initUpdateOwnerForm","1","Body Change, Introduced, MultiChange","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"313","processUpdateOwnerForm","processUpdateOwnerForm","3","Body Change, Introduced, MultiChange","Confirmation messages displayed for 'Add, edit, or update' actions
","2fe96130c083f5ed26832040468d58a7383ab79f","shadab-stack"
"314","processUpdateOwnerForm","processUpdateOwnerForm","3","Body Change","Fix formatting
","836d111e9950f6abedb4fef7b4a94941b8dfedd8","Dave Syer"
"315","processUpdateOwnerForm","processUpdateOwnerForm","3","Body Change","Refactor:
- <optimize>: delete logic `add owner to model` because of the comment `@ModelAttribute(""owner"")`.
- <fix>: add logical judgment in ordet to avoid `owner` from `form` and `ownerId` from `url` mismatch.
","14af47d4e5b4e12e0ca28e5c2c8437528546c25d","YiXuan Ding"
"316","showOwner","showOwner","7","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"317","showOwner","showOwner","7","Modifier Change","Replace @RequestMapping by their corresponding shortcut @GetMapping and @PostMapping
","4be8ba2c4349616e1da9d8232250e20da2daec47","Antoine Rey"
"318","showOwner","showOwner","7","Body Change","Make Pet.visits @Transient

In that way the Pet and Visit entities are more modular, and we
don't have to rely on a bit of a hack which is that Hibernate
happily maps Pet to its ID in the entity generation (but fails
if you do it at compile time).
","7ef045dac8effb41d5f24c1e1011869b59a3d0a2","Dave Syer"
"319","showOwner","showOwner","7","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"320","showOwner","showOwner","7","Modifier Change, Body Change, MultiChange","Fix lazy loading issue in owner details
","e765e3ffe16002beb30c6a5c6f06409816259bf4","Dave Syer"
"321","showOwner","showOwner","7","Modifier Change, Body Change, MultiChange","Alternative approach with eager fetch
","bdcaa85460a9598ac991793bd522ff9aa00a4a9b","Dave Syer"
"322","showOwner","showOwner","7","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"323","PetController","PetController","1","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"324","populatePetTypes","populatePetTypes","2","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"325","populatePetTypes","populatePetTypes","2","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"326","findOwner","findOwner","4","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"327","findOwner","findOwner","4","Body Change","handling Null pointer Exception on OwnerID
","0a529015bc7933bcd724a5ae92605f0e9ee0e3f7","bijomutta"
"328","findOwner","findOwner","4","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"329","findOwner","findOwner","4","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"330","findPet","findPet","5","Body Change, Introduced, MultiChange","Use open session in view and populate model attrs

Open session in view was switched off accidentally a while ago. Also
the mapping changes recently meant that the changes to @Valid model
attributes were not being propagated correctly.

Fixes #946 and #947
","d381fb658cb435a04e2271ca85bd3e8627a5e7e4","Dave Syer"
"331","findPet","findPet","5","Body Change","handling Null pointer Exception on OwnerID
","0a529015bc7933bcd724a5ae92605f0e9ee0e3f7","bijomutta"
"332","findPet","findPet","5","Body Change","Small optimization for empty petId
","cdd925d664e678f6d1a2f768ff02e374a5e55fef","Dave Syer"
"333","findPet","findPet","5","Body Change","refactor `OwnerRepository`:
-<replace>: use `JpaRepository` to replace `Repository` in `OwnerRepository` class.
-<remove1>: remove `save()` method. JpaRepository provides it by default.
-<remove2>: remove `@Query` because in `Owner` class, the `@OneToMany` annotiation achieved `fetch` in query.
-<refactor1>: use `Optional<Owner>` to recieve the result from `findById()`, and if is null, throw `IllegalArugmentExpection`.
-<refactor2>: achieve the assert to judge return value in tests.
-<add>: add name to `@author` tag.
","668629d5bda4e6a87fb43425c7eb95ffa19b47c7","YiXuan Ding"
"334","findPet","findPet","5","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"335","initOwnerBinder","initOwnerBinder","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"336","initPetBinder","initPetBinder","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"337","initCreationForm","initCreationForm","4","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"338","initCreationForm","initCreationForm","4","Modifier Change","Replace @RequestMapping by their corresponding shortcut @GetMapping and @PostMapping
","4be8ba2c4349616e1da9d8232250e20da2daec47","Antoine Rey"
"339","initCreationForm","initCreationForm","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"340","initCreationForm","initCreationForm","4","Body Change","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"341","processCreationForm","processCreationForm","1","Body Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"342","initUpdateForm","initUpdateForm","1","Body Change, Introduced, MultiChange","Refactor code logic
<refactor>: remove useless logic cod.
<refactor>: detele useless annotation which is provided by Jpa.
<refactor>: refactor implement of `findByLastName`, use Jpa to simplify query.
","1cad4124b7685d3e66ac376f44874a3d5319cb06","YiXuan Ding"
"343","processUpdateForm","processUpdateForm","2","Body Change, Introduced, MultiChange","Refactor the logic and add unit test
-<add>: add `@NotBlank` validation to pet's name.
-<refactor>: delete useless code and add unit test to check duplicate Pet name validation logic.
-<modify>: add `Id` to pet in unit test.
-<refactor>: classify unit test.

<modify>: adjust code format.
","50866def72014963764577e1f737cdd6b9f9f691","YiXuan Ding"
"344","processUpdateForm","processUpdateForm","2","Body Change","Fix pet update functionality
- Fixed issue where editing a pet's type or name wasn't persisting
- Updated processUpdateForm to modify existing pet instead of
  adding new one
- Added proper handling of existing pet update

Fixes #1752
","2aa53f929d32b0d41e0fe0391b8385eabe9a3432","VishantOwO"
"345","updatePetDetails","updatePetDetails","1","Body Change, Introduced, MultiChange","Fix pet update functionality
- Fixed issue where editing a pet's type or name wasn't persisting
- Updated processUpdateForm to modify existing pet instead of
  adding new one
- Added proper handling of existing pet update

Fixes #1752
","2aa53f929d32b0d41e0fe0391b8385eabe9a3432","VishantOwO"
"346","validate","validate","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"347","validate","validate","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"348","validate","validate","3","Body Change","Change validation annotations and whitespace handling
","4926e292700f79260a58d6faf55b232ce075b70e","evga7"
"349","supports","supports","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"350","getAddress","getAddress","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"351","setAddress","setAddress","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"352","getCity","getCity","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"353","setCity","setCity","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"354","getTelephone","getTelephone","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"355","setTelephone","setTelephone","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"356","getPets","getPets","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"357","getPets","getPets","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"358","getPets","getPets","3","Body Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"359","addPet","addPet","3","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"360","addPet","addPet","3","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"361","addPet","addPet","3","Body Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"362","getPet","getPet","1","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"363","getPet","getPet","2","Body Change, Introduced, MultiChange","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"364","getPet","getPet","2","Body Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"365","getPet","getPet","6","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"366","getPet","getPet","6","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"367","getPet","getPet","6","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"368","getPet","getPet","6","Body Change","Remove manual id management in child entities

This is reverting a workaround for a Hibernate ""feature"". There's
no need for the child entities (Pet and Visit) to know about their
parent (foreign key). Hibernate can manage that just fine with a
@JoinColumn. But it needs a nullable foreign key column in the
DB schema. That's the downside. The upside is much less code in
Java.
","b559077f14b6f1e197228ff6cb7395514f09326f","Dave Syer"
"369","getPet","getPet","6","Body Change","Adding pet name validation on edit Pet
","3a6127557dc05d9a6462fcea67d0f329e7286245","bijomutta"
"370","getPet","getPet","6","Body Change","Fix harmless bugs.
- <fix>: use `equals` to replace `==` to compare `Integer` variable.
- <delete>: remove redundant 'toLowerCase()' method and simplify pet lookup logic.
- <update>: rewrite method `getName()` comments.
","fdc40a7048843bc900d5a1b56a60350dffc93c9b","YiXuan Ding"
"371","toString","toString","5","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"372","toString","toString","5","Body Change","Tidy up compiler warnings
","cf352663366ecabc4ed9aad125e7373e040bca45","Dave Syer"
"373","toString","toString","5","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"374","toString","toString","5","Body Change","Remove PetRepository and use Owner as aggregate

Owner is really the aggregate root in DDD terms and there is no
need to directly access the Pet entity.
","c9534421c8d4f29b7d2d78636bb42f58b7cdebaa","Dave Syer"
"375","toString","toString","5","Body Change","Updating dependencies and docker containers to current versions

See #1157
","0962ed7e8f5df8cf287c79975f9894f3189aebab","Patrick Baumgartner"
"376","addVisit","addVisit","2","Body Change, Introduced, MultiChange","Additional tweaks in aggregate model.

Introduced Owner.addVisit(…) to avoid that state transition to live in controller code.

Slightly polished some assertions in ClinicServiceTests.
","472575378c7b377862cc01b713cab38eaa8f9c64","Oliver Drotbohm"
"377","addVisit","addVisit","2","Return Type Change, Body Change, MultiChange","Owner class addVisit() method return type void
","8a5a14e88a07665c97638dd81a31fb4e6c336194","jcw1031"
"378","Visit","Visit","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"379","getDate","getDate","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"380","setDate","setDate","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"381","getDescription","getDescription","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"382","setDescription","setDescription","1","Body Change, Introduced, MultiChange","Also remove VisitRepository

Rely on Hibernate to do lazy loading on visits.
","58fe6298f83615fbcc14d55b47d09c947d9a958d","Dave Syer"
"383","registerHints","registerHints","3","Body Change","Resource bundle not included in native image
","cc4667122d4f06946f809389762a1a39b3dd1a41","Duncan Casteleyn"
"384","registerHints","registerHints","3","Body Change","Tidy up native tests
","c231682c2d64aecb58cbcea6da59e3ac19b8c291","Dave Syer"
"385","registerHints","registerHints","3","Body Change","Versionless webjars (again)

Spring Boot 3.4 supports the webjars-locator-lite which in turn
supports native images, so we are back to versionless URLs for
webjars assets in templates.
","91f55a4f7134409a832435de2c6df231102d5898","Dave Syer"
"386","welcome","welcome","1","Modifier Change","Replace @RequestMapping by their corresponding shortcut @GetMapping and @PostMapping
","4be8ba2c4349616e1da9d8232250e20da2daec47","Antoine Rey"
"387","petclinicCacheConfigurationCustomizer","petclinicCacheConfigurationCustomizer","1","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"388","triggerException","triggerException","4","Body Change, Introduced, MultiChange","Modularize and migrate to aggregate-oriented domain

Vet, Owner, Visit. The Visit ""aggregate"" is a little artificial
but it demonstrates a useful point about not holding on to
references of ""parent"" (reference data) objects, i.e. the Visit has
an Integer petId, instead of a Pet field. In principle this app is
now almost ready to migrate to multiple services if anyone wanted
to do that.
","83ff9a50e378529993f4f772457dd24791b46438","Dave Syer"
"389","triggerException","triggerException","4","Modifier Change","Replace @RequestMapping by their corresponding shortcut @GetMapping and @PostMapping
","4be8ba2c4349616e1da9d8232250e20da2daec47","Antoine Rey"
"390","triggerException","triggerException","4","Body Change","Tidy up compiler warnings
","cf352663366ecabc4ed9aad125e7373e040bca45","Dave Syer"
"391","triggerException","triggerException","4","Body Change","Apply spring-format plugin
","4e1f87407d80cdb4a5a293de89d62034fdcbb847","Dave Syer"
"392","getId","getId","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"393","setId","setId","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"394","isNew","isNew","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"395","getFirstName","getFirstName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"396","setFirstName","setFirstName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"397","getLastName","getLastName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"398","setLastName","setLastName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"399","getName","getName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"400","setName","setName","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"401","toString","toString","1","Body Change, Introduced, MultiChange","moved all model classes to a dedicated 'model' package
","23314c5428dcf4920bce09151c7d5000f1421017","Mic"
"402","main","main","2","Exceptions Change","#164 Disable cache configuration for unit tests
","4da41dbbdacc4dc349b3627231147a977cc91004","Antoine Rey"
"403","main","main","2","Exceptions Change","Polish
","5270246eb587ca4837889aefb37f26b8019aca4f","Stephane Nicoll"
