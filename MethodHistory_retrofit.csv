"Index","Method Name","Method Signature","Commit Count","Change Types","Commit Message","Commit ID","Commit Author"
"1","bodyExecute","@Test
  public void bodyExecute() throws IOException","0","-","-","-","-"
"2","bodyEnqueue","@Test
  public void bodyEnqueue() throws IOException","0","-","-","-","-"
"3","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"4","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"5","responseExecute","@Test
  public void responseExecute() throws IOException","0","-","-","-","-"
"6","responseEnqueue","@Test
  public void responseEnqueue()","0","-","-","-","-"
"7","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"8","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"9","onResponse","@Override
            public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"10","onFailure","@Override
            public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"11","enqueueNullThrows","@Test
  public void enqueueNullThrows()","0","-","-","-","-"
"12","responseCancelExecute","@Test
  public void responseCancelExecute()","0","-","-","-","-"
"13","responseCancelEnqueue","@Test
  public void responseCancelEnqueue() throws IOException","0","-","-","-","-"
"14","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"15","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"16","failureExecute","@Test
  public void failureExecute()","0","-","-","-","-"
"17","failureExecuteCheckedException","@Test
  public void failureExecuteCheckedException()","0","-","-","-","-"
"18","failureEnqueue","@Test
  public void failureEnqueue()","0","-","-","-","-"
"19","onResponse","@Override
          public void onResponse(Call<Object> call, Response<Object> response)","0","-","-","-","-"
"20","onFailure","@Override
          public void onFailure(Call<Object> call, Throwable t)","0","-","-","-","-"
"21","cloneHasOwnState","@Test
  public void cloneHasOwnState() throws IOException","0","-","-","-","-"
"22","deferredReturnExecute","@Test
  public void deferredReturnExecute() throws IOException","0","-","-","-","-"
"23","call","@Override
              public Call<Integer> call() throws Exception","0","-","-","-","-"
"24","deferredReturnEnqueue","@Test
  public void deferredReturnEnqueue()","0","-","-","-","-"
"25","call","@Override
              public Call<Integer> call() throws Exception","0","-","-","-","-"
"26","onResponse","@Override
          public void onResponse(Call<Integer> call, Response<Integer> response)","0","-","-","-","-"
"27","onFailure","@Override
          public void onFailure(Call<Integer> call, Throwable t)","0","-","-","-","-"
"28","deferredThrowExecute","@Test
  public void deferredThrowExecute() throws IOException","0","-","-","-","-"
"29","deferredThrowEnqueue","@Test
  public void deferredThrowEnqueue()","0","-","-","-","-"
"30","onResponse","@Override
          public void onResponse(Call<Object> call, Response<Object> response)","0","-","-","-","-"
"31","onFailure","@Override
          public void onFailure(Call<Object> call, Throwable t)","0","-","-","-","-"
"32","deferredThrowUncheckedExceptionEnqueue","@Test
  public void deferredThrowUncheckedExceptionEnqueue()","0","-","-","-","-"
"33","onResponse","@Override
              public void onResponse(Call<Object> call, Response<Object> response)","0","-","-","-","-"
"34","onFailure","@Override
              public void onFailure(Call<Object> call, Throwable t)","0","-","-","-","-"
"35","retrofitNullThrows","@Test
  public void retrofitNullThrows()","0","-","-","-","-"
"36","retrofitPropagated","@Test
  public void retrofitPropagated()","0","-","-","-","-"
"37","networkBehaviorNullThrows","@Test
  public void networkBehaviorNullThrows()","0","-","-","-","-"
"38","networkBehaviorDefault","@Test
  public void networkBehaviorDefault()","0","-","-","-","-"
"39","networkBehaviorPropagated","@Test
  public void networkBehaviorPropagated()","0","-","-","-","-"
"40","backgroundExecutorNullThrows","@Test
  public void backgroundExecutorNullThrows()","0","-","-","-","-"
"41","backgroundExecutorDefault","@Test
  public void backgroundExecutorDefault()","0","-","-","-","-"
"42","backgroundExecutorPropagated","@Test
  public void backgroundExecutorPropagated()","0","-","-","-","-"
"43","defaultThrowable","@Test
  public void defaultThrowable()","0","-","-","-","-"
"44","delayMustBePositive","@Test
  public void delayMustBePositive()","0","-","-","-","-"
"45","varianceRestrictsRange","@Test
  public void varianceRestrictsRange()","0","-","-","-","-"
"46","failureRestrictsRange","@Test
  public void failureRestrictsRange()","0","-","-","-","-"
"47","failureExceptionIsNotNull","@Test
  public void failureExceptionIsNotNull()","0","-","-","-","-"
"48","errorRestrictsRange","@Test
  public void errorRestrictsRange()","0","-","-","-","-"
"49","errorFactoryIsNotNull","@Test
  public void errorFactoryIsNotNull()","0","-","-","-","-"
"50","errorFactoryCannotReturnNull","@Test
  public void errorFactoryCannotReturnNull()","0","-","-","-","-"
"51","errorFactoryCannotThrow","@Test
  public void errorFactoryCannotThrow()","0","-","-","-","-"
"52","errorFactoryCannotReturnSuccess","@Test
  public void errorFactoryCannotReturnSuccess()","0","-","-","-","-"
"53","errorFactoryCalledEachTime","@Test
  public void errorFactoryCalledEachTime()","0","-","-","-","-"
"54","call","@Override
          public Response<?> call() throws Exception","0","-","-","-","-"
"55","failurePercentageIsAccurate","@Test
  public void failurePercentageIsAccurate()","0","-","-","-","-"
"56","errorPercentageIsAccurate","@Test
  public void errorPercentageIsAccurate()","0","-","-","-","-"
"57","delayVarianceIsAccurate","@Test
  public void delayVarianceIsAccurate()","0","-","-","-","-"
"58","response","Call<String> response();","0","-","-","-","-"
"59","failure","Call<String> failure();","0","-","-","-","-"
"60","setUp","@Before
  public void setUp()","0","-","-","-","-"
"61","response","@Override
          public Call<String> response()","0","-","-","-","-"
"62","failure","@Override
          public Call<String> failure()","0","-","-","-","-"
"63","syncFailureThrowsAfterDelay","@Test
  public void syncFailureThrowsAfterDelay()","0","-","-","-","-"
"64","asyncFailureTriggersFailureAfterDelay","@Test
  public void asyncFailureTriggersFailureAfterDelay() throws InterruptedException","0","-","-","-","-"
"65","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"66","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"67","syncSuccessReturnsAfterDelay","@Test
  public void syncSuccessReturnsAfterDelay() throws IOException","0","-","-","-","-"
"68","asyncSuccessCalledAfterDelay","@Test
  public void asyncSuccessCalledAfterDelay() throws InterruptedException, IOException","0","-","-","-","-"
"69","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"70","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"71","syncFailureThrownAfterDelay","@Test
  public void syncFailureThrownAfterDelay()","0","-","-","-","-"
"72","asyncFailureCalledAfterDelay","@Test
  public void asyncFailureCalledAfterDelay() throws InterruptedException","0","-","-","-","-"
"73","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"74","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"75","syncCanBeCanceled","@Test
  public void syncCanBeCanceled() throws IOException","0","-","-","-","-"
"76","asyncCanBeCanceled","@Test
  public void asyncCanBeCanceled() throws InterruptedException","0","-","-","-","-"
"77","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"78","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"79","syncCanceledBeforeStart","@Test
  public void syncCanceledBeforeStart() throws IOException","0","-","-","-","-"
"80","asyncCanBeCanceledBeforeStart","@Test
  public void asyncCanBeCanceledBeforeStart() throws InterruptedException","0","-","-","-","-"
"81","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"82","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"83","defer","/**
   * Invokes","0","-","-","-","-"
"84","response","public static <T> Call<T> response(@Nullable T successValue)","0","-","-","-","-"
"85","response","public static <T> Call<T> response(Response<T> response)","0","-","-","-","-"
"86","failure","/** Creates a failed","0","-","-","-","-"
"87","failure","/**
   * Creates a failed","0","-","-","-","-"
"88","Calls","private Calls()","0","-","-","-","-"
"89","FakeCall","FakeCall(@Nullable Response<T> response, @Nullable Throwable error)","0","-","-","-","-"
"90","execute","@Override
    public Response<T> execute() throws IOException","0","-","-","-","-"
"91","sneakyThrow","@SuppressWarnings(","0","-","-","-","-"
"92","enqueue","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
    @Override
    public void enqueue(Callback<T> callback)","0","-","-","-","-"
"93","isExecuted","@Override
    public boolean isExecuted()","0","-","-","-","-"
"94","cancel","@Override
    public void cancel()","0","-","-","-","-"
"95","isCanceled","@Override
    public boolean isCanceled()","0","-","-","-","-"
"96","clone","@Override
    public Call<T> clone()","0","-","-","-","-"
"97","request","@Override
    public Request request()","0","-","-","-","-"
"98","timeout","@Override
    public Timeout timeout()","0","-","-","-","-"
"99","DeferredCall","DeferredCall(Callable<Call<T>> callable)","0","-","-","-","-"
"100","getDelegate","private synchronized Call<T> getDelegate()","0","-","-","-","-"
"101","execute","@Override
    public Response<T> execute() throws IOException","0","-","-","-","-"
"102","enqueue","@Override
    public void enqueue(Callback<T> callback)","0","-","-","-","-"
"103","isExecuted","@Override
    public boolean isExecuted()","0","-","-","-","-"
"104","cancel","@Override
    public void cancel()","0","-","-","-","-"
"105","isCanceled","@Override
    public boolean isCanceled()","0","-","-","-","-"
"106","clone","@Override
    public Call<T> clone()","0","-","-","-","-"
"107","request","@Override
    public Request request()","0","-","-","-","-"
"108","timeout","@Override
    public Timeout timeout()","0","-","-","-","-"
"109","BehaviorDelegate","BehaviorDelegate(
      Retrofit retrofit, NetworkBehavior behavior, ExecutorService executor, Class<T> service)","0","-","-","-","-"
"110","returningResponse","public T returningResponse(@Nullable Object response)","0","-","-","-","-"
"111","returning","@SuppressWarnings(""unchecked"") // Single-interface proxy creation guarded by parameter safety.
  public <R> T returning(Call<R> call)","0","-","-","-","-"
"112","parseServiceMethodAdapterInfo","/**
   * Computes the adapter type of the method for lookup via","0","-","-","-","-"
"113","CallParameterizedTypeImpl","CallParameterizedTypeImpl(Type bodyType)","0","-","-","-","-"
"114","getActualTypeArguments","@Override
    public Type[] getActualTypeArguments()","0","-","-","-","-"
"115","getRawType","@Override
    public Type getRawType()","0","-","-","-","-"
"116","getOwnerType","@Override
    public @Nullable Type getOwnerType()","0","-","-","-","-"
"117","ServiceMethodAdapterInfo","ServiceMethodAdapterInfo(boolean isSuspend, boolean wantsResponse, Type responseType)","0","-","-","-","-"
"118","MockRetrofitIOException","MockRetrofitIOException()","0","-","-","-","-"
"119","BehaviorCall","BehaviorCall(NetworkBehavior behavior, ExecutorService backgroundExecutor, Call<T> delegate)","0","-","-","-","-"
"120","clone","@SuppressWarnings(""CloneDoesntCallSuperClone"") // We are a final type & this saves clearing state.
  @Override
  public Call<T> clone()","0","-","-","-","-"
"121","request","@Override
  public Request request()","0","-","-","-","-"
"122","timeout","@Override
  public Timeout timeout()","0","-","-","-","-"
"123","enqueue","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  @Override
  public void enqueue(final Callback<T> callback)","0","-","-","-","-"
"124","delaySleep","boolean delaySleep()","0","-","-","-","-"
"125","run","@Override
              public void run()","0","-","-","-","-"
"126","onResponse","@Override
                        public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"127","onFailure","@Override
                        public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"128","isExecuted","@Override
  public synchronized boolean isExecuted()","0","-","-","-","-"
"129","execute","@Override
  public Response<T> execute() throws IOException","0","-","-","-","-"
"130","onResponse","@Override
          public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"131","onFailure","@Override
          public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"132","cancel","@Override
  public void cancel()","0","-","-","-","-"
"133","isCanceled","@Override
  public boolean isCanceled()","0","-","-","-","-"
"134","MockRetrofit","MockRetrofit(Retrofit retrofit, NetworkBehavior behavior, ExecutorService executor)","0","-","-","-","-"
"135","retrofit","public Retrofit retrofit()","0","-","-","-","-"
"136","networkBehavior","public NetworkBehavior networkBehavior()","0","-","-","-","-"
"137","backgroundExecutor","public Executor backgroundExecutor()","0","-","-","-","-"
"138","create","@SuppressWarnings(""unchecked"") // Single-interface proxy creation guarded by parameter safety.
  public <T> BehaviorDelegate<T> create(Class<T> service)","0","-","-","-","-"
"139","Builder","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
    public Builder(Retrofit retrofit)","0","-","-","-","-"
"140","networkBehavior","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
    public Builder networkBehavior(NetworkBehavior behavior)","0","-","-","-","-"
"141","backgroundExecutor","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
    public Builder backgroundExecutor(ExecutorService executor)","0","-","-","-","-"
"142","build","public MockRetrofit build()","0","-","-","-","-"
"143","create","/** Create an instance with default behavior. */
  public static NetworkBehavior create()","0","-","-","-","-"
"144","create","/**
   * Create an instance with default behavior which uses","0","-","-","-","-"
"145","NetworkBehavior","private NetworkBehavior(Random random)","0","-","-","-","-"
"146","setDelay","/** Set the network round trip delay. */
  public void setDelay(long amount, TimeUnit unit)","0","-","-","-","-"
"147","delay","/** The network round trip delay. */
  public long delay(TimeUnit unit)","0","-","-","-","-"
"148","setVariancePercent","/** Set the plus-or-minus variance percentage of the network round trip delay. */
  public void setVariancePercent(int variancePercent)","0","-","-","-","-"
"149","variancePercent","/** The plus-or-minus variance percentage of the network round trip delay. */
  public int variancePercent()","0","-","-","-","-"
"150","setFailurePercent","/** Set the percentage of calls to","0","-","-","-","-"
"151","failurePercent","/** The percentage of calls to","0","-","-","-","-"
"152","setFailureException","/**
   * Set the exception to be used when a failure is triggered.
   *
   * <p>It is a best practice to remove the stack trace from","0","-","-","-","-"
"153","failureException","/** The exception to be used when a failure is triggered. */
  public Throwable failureException()","0","-","-","-","-"
"154","errorPercent","/** The percentage of calls to","0","-","-","-","-"
"155","setErrorPercent","/** Set the percentage of calls to","0","-","-","-","-"
"156","setErrorFactory","/**
   * Set the error response factory to be used when an error is triggered. This factory may only
   * return responses for which","0","-","-","-","-"
"157","createErrorResponse","/** The HTTP error to be used when an error is triggered. */
  public Response<?> createErrorResponse()","0","-","-","-","-"
"158","calculateIsFailure","/**
   * Randomly determine whether this call should result in a network failure in accordance with
   * configured behavior. When true,","0","-","-","-","-"
"159","calculateIsError","/**
   * Randomly determine whether this call should result in an HTTP error in accordance with
   * configured behavior. When true,","0","-","-","-","-"
"160","calculateDelay","/**
   * Get the delay that should be used for delaying a response in accordance with configured
   * behavior.
   */
  public long calculateDelay(TimeUnit unit)","0","-","-","-","-"
"161","checkPercentageValidity","private static void checkPercentageValidity(int percentage, String message)","0","-","-","-","-"
"162","main","public static void main(String[] args)","0","-","-","-","-"
"163","RoboVmPlatformTest","private RoboVmPlatformTest()","0","-","-","-","-"
"164","body","@GET(""/"")
    Object body(Continuation<? super Response> response);","0","-","-","-","-"
"165","raw","@Test
  public void raw()","0","-","-","-","-"
"166","empty","@GET(""/"")
    Call<Unit> empty();","0","-","-","-","-"
"167","head","@HEAD(""/"")
    Call<Unit> head();","0","-","-","-","-"
"168","unitGet","@Test
  public void unitGet() throws IOException","0","-","-","-","-"
"169","unitHead","@Test
  public void unitHead() throws IOException","0","-","-","-","-"
"170","headUnit","@Test
  public void headUnit()","0","-","-","-","-"
"171","method","@HEAD(""/foo/bar/"")
      Call<Unit> method()","0","-","-","-","-"
"172","getBody","@GET(""/"") Call<ResponseBody> getBody();","0","-","-","-","-"
"173","responseBody","@Test public void responseBody() throws IOException","0","-","-","-","-"
"174","user","@GET(""/"")
    Call<String> user(@Query(""name"") String name);","0","-","-","-","-"
"175","user","default Call<String> user()","0","-","-","-","-"
"176","failsOnApi24And25","@Test
  @SdkSuppress(minSdkVersion = 24, maxSdkVersion = 25)
  public void failsOnApi24And25()","0","-","-","-","-"
"177","doesNotFailOnApi26","@Test
  @SdkSuppress(minSdkVersion = 26)
  public void doesNotFailOnApi26() throws IOException, InterruptedException","0","-","-","-","-"
"178","endpoint","@GET(""/"")
    CompletableFuture<String> endpoint();","0","-","-","-","-"
"179","setUp","@Before
  public void setUp()","0","-","-","-","-"
"180","completableFutureApi24","@Test
  public void completableFutureApi24() throws Exception","0","-","-","-","-"
"181","method","@GET
    Call<ResponseBody> method(@Url Uri url);","0","-","-","-","-"
"182","setUp","@Before
  public void setUp()","0","-","-","-","-"
"183","getWithAndroidUriUrl","@Test
  public void getWithAndroidUriUrl() throws IOException, InterruptedException","0","-","-","-","-"
"184","getWithAndroidUriUrlAbsolute","@Test
  public void getWithAndroidUriUrlAbsolute() throws IOException, InterruptedException","0","-","-","-","-"
"185","optional","@GET(""/"")
    Call<Optional<Object>> optional();","0","-","-","-","-"
"186","object","@GET(""/"")
    Call<Object> object();","0","-","-","-","-"
"187","setUp","@Before
  public void setUp()","0","-","-","-","-"
"188","optionalApi24","@Test
  public void optionalApi24() throws IOException","0","-","-","-","-"
"189","onlyMatchesOptional","@Test
  public void onlyMatchesOptional() throws IOException","0","-","-","-","-"
"190","disallowed","@GET(""/"")
    Call<String> disallowed();","0","-","-","-","-"
"191","disallowed","@POST(""/"")
    Call<ResponseBody> disallowed(@Body String body);","0","-","-","-","-"
"192","badType1","@GET(""/"")
    Call<retrofit2.Response> badType1();","0","-","-","-","-"
"193","badType2","@GET(""/"")
    Call<okhttp3.Response> badType2();","0","-","-","-","-"
"194","getResponseBody","@GET(""/"")
    Call<ResponseBody> getResponseBody();","0","-","-","-","-"
"195","getResponseBodySkippedExecutor","@SkipCallbackExecutor
    @GET(""/"")
    Call<ResponseBody> getResponseBodySkippedExecutor();","0","-","-","-","-"
"196","getVoid","@GET(""/"")
    Call<Void> getVoid();","0","-","-","-","-"
"197","postRequestBody","@POST(""/"")
    Call<ResponseBody> postRequestBody(@Body RequestBody body);","0","-","-","-","-"
"198","queryString","@GET(""/"")
    Call<ResponseBody> queryString(@Query(""foo"") String foo);","0","-","-","-","-"
"199","queryObject","@GET(""/"")
    Call<ResponseBody> queryObject(@Query(""foo"") Object foo);","0","-","-","-","-"
"200","method","@GET(""/"")
    Future<String> method();","0","-","-","-","-"
"201","get","@GET(""/"")
    String get();","0","-","-","-","-"
"202","typeVariable","@GET(""/"")
    <T> Call<T> typeVariable();","0","-","-","-","-"
"203","typeVariableUpperBound","@GET(""/"")
    <T extends ResponseBody> Call<T> typeVariableUpperBound();","0","-","-","-","-"
"204","crazy","@GET(""/"")
    <T> Call<List<Map<String, Set<T[]>>>> crazy();","0","-","-","-","-"
"205","wildcard","@GET(""/"")
    Call<?> wildcard();","0","-","-","-","-"
"206","wildcardUpperBound","@GET(""/"")
    Call<? extends ResponseBody> wildcardUpperBound();","0","-","-","-","-"
"207","typeVariable","@POST(""/"")
    <T> Call<ResponseBody> typeVariable(@Body T body);","0","-","-","-","-"
"208","typeVariableUpperBound","@POST(""/"")
    <T extends RequestBody> Call<ResponseBody> typeVariableUpperBound(@Body T body);","0","-","-","-","-"
"209","crazy","@POST(""/"")
    <T> Call<ResponseBody> crazy(@Body List<Map<String, Set<T[]>>> body);","0","-","-","-","-"
"210","wildcard","@POST(""/"")
    Call<ResponseBody> wildcard(@Body List<?> body);","0","-","-","-","-"
"211","wildcardUpperBound","@POST(""/"")
    Call<ResponseBody> wildcardUpperBound(@Body List<? extends RequestBody> body);","0","-","-","-","-"
"212","nope","@GET(""/"")
    void nope();","0","-","-","-","-"
"213","method","@GET(""/"")
    @Foo
    Call<String> method();","0","-","-","-","-"
"214","bodyParameter","@POST(""/"")
    Call<ResponseBody> bodyParameter(@Foo @Body String param);","0","-","-","-","-"
"215","queryParameter","@GET(""/"")
    Call<ResponseBody> queryParameter(@Foo @Query(""foo"") Object foo);","0","-","-","-","-"
"216","method","@GET(""/"")
    Call<String> method(@Query(""i"") AtomicInteger value);","0","-","-","-","-"
"217","objectMethodsStillWork","@SuppressWarnings(","0","-","-","-","-"
"218","interfaceWithTypeParameterThrows","@Test
  public void interfaceWithTypeParameterThrows()","0","-","-","-","-"
"219","interfaceWithExtend","@Test
  public void interfaceWithExtend() throws IOException","0","-","-","-","-"
"220","interfaceWithExtendWithTypeParameterThrows","@Test
  public void interfaceWithExtendWithTypeParameterThrows()","0","-","-","-","-"
"221","cloneSharesStatefulInstances","@Test
  public void cloneSharesStatefulInstances()","0","-","-","-","-"
"222","get","@Nullable
          @Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"223","get","@Nullable
          @Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"224","builtInConvertersAbsentInCloneBuilder","@Test
  public void builtInConvertersAbsentInCloneBuilder()","0","-","-","-","-"
"225","responseTypeCannotBeRetrofitResponse","@Test
  public void responseTypeCannotBeRetrofitResponse()","0","-","-","-","-"
"226","responseTypeCannotBeOkHttpResponse","@Test
  public void responseTypeCannotBeOkHttpResponse()","0","-","-","-","-"
"227","voidReturnTypeNotAllowed","@Test
  public void voidReturnTypeNotAllowed()","0","-","-","-","-"
"228","validateEagerlyDisabledByDefault","@Test
  public void validateEagerlyDisabledByDefault()","0","-","-","-","-"
"229","validateEagerlyDisabledByUser","@Test
  public void validateEagerlyDisabledByUser()","0","-","-","-","-"
"230","validateEagerlyFailsAtCreation","@Test
  public void validateEagerlyFailsAtCreation()","0","-","-","-","-"
"231","callCallAdapterAddedByDefault","@Test
  public void callCallAdapterAddedByDefault()","0","-","-","-","-"
"232","callCallCustomAdapter","@Test
  public void callCallCustomAdapter()","0","-","-","-","-"
"233","get","@Override
      public @Nullable CallAdapter<?, ?> get(
          final Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"234","responseType","@Override
          public Type responseType()","0","-","-","-","-"
"235","adapt","@Override
          public Call<Object> adapt(Call<Object> call)","0","-","-","-","-"
"236","customCallAdapter","@Test
  public void customCallAdapter()","0","-","-","-","-"
"237","get","@Override
      public @Nullable CallAdapter<Object, String> get(
          Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"238","responseType","@Override
          public Type responseType()","0","-","-","-","-"
"239","adapt","@Override
          public String adapt(Call<Object> call)","0","-","-","-","-"
"240","methodAnnotationsPassedToCallAdapter","@Test
  public void methodAnnotationsPassedToCallAdapter()","0","-","-","-","-"
"241","get","@Override
      public @Nullable CallAdapter<?, ?> get(
          Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"242","customCallAdapterMissingThrows","@Test
  public void customCallAdapterMissingThrows()","0","-","-","-","-"
"243","methodAnnotationsPassedToResponseBodyConverter","@Test
  public void methodAnnotationsPassedToResponseBodyConverter()","0","-","-","-","-"
"244","responseBodyConverter","@Override
      public Converter<ResponseBody, ?> responseBodyConverter(
          Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"245","methodAndParameterAnnotationsPassedToRequestBodyConverter","@Test
  public void methodAndParameterAnnotationsPassedToRequestBodyConverter()","0","-","-","-","-"
"246","requestBodyConverter","@Override
      public Converter<?, RequestBody> requestBodyConverter(
          Type type,
          Annotation[] parameterAnnotations,
          Annotation[] methodAnnotations,
          Retrofit retrofit)","0","-","-","-","-"
"247","parameterAnnotationsPassedToStringConverter","@Test
  public void parameterAnnotationsPassedToStringConverter()","0","-","-","-","-"
"248","stringConverter","@Override
      public Converter<?, String> stringConverter(
          Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"249","stringConverterCalledForString","@Test
  public void stringConverterCalledForString()","0","-","-","-","-"
"250","stringConverter","@Override
      public @Nullable Converter<?, String> stringConverter(
          Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"251","stringConverterReturningNullResultsInDefault","@Test
  public void stringConverterReturningNullResultsInDefault()","0","-","-","-","-"
"252","stringConverter","@Override
      public @Nullable Converter<?, String> stringConverter(
          Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"253","missingConverterThrowsOnNonRequestBody","@Test
  public void missingConverterThrowsOnNonRequestBody() throws IOException","0","-","-","-","-"
"254","missingConverterThrowsOnNonResponseBody","@Test
  public void missingConverterThrowsOnNonResponseBody() throws IOException","0","-","-","-","-"
"255","requestBodyOutgoingAllowed","@Test
  public void requestBodyOutgoingAllowed() throws IOException","0","-","-","-","-"
"256","voidOutgoingAllowed","@Test
  public void voidOutgoingAllowed() throws IOException","0","-","-","-","-"
"257","voidResponsesArePooled","@Test
  public void voidResponsesArePooled() throws Exception","0","-","-","-","-"
"258","responseBodyIncomingAllowed","@Test
  public void responseBodyIncomingAllowed() throws IOException, InterruptedException","0","-","-","-","-"
"259","unresolvableResponseTypeThrows","@Test
  public void unresolvableResponseTypeThrows()","0","-","-","-","-"
"260","unresolvableParameterTypeThrows","@Test
  public void unresolvableParameterTypeThrows()","0","-","-","-","-"
"261","baseUrlRequired","@Test
  public void baseUrlRequired()","0","-","-","-","-"
"262","baseUrlNullThrows","@Test
  public void baseUrlNullThrows()","0","-","-","-","-"
"263","baseUrlInvalidThrows","@Test
  public void baseUrlInvalidThrows()","0","-","-","-","-"
"264","baseUrlNoTrailingSlashThrows","@Test
  public void baseUrlNoTrailingSlashThrows()","0","-","-","-","-"
"265","baseUrlStringPropagated","@Test
  public void baseUrlStringPropagated()","0","-","-","-","-"
"266","baseHttpUrlPropagated","@Test
  public void baseHttpUrlPropagated()","0","-","-","-","-"
"267","baseJavaUrlPropagated","@Test
  public void baseJavaUrlPropagated() throws MalformedURLException","0","-","-","-","-"
"268","clientNullThrows","@Test
  public void clientNullThrows()","0","-","-","-","-"
"269","callFactoryDefault","@Test
  public void callFactoryDefault()","0","-","-","-","-"
"270","callFactoryPropagated","@Test
  public void callFactoryPropagated()","0","-","-","-","-"
"271","callFactoryClientPropagated","@Test
  public void callFactoryClientPropagated()","0","-","-","-","-"
"272","callFactoryUsed","@Test
  public void callFactoryUsed() throws IOException","0","-","-","-","-"
"273","callFactoryReturningNullThrows","@Test
  public void callFactoryReturningNullThrows() throws IOException","0","-","-","-","-"
"274","callFactoryThrowingPropagates","@Test
  public void callFactoryThrowingPropagates()","0","-","-","-","-"
"275","converterNullThrows","@Test
  public void converterNullThrows()","0","-","-","-","-"
"276","converterFactoryDefault","@Test
  public void converterFactoryDefault()","0","-","-","-","-"
"277","builtInConvertersFirstInClone","@Test
  public void builtInConvertersFirstInClone()","0","-","-","-","-"
"278","responseBodyConverter","@Nullable
          @Override
          public Converter<ResponseBody, ?> responseBodyConverter(
              Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"279","requestConverterFactoryQueried","@Test
  public void requestConverterFactoryQueried()","0","-","-","-","-"
"280","convert","@Nullable
          @Override
          public RequestBody convert(Object value)","0","-","-","-","-"
"281","requestBodyConverter","@Override
          public Converter<?, RequestBody> requestBodyConverter(
              Type type,
              Annotation[] parameterAnnotations,
              Annotation[] methodAnnotations,
              Retrofit retrofit)","0","-","-","-","-"
"282","requestConverterFactoryNoMatchThrows","@Test
  public void requestConverterFactoryNoMatchThrows()","0","-","-","-","-"
"283","requestConverterFactorySkippedNoMatchThrows","@Test
  public void requestConverterFactorySkippedNoMatchThrows()","0","-","-","-","-"
"284","responseConverterFactoryQueried","@Test
  public void responseConverterFactoryQueried()","0","-","-","-","-"
"285","convert","@Nullable
          @Override
          public Object convert(ResponseBody value)","0","-","-","-","-"
"286","responseBodyConverter","@Nullable
          @Override
          public Converter<ResponseBody, ?> responseBodyConverter(
              Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"287","responseConverterFactoryNoMatchThrows","@Test
  public void responseConverterFactoryNoMatchThrows()","0","-","-","-","-"
"288","responseConverterFactorySkippedNoMatchThrows","@Test
  public void responseConverterFactorySkippedNoMatchThrows()","0","-","-","-","-"
"289","stringConverterFactoryQueried","@Test
  public void stringConverterFactoryQueried()","0","-","-","-","-"
"290","convert","@Nullable
          @Override
          public String convert(Object value)","0","-","-","-","-"
"291","stringConverter","@Nullable
          @Override
          public Converter<?, String> stringConverter(
              Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"292","converterFactoryPropagated","@Test
  public void converterFactoryPropagated()","0","-","-","-","-"
"293","callAdapterFactoryNullThrows","@Test
  public void callAdapterFactoryNullThrows()","0","-","-","-","-"
"294","callAdapterFactoryDefault","@Test
  public void callAdapterFactoryDefault()","0","-","-","-","-"
"295","callAdapterFactoryPropagated","@Test
  public void callAdapterFactoryPropagated()","0","-","-","-","-"
"296","get","@Nullable
          @Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"297","callAdapterFactoryQueried","@Test
  public void callAdapterFactoryQueried()","0","-","-","-","-"
"298","responseType","@Override
          public Type responseType()","0","-","-","-","-"
"299","adapt","@Override
          public Object adapt(Call<Object> call)","0","-","-","-","-"
"300","get","@Nullable
          @Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"301","callAdapterFactoryQueriedCanDelegate","@Test
  public void callAdapterFactoryQueriedCanDelegate()","0","-","-","-","-"
"302","responseType","@Override
          public Type responseType()","0","-","-","-","-"
"303","adapt","@Override
          public Object adapt(Call<Object> call)","0","-","-","-","-"
"304","get","@Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"305","get","@Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"306","callAdapterFactoryQueriedCanDelegateTwiceWithoutRecursion","@Test
  public void callAdapterFactoryQueriedCanDelegateTwiceWithoutRecursion()","0","-","-","-","-"
"307","responseType","@Override
          public Type responseType()","0","-","-","-","-"
"308","adapt","@Override
          public Object adapt(Call<Object> call)","0","-","-","-","-"
"309","get","@Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"310","get","@Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"311","get","@Override
          public CallAdapter<?, ?> get(
              Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"312","callAdapterFactoryNoMatchThrows","@Test
  public void callAdapterFactoryNoMatchThrows()","0","-","-","-","-"
"313","callAdapterFactoryDelegateNoMatchThrows","@Test
  public void callAdapterFactoryDelegateNoMatchThrows()","0","-","-","-","-"
"314","platformAwareAdapterAbsentInCloneBuilder","@Test
  public void platformAwareAdapterAbsentInCloneBuilder()","0","-","-","-","-"
"315","callbackExecutorNullThrows","@Test
  public void callbackExecutorNullThrows()","0","-","-","-","-"
"316","callbackExecutorPropagated","@Test
  public void callbackExecutorPropagated()","0","-","-","-","-"
"317","callbackExecutorUsedForSuccess","@Test
  public void callbackExecutorUsedForSuccess() throws InterruptedException","0","-","-","-","-"
"318","onResponse","@Override
          public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response)","0","-","-","-","-"
"319","onFailure","@Override
          public void onFailure(Call<ResponseBody> call, Throwable t)","0","-","-","-","-"
"320","callbackExecutorUsedForFailure","@Test
  public void callbackExecutorUsedForFailure() throws InterruptedException","0","-","-","-","-"
"321","onResponse","@Override
          public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response)","0","-","-","-","-"
"322","onFailure","@Override
          public void onFailure(Call<ResponseBody> call, Throwable t)","0","-","-","-","-"
"323","skippedCallbackExecutorNotUsedForSuccess","@Test
  public void skippedCallbackExecutorNotUsedForSuccess() throws InterruptedException","0","-","-","-","-"
"324","onResponse","@Override
          public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response)","0","-","-","-","-"
"325","onFailure","@Override
          public void onFailure(Call<ResponseBody> call, Throwable t)","0","-","-","-","-"
"326","skippedCallbackExecutorNotUsedForFailure","@Test
  public void skippedCallbackExecutorNotUsedForFailure() throws InterruptedException","0","-","-","-","-"
"327","onResponse","@Override
          public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response)","0","-","-","-","-"
"328","onFailure","@Override
          public void onFailure(Call<ResponseBody> call, Throwable t)","0","-","-","-","-"
"329","argumentCapture","/** Confirm that Retrofit encodes parameters when the call is executed, and not earlier. */
  @Test
  public void argumentCapture() throws Exception","0","-","-","-","-"
"330","annotationParsingFailureObservedByWaitingThreads","@Test
  public void annotationParsingFailureObservedByWaitingThreads() throws InterruptedException","0","-","-","-","-"
"331","response","@Test
  public void response()","0","-","-","-","-"
"332","nullResponseThrows","@Test
  public void nullResponseThrows()","0","-","-","-","-"
"333","annotationArrays","public static Factory<AnnotationArraySubject, Annotation[]> annotationArrays()","0","-","-","-","-"
"334","assertThat","public static AnnotationArraySubject assertThat(Annotation[] actual)","0","-","-","-","-"
"335","AnnotationArraySubject","private AnnotationArraySubject(FailureMetadata metadata, Annotation[] actual)","0","-","-","-","-"
"336","hasAtLeastOneElementOfType","public void hasAtLeastOneElementOfType(Class<? extends Annotation> cls)","0","-","-","-","-"
"337","NonFatalError","NonFatalError(String message)","0","-","-","-","-"
"338","getString","@GET(""/"")
    Call<String> getString();","0","-","-","-","-"
"339","getBody","@GET(""/"")
    Call<ResponseBody> getBody();","0","-","-","-","-"
"340","getStreamingBody","@GET(""/"")
    @Streaming
    Call<ResponseBody> getStreamingBody();","0","-","-","-","-"
"341","postString","@POST(""/"")
    Call<String> postString(@Body String body);","0","-","-","-","-"
"342","postRequestBody","@POST(""/","0","-","-","-","-"
"343","http200Sync","@Test
  public void http200Sync() throws IOException","0","-","-","-","-"
"344","http200Async","@Test
  public void http200Async() throws InterruptedException","0","-","-","-","-"
"345","onResponse","@Override
              public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"346","onFailure","@Override
              public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"347","http404Sync","@Test
  public void http404Sync() throws IOException","0","-","-","-","-"
"348","http404Async","@Test
  public void http404Async() throws InterruptedException, IOException","0","-","-","-","-"
"349","onResponse","@Override
              public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"350","onFailure","@Override
              public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"351","transportProblemSync","@Test
  public void transportProblemSync()","0","-","-","-","-"
"352","transportProblemAsync","@Test
  public void transportProblemAsync() throws InterruptedException","0","-","-","-","-"
"353","onResponse","@Override
              public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"354","onFailure","@Override
              public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"355","conversionProblemOutgoingSync","@Test
  public void conversionProblemOutgoingSync() throws IOException","0","-","-","-","-"
"356","requestBodyConverter","@Override
                  public Converter<String, RequestBody> requestBodyConverter(
                      Type type,
                      Annotation[] parameterAnnotations,
                      Annotation[] methodAnnotations,
                      Retrofit retrofit)","0","-","-","-","-"
"357","conversionProblemOutgoingAsync","@Test
  public void conversionProblemOutgoingAsync() throws InterruptedException","0","-","-","-","-"
"358","requestBodyConverter","@Override
                  public Converter<String, RequestBody> requestBodyConverter(
                      Type type,
                      Annotation[] parameterAnnotations,
                      Annotation[] methodAnnotations,
                      Retrofit retrofit)","0","-","-","-","-"
"359","onResponse","@Override
              public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"360","onFailure","@Override
              public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"361","conversionProblemIncomingSync","@Test
  public void conversionProblemIncomingSync() throws IOException","0","-","-","-","-"
"362","responseBodyConverter","@Override
                  public Converter<ResponseBody, String> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"363","conversionProblemIncomingMaskedByConverterIsUnwrapped","@Test
  public void conversionProblemIncomingMaskedByConverterIsUnwrapped() throws IOException","0","-","-","-","-"
"364","read","@Override
                            public long read(Buffer sink, long byteCount) throws IOException","0","-","-","-","-"
"365","responseBodyConverter","@Override
                  public Converter<ResponseBody, String> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"366","conversionProblemIncomingAsync","@Test
  public void conversionProblemIncomingAsync() throws InterruptedException","0","-","-","-","-"
"367","responseBodyConverter","@Override
                  public Converter<ResponseBody, String> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"368","onResponse","@Override
              public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"369","onFailure","@Override
              public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"370","http204SkipsConverter","@Test
  public void http204SkipsConverter() throws IOException","0","-","-","-","-"
"371","responseBodyConverter","@Override
                  public Converter<ResponseBody, String> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"372","http205SkipsConverter","@Test
  public void http205SkipsConverter() throws IOException","0","-","-","-","-"
"373","responseBodyConverter","@Override
                  public Converter<ResponseBody, String> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"374","converterBodyDoesNotLeakContentInIntermediateBuffers","@Test
  public void converterBodyDoesNotLeakContentInIntermediateBuffers() throws IOException","0","-","-","-","-"
"375","executeCallOnce","@Test
  public void executeCallOnce() throws IOException","0","-","-","-","-"
"376","successfulRequestResponseWhenMimeTypeMissing","@Test
  public void successfulRequestResponseWhenMimeTypeMissing() throws Exception","0","-","-","-","-"
"377","responseBody","@Test
  public void responseBody() throws IOException","0","-","-","-","-"
"378","responseBodyBuffers","@Test
  public void responseBodyBuffers() throws IOException","0","-","-","-","-"
"379","responseBodyStreams","@Test
  public void responseBodyStreams() throws IOException","0","-","-","-","-"
"380","rawResponseContentTypeAndLengthButNoSource","@Test
  public void rawResponseContentTypeAndLengthButNoSource() throws IOException","0","-","-","-","-"
"381","emptyResponse","@Test
  public void emptyResponse() throws IOException","0","-","-","-","-"
"382","reportsExecutedSync","@Test
  public void reportsExecutedSync() throws IOException","0","-","-","-","-"
"383","reportsExecutedAsync","@Test
  public void reportsExecutedAsync() throws InterruptedException","0","-","-","-","-"
"384","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"385","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"386","cancelBeforeExecute","@Test
  public void cancelBeforeExecute()","0","-","-","-","-"
"387","cancelBeforeEnqueue","@Test
  public void cancelBeforeEnqueue() throws Exception","0","-","-","-","-"
"388","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"389","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"390","cloningExecutedRequestDoesNotCopyState","@Test
  public void cloningExecutedRequestDoesNotCopyState() throws IOException","0","-","-","-","-"
"391","cancelRequest","@Test
  public void cancelRequest() throws InterruptedException","0","-","-","-","-"
"392","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"393","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"394","cancelOkHttpRequest","@Test
  public void cancelOkHttpRequest() throws InterruptedException","0","-","-","-","-"
"395","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"396","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"397","requestBeforeExecuteCreates","@Test
  public void requestBeforeExecuteCreates() throws IOException","0","-","-","-","-"
"398","toString","@Override
          public String toString()","0","-","-","-","-"
"399","requestThrowingBeforeExecuteFailsExecute","@Test
  public void requestThrowingBeforeExecuteFailsExecute() throws IOException","0","-","-","-","-"
"400","toString","@Override
          public String toString()","0","-","-","-","-"
"401","requestThrowingNonFatalErrorBeforeExecuteFailsExecute","@Test
  public void requestThrowingNonFatalErrorBeforeExecuteFailsExecute() throws IOException","0","-","-","-","-"
"402","toString","@Override
          public String toString()","0","-","-","-","-"
"403","requestAfterExecuteReturnsCachedValue","@Test
  public void requestAfterExecuteReturnsCachedValue() throws IOException","0","-","-","-","-"
"404","toString","@Override
          public String toString()","0","-","-","-","-"
"405","requestAfterExecuteThrowingAlsoThrows","@Test
  public void requestAfterExecuteThrowingAlsoThrows() throws IOException","0","-","-","-","-"
"406","toString","@Override
          public String toString()","0","-","-","-","-"
"407","requestAfterExecuteThrowingAlsoThrowsForNonFatalErrors","@Test
  public void requestAfterExecuteThrowingAlsoThrowsForNonFatalErrors() throws IOException","0","-","-","-","-"
"408","toString","@Override
          public String toString()","0","-","-","-","-"
"409","requestBeforeEnqueueCreates","@Test
  public void requestBeforeEnqueueCreates() throws IOException, InterruptedException","0","-","-","-","-"
"410","toString","@Override
          public String toString()","0","-","-","-","-"
"411","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"412","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"413","requestThrowingBeforeEnqueueFailsEnqueue","@Test
  public void requestThrowingBeforeEnqueueFailsEnqueue() throws IOException, InterruptedException","0","-","-","-","-"
"414","toString","@Override
          public String toString()","0","-","-","-","-"
"415","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"416","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"417","requestThrowingNonFatalErrorBeforeEnqueueFailsEnqueue","@Test
  public void requestThrowingNonFatalErrorBeforeEnqueueFailsEnqueue()
      throws IOException, InterruptedException","0","-","-","-","-"
"418","toString","@Override
          public String toString()","0","-","-","-","-"
"419","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"420","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"421","requestAfterEnqueueReturnsCachedValue","@Test
  public void requestAfterEnqueueReturnsCachedValue() throws IOException, InterruptedException","0","-","-","-","-"
"422","toString","@Override
          public String toString()","0","-","-","-","-"
"423","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"424","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"425","requestAfterEnqueueFailingThrows","@Test
  public void requestAfterEnqueueFailingThrows() throws IOException, InterruptedException","0","-","-","-","-"
"426","toString","@Override
          public String toString()","0","-","-","-","-"
"427","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"428","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"429","requestAfterEnqueueFailingThrowsForNonFatalErrors","@Test
  public void requestAfterEnqueueFailingThrowsForNonFatalErrors()
      throws IOException, InterruptedException","0","-","-","-","-"
"430","toString","@Override
          public String toString()","0","-","-","-","-"
"431","onResponse","@Override
          public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"432","onFailure","@Override
          public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"433","fatalErrorsAreNotCaughtRequest","@Test
  public void fatalErrorsAreNotCaughtRequest() throws Exception","0","-","-","-","-"
"434","toString","@Override
          public String toString()","0","-","-","-","-"
"435","fatalErrorsAreNotCaughtEnqueue","@Test
  public void fatalErrorsAreNotCaughtEnqueue() throws Exception","0","-","-","-","-"
"436","toString","@Override
          public String toString()","0","-","-","-","-"
"437","onResponse","@Override
            public void onResponse(Call<String> call, Response<String> response)","0","-","-","-","-"
"438","onFailure","@Override
            public void onFailure(Call<String> call, Throwable t)","0","-","-","-","-"
"439","fatalErrorsAreNotCaughtExecute","@Test
  public void fatalErrorsAreNotCaughtExecute() throws Exception","0","-","-","-","-"
"440","toString","@Override
          public String toString()","0","-","-","-","-"
"441","timeoutExceeded","@Test
  public void timeoutExceeded() throws IOException","0","-","-","-","-"
"442","deadlineExceeded","@Test
  public void deadlineExceeded() throws IOException","0","-","-","-","-"
"443","timeoutEnabledButNotExceeded","@Test
  public void timeoutEnabledButNotExceeded() throws IOException","0","-","-","-","-"
"444","parameterizedTypeInvalidIndex","@Test
  public void parameterizedTypeInvalidIndex()","0","-","-","-","-"
"445","parameterizedTypes","@Test
  public void parameterizedTypes()","0","-","-","-","-"
"446","rawTypeThrowsOnNull","@Test
  public void rawTypeThrowsOnNull()","0","-","-","-","-"
"447","rawTypes","@Test
  public void rawTypes() throws NoSuchMethodException","0","-","-","-","-"
"448","method","T method()","0","-","-","-","-"
"449","rawTypeThrows","@Test
  public void rawTypeThrows()","0","-","-","-","-"
"450","responseType","@Test
  public void responseType()","0","-","-","-","-"
"451","adaptedCallExecute","@Test
  public void adaptedCallExecute() throws IOException","0","-","-","-","-"
"452","execute","@Override
              public Response<String> execute()","0","-","-","-","-"
"453","adaptedCallCloneDeepCopy","@Test
  public void adaptedCallCloneDeepCopy()","0","-","-","-","-"
"454","clone","@Override
          public Call<String> clone()","0","-","-","-","-"
"455","adaptedCallCancel","@Test
  public void adaptedCallCancel()","0","-","-","-","-"
"456","cancel","@Override
          public void cancel()","0","-","-","-","-"
"457","enqueue","@Override
    public void enqueue(Callback<String> callback)","0","-","-","-","-"
"458","isExecuted","@Override
    public boolean isExecuted()","0","-","-","-","-"
"459","execute","@Override
    public Response<String> execute() throws IOException","0","-","-","-","-"
"460","cancel","@Override
    public void cancel()","0","-","-","-","-"
"461","isCanceled","@Override
    public boolean isCanceled()","0","-","-","-","-"
"462","clone","@Override
    public Call<String> clone()","0","-","-","-","-"
"463","request","@Override
    public Request request()","0","-","-","-","-"
"464","timeout","@Override
    public Timeout timeout()","0","-","-","-","-"
"465","body","@GET(""/"")
    CompletableFuture<String> body();","0","-","-","-","-"
"466","response","@GET(""/"")
    CompletableFuture<Response<String>> response();","0","-","-","-","-"
"467","setUp","@Before
  public void setUp()","0","-","-","-","-"
"468","bodySuccess200","@Test
  public void bodySuccess200() throws Exception","0","-","-","-","-"
"469","bodySuccess404","@Test
  public void bodySuccess404() throws Exception","0","-","-","-","-"
"470","bodyFailure","@Test
  public void bodyFailure() throws Exception","0","-","-","-","-"
"471","responseSuccess200","@Test
  public void responseSuccess200() throws Exception","0","-","-","-","-"
"472","responseSuccess404","@Test
  public void responseSuccess404() throws Exception","0","-","-","-","-"
"473","responseFailure","@Test
  public void responseFailure() throws Exception","0","-","-","-","-"
"474","pathParameterParsing","@Test
  public void pathParameterParsing() throws Exception","0","-","-","-","-"
"475","expectParams","private static void expectParams(String path, String... expected)","0","-","-","-","-"
"476","user","@GET(""/"")
    Call<String> user(@Query(""name"") String name);","0","-","-","-","-"
"477","user","default Call<String> user()","0","-","-","-","-"
"478","staticMethod","static String staticMethod()","0","-","-","-","-"
"479","test","@Test
  public void test()","0","-","-","-","-"
"480","success","@Test
  public void success()","0","-","-","-","-"
"481","successNullAllowed","@Test
  public void successNullAllowed()","0","-","-","-","-"
"482","successWithHeaders","@Test
  public void successWithHeaders()","0","-","-","-","-"
"483","successWithNullHeadersThrows","@Test
  public void successWithNullHeadersThrows()","0","-","-","-","-"
"484","successWithStatusCode","@Test
  public void successWithStatusCode()","0","-","-","-","-"
"485","successWithRawResponse","@Test
  public void successWithRawResponse()","0","-","-","-","-"
"486","successWithNullRawResponseThrows","@Test
  public void successWithNullRawResponseThrows()","0","-","-","-","-"
"487","successWithErrorRawResponseThrows","@Test
  public void successWithErrorRawResponseThrows()","0","-","-","-","-"
"488","error","@Test
  public void error()","0","-","-","-","-"
"489","nullErrorThrows","@Test
  public void nullErrorThrows()","0","-","-","-","-"
"490","errorWithSuccessCodeThrows","@Test
  public void errorWithSuccessCodeThrows()","0","-","-","-","-"
"491","errorWithRawResponse","@Test
  public void errorWithRawResponse()","0","-","-","-","-"
"492","nullErrorWithRawResponseThrows","@Test
  public void nullErrorWithRawResponseThrows()","0","-","-","-","-"
"493","errorWithNullRawResponseThrows","@Test
  public void errorWithNullRawResponseThrows()","0","-","-","-","-"
"494","errorWithSuccessRawResponseThrows","@Test
  public void errorWithSuccessRawResponseThrows()","0","-","-","-","-"
"495","optional","@GET(""/"")
    Call<Optional<Object>> optional();","0","-","-","-","-"
"496","object","@GET(""/"")
    Call<Object> object();","0","-","-","-","-"
"497","setUp","@Before
  public void setUp()","0","-","-","-","-"
"498","optional","@Test
  public void optional() throws IOException","0","-","-","-","-"
"499","onlyMatchesOptional","@Test
  public void onlyMatchesOptional() throws IOException","0","-","-","-","-"
"500","setUp","@Before
  public void setUp()","0","-","-","-","-"
"501","responseType","@Test
  public void responseType()","0","-","-","-","-"
"502","nonListenableFutureReturnsNull","@Test
  public void nonListenableFutureReturnsNull()","0","-","-","-","-"
"503","rawTypeThrows","@Test
  public void rawTypeThrows()","0","-","-","-","-"
"504","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"505","customMethodNoBody","@Test
  public void customMethodNoBody()","0","-","-","-","-"
"506","method","@HTTP(method = ""CUSTOM1"", path = ""/foo"")
      Call<ResponseBody> method()","0","-","-","-","-"
"507","customMethodWithBody","@Test
  public void customMethodWithBody()","0","-","-","-","-"
"508","method","@HTTP(method = ""CUSTOM2"", path = ""/foo"", hasBody = true)
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"509","onlyOneEncodingIsAllowedMultipartFirst","@Test
  public void onlyOneEncodingIsAllowedMultipartFirst()","0","-","-","-","-"
"510","method","@Multipart //
      @FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"511","onlyOneEncodingIsAllowedFormEncodingFirst","@Test
  public void onlyOneEncodingIsAllowedFormEncodingFirst()","0","-","-","-","-"
"512","method","@FormUrlEncoded //
      @Multipart //
      @POST(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"513","invalidPathParam","@Test
  public void invalidPathParam() throws Exception","0","-","-","-","-"
"514","method","@GET(""/"") //
      Call<ResponseBody> method(@Path(""hey!"") String thing)","0","-","-","-","-"
"515","pathParamNotAllowedInQuery","@Test
  public void pathParamNotAllowedInQuery() throws Exception","0","-","-","-","-"
"516","method","@GET(""/foo?bar=","0","-","-","-","-"
"517","multipleParameterAnnotationsNotAllowed","@Test
  public void multipleParameterAnnotationsNotAllowed() throws Exception","0","-","-","-","-"
"518","method","@GET(""/"") //
      Call<ResponseBody> method(@Body @Query(""nope"") String o)","0","-","-","-","-"
"519","multipleParameterAnnotationsOnlyOneRetrofitAllowed","@Test
  public void multipleParameterAnnotationsOnlyOneRetrofitAllowed() throws Exception","0","-","-","-","-"
"520","method","@GET(""/"") //
      Call<ResponseBody> method(@Query(""maybe"") @NonNull Object o)","0","-","-","-","-"
"521","twoMethodsFail","@Test
  public void twoMethodsFail()","0","-","-","-","-"
"522","method","@PATCH(""/foo"") //
      @POST(""/foo"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"523","lackingMethod","@Test
  public void lackingMethod()","0","-","-","-","-"
"524","method","Call<ResponseBody> method()","0","-","-","-","-"
"525","implicitMultipartForbidden","@Test
  public void implicitMultipartForbidden()","0","-","-","-","-"
"526","method","@POST(""/"") //
      Call<ResponseBody> method(@Part(""a"") int a)","0","-","-","-","-"
"527","implicitMultipartWithPartMapForbidden","@Test
  public void implicitMultipartWithPartMapForbidden()","0","-","-","-","-"
"528","method","@POST(""/"") //
      Call<ResponseBody> method(@PartMap Map<String, String> params)","0","-","-","-","-"
"529","multipartFailsOnNonBodyMethod","@Test
  public void multipartFailsOnNonBodyMethod()","0","-","-","-","-"
"530","method","@Multipart //
      @GET(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"531","multipartFailsWithNoParts","@Test
  public void multipartFailsWithNoParts()","0","-","-","-","-"
"532","method","@Multipart //
      @POST(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"533","implicitFormEncodingByFieldForbidden","@Test
  public void implicitFormEncodingByFieldForbidden()","0","-","-","-","-"
"534","method","@POST(""/"") //
      Call<ResponseBody> method(@Field(""a"") int a)","0","-","-","-","-"
"535","implicitFormEncodingByFieldMapForbidden","@Test
  public void implicitFormEncodingByFieldMapForbidden()","0","-","-","-","-"
"536","method","@POST(""/"") //
      Call<ResponseBody> method(@FieldMap Map<String, String> a)","0","-","-","-","-"
"537","formEncodingFailsOnNonBodyMethod","@Test
  public void formEncodingFailsOnNonBodyMethod()","0","-","-","-","-"
"538","method","@FormUrlEncoded //
      @GET(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"539","formEncodingFailsWithNoParts","@Test
  public void formEncodingFailsWithNoParts()","0","-","-","-","-"
"540","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"541","headersFailWhenEmptyOnMethod","@Test
  public void headersFailWhenEmptyOnMethod()","0","-","-","-","-"
"542","method","@GET(""/"") //
      @Headers(","0","-","-","-","-"
"543","headersFailWhenMalformed","@Test
  public void headersFailWhenMalformed()","0","-","-","-","-"
"544","method","@GET(""/"") //
      @Headers(""Malformed"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"545","pathParamNonPathParamAndTypedBytes","@Test
  public void pathParamNonPathParamAndTypedBytes()","0","-","-","-","-"
"546","method","@PUT(""/","0","-","-","-","-"
"547","parameterWithoutAnnotation","@Test
  public void parameterWithoutAnnotation()","0","-","-","-","-"
"548","method","@GET(""/"") //
      Call<ResponseBody> method(String a)","0","-","-","-","-"
"549","nonBodyHttpMethodWithSingleEntity","@Test
  public void nonBodyHttpMethodWithSingleEntity()","0","-","-","-","-"
"550","method","@GET(""/"") //
      Call<ResponseBody> method(@Body String o)","0","-","-","-","-"
"551","queryMapMustBeAMap","@Test
  public void queryMapMustBeAMap()","0","-","-","-","-"
"552","method","@GET(""/"") //
      Call<ResponseBody> method(@QueryMap List<String> a)","0","-","-","-","-"
"553","queryMapSupportsSubclasses","@Test
  public void queryMapSupportsSubclasses()","0","-","-","-","-"
"554","method","@GET(""/"") //
      Call<ResponseBody> method(@QueryMap Foo a)","0","-","-","-","-"
"555","queryMapRejectsNull","@Test
  public void queryMapRejectsNull()","0","-","-","-","-"
"556","method","@GET(""/"") //
      Call<ResponseBody> method(@QueryMap Map<String, String> a)","0","-","-","-","-"
"557","queryMapRejectsNullKeys","@Test
  public void queryMapRejectsNullKeys()","0","-","-","-","-"
"558","method","@GET(""/"") //
      Call<ResponseBody> method(@QueryMap Map<String, String> a)","0","-","-","-","-"
"559","queryMapRejectsNullValues","@Test
  public void queryMapRejectsNullValues()","0","-","-","-","-"
"560","method","@GET(""/"") //
      Call<ResponseBody> method(@QueryMap Map<String, String> a)","0","-","-","-","-"
"561","getWithHeaderMap","@Test
  public void getWithHeaderMap()","0","-","-","-","-"
"562","method","@GET(""/search"")
      Call<ResponseBody> method(@HeaderMap Map<String, Object> headers)","0","-","-","-","-"
"563","headerMapMustBeAMapOrHeaders","@Test
  public void headerMapMustBeAMapOrHeaders()","0","-","-","-","-"
"564","method","@GET(""/"")
      Call<ResponseBody> method(
          @HeaderMap okhttp3.Headers headers, @HeaderMap List<String> headerMap)","0","-","-","-","-"
"565","headerMapSupportsSubclasses","@Test
  public void headerMapSupportsSubclasses()","0","-","-","-","-"
"566","method","@GET(""/search"")
      Call<ResponseBody> method(@HeaderMap Foo headers)","0","-","-","-","-"
"567","headerMapRejectsNull","@Test
  public void headerMapRejectsNull()","0","-","-","-","-"
"568","method","@GET(""/"")
      Call<ResponseBody> method(@HeaderMap Map<String, String> headers)","0","-","-","-","-"
"569","headerMapRejectsNullKeys","@Test
  public void headerMapRejectsNullKeys()","0","-","-","-","-"
"570","method","@GET(""/"")
      Call<ResponseBody> method(@HeaderMap Map<String, String> headers)","0","-","-","-","-"
"571","headerMapRejectsNullValues","@Test
  public void headerMapRejectsNullValues()","0","-","-","-","-"
"572","method","@GET(""/"")
      Call<ResponseBody> method(@HeaderMap Map<String, String> headers)","0","-","-","-","-"
"573","getWithHeaders","@Test
  public void getWithHeaders()","0","-","-","-","-"
"574","method","@GET(""/search"")
      Call<ResponseBody> method(@HeaderMap okhttp3.Headers headers)","0","-","-","-","-"
"575","getWithHeadersAndHeaderMap","@Test
  public void getWithHeadersAndHeaderMap()","0","-","-","-","-"
"576","method","@GET(""/search"")
      Call<ResponseBody> method(
          @HeaderMap okhttp3.Headers headers, @HeaderMap Map<String, Object> headerMap)","0","-","-","-","-"
"577","headersRejectsNull","@Test
  public void headersRejectsNull()","0","-","-","-","-"
"578","method","@GET(""/"")
      Call<ResponseBody> method(@HeaderMap okhttp3.Headers headers)","0","-","-","-","-"
"579","getWithHeaderMapAllowingUnsafeNonAsciiValues","@Test
  public void getWithHeaderMapAllowingUnsafeNonAsciiValues()","0","-","-","-","-"
"580","method","@GET(""/search"")
      Call<ResponseBody> method(
          @HeaderMap(allowUnsafeNonAsciiValues = true) Map<String, Object> headers)","0","-","-","-","-"
"581","twoBodies","@Test
  public void twoBodies()","0","-","-","-","-"
"582","method","@PUT(""/"") //
      Call<ResponseBody> method(@Body String o1, @Body String o2)","0","-","-","-","-"
"583","bodyInNonBodyRequest","@Test
  public void bodyInNonBodyRequest()","0","-","-","-","-"
"584","method","@Multipart //
      @PUT(""/"") //
      Call<ResponseBody> method(@Part(""one"") String o1, @Body String o2)","0","-","-","-","-"
"585","get","@Test
  public void get()","0","-","-","-","-"
"586","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"587","delete","@Test
  public void delete()","0","-","-","-","-"
"588","method","@DELETE(""/foo/bar/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"589","headVoid","@Test
  public void headVoid()","0","-","-","-","-"
"590","method","@HEAD(""/foo/bar/"") //
      Call<Void> method()","0","-","-","-","-"
"591","headWithoutVoidThrows","@Ignore(""This test is valid but isn't validated by RequestFactory so it needs moved"")
  @Test
  public void headWithoutVoidThrows()","0","-","-","-","-"
"592","method","@HEAD(""/foo/bar/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"593","post","@Test
  public void post()","0","-","-","-","-"
"594","method","@POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"595","put","@Test
  public void put()","0","-","-","-","-"
"596","method","@PUT(""/foo/bar/"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"597","patch","@Test
  public void patch()","0","-","-","-","-"
"598","method","@PATCH(""/foo/bar/"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"599","options","@Test
  public void options()","0","-","-","-","-"
"600","method","@OPTIONS(""/foo/bar/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"601","getWithPathParam","@Test
  public void getWithPathParam()","0","-","-","-","-"
"602","method","@GET(""/foo/bar/","0","-","-","-","-"
"603","getWithUnusedAndInvalidNamedPathParam","@Test
  public void getWithUnusedAndInvalidNamedPathParam()","0","-","-","-","-"
"604","method","@GET(""/foo/bar/","0","-","-","-","-"
"605","getWithEncodedPathParam","@Test
  public void getWithEncodedPathParam()","0","-","-","-","-"
"606","method","@GET(""/foo/bar/","0","-","-","-","-"
"607","getWithEncodedPathSegments","@Test
  public void getWithEncodedPathSegments()","0","-","-","-","-"
"608","method","@GET(""/foo/bar/","0","-","-","-","-"
"609","getWithUnencodedPathSegmentsPreventsRequestSplitting","@Test
  public void getWithUnencodedPathSegmentsPreventsRequestSplitting()","0","-","-","-","-"
"610","method","@GET(""/foo/bar/","0","-","-","-","-"
"611","getWithEncodedPathStillPreventsRequestSplitting","@Test
  public void getWithEncodedPathStillPreventsRequestSplitting()","0","-","-","-","-"
"612","method","@GET(""/foo/bar/","0","-","-","-","-"
"613","pathParametersAndPathTraversal","@Test
  public void pathParametersAndPathTraversal()","0","-","-","-","-"
"614","method","@GET(""/foo/bar/","0","-","-","-","-"
"615","encodedPathParametersAndPathTraversal","@Test
  public void encodedPathParametersAndPathTraversal()","0","-","-","-","-"
"616","method","@GET(""/foo/bar/","0","-","-","-","-"
"617","dotDotsOkayWhenNotFullPathSegment","@Test
  public void dotDotsOkayWhenNotFullPathSegment()","0","-","-","-","-"
"618","method","@GET(""/foo","0","-","-","-","-"
"619","pathParamRequired","@Test
  public void pathParamRequired()","0","-","-","-","-"
"620","method","@GET(""/foo/bar/","0","-","-","-","-"
"621","getWithQueryParam","@Test
  public void getWithQueryParam()","0","-","-","-","-"
"622","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(""ping"") String ping)","0","-","-","-","-"
"623","getWithEncodedQueryParam","@Test
  public void getWithEncodedQueryParam()","0","-","-","-","-"
"624","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(value = ""pi%20ng"", encoded = true) String ping)","0","-","-","-","-"
"625","queryParamOptionalOmitsQuery","@Test
  public void queryParamOptionalOmitsQuery()","0","-","-","-","-"
"626","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(""ping"") String ping)","0","-","-","-","-"
"627","queryParamOptional","@Test
  public void queryParamOptional()","0","-","-","-","-"
"628","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(
          @Query(""foo"") String foo, @Query(""ping"") String ping, @Query(""kit"") String kit)","0","-","-","-","-"
"629","getWithQueryUrlAndParam","@Test
  public void getWithQueryUrlAndParam()","0","-","-","-","-"
"630","method","@GET(""/foo/bar/?hi=mom"") //
      Call<ResponseBody> method(@Query(""ping"") String ping)","0","-","-","-","-"
"631","getWithQuery","@Test
  public void getWithQuery()","0","-","-","-","-"
"632","method","@GET(""/foo/bar/?hi=mom"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"633","getWithPathAndQueryParam","@Test
  public void getWithPathAndQueryParam()","0","-","-","-","-"
"634","method","@GET(""/foo/bar/","0","-","-","-","-"
"635","getWithQueryThenPathThrows","@Test
  public void getWithQueryThenPathThrows()","0","-","-","-","-"
"636","method","@GET(""/foo/bar/","0","-","-","-","-"
"637","getWithQueryNameThenPathThrows","@Test
  public void getWithQueryNameThenPathThrows()","0","-","-","-","-"
"638","method","@GET(""/foo/bar/","0","-","-","-","-"
"639","getWithQueryMapThenPathThrows","@Test
  public void getWithQueryMapThenPathThrows()","0","-","-","-","-"
"640","method","@GET(""/foo/bar/","0","-","-","-","-"
"641","getWithPathAndQueryQuestionMarkParam","@Test
  public void getWithPathAndQueryQuestionMarkParam()","0","-","-","-","-"
"642","method","@GET(""/foo/bar/","0","-","-","-","-"
"643","getWithPathAndQueryAmpersandParam","@Test
  public void getWithPathAndQueryAmpersandParam()","0","-","-","-","-"
"644","method","@GET(""/foo/bar/","0","-","-","-","-"
"645","getWithPathAndQueryHashParam","@Test
  public void getWithPathAndQueryHashParam()","0","-","-","-","-"
"646","method","@GET(""/foo/bar/","0","-","-","-","-"
"647","getWithQueryParamList","@Test
  public void getWithQueryParamList()","0","-","-","-","-"
"648","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(""key"") List<Object> keys)","0","-","-","-","-"
"649","getWithQueryParamArray","@Test
  public void getWithQueryParamArray()","0","-","-","-","-"
"650","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(""key"") Object[] keys)","0","-","-","-","-"
"651","getWithQueryParamPrimitiveArray","@Test
  public void getWithQueryParamPrimitiveArray()","0","-","-","-","-"
"652","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Query(""key"") int[] keys)","0","-","-","-","-"
"653","getWithQueryNameParam","@Test
  public void getWithQueryNameParam()","0","-","-","-","-"
"654","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName String ping)","0","-","-","-","-"
"655","getWithEncodedQueryNameParam","@Test
  public void getWithEncodedQueryNameParam()","0","-","-","-","-"
"656","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName(encoded = true) String ping)","0","-","-","-","-"
"657","queryNameParamOptionalOmitsQuery","@Test
  public void queryNameParamOptionalOmitsQuery()","0","-","-","-","-"
"658","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName String ping)","0","-","-","-","-"
"659","getWithQueryNameParamList","@Test
  public void getWithQueryNameParamList()","0","-","-","-","-"
"660","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName List<Object> keys)","0","-","-","-","-"
"661","getWithQueryNameParamArray","@Test
  public void getWithQueryNameParamArray()","0","-","-","-","-"
"662","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName Object[] keys)","0","-","-","-","-"
"663","getWithQueryNameParamPrimitiveArray","@Test
  public void getWithQueryNameParamPrimitiveArray()","0","-","-","-","-"
"664","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryName int[] keys)","0","-","-","-","-"
"665","getWithQueryParamMap","@Test
  public void getWithQueryParamMap()","0","-","-","-","-"
"666","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryMap Map<String, Object> query)","0","-","-","-","-"
"667","getWithEncodedQueryParamMap","@Test
  public void getWithEncodedQueryParamMap()","0","-","-","-","-"
"668","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@QueryMap(encoded = true) Map<String, Object> query)","0","-","-","-","-"
"669","getAbsoluteUrl","@Test
  public void getAbsoluteUrl()","0","-","-","-","-"
"670","method","@GET(""http://example2.com/foo/bar/"")
      Call<ResponseBody> method()","0","-","-","-","-"
"671","getWithStringUrl","@Test
  public void getWithStringUrl()","0","-","-","-","-"
"672","method","@GET
      Call<ResponseBody> method(@Url String url)","0","-","-","-","-"
"673","getWithJavaUriUrl","@Test
  public void getWithJavaUriUrl()","0","-","-","-","-"
"674","method","@GET
      Call<ResponseBody> method(@Url URI url)","0","-","-","-","-"
"675","getWithStringUrlAbsolute","@Test
  public void getWithStringUrlAbsolute()","0","-","-","-","-"
"676","method","@GET
      Call<ResponseBody> method(@Url String url)","0","-","-","-","-"
"677","getWithJavaUriUrlAbsolute","@Test
  public void getWithJavaUriUrlAbsolute()","0","-","-","-","-"
"678","method","@GET
      Call<ResponseBody> method(@Url URI url)","0","-","-","-","-"
"679","getWithUrlAbsoluteSameHost","@Test
  public void getWithUrlAbsoluteSameHost()","0","-","-","-","-"
"680","method","@GET
      Call<ResponseBody> method(@Url String url)","0","-","-","-","-"
"681","getWithHttpUrl","@Test
  public void getWithHttpUrl()","0","-","-","-","-"
"682","method","@GET
      Call<ResponseBody> method(@Url HttpUrl url)","0","-","-","-","-"
"683","getWithNullUrl","@Test
  public void getWithNullUrl()","0","-","-","-","-"
"684","method","@GET
      Call<ResponseBody> method(@Url HttpUrl url)","0","-","-","-","-"
"685","getWithNonStringUrlThrows","@Test
  public void getWithNonStringUrlThrows()","0","-","-","-","-"
"686","method","@GET
      Call<ResponseBody> method(@Url Object url)","0","-","-","-","-"
"687","getUrlAndUrlParamThrows","@Test
  public void getUrlAndUrlParamThrows()","0","-","-","-","-"
"688","method","@GET(""foo/bar"")
      Call<ResponseBody> method(@Url Object url)","0","-","-","-","-"
"689","getWithoutUrlThrows","@Test
  public void getWithoutUrlThrows()","0","-","-","-","-"
"690","method","@GET
      Call<ResponseBody> method()","0","-","-","-","-"
"691","getWithUrlThenPathThrows","@Test
  public void getWithUrlThenPathThrows()","0","-","-","-","-"
"692","method","@GET
      Call<ResponseBody> method(@Url String url, @Path(""hey"") String hey)","0","-","-","-","-"
"693","getWithPathThenUrlThrows","@Test
  public void getWithPathThenUrlThrows()","0","-","-","-","-"
"694","method","@GET
      Call<ResponseBody> method(@Path(""hey"") String hey, @Url Object url)","0","-","-","-","-"
"695","getWithQueryThenUrlThrows","@Test
  public void getWithQueryThenUrlThrows()","0","-","-","-","-"
"696","method","@GET(""foo/bar"")
      Call<ResponseBody> method(@Query(""hey"") String hey, @Url Object url)","0","-","-","-","-"
"697","getWithQueryNameThenUrlThrows","@Test
  public void getWithQueryNameThenUrlThrows()","0","-","-","-","-"
"698","method","@GET
      Call<ResponseBody> method(@QueryName String name, @Url String url)","0","-","-","-","-"
"699","getWithQueryMapThenUrlThrows","@Test
  public void getWithQueryMapThenUrlThrows()","0","-","-","-","-"
"700","method","@GET
      Call<ResponseBody> method(@QueryMap Map<String, String> queries, @Url String url)","0","-","-","-","-"
"701","getWithUrlThenQuery","@Test
  public void getWithUrlThenQuery()","0","-","-","-","-"
"702","method","@GET
      Call<ResponseBody> method(@Url String url, @Query(""hey"") String hey)","0","-","-","-","-"
"703","postWithUrl","@Test
  public void postWithUrl()","0","-","-","-","-"
"704","method","@POST
      Call<ResponseBody> method(@Url String url, @Body RequestBody body)","0","-","-","-","-"
"705","normalPostWithPathParam","@Test
  public void normalPostWithPathParam()","0","-","-","-","-"
"706","method","@POST(""/foo/bar/","0","-","-","-","-"
"707","emptyBody","@Test
  public void emptyBody()","0","-","-","-","-"
"708","method","@POST(""/foo/bar/"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"709","customMethodEmptyBody","@Test
  public void customMethodEmptyBody()","0","-","-","-","-"
"710","method","@HTTP(method = ""CUSTOM"", path = ""/foo/bar/"", hasBody = true) //
      Call<ResponseBody> method()","0","-","-","-","-"
"711","bodyRequired","@Test
  public void bodyRequired()","0","-","-","-","-"
"712","method","@POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"713","bodyWithPathParams","@Test
  public void bodyWithPathParams()","0","-","-","-","-"
"714","method","@POST(""/foo/bar/","0","-","-","-","-"
"715","simpleMultipart","@Test
  public void simpleMultipart() throws IOException","0","-","-","-","-"
"716","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") String ping, @Part(""kit"") RequestBody kit)","0","-","-","-","-"
"717","multipartArray","@Test
  public void multipartArray() throws IOException","0","-","-","-","-"
"718","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") String[] ping)","0","-","-","-","-"
"719","multipartRequiresName","@Test
  public void multipartRequiresName()","0","-","-","-","-"
"720","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part RequestBody part)","0","-","-","-","-"
"721","multipartIterableRequiresName","@Test
  public void multipartIterableRequiresName()","0","-","-","-","-"
"722","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part List<RequestBody> part)","0","-","-","-","-"
"723","multipartArrayRequiresName","@Test
  public void multipartArrayRequiresName()","0","-","-","-","-"
"724","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part RequestBody[] part)","0","-","-","-","-"
"725","multipartOkHttpPartForbidsName","@Test
  public void multipartOkHttpPartForbidsName()","0","-","-","-","-"
"726","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""name"") MultipartBody.Part part)","0","-","-","-","-"
"727","multipartOkHttpPart","@Test
  public void multipartOkHttpPart() throws IOException","0","-","-","-","-"
"728","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part MultipartBody.Part part)","0","-","-","-","-"
"729","multipartOkHttpIterablePart","@Test
  public void multipartOkHttpIterablePart() throws IOException","0","-","-","-","-"
"730","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part List<MultipartBody.Part> part)","0","-","-","-","-"
"731","multipartOkHttpArrayPart","@Test
  public void multipartOkHttpArrayPart() throws IOException","0","-","-","-","-"
"732","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part MultipartBody.Part[] part)","0","-","-","-","-"
"733","multipartOkHttpPartWithFilename","@Test
  public void multipartOkHttpPartWithFilename() throws IOException","0","-","-","-","-"
"734","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part MultipartBody.Part part)","0","-","-","-","-"
"735","multipartIterable","@Test
  public void multipartIterable() throws IOException","0","-","-","-","-"
"736","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") List<String> ping)","0","-","-","-","-"
"737","multipartIterableOkHttpPart","@Test
  public void multipartIterableOkHttpPart()","0","-","-","-","-"
"738","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") List<MultipartBody.Part> part)","0","-","-","-","-"
"739","multipartArrayOkHttpPart","@Test
  public void multipartArrayOkHttpPart()","0","-","-","-","-"
"740","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") MultipartBody.Part[] part)","0","-","-","-","-"
"741","multipartWithEncoding","@Test
  public void multipartWithEncoding() throws IOException","0","-","-","-","-"
"742","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(
          @Part(value = ""ping"", encoding = ""8-bit"") String ping,
          @Part(value = ""kit"", encoding = ""7-bit"") RequestBody kit)","0","-","-","-","-"
"743","multipartPartMap","@Test
  public void multipartPartMap() throws IOException","0","-","-","-","-"
"744","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, RequestBody> parts)","0","-","-","-","-"
"745","multipartPartMapWithEncoding","@Test
  public void multipartPartMapWithEncoding() throws IOException","0","-","-","-","-"
"746","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap(encoding = ""8-bit"") Map<String, RequestBody> parts)","0","-","-","-","-"
"747","multipartPartMapRejectsNonStringKeys","@Test
  public void multipartPartMapRejectsNonStringKeys()","0","-","-","-","-"
"748","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<Object, RequestBody> parts)","0","-","-","-","-"
"749","multipartPartMapRejectsOkHttpPartValues","@Test
  public void multipartPartMapRejectsOkHttpPartValues()","0","-","-","-","-"
"750","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, MultipartBody.Part> parts)","0","-","-","-","-"
"751","multipartPartMapRejectsNull","@Test
  public void multipartPartMapRejectsNull()","0","-","-","-","-"
"752","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, RequestBody> parts)","0","-","-","-","-"
"753","multipartPartMapRejectsNullKeys","@Test
  public void multipartPartMapRejectsNullKeys()","0","-","-","-","-"
"754","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, RequestBody> parts)","0","-","-","-","-"
"755","multipartPartMapRejectsNullValues","@Test
  public void multipartPartMapRejectsNullValues()","0","-","-","-","-"
"756","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Map<String, RequestBody> parts)","0","-","-","-","-"
"757","multipartPartMapMustBeMap","@Test
  public void multipartPartMapMustBeMap()","0","-","-","-","-"
"758","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap List<Object> parts)","0","-","-","-","-"
"759","multipartPartMapSupportsSubclasses","@Test
  public void multipartPartMapSupportsSubclasses() throws IOException","0","-","-","-","-"
"760","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@PartMap Foo parts)","0","-","-","-","-"
"761","multipartNullRemovesPart","@Test
  public void multipartNullRemovesPart() throws IOException","0","-","-","-","-"
"762","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") String ping, @Part(""fizz"") String fizz)","0","-","-","-","-"
"763","multipartPartOptional","@Test
  public void multipartPartOptional()","0","-","-","-","-"
"764","method","@Multipart //
      @POST(""/foo/bar/"") //
      Call<ResponseBody> method(@Part(""ping"") RequestBody ping)","0","-","-","-","-"
"765","simpleFormEncoded","@Test
  public void simpleFormEncoded()","0","-","-","-","-"
"766","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@Field(""foo"") String foo, @Field(""ping"") String ping)","0","-","-","-","-"
"767","formEncodedWithEncodedNameFieldParam","@Test
  public void formEncodedWithEncodedNameFieldParam()","0","-","-","-","-"
"768","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@Field(value = ""na%20me"", encoded = true) String foo)","0","-","-","-","-"
"769","formEncodedFieldOptional","@Test
  public void formEncodedFieldOptional()","0","-","-","-","-"
"770","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(
          @Field(""foo"") String foo, @Field(""ping"") String ping, @Field(""kit"") String kit)","0","-","-","-","-"
"771","formEncodedFieldList","@Test
  public void formEncodedFieldList()","0","-","-","-","-"
"772","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@Field(""foo"") List<Object> fields, @Field(""kit"") String kit)","0","-","-","-","-"
"773","formEncodedFieldArray","@Test
  public void formEncodedFieldArray()","0","-","-","-","-"
"774","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@Field(""foo"") Object[] fields, @Field(""kit"") String kit)","0","-","-","-","-"
"775","formEncodedFieldPrimitiveArray","@Test
  public void formEncodedFieldPrimitiveArray()","0","-","-","-","-"
"776","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@Field(""foo"") int[] fields, @Field(""kit"") String kit)","0","-","-","-","-"
"777","formEncodedWithEncodedNameFieldParamMap","@Test
  public void formEncodedWithEncodedNameFieldParamMap()","0","-","-","-","-"
"778","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@FieldMap(encoded = true) Map<String, Object> fieldMap)","0","-","-","-","-"
"779","formEncodedFieldMap","@Test
  public void formEncodedFieldMap()","0","-","-","-","-"
"780","method","@FormUrlEncoded //
      @POST(""/foo"") //
      Call<ResponseBody> method(@FieldMap Map<String, Object> fieldMap)","0","-","-","-","-"
"781","fieldMapRejectsNull","@Test
  public void fieldMapRejectsNull()","0","-","-","-","-"
"782","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method(@FieldMap Map<String, Object> a)","0","-","-","-","-"
"783","fieldMapRejectsNullKeys","@Test
  public void fieldMapRejectsNullKeys()","0","-","-","-","-"
"784","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method(@FieldMap Map<String, Object> a)","0","-","-","-","-"
"785","fieldMapRejectsNullValues","@Test
  public void fieldMapRejectsNullValues()","0","-","-","-","-"
"786","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method(@FieldMap Map<String, Object> a)","0","-","-","-","-"
"787","fieldMapMustBeAMap","@Test
  public void fieldMapMustBeAMap()","0","-","-","-","-"
"788","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method(@FieldMap List<String> a)","0","-","-","-","-"
"789","fieldMapSupportsSubclasses","@Test
  public void fieldMapSupportsSubclasses() throws IOException","0","-","-","-","-"
"790","method","@FormUrlEncoded //
      @POST(""/"") //
      Call<ResponseBody> method(@FieldMap Foo a)","0","-","-","-","-"
"791","simpleHeaders","@Test
  public void simpleHeaders()","0","-","-","-","-"
"792","method","@GET(""/foo/bar/"")
      @Headers(","0","-","-","-","-"
"793","simpleHeadersAllowingUnsafeNonAsciiValues","@Test
  public void simpleHeadersAllowingUnsafeNonAsciiValues()","0","-","-","-","-"
"794","method","@GET(""/foo/bar/"")
      @Headers(
          value =","0","-","-","-","-"
"795","headersDoNotOverwriteEachOther","@Test
  public void headersDoNotOverwriteEachOther()","0","-","-","-","-"
"796","method","@GET(""/foo/bar/"")
      @Headers(","0","-","-","-","-"
"797","headerParamToString","@Test
  public void headerParamToString()","0","-","-","-","-"
"798","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Header(""kit"") BigInteger kit)","0","-","-","-","-"
"799","headerParam","@Test
  public void headerParam()","0","-","-","-","-"
"800","method","@GET(""/foo/bar/"") //
      @Headers(""ping: pong"") //
      Call<ResponseBody> method(@Header(""kit"") String kit)","0","-","-","-","-"
"801","headerParamAllowingUnsafeNonAsciiValues","@Test
  public void headerParamAllowingUnsafeNonAsciiValues()","0","-","-","-","-"
"802","method","@GET(""/foo/bar/"") //
      @Headers(""ping: pong"") //
      Call<ResponseBody> method(
          @Header(value = ""title"", allowUnsafeNonAsciiValues = true) String kit)","0","-","-","-","-"
"803","headerParamList","@Test
  public void headerParamList()","0","-","-","-","-"
"804","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Header(""foo"") List<String> kit)","0","-","-","-","-"
"805","headerParamArray","@Test
  public void headerParamArray()","0","-","-","-","-"
"806","method","@GET(""/foo/bar/"") //
      Call<ResponseBody> method(@Header(""foo"") String[] kit)","0","-","-","-","-"
"807","contentTypeAnnotationHeaderOverrides","@Test
  public void contentTypeAnnotationHeaderOverrides()","0","-","-","-","-"
"808","method","@POST(""/"") //
      @Headers(""Content-Type: text/not-plain"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"809","contentTypeAnnotationHeaderOverridesFormEncoding","@Test
  public void contentTypeAnnotationHeaderOverridesFormEncoding()","0","-","-","-","-"
"810","method","@FormUrlEncoded //
      @POST(""/foo"") //
      @Headers(""Content-Type: text/not-plain"") //
      Call<ResponseBody> method(@Field(""foo"") String foo, @Field(""ping"") String ping)","0","-","-","-","-"
"811","contentTypeAnnotationHeaderOverridesMultipart","@Test
  public void contentTypeAnnotationHeaderOverridesMultipart()","0","-","-","-","-"
"812","method","@Multipart //
      @POST(""/foo/bar/"") //
      @Headers(""Content-Type: text/not-plain"") //
      Call<ResponseBody> method(@Part(""ping"") String ping, @Part(""kit"") RequestBody kit)","0","-","-","-","-"
"813","malformedContentTypeHeaderThrows","@Test
  public void malformedContentTypeHeaderThrows()","0","-","-","-","-"
"814","method","@POST(""/"") //
      @Headers(""Content-Type: hello, world!"") //
      Call<ResponseBody> method(@Body RequestBody body)","0","-","-","-","-"
"815","contentTypeAnnotationHeaderAddsHeaderWithNoBodyGet","@Test
  public void contentTypeAnnotationHeaderAddsHeaderWithNoBodyGet()","0","-","-","-","-"
"816","method","@GET(""/"") //
      @Headers(""Content-Type: text/not-plain"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"817","contentTypeAnnotationHeaderAddsHeaderWithNoBodyDelete","@Test
  public void contentTypeAnnotationHeaderAddsHeaderWithNoBodyDelete()","0","-","-","-","-"
"818","method","@DELETE(""/"") //
      @Headers(""Content-Type: text/not-plain"") //
      Call<ResponseBody> method()","0","-","-","-","-"
"819","contentTypeParameterHeaderOverrides","@Test
  public void contentTypeParameterHeaderOverrides()","0","-","-","-","-"
"820","method","@POST(""/"") //
      Call<ResponseBody> method(
          @Header(""Content-Type"") String contentType, @Body RequestBody body)","0","-","-","-","-"
"821","malformedContentTypeParameterThrows","@Test
  public void malformedContentTypeParameterThrows()","0","-","-","-","-"
"822","method","@POST(""/"") //
      Call<ResponseBody> method(
          @Header(""Content-Type"") String contentType, @Body RequestBody body)","0","-","-","-","-"
"823","malformedAnnotationRelativeUrlThrows","@Test
  public void malformedAnnotationRelativeUrlThrows()","0","-","-","-","-"
"824","get","@GET(""ftp://example.org"")
      Call<ResponseBody> get()","0","-","-","-","-"
"825","malformedParameterRelativeUrlThrows","@Test
  public void malformedParameterRelativeUrlThrows()","0","-","-","-","-"
"826","get","@GET
      Call<ResponseBody> get(@Url String relativeUrl)","0","-","-","-","-"
"827","multipartPartsShouldBeInOrder","@Test
  public void multipartPartsShouldBeInOrder() throws IOException","0","-","-","-","-"
"828","get","@Multipart
      @POST(""/foo"")
      Call<ResponseBody> get(
          @Part(""first"") String data,
          @Part(""second"") String dataTwo,
          @Part(""third"") String dataThree)","0","-","-","-","-"
"829","queryParamsSkippedIfConvertedToNull","@Test
  public void queryParamsSkippedIfConvertedToNull() throws Exception","0","-","-","-","-"
"830","queryPath","@GET(""/query"")
      Call<ResponseBody> queryPath(@Query(""a"") Object a)","0","-","-","-","-"
"831","queryParamMapsConvertedToNullShouldError","@Test
  public void queryParamMapsConvertedToNullShouldError() throws Exception","0","-","-","-","-"
"832","queryPath","@GET(""/query"")
      Call<ResponseBody> queryPath(@QueryMap Map<String, String> a)","0","-","-","-","-"
"833","fieldParamsSkippedIfConvertedToNull","@Test
  public void fieldParamsSkippedIfConvertedToNull() throws Exception","0","-","-","-","-"
"834","queryPath","@FormUrlEncoded
      @POST(""/query"")
      Call<ResponseBody> queryPath(@Field(""a"") Object a)","0","-","-","-","-"
"835","fieldParamMapsConvertedToNullShouldError","@Test
  public void fieldParamMapsConvertedToNullShouldError() throws Exception","0","-","-","-","-"
"836","queryPath","@FormUrlEncoded
      @POST(""/query"")
      Call<ResponseBody> queryPath(@FieldMap Map<String, String> a)","0","-","-","-","-"
"837","tag","@Test
  public void tag()","0","-","-","-","-"
"838","method","@GET(""/"")
      Call<ResponseBody> method(@Tag String tag)","0","-","-","-","-"
"839","tagPrimitive","@Test
  public void tagPrimitive()","0","-","-","-","-"
"840","method","@GET(""/"")
      Call<ResponseBody> method(@Tag long timestamp)","0","-","-","-","-"
"841","tagGeneric","@Test
  public void tagGeneric()","0","-","-","-","-"
"842","method","@GET(""/"")
      Call<ResponseBody> method(@Tag List<String> tag)","0","-","-","-","-"
"843","tagDuplicateFails","@Test
  public void tagDuplicateFails()","0","-","-","-","-"
"844","method","@GET(""/"")
      Call<ResponseBody> method(@Tag String one, @Tag String two)","0","-","-","-","-"
"845","tagGenericDuplicateFails","@Test
  public void tagGenericDuplicateFails()","0","-","-","-","-"
"846","method","@GET(""/"")
      Call<ResponseBody> method(@Tag List<String> one, @Tag List<Long> two)","0","-","-","-","-"
"847","assertBody","private static void assertBody(RequestBody body, String expected)","0","-","-","-","-"
"848","assertMalformedRequest","static void assertMalformedRequest(Class<?> cls, Object... args)","0","-","-","-","-"
"849","postMethod","@POST(""/","0","-","-","-","-"
"850","invocationObjectOnCallAndRequestTag","@Test
  public void invocationObjectOnCallAndRequestTag()","0","-","-","-","-"
"851","invocationCorrectlyIdentifiesServiceMethodInvocation","@Test
  public void invocationCorrectlyIdentifiesServiceMethodInvocation()","0","-","-","-","-"
"852","nullService","@Test
  public void nullService()","0","-","-","-","-"
"853","nullInstance","@Test
  public void nullInstance()","0","-","-","-","-"
"854","nullMethod","@Test
  public void nullMethod()","0","-","-","-","-"
"855","nullArguments","@Test
  public void nullArguments()","0","-","-","-","-"
"856","deprecatedNullMethod","@Test
  public void deprecatedNullMethod()","0","-","-","-","-"
"857","deprecatedNullArguments","@Test
  public void deprecatedNullArguments()","0","-","-","-","-"
"858","argumentsAreImmutable","@Test
  public void argumentsAreImmutable()","0","-","-","-","-"
"859","user","@GET(""/"")
    Call<String> user(@Query(""name"") String name);","0","-","-","-","-"
"860","user","default Call<String> user()","0","-","-","-","-"
"861","test","@Test
  public void test() throws IOException","0","-","-","-","-"
"862","paramIndexIsUsedWithoutParamReflection","@Test
  public void paramIndexIsUsedWithoutParamReflection()","0","-","-","-","-"
"863","method","@GET(""/"") //
    Call<ResponseBody> method(String theFirstParameter);","0","-","-","-","-"
"864","paramNameIsUsedWithParamReflection","@Test
  public void paramNameIsUsedWithParamReflection()","0","-","-","-","-"
"865","buildRequest","static <T> Request buildRequest(Class<T> cls, Retrofit.Builder builder, Object... args)","0","-","-","-","-"
"866","buildRequest","static <T> Request buildRequest(Class<T> cls, Object... args)","0","-","-","-","-"
"867","onlyMethod","static Method onlyMethod(Class c)","0","-","-","-","-"
"868","repeat","static String repeat(char c, int times)","0","-","-","-","-"
"869","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"870","requestBodyConverter","@Override
  public @Nullable Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"871","method","@GET(""/"")
  Call<ResponseBody> method(String theFirstParameter);","0","-","-","-","-"
"872","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"873","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"874","stringConverter","@Override
  public @Nullable Converter<?, String> stringConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"875","stringConverter","@Override
  public Converter<?, String> stringConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"876","convert","@Override
      public String convert(Object value) throws IOException","0","-","-","-","-"
"877","get","@Override
  public CallAdapter<?, ?> get(Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"878","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"879","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, Object> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"880","invoke","@Nullable
  static Object invoke(
      Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
      throws Throwable","0","-","-","-","-"
"881","DefaultMethodSupport","private DefaultMethodSupport()","0","-","-","-","-"
"882","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"883","BodyCallAdapter","BodyCallAdapter(Type responseType)","0","-","-","-","-"
"884","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"885","adapt","@Override
    public CompletableFuture<R> adapt(final Call<R> call)","0","-","-","-","-"
"886","BodyCallback","public BodyCallback(CompletableFuture<R> future)","0","-","-","-","-"
"887","onResponse","@Override
      public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"888","onFailure","@Override
      public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"889","ResponseCallAdapter","ResponseCallAdapter(Type responseType)","0","-","-","-","-"
"890","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"891","adapt","@Override
    public CompletableFuture<Response<R>> adapt(final Call<R> call)","0","-","-","-","-"
"892","ResponseCallback","public ResponseCallback(CompletableFuture<Response<R>> future)","0","-","-","-","-"
"893","onResponse","@Override
      public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"894","onFailure","@Override
      public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"895","CallCancelCompletableFuture","CallCancelCompletableFuture(Call<?> call)","0","-","-","-","-"
"896","cancel","@Override
    public boolean cancel(boolean mayInterruptIfRunning)","0","-","-","-","-"
"897","execute","@Override
  public void execute(Runnable r)","0","-","-","-","-"
"898","of","public static <T> Invocation of(Class<T> service, T instance, Method method, List<?> arguments)","0","-","-","-","-"
"899","of","@Deprecated
  public static Invocation of(Method method, List<?> arguments)","0","-","-","-","-"
"900","Invocation","/** Trusted constructor assumes ownership of","0","-","-","-","-"
"901","service","public Class<?> service()","0","-","-","-","-"
"902","instance","/**
   * The instance of","0","-","-","-","-"
"903","method","public Method method()","0","-","-","-","-"
"904","arguments","public List<?> arguments()","0","-","-","-","-"
"905","toString","@Override
  public String toString()","0","-","-","-","-"
"906","success","/** Create a synthetic successful response with","0","-","-","-","-"
"907","success","/**
   * Create a synthetic successful response with an HTTP status code of","0","-","-","-","-"
"908","success","/**
   * Create a synthetic successful response using","0","-","-","-","-"
"909","success","/**
   * Create a successful response from","0","-","-","-","-"
"910","error","/**
   * Create a synthetic error response with an HTTP status code of","0","-","-","-","-"
"911","error","/** Create an error response from","0","-","-","-","-"
"912","Response","private Response(
      okhttp3.Response rawResponse, @Nullable T body, @Nullable ResponseBody errorBody)","0","-","-","-","-"
"913","raw","/** The raw response from the HTTP client. */
  public okhttp3.Response raw()","0","-","-","-","-"
"914","code","/** HTTP status code. */
  public int code()","0","-","-","-","-"
"915","message","/** HTTP status message or null if unknown. */
  public String message()","0","-","-","-","-"
"916","headers","/** HTTP headers. */
  public Headers headers()","0","-","-","-","-"
"917","isSuccessful","/** Returns true if","0","-","-","-","-"
"918","body","/** The deserialized response body of a","0","-","-","-","-"
"919","errorBody","/** The raw response body of an","0","-","-","-","-"
"920","toString","@Override
  public String toString()","0","-","-","-","-"
"921","isDefaultMethod","boolean isDefaultMethod(Method method)","0","-","-","-","-"
"922","invokeDefaultMethod","@Nullable
  Object invokeDefaultMethod(
      Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
      throws Throwable","0","-","-","-","-"
"923","describeMethodParameter","String describeMethodParameter(Method method, int index)","0","-","-","-","-"
"924","isDefaultMethod","@Override
    boolean isDefaultMethod(Method method)","0","-","-","-","-"
"925","invokeDefaultMethod","@Override
    Object invokeDefaultMethod(
        Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
        throws Throwable","0","-","-","-","-"
"926","describeMethodParameter","@Override
    String describeMethodParameter(Method method, int index)","0","-","-","-","-"
"927","isDefaultMethod","@Override
    boolean isDefaultMethod(Method method)","0","-","-","-","-"
"928","invokeDefaultMethod","@Override
    Object invokeDefaultMethod(
        Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
        throws Throwable","0","-","-","-","-"
"929","RequestBuilder","RequestBuilder(
      String method,
      HttpUrl baseUrl,
      @Nullable String relativeUrl,
      @Nullable Headers headers,
      @Nullable MediaType contentType,
      boolean hasBody,
      boolean isFormEncoded,
      boolean isMultipart)","0","-","-","-","-"
"930","setRelativeUrl","void setRelativeUrl(Object relativeUrl)","0","-","-","-","-"
"931","addHeader","void addHeader(String name, String value, boolean allowUnsafeNonAsciiValues)","0","-","-","-","-"
"932","addHeaders","void addHeaders(Headers headers)","0","-","-","-","-"
"933","addPathParam","void addPathParam(String name, String value, boolean encoded)","0","-","-","-","-"
"934","canonicalizeForPath","private static String canonicalizeForPath(String input, boolean alreadyEncoded)","0","-","-","-","-"
"935","canonicalizeForPath","private static void canonicalizeForPath(
      Buffer out, String input, int pos, int limit, boolean alreadyEncoded)","0","-","-","-","-"
"936","addQueryParam","void addQueryParam(String name, @Nullable String value, boolean encoded)","0","-","-","-","-"
"937","addFormField","@SuppressWarnings(""ConstantConditions"") // Only called when isFormEncoded was true.
  void addFormField(String name, String value, boolean encoded)","0","-","-","-","-"
"938","addPart","@SuppressWarnings(""ConstantConditions"") // Only called when isMultipart was true.
  void addPart(Headers headers, RequestBody body)","0","-","-","-","-"
"939","addPart","@SuppressWarnings(""ConstantConditions"") // Only called when isMultipart was true.
  void addPart(MultipartBody.Part part)","0","-","-","-","-"
"940","setBody","void setBody(RequestBody body)","0","-","-","-","-"
"941","addTag","<T> void addTag(Class<T> cls, @Nullable T value)","0","-","-","-","-"
"942","get","Request.Builder get()","0","-","-","-","-"
"943","ContentTypeOverridingRequestBody","ContentTypeOverridingRequestBody(RequestBody delegate, MediaType contentType)","0","-","-","-","-"
"944","contentType","@Override
    public MediaType contentType()","0","-","-","-","-"
"945","contentLength","@Override
    public long contentLength() throws IOException","0","-","-","-","-"
"946","writeTo","@Override
    public void writeTo(BufferedSink sink) throws IOException","0","-","-","-","-"
"947","Retrofit","Retrofit(
      okhttp3.Call.Factory callFactory,
      HttpUrl baseUrl,
      List<Converter.Factory> converterFactories,
      int defaultConverterFactoriesSize,
      List<CallAdapter.Factory> callAdapterFactories,
      int defaultCallAdapterFactoriesSize,
      @Nullable Executor callbackExecutor,
      boolean validateEagerly)","0","-","-","-","-"
"948","create","/**
   * Create an implementation of the API endpoints defined by the","0","-","-","-","-"
"949","invoke","@Override
              public @Nullable Object invoke(Object proxy, Method method, @Nullable Object[] args)
                  throws Throwable","0","-","-","-","-"
"950","validateServiceInterface","private void validateServiceInterface(Class<?> service)","0","-","-","-","-"
"951","loadServiceMethod","ServiceMethod<?> loadServiceMethod(Class<?> service, Method method)","0","-","-","-","-"
"952","callFactory","/**
   * The factory used to create","0","-","-","-","-"
"953","baseUrl","/** The API base URL. */
  public HttpUrl baseUrl()","0","-","-","-","-"
"954","callAdapterFactories","/**
   * Returns a list of the factories tried when creating a","0","-","-","-","-"
"955","callAdapter","/**
   * Returns the","0","-","-","-","-"
"956","nextCallAdapter","/**
   * Returns the","0","-","-","-","-"
"957","converterFactories","/**
   * Returns an unmodifiable list of the factories tried when creating a","0","-","-","-","-"
"958","requestBodyConverter","/**
   * Returns a","0","-","-","-","-"
"959","nextRequestBodyConverter","/**
   * Returns a","0","-","-","-","-"
"960","responseBodyConverter","/**
   * Returns a","0","-","-","-","-"
"961","nextResponseBodyConverter","/**
   * Returns a","0","-","-","-","-"
"962","stringConverter","/**
   * Returns a","0","-","-","-","-"
"963","callbackExecutor","/**
   * The executor used for","0","-","-","-","-"
"964","newBuilder","public Builder newBuilder()","0","-","-","-","-"
"965","Builder","public Builder()","0","-","-","-","-"
"966","Builder","Builder(Retrofit retrofit)","0","-","-","-","-"
"967","client","/**
     * The HTTP client used for requests.
     *
     * <p>This is a convenience method for calling","0","-","-","-","-"
"968","callFactory","/**
     * Specify a custom call factory for creating","0","-","-","-","-"
"969","baseUrl","/**
     * Set the API base URL.
     *
     * @see #baseUrl(HttpUrl)
     */
    public Builder baseUrl(URL baseUrl)","0","-","-","-","-"
"970","baseUrl","/**
     * Set the API base URL.
     *
     * @see #baseUrl(HttpUrl)
     */
    public Builder baseUrl(String baseUrl)","0","-","-","-","-"
"971","baseUrl","/**
     * Set the API base URL.
     *
     * <p>The specified endpoint values (such as with","0","-","-","-","-"
"972","addConverterFactory","/** Add converter factory for serialization and deserialization of objects. */
    public Builder addConverterFactory(Converter.Factory factory)","0","-","-","-","-"
"973","addCallAdapterFactory","/**
     * Add a call adapter factory for supporting service method return types other than","0","-","-","-","-"
"974","callbackExecutor","/**
     * The executor on which","0","-","-","-","-"
"975","callAdapterFactories","/** Returns a modifiable list of call adapter factories. */
    public List<CallAdapter.Factory> callAdapterFactories()","0","-","-","-","-"
"976","converterFactories","/** Returns a modifiable list of converter factories. */
    public List<Converter.Factory> converterFactories()","0","-","-","-","-"
"977","validateEagerly","/**
     * When calling","0","-","-","-","-"
"978","build","/**
     * Create the","0","-","-","-","-"
"979","parseAnnotations","/**
   * Inspects the annotations on an interface method to construct a reusable service method that
   * speaks HTTP. This requires potentially-expensive reflection so it is best to build each service
   * method only once and reuse it.
   */
  static <ResponseT, ReturnT> HttpServiceMethod<ResponseT, ReturnT> parseAnnotations(
      Retrofit retrofit, Method method, RequestFactory requestFactory)","0","-","-","-","-"
"980","createCallAdapter","private static <ResponseT, ReturnT> CallAdapter<ResponseT, ReturnT> createCallAdapter(
      Retrofit retrofit, Method method, Type returnType, Annotation[] annotations)","0","-","-","-","-"
"981","createResponseConverter","private static <ResponseT> Converter<ResponseBody, ResponseT> createResponseConverter(
      Retrofit retrofit, Method method, Type responseType)","0","-","-","-","-"
"982","HttpServiceMethod","HttpServiceMethod(
      RequestFactory requestFactory,
      okhttp3.Call.Factory callFactory,
      Converter<ResponseBody, ResponseT> responseConverter)","0","-","-","-","-"
"983","invoke","@Override
  final @Nullable ReturnT invoke(Object instance, Object[] args)","0","-","-","-","-"
"984","adapt","protected abstract @Nullable ReturnT adapt(Call<ResponseT> call, Object[] args);","0","-","-","-","-"
"985","CallAdapted","CallAdapted(
        RequestFactory requestFactory,
        okhttp3.Call.Factory callFactory,
        Converter<ResponseBody, ResponseT> responseConverter,
        CallAdapter<ResponseT, ReturnT> callAdapter)","0","-","-","-","-"
"986","adapt","@Override
    protected ReturnT adapt(Call<ResponseT> call, Object[] args)","0","-","-","-","-"
"987","SuspendForResponse","SuspendForResponse(
        RequestFactory requestFactory,
        okhttp3.Call.Factory callFactory,
        Converter<ResponseBody, ResponseT> responseConverter,
        CallAdapter<ResponseT, Call<ResponseT>> callAdapter)","0","-","-","-","-"
"988","adapt","@Override
    protected Object adapt(Call<ResponseT> call, Object[] args)","0","-","-","-","-"
"989","SuspendForBody","SuspendForBody(
        RequestFactory requestFactory,
        okhttp3.Call.Factory callFactory,
        Converter<ResponseBody, ResponseT> responseConverter,
        CallAdapter<ResponseT, Call<ResponseT>> callAdapter,
        boolean isNullable,
        boolean isUnit)","0","-","-","-","-"
"990","adapt","@Override
    protected Object adapt(Call<ResponseT> call, Object[] args)","0","-","-","-","-"
"991","Utils","private Utils()","0","-","-","-","-"
"992","methodError","static RuntimeException methodError(Method method, String message, Object... args)","0","-","-","-","-"
"993","methodError","@SuppressWarnings(""AnnotateFormatMethod"")
  static RuntimeException methodError(
      Method method, @Nullable Throwable cause, String message, Object... args)","0","-","-","-","-"
"994","parameterError","static RuntimeException parameterError(
      Method method, Throwable cause, int p, String message, Object... args)","0","-","-","-","-"
"995","parameterError","static RuntimeException parameterError(Method method, int p, String message, Object... args)","0","-","-","-","-"
"996","getRawType","static Class<?> getRawType(Type type)","0","-","-","-","-"
"997","equals","/** Returns true if","0","-","-","-","-"
"998","getGenericSupertype","/**
   * Returns the generic supertype for","0","-","-","-","-"
"999","indexOf","private static int indexOf(Object[] array, Object toFind)","0","-","-","-","-"
"1000","typeToString","static String typeToString(Type type)","0","-","-","-","-"
"1001","getSupertype","/**
   * Returns the generic form of","0","-","-","-","-"
"1002","resolve","static Type resolve(Type context, Class<?> contextRawType, Type toResolve)","0","-","-","-","-"
"1003","resolveTypeVariable","private static Type resolveTypeVariable(
      Type context, Class<?> contextRawType, TypeVariable<?> unknown)","0","-","-","-","-"
"1004","declaringClassOf","/**
   * Returns the declaring class of","0","-","-","-","-"
"1005","checkNotPrimitive","static void checkNotPrimitive(Type type)","0","-","-","-","-"
"1006","isAnnotationPresent","/** Returns true if","0","-","-","-","-"
"1007","buffer","static ResponseBody buffer(final ResponseBody body) throws IOException","0","-","-","-","-"
"1008","getParameterUpperBound","static Type getParameterUpperBound(int index, ParameterizedType type)","0","-","-","-","-"
"1009","getParameterLowerBound","static Type getParameterLowerBound(int index, ParameterizedType type)","0","-","-","-","-"
"1010","hasUnresolvableType","static boolean hasUnresolvableType(@Nullable Type type)","0","-","-","-","-"
"1011","ParameterizedTypeImpl","ParameterizedTypeImpl(@Nullable Type ownerType, Type rawType, Type... typeArguments)","0","-","-","-","-"
"1012","getActualTypeArguments","@Override
    public Type[] getActualTypeArguments()","0","-","-","-","-"
"1013","getRawType","@Override
    public Type getRawType()","0","-","-","-","-"
"1014","getOwnerType","@Override
    public @Nullable Type getOwnerType()","0","-","-","-","-"
"1015","equals","@Override
    public boolean equals(Object other)","0","-","-","-","-"
"1016","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"1017","toString","@Override
    public String toString()","0","-","-","-","-"
"1018","GenericArrayTypeImpl","GenericArrayTypeImpl(Type componentType)","0","-","-","-","-"
"1019","getGenericComponentType","@Override
    public Type getGenericComponentType()","0","-","-","-","-"
"1020","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"1021","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"1022","toString","@Override
    public String toString()","0","-","-","-","-"
"1023","WildcardTypeImpl","WildcardTypeImpl(Type[] upperBounds, Type[] lowerBounds)","0","-","-","-","-"
"1024","getUpperBounds","@Override
    public Type[] getUpperBounds()","0","-","-","-","-"
"1025","getLowerBounds","@Override
    public Type[] getLowerBounds()","0","-","-","-","-"
"1026","equals","@Override
    public boolean equals(Object other)","0","-","-","-","-"
"1027","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"1028","toString","@Override
    public String toString()","0","-","-","-","-"
"1029","throwIfFatal","static void throwIfFatal(Throwable t)","0","-","-","-","-"
"1030","isUnit","static boolean isUnit(Type type)","0","-","-","-","-"
"1031","parseAnnotations","static RequestFactory parseAnnotations(Retrofit retrofit, Class<?> service, Method method)","0","-","-","-","-"
"1032","RequestFactory","RequestFactory(Builder builder)","0","-","-","-","-"
"1033","create","okhttp3.Request create(@Nullable Object instance, Object[] args) throws IOException","0","-","-","-","-"
"1034","Builder","Builder(Retrofit retrofit, Class<?> service, Method method)","0","-","-","-","-"
"1035","build","RequestFactory build()","0","-","-","-","-"
"1036","parseMethodAnnotation","private void parseMethodAnnotation(Annotation annotation)","0","-","-","-","-"
"1037","parseHttpMethodAndPath","private void parseHttpMethodAndPath(String httpMethod, String value, boolean hasBody)","0","-","-","-","-"
"1038","parseHeaders","private Headers parseHeaders(String[] headers, boolean allowUnsafeNonAsciiValues)","0","-","-","-","-"
"1039","parseParameter","private @Nullable ParameterHandler<?> parseParameter(
        int p, Type parameterType, @Nullable Annotation[] annotations, boolean allowContinuation)","0","-","-","-","-"
"1040","parseParameterAnnotation","@Nullable
    private ParameterHandler<?> parseParameterAnnotation(
        int p, Type type, Annotation[] annotations, Annotation annotation)","0","-","-","-","-"
"1041","validateResolvableType","private void validateResolvableType(int p, Type type)","0","-","-","-","-"
"1042","validatePathName","private void validatePathName(int p, String name)","0","-","-","-","-"
"1043","parsePathParameters","/**
     * Gets the set of unique path parameters used in the given URI. If a parameter is used twice in
     * the URI, it will only show up once in the set.
     */
    static Set<String> parsePathParameters(String path)","0","-","-","-","-"
"1044","boxIfPrimitive","private static Class<?> boxIfPrimitive(Class<?> type)","0","-","-","-","-"
"1045","OkHttpCall","OkHttpCall(
      RequestFactory requestFactory,
      Object instance,
      Object[] args,
      okhttp3.Call.Factory callFactory,
      Converter<ResponseBody, T> responseConverter)","0","-","-","-","-"
"1046","clone","@SuppressWarnings(""CloneDoesntCallSuperClone"") // We are a final type & this saves clearing state.
  @Override
  public OkHttpCall<T> clone()","0","-","-","-","-"
"1047","request","@Override
  public synchronized Request request()","0","-","-","-","-"
"1048","timeout","@Override
  public synchronized Timeout timeout()","0","-","-","-","-"
"1049","getRawCall","/**
   * Returns the raw call, initializing it if necessary. Throws if initializing the raw call throws,
   * or has thrown in previous attempts to create it.
   */
  @GuardedBy(""this"")
  private okhttp3.Call getRawCall() throws IOException","0","-","-","-","-"
"1050","enqueue","@Override
  public void enqueue(final Callback<T> callback)","0","-","-","-","-"
"1051","onResponse","@Override
          public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse)","0","-","-","-","-"
"1052","onFailure","@Override
          public void onFailure(okhttp3.Call call, IOException e)","0","-","-","-","-"
"1053","callFailure","private void callFailure(Throwable e)","0","-","-","-","-"
"1054","isExecuted","@Override
  public synchronized boolean isExecuted()","0","-","-","-","-"
"1055","execute","@Override
  public Response<T> execute() throws IOException","0","-","-","-","-"
"1056","createRawCall","private okhttp3.Call createRawCall() throws IOException","0","-","-","-","-"
"1057","parseResponse","Response<T> parseResponse(okhttp3.Response rawResponse) throws IOException","0","-","-","-","-"
"1058","cancel","@Override
  public void cancel()","0","-","-","-","-"
"1059","isCanceled","@Override
  public boolean isCanceled()","0","-","-","-","-"
"1060","NoContentResponseBody","NoContentResponseBody(@Nullable MediaType contentType, long contentLength)","0","-","-","-","-"
"1061","contentType","@Override
    public MediaType contentType()","0","-","-","-","-"
"1062","contentLength","@Override
    public long contentLength()","0","-","-","-","-"
"1063","source","@Override
    public BufferedSource source()","0","-","-","-","-"
"1064","ExceptionCatchingResponseBody","ExceptionCatchingResponseBody(ResponseBody delegate)","0","-","-","-","-"
"1065","read","@Override
                public long read(Buffer sink, long byteCount) throws IOException","0","-","-","-","-"
"1066","contentType","@Override
    public MediaType contentType()","0","-","-","-","-"
"1067","contentLength","@Override
    public long contentLength()","0","-","-","-","-"
"1068","source","@Override
    public BufferedSource source()","0","-","-","-","-"
"1069","close","@Override
    public void close()","0","-","-","-","-"
"1070","throwIfCaught","void throwIfCaught() throws IOException","0","-","-","-","-"
"1071","execute","/**
   * Synchronously send the request and return its response.
   *
   * @throws IOException if a problem occurred talking to the server.
   * @throws RuntimeException (and subclasses) if an unexpected error occurs creating the request or
   *     decoding the response.
   */
  Response<T> execute() throws IOException;","0","-","-","-","-"
"1072","enqueue","/**
   * Asynchronously send the request and notify","0","-","-","-","-"
"1073","isExecuted","/**
   * Returns true if this call has been either","0","-","-","-","-"
"1074","cancel","/**
   * Cancel this call. An attempt will be made to cancel in-flight calls, and if the call has not
   * yet been executed it never will be.
   */
  void cancel();","0","-","-","-","-"
"1075","isCanceled","/** True if","0","-","-","-","-"
"1076","clone","/**
   * Create a new, identical call to this one which can be enqueued or executed even if this call
   * has already been.
   */
  Call<T> clone();","0","-","-","-","-"
"1077","request","/** The original HTTP request. */
  Request request();","0","-","-","-","-"
"1078","timeout","/**
   * Returns a timeout that spans the entire call: resolving DNS, connecting, writing the request
   * body, server processing, and reading the response body. If the call requires redirects or
   * retries all must complete within one timeout period.
   */
  Timeout timeout();","0","-","-","-","-"
"1079","apply","abstract void apply(RequestBuilder builder, @Nullable T value) throws IOException;","0","-","-","-","-"
"1080","iterable","final ParameterHandler<Iterable<T>> iterable()","0","-","-","-","-"
"1081","apply","@Override
      void apply(RequestBuilder builder, @Nullable Iterable<T> values) throws IOException","0","-","-","-","-"
"1082","array","final ParameterHandler<Object> array()","0","-","-","-","-"
"1083","apply","@Override
      void apply(RequestBuilder builder, @Nullable Object values) throws IOException","0","-","-","-","-"
"1084","RelativeUrl","RelativeUrl(Method method, int p)","0","-","-","-","-"
"1085","apply","@Override
    void apply(RequestBuilder builder, @Nullable Object value)","0","-","-","-","-"
"1086","Header","Header(String name, Converter<T, String> valueConverter, boolean allowUnsafeNonAsciiValues)","0","-","-","-","-"
"1087","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value) throws IOException","0","-","-","-","-"
"1088","Path","Path(Method method, int p, String name, Converter<T, String> valueConverter, boolean encoded)","0","-","-","-","-"
"1089","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value) throws IOException","0","-","-","-","-"
"1090","Query","Query(String name, Converter<T, String> valueConverter, boolean encoded)","0","-","-","-","-"
"1091","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value) throws IOException","0","-","-","-","-"
"1092","QueryName","QueryName(Converter<T, String> nameConverter, boolean encoded)","0","-","-","-","-"
"1093","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value) throws IOException","0","-","-","-","-"
"1094","QueryMap","QueryMap(Method method, int p, Converter<T, String> valueConverter, boolean encoded)","0","-","-","-","-"
"1095","apply","@Override
    void apply(RequestBuilder builder, @Nullable Map<String, T> value) throws IOException","0","-","-","-","-"
"1096","HeaderMap","HeaderMap(
        Method method,
        int p,
        Converter<T, String> valueConverter,
        boolean allowUnsafeNonAsciiValues)","0","-","-","-","-"
"1097","apply","@Override
    void apply(RequestBuilder builder, @Nullable Map<String, T> value) throws IOException","0","-","-","-","-"
"1098","Headers","Headers(Method method, int p)","0","-","-","-","-"
"1099","apply","@Override
    void apply(RequestBuilder builder, @Nullable okhttp3.Headers headers)","0","-","-","-","-"
"1100","Field","Field(String name, Converter<T, String> valueConverter, boolean encoded)","0","-","-","-","-"
"1101","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value) throws IOException","0","-","-","-","-"
"1102","FieldMap","FieldMap(Method method, int p, Converter<T, String> valueConverter, boolean encoded)","0","-","-","-","-"
"1103","apply","@Override
    void apply(RequestBuilder builder, @Nullable Map<String, T> value) throws IOException","0","-","-","-","-"
"1104","Part","Part(Method method, int p, okhttp3.Headers headers, Converter<T, RequestBody> converter)","0","-","-","-","-"
"1105","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value)","0","-","-","-","-"
"1106","RawPart","private RawPart()","0","-","-","-","-"
"1107","apply","@Override
    void apply(RequestBuilder builder, @Nullable MultipartBody.Part value)","0","-","-","-","-"
"1108","PartMap","PartMap(
        Method method, int p, Converter<T, RequestBody> valueConverter, String transferEncoding)","0","-","-","-","-"
"1109","apply","@Override
    void apply(RequestBuilder builder, @Nullable Map<String, T> value) throws IOException","0","-","-","-","-"
"1110","Body","Body(Method method, int p, Converter<T, RequestBody> converter)","0","-","-","-","-"
"1111","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value)","0","-","-","-","-"
"1112","Tag","Tag(Class<T> cls)","0","-","-","-","-"
"1113","apply","@Override
    void apply(RequestBuilder builder, @Nullable T value)","0","-","-","-","-"
"1114","parseAnnotations","static <T> ServiceMethod<T> parseAnnotations(Retrofit retrofit, Class<?> service, Method method)","0","-","-","-","-"
"1115","invoke","abstract @Nullable T invoke(Object instance, Object[] args);","0","-","-","-","-"
"1116","responseType","/**
   * Returns the value type that this adapter uses when converting the HTTP response body to a Java
   * object. For example, the response type for","0","-","-","-","-"
"1117","adapt","/**
   * Returns an instance of","0","-","-","-","-"
"1118","get","/**
     * Returns a call adapter for interface methods that return","0","-","-","-","-"
"1119","getParameterUpperBound","/**
     * Extract the upper bound of the generic parameter at","0","-","-","-","-"
"1120","getRawType","/**
     * Extract the raw class type from","0","-","-","-","-"
"1121","convert","@Nullable
  T convert(F value) throws IOException;","0","-","-","-","-"
"1122","responseBodyConverter","/**
     * Returns a","0","-","-","-","-"
"1123","requestBodyConverter","/**
     * Returns a","0","-","-","-","-"
"1124","stringConverter","/**
     * Returns a","0","-","-","-","-"
"1125","getParameterUpperBound","/**
     * Extract the upper bound of the generic parameter at","0","-","-","-","-"
"1126","getRawType","/**
     * Extract the raw class type from","0","-","-","-","-"
"1127","Platform","private Platform()","0","-","-","-","-"
"1128","onResponse","/**
   * Invoked for a received HTTP response.
   *
   * <p>Note: An HTTP response may still indicate an application-level failure such as a 404 or 500.
   * Call","0","-","-","-","-"
"1129","onFailure","/**
   * Invoked when a network exception occurred talking to the server or when an unexpected exception
   * occurred creating the request or processing the response.
   */
  void onFailure(Call<T> call, Throwable t);","0","-","-","-","-"
"1130","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1131","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"1132","convert","@Override
    public Void convert(ResponseBody value)","0","-","-","-","-"
"1133","convert","@Override
    public Unit convert(ResponseBody value)","0","-","-","-","-"
"1134","convert","@Override
    public RequestBody convert(RequestBody value)","0","-","-","-","-"
"1135","convert","@Override
    public ResponseBody convert(ResponseBody value)","0","-","-","-","-"
"1136","convert","@Override
    public ResponseBody convert(ResponseBody value) throws IOException","0","-","-","-","-"
"1137","convert","@Override
    public String convert(Object value)","0","-","-","-","-"
"1138","ensurePresent","static Annotation[] ensurePresent(Annotation[] annotations)","0","-","-","-","-"
"1139","annotationType","@Override
  public Class<? extends Annotation> annotationType()","0","-","-","-","-"
"1140","equals","@Override
  public boolean equals(Object obj)","0","-","-","-","-"
"1141","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"1142","toString","@Override
  public String toString()","0","-","-","-","-"
"1143","getMessage","private static String getMessage(Response<?> response)","0","-","-","-","-"
"1144","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"1145","code","/** HTTP status code. */
  public int code()","0","-","-","-","-"
"1146","message","/** HTTP status message. */
  public String message()","0","-","-","-","-"
"1147","response","/** The full HTTP response. This may be null if the exception was serialized. */
  public @Nullable Response<?> response()","0","-","-","-","-"
"1148","DefaultCallAdapterFactory","DefaultCallAdapterFactory(@Nullable Executor callbackExecutor)","0","-","-","-","-"
"1149","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1150","responseType","@Override
      public Type responseType()","0","-","-","-","-"
"1151","adapt","@Override
      public Call<Object> adapt(Call<Object> call)","0","-","-","-","-"
"1152","ExecutorCallbackCall","ExecutorCallbackCall(Executor callbackExecutor, Call<T> delegate)","0","-","-","-","-"
"1153","enqueue","@Override
    public void enqueue(final Callback<T> callback)","0","-","-","-","-"
"1154","onResponse","@Override
            public void onResponse(Call<T> call, final Response<T> response)","0","-","-","-","-"
"1155","onFailure","@Override
            public void onFailure(Call<T> call, final Throwable t)","0","-","-","-","-"
"1156","isExecuted","@Override
    public boolean isExecuted()","0","-","-","-","-"
"1157","execute","@Override
    public Response<T> execute() throws IOException","0","-","-","-","-"
"1158","cancel","@Override
    public void cancel()","0","-","-","-","-"
"1159","isCanceled","@Override
    public boolean isCanceled()","0","-","-","-","-"
"1160","clone","@SuppressWarnings(""CloneDoesntCallSuperClone"") // Performing deep clone.
    @Override
    public Call<T> clone()","0","-","-","-","-"
"1161","request","@Override
    public Request request()","0","-","-","-","-"
"1162","timeout","@Override
    public Timeout timeout()","0","-","-","-","-"
"1163","createDefaultCallAdapterFactories","List<? extends CallAdapter.Factory> createDefaultCallAdapterFactories(
      @Nullable Executor callbackExecutor)","0","-","-","-","-"
"1164","createDefaultConverterFactories","List<? extends Converter.Factory> createDefaultConverterFactories()","0","-","-","-","-"
"1165","createDefaultCallAdapterFactories","@Override
    List<? extends CallAdapter.Factory> createDefaultCallAdapterFactories(
        @Nullable Executor callbackExecutor)","0","-","-","-","-"
"1166","createDefaultConverterFactories","@Override
    List<? extends Converter.Factory> createDefaultConverterFactories()","0","-","-","-","-"
"1167","create","public static OptionalConverterFactory create()","0","-","-","-","-"
"1168","OptionalConverterFactory","OptionalConverterFactory()","0","-","-","-","-"
"1169","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1170","OptionalConverter","OptionalConverter(Converter<ResponseBody, T> delegate)","0","-","-","-","-"
"1171","convert","@Override
    public Optional<T> convert(ResponseBody value) throws IOException","0","-","-","-","-"
"1172","invoke","@IgnoreJRERequirement // Only used on JVM or Android API 24+.
  @Nullable
  static Object invoke(
      Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
      throws Throwable","0","-","-","-","-"
"1173","DefaultMethodSupport","private DefaultMethodSupport()","0","-","-","-","-"
"1174","invoke","@Nullable
  static Object invoke(
      Method method, Class<?> declaringClass, Object proxy, @Nullable Object[] args)
      throws Throwable","0","-","-","-","-"
"1175","DefaultMethodSupport","private DefaultMethodSupport()","0","-","-","-","-"
"1176","robots","@GET(""robots.txt"")
    Call<ResponseBody> robots();","0","-","-","-","-"
"1177","setHost","public void setHost(String host)","0","-","-","-","-"
"1178","intercept","@Override
    public okhttp3.Response intercept(Chain chain) throws IOException","0","-","-","-","-"
"1179","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1180","success","/** Called for [200, 300) responses. */
    void success(Response<T> response);","0","-","-","-","-"
"1181","unauthenticated","/** Called for 401 responses. */
    void unauthenticated(Response<?> response);","0","-","-","-","-"
"1182","clientError","/** Called for [400, 500) responses, except 401. */
    void clientError(Response<?> response);","0","-","-","-","-"
"1183","serverError","/** Called for [500, 600) response. */
    void serverError(Response<?> response);","0","-","-","-","-"
"1184","networkError","/** Called for network errors while making the call. */
    void networkError(IOException e);","0","-","-","-","-"
"1185","unexpectedError","/** Called for unexpected errors while making the call. */
    void unexpectedError(Throwable t);","0","-","-","-","-"
"1186","cancel","void cancel();","0","-","-","-","-"
"1187","enqueue","void enqueue(MyCallback<T> callback);","0","-","-","-","-"
"1188","clone","MyCall<T> clone();","0","-","-","-","-"
"1189","get","@Override
    public @Nullable CallAdapter<?, ?> get(
        Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1190","ErrorHandlingCallAdapter","ErrorHandlingCallAdapter(Type responseType, Executor callbackExecutor)","0","-","-","-","-"
"1191","responseType","@Override
      public Type responseType()","0","-","-","-","-"
"1192","adapt","@Override
      public MyCall<R> adapt(Call<R> call)","0","-","-","-","-"
"1193","MyCallAdapter","MyCallAdapter(Call<T> call, Executor callbackExecutor)","0","-","-","-","-"
"1194","cancel","@Override
    public void cancel()","0","-","-","-","-"
"1195","enqueue","@Override
    public void enqueue(final MyCallback<T> callback)","0","-","-","-","-"
"1196","onResponse","@Override
            public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"1197","onFailure","@Override
            public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"1198","clone","@Override
    public MyCall<T> clone()","0","-","-","-","-"
"1199","getIp","@GET(""/ip"")
    MyCall<Ip> getIp();","0","-","-","-","-"
"1200","main","public static void main(String... args)","0","-","-","-","-"
"1201","success","@Override
          public void success(Response<Ip> response)","0","-","-","-","-"
"1202","unauthenticated","@Override
          public void unauthenticated(Response<?> response)","0","-","-","-","-"
"1203","clientError","@Override
          public void clientError(Response<?> response)","0","-","-","-","-"
"1204","serverError","@Override
          public void serverError(Response<?> response)","0","-","-","-","-"
"1205","networkError","@Override
          public void networkError(IOException e)","0","-","-","-","-"
"1206","unexpectedError","@Override
          public void unexpectedError(Throwable t)","0","-","-","-","-"
"1207","main","@SuppressWarnings(""UnusedVariable"")
  public static void main(String... args)","0","-","-","-","-"
"1208","ObserveOnMainCallAdapterFactory","ObserveOnMainCallAdapterFactory(Scheduler scheduler)","0","-","-","-","-"
"1209","get","@Override
    public @Nullable CallAdapter<?, ?> get(
        Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1210","adapt","@Override
        public Object adapt(Call<Object> call)","0","-","-","-","-"
"1211","responseType","@Override
        public Type responseType()","0","-","-","-","-"
"1212","getUser","@GET(""/user"")
    Call<User> getUser();","0","-","-","-","-"
"1213","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1214","JsonStringConverterFactory","JsonStringConverterFactory(Converter.Factory delegateFactory)","0","-","-","-","-"
"1215","stringConverter","@Override
    public @Nullable Converter<?, String> stringConverter(
        Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1216","DelegateToStringConverter","DelegateToStringConverter(Converter<T, RequestBody> delegate)","0","-","-","-","-"
"1217","convert","@Override
      public String convert(T value) throws IOException","0","-","-","-","-"
"1218","Filter","Filter(String userId)","0","-","-","-","-"
"1219","example","@GET(""/filter"")
    Call<ResponseBody> example(@Json @Query(""value"") Filter value);","0","-","-","-","-"
"1220","main","@SuppressWarnings(""UnusedVariable"")
  public static void main(String... args) throws IOException, InterruptedException","0","-","-","-","-"
"1221","add","public Builder add(Class<? extends Annotation> cls, Converter.Factory factory)","0","-","-","-","-"
"1222","build","public AnnotatedConverterFactory build()","0","-","-","-","-"
"1223","AnnotatedConverterFactory","AnnotatedConverterFactory(Map<Class<? extends Annotation>, Converter.Factory> factories)","0","-","-","-","-"
"1224","responseBodyConverter","@Override
    public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
        Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1225","requestBodyConverter","@Override
    public @Nullable Converter<?, RequestBody> requestBodyConverter(
        Type type,
        Annotation[] parameterAnnotations,
        Annotation[] methodAnnotations,
        Retrofit retrofit)","0","-","-","-","-"
"1226","exampleMoshi","@GET(""/"")
    @Moshi
    Call<Library> exampleMoshi();","0","-","-","-","-"
"1227","exampleGson","@GET(""/"")
    @Gson
    Call<Library> exampleGson();","0","-","-","-","-"
"1228","exampleSimpleXml","@GET(""/"")
    @SimpleXml
    Call<Library> exampleSimpleXml();","0","-","-","-","-"
"1229","exampleDefault","@GET(""/"")
    Call<Library> exampleDefault();","0","-","-","-","-"
"1230","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1231","requestBodyConverter","@Override
    public @Nullable Converter<Object, RequestBody> requestBodyConverter(
        Type type,
        Annotation[] parameterAnnotations,
        Annotation[] methodAnnotations,
        Retrofit retrofit)","0","-","-","-","-"
"1232","contentType","@Override
          public MediaType contentType()","0","-","-","-","-"
"1233","writeTo","@Override
          public void writeTo(BufferedSink sink) throws IOException","0","-","-","-","-"
"1234","Repo","Repo(String owner, String name)","0","-","-","-","-"
"1235","sendNormal","@POST(""/"")
    Call<ResponseBody> sendNormal(@Body Repo repo);","0","-","-","-","-"
"1236","sendChunked","@POST(""/"")
    Call<ResponseBody> sendChunked(@Chunked @Body Repo repo);","0","-","-","-","-"
"1237","main","public static void main(String... args) throws IOException, InterruptedException","0","-","-","-","-"
"1238","Contributor","public Contributor(String login, int contributions)","0","-","-","-","-"
"1239","contributors","@GET(""/repos/","0","-","-","-","-"
"1240","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1241","MockGitHub","MockGitHub(BehaviorDelegate<GitHub> delegate)","0","-","-","-","-"
"1242","contributors","@Override
    public Call<List<Contributor>> contributors(String owner, String repo)","0","-","-","-","-"
"1243","addContributor","void addContributor(String owner, String repo, String name, int contributions)","0","-","-","-","-"
"1244","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1245","printContributors","private static void printContributors(GitHub gitHub, String owner, String repo)
      throws IOException","0","-","-","-","-"
"1246","Crawler","public Crawler(PageService pageService)","0","-","-","-","-"
"1247","crawlPage","public void crawlPage(HttpUrl url)","0","-","-","-","-"
"1248","onResponse","@Override
              public void onResponse(Call<Page> call, Response<Page> response)","0","-","-","-","-"
"1249","onFailure","@Override
              public void onFailure(Call<Page> call, Throwable t)","0","-","-","-","-"
"1250","main","public static void main(String... args) throws Exception","0","-","-","-","-"
"1251","get","@GET
    Call<Page> get(@Url HttpUrl url);","0","-","-","-","-"
"1252","Page","Page(String title, List<String> links)","0","-","-","-","-"
"1253","responseBodyConverter","@Override
          public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
              Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1254","convert","@Override
    public Page convert(ResponseBody responseBody) throws IOException","0","-","-","-","-"
"1255","robots","@GET(""/robots.txt"")
    Call<ResponseBody> robots();","0","-","-","-","-"
"1256","favicon","@GET(""/favicon.ico"")
    Call<ResponseBody> favicon();","0","-","-","-","-"
"1257","home","@GET(""/"")
    Call<ResponseBody> home();","0","-","-","-","-"
"1258","page","@GET
    Call<ResponseBody> page(@Url String path);","0","-","-","-","-"
"1259","intercept","@Override
    public Response intercept(Chain chain) throws IOException","0","-","-","-","-"
"1260","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1261","QualifiedTypeConverterFactory","QualifiedTypeConverterFactory(Converter.Factory jsonFactory, Converter.Factory xmlFactory)","0","-","-","-","-"
"1262","responseBodyConverter","@Override
    public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
        Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1263","requestBodyConverter","@Override
    public @Nullable Converter<?, RequestBody> requestBodyConverter(
        Type type,
        Annotation[] parameterAnnotations,
        Annotation[] methodAnnotations,
        Retrofit retrofit)","0","-","-","-","-"
"1264","exampleJson","@GET(""/"")
    @Json
    Call<User> exampleJson();","0","-","-","-","-"
"1265","exampleXml","@GET(""/"")
    @Xml
    Call<User> exampleXml();","0","-","-","-","-"
"1266","main","public static void main(String... args) throws IOException","0","-","-","-","-"
"1267","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1268","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1269","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1270","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1271","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1272","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1273","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1274","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1275","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1276","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1277","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1278","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1279","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1280","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1281","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1282","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1283","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1284","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1285","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1286","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1287","observableAssembly","@Test
  public void observableAssembly()","0","-","-","-","-"
"1288","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1289","go","@GET(""/"")
    Observable<String> go();","0","-","-","-","-"
"1290","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1291","disposeCancelsCall","@Test
  public void disposeCancelsCall()","0","-","-","-","-"
"1292","disposeBeforeEnqueueDoesNotEnqueue","@SuppressWarnings(""ResultOfMethodCallIgnored"")
  @Test
  public void disposeBeforeEnqueueDoesNotEnqueue()","0","-","-","-","-"
"1293","cancelDoesNotDispose","@Test
  public void cancelDoesNotDispose()","0","-","-","-","-"
"1294","RecordingCompletableObserver","private RecordingCompletableObserver()","0","-","-","-","-"
"1295","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1296","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1297","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1298","takeNotification","private Notification<?> takeNotification()","0","-","-","-","-"
"1299","takeError","public Throwable takeError()","0","-","-","-","-"
"1300","assertComplete","public void assertComplete()","0","-","-","-","-"
"1301","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1302","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1303","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1304","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1305","create","public <T> RecordingCompletableObserver create()","0","-","-","-","-"
"1306","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1307","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1308","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1309","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"1310","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1311","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1312","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1313","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1314","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1315","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1316","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1317","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1318","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1319","completableSuccess200","@Test
  public void completableSuccess200()","0","-","-","-","-"
"1320","completableSuccess404","@Test
  public void completableSuccess404()","0","-","-","-","-"
"1321","completableFailure","@Test
  public void completableFailure()","0","-","-","-","-"
"1322","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1323","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1324","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1325","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1326","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1327","bodyThrowingInOnSuccessDeliveredToPlugin","@Test
  public void bodyThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1328","onSuccess","@Override
              public void onSuccess(String value)","0","-","-","-","-"
"1329","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1330","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1331","responseThrowingInOnSuccessDeliveredToPlugin","@Test
  public void responseThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1332","onSuccess","@Override
              public void onSuccess(Response<String> value)","0","-","-","-","-"
"1333","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1334","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1335","resultThrowingInOnSuccessDeliveredToPlugin","@Test
  public void resultThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1336","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1337","resultThrowingInOnErrorDeliveredToPlugin","@Ignore(""Single's contract is onNext|onError so we have no way of triggering this case"")
  @Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1338","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1339","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1340","ForwardingObserver","ForwardingObserver(MaybeObserver<T> delegate)","0","-","-","-","-"
"1341","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1342","onSuccess","@Override
    public void onSuccess(T value)","0","-","-","-","-"
"1343","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1344","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1345","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1346","nullSchedulerThrows","@Test
  public void nullSchedulerThrows()","0","-","-","-","-"
"1347","nonRxJavaTypeReturnsNull","@Test
  public void nonRxJavaTypeReturnsNull()","0","-","-","-","-"
"1348","responseTypes","@Test
  public void responseTypes()","0","-","-","-","-"
"1349","rawBodyTypeThrows","@Test
  public void rawBodyTypeThrows()","0","-","-","-","-"
"1350","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"1351","rawResultTypeThrows","@Test
  public void rawResultTypeThrows()","0","-","-","-","-"
"1352","go","@GET(""/"")
    Observable<String> go();","0","-","-","-","-"
"1353","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1354","disposeBeforeExecuteDoesNotEnqueue","@SuppressWarnings(""ResultOfMethodCallIgnored"")
  @Test
  public void disposeBeforeExecuteDoesNotEnqueue()","0","-","-","-","-"
"1355","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1356","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1357","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1358","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1359","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1360","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1361","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1362","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1363","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1364","tearDown","@After
  public void tearDown()","0","-","-","-","-"
"1365","success","@Test
  public void success() throws InterruptedException","0","-","-","-","-"
"1366","failure","@Test
  public void failure() throws InterruptedException","0","-","-","-","-"
"1367","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"1368","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1369","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"1370","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1371","bodyThrowingFatalInOnErrorPropagates","@Test
  public void bodyThrowingFatalInOnErrorPropagates() throws InterruptedException","0","-","-","-","-"
"1372","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1373","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1374","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1375","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1376","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1377","bodyThrowingInOnSuccessDeliveredToPlugin","@Test
  public void bodyThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1378","onSuccess","@Override
              public void onSuccess(String value)","0","-","-","-","-"
"1379","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1380","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1381","responseThrowingInOnSuccessDeliveredToPlugin","@Test
  public void responseThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1382","onSuccess","@Override
              public void onSuccess(Response<String> value)","0","-","-","-","-"
"1383","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1384","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1385","resultThrowingInOnSuccessDeliveredToPlugin","@Test
  public void resultThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1386","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1387","resultThrowingInOnErrorDeliveredToPlugin","@Ignore(""Single's contract is onNext|onError so we have no way of triggering this case"")
  @Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1388","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1389","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1390","ForwardingObserver","ForwardingObserver(SingleObserver<T> delegate)","0","-","-","-","-"
"1391","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1392","onSuccess","@Override
    public void onSuccess(T value)","0","-","-","-","-"
"1393","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1394","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1395","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1396","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1397","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1398","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1399","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"1400","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1401","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1402","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1403","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1404","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1405","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"1406","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1407","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1408","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1409","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1410","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1411","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1412","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"1413","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1414","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1415","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1416","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1417","ForwardingSubscriber","ForwardingSubscriber(Subscriber<T> delegate)","0","-","-","-","-"
"1418","onSubscribe","@Override
    public void onSubscribe(Subscription subscription)","0","-","-","-","-"
"1419","onNext","@Override
    public void onNext(T value)","0","-","-","-","-"
"1420","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1421","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1422","RecordingObserver","private RecordingObserver()","0","-","-","-","-"
"1423","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1424","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"1425","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1426","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1427","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1428","takeValue","public T takeValue()","0","-","-","-","-"
"1429","takeError","public Throwable takeError()","0","-","-","-","-"
"1430","assertAnyValue","public RecordingObserver<T> assertAnyValue()","0","-","-","-","-"
"1431","assertValue","public RecordingObserver<T> assertValue(T value)","0","-","-","-","-"
"1432","assertComplete","public void assertComplete()","0","-","-","-","-"
"1433","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1434","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1435","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1436","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1437","create","public <T> RecordingObserver<T> create()","0","-","-","-","-"
"1438","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1439","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1440","apply","@Override
  public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1441","evaluate","@Override
      public void evaluate() throws Throwable","0","-","-","-","-"
"1442","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1443","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1444","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1445","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1446","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1447","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1448","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1449","response","@Test
  public void response()","0","-","-","-","-"
"1450","nullResponseThrows","@Test
  public void nullResponseThrows()","0","-","-","-","-"
"1451","error","@Test
  public void error()","0","-","-","-","-"
"1452","nullErrorThrows","@Test
  public void nullErrorThrows()","0","-","-","-","-"
"1453","RecordingMaybeObserver","private RecordingMaybeObserver()","0","-","-","-","-"
"1454","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1455","onSuccess","@Override
  public void onSuccess(T value)","0","-","-","-","-"
"1456","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1457","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1458","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1459","takeValue","public T takeValue()","0","-","-","-","-"
"1460","takeError","public Throwable takeError()","0","-","-","-","-"
"1461","assertAnyValue","public RecordingMaybeObserver<T> assertAnyValue()","0","-","-","-","-"
"1462","assertValue","public RecordingMaybeObserver<T> assertValue(T value)","0","-","-","-","-"
"1463","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1464","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1465","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1466","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1467","create","public <T> RecordingMaybeObserver<T> create()","0","-","-","-","-"
"1468","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1469","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1470","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1471","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1472","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1473","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1474","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1475","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1476","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1477","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1478","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1479","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1480","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1481","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1482","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1483","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1484","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1485","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1486","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1487","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1488","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1489","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1490","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1491","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1492","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1493","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1494","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1495","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1496","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1497","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1498","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1499","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1500","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1501","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1502","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1503","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1504","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1505","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1506","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1507","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1508","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1509","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1510","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1511","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1512","RecordingSingleObserver","private RecordingSingleObserver()","0","-","-","-","-"
"1513","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1514","onSuccess","@Override
  public void onSuccess(T value)","0","-","-","-","-"
"1515","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1516","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1517","takeValue","public T takeValue()","0","-","-","-","-"
"1518","takeError","public Throwable takeError()","0","-","-","-","-"
"1519","assertAnyValue","public RecordingSingleObserver<T> assertAnyValue()","0","-","-","-","-"
"1520","assertValue","public RecordingSingleObserver<T> assertValue(T value)","0","-","-","-","-"
"1521","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1522","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1523","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1524","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1525","create","public <T> RecordingSingleObserver<T> create()","0","-","-","-","-"
"1526","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1527","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1528","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1529","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1530","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1531","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1532","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1533","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"1534","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1535","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1536","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1537","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1538","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1539","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"1540","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1541","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1542","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1543","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1544","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1545","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1546","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"1547","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1548","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1549","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1550","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1551","ForwardingObserver","ForwardingObserver(Observer<T> delegate)","0","-","-","-","-"
"1552","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1553","onNext","@Override
    public void onNext(T value)","0","-","-","-","-"
"1554","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1555","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1556","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1557","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1558","completableUsesScheduler","@Test
  public void completableUsesScheduler()","0","-","-","-","-"
"1559","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1560","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1561","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1562","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1563","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1564","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1565","ForwardingCompletableObserver","ForwardingCompletableObserver(CompletableObserver delegate)","0","-","-","-","-"
"1566","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1567","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1568","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1569","RecordingSubscriber","private RecordingSubscriber(long initialRequest)","0","-","-","-","-"
"1570","onSubscribe","@Override
  public void onSubscribe(Subscription subscription)","0","-","-","-","-"
"1571","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"1572","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1573","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1574","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1575","takeValue","public T takeValue()","0","-","-","-","-"
"1576","takeError","public Throwable takeError()","0","-","-","-","-"
"1577","assertAnyValue","public RecordingSubscriber<T> assertAnyValue()","0","-","-","-","-"
"1578","assertValue","public RecordingSubscriber<T> assertValue(T value)","0","-","-","-","-"
"1579","assertComplete","public void assertComplete()","0","-","-","-","-"
"1580","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1581","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1582","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1583","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1584","request","public void request(long amount)","0","-","-","-","-"
"1585","create","public <T> RecordingSubscriber<T> create()","0","-","-","-","-"
"1586","createWithInitialRequest","public <T> RecordingSubscriber<T> createWithInitialRequest(long initialRequest)","0","-","-","-","-"
"1587","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1588","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1589","BodyObservable","BodyObservable(Observable<Response<T>> upstream)","0","-","-","-","-"
"1590","subscribeActual","@Override
  protected void subscribeActual(Observer<? super T> observer)","0","-","-","-","-"
"1591","BodyObserver","BodyObserver(Observer<? super R> observer)","0","-","-","-","-"
"1592","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1593","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"1594","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1595","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1596","CallEnqueueObservable","CallEnqueueObservable(Call<T> originalCall)","0","-","-","-","-"
"1597","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Response<T>> observer)","0","-","-","-","-"
"1598","CallCallback","CallCallback(Call<?> call, Observer<? super Response<T>> observer)","0","-","-","-","-"
"1599","onResponse","@Override
    public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"1600","onFailure","@Override
    public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"1601","dispose","@Override
    public void dispose()","0","-","-","-","-"
"1602","isDisposed","@Override
    public boolean isDisposed()","0","-","-","-","-"
"1603","RxJava3CallAdapter","RxJava3CallAdapter(
      Type responseType,
      @Nullable Scheduler scheduler,
      boolean isAsync,
      boolean isResult,
      boolean isBody,
      boolean isFlowable,
      boolean isSingle,
      boolean isMaybe,
      boolean isCompletable)","0","-","-","-","-"
"1604","responseType","@Override
  public Type responseType()","0","-","-","-","-"
"1605","adapt","@Override
  public Object adapt(Call<R> call)","0","-","-","-","-"
"1606","ResultObservable","ResultObservable(Observable<Response<T>> upstream)","0","-","-","-","-"
"1607","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Result<T>> observer)","0","-","-","-","-"
"1608","ResultObserver","ResultObserver(Observer<? super Result<R>> observer)","0","-","-","-","-"
"1609","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1610","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"1611","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1612","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1613","CallExecuteObservable","CallExecuteObservable(Call<T> originalCall)","0","-","-","-","-"
"1614","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Response<T>> observer)","0","-","-","-","-"
"1615","CallDisposable","CallDisposable(Call<?> call)","0","-","-","-","-"
"1616","dispose","@Override
    public void dispose()","0","-","-","-","-"
"1617","isDisposed","@Override
    public boolean isDisposed()","0","-","-","-","-"
"1618","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"1619","error","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> error(Throwable error)","0","-","-","-","-"
"1620","response","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> response(Response<T> response)","0","-","-","-","-"
"1621","Result","private Result(@Nullable Response<T> response, @Nullable Throwable error)","0","-","-","-","-"
"1622","response","/**
   * The response received from executing an HTTP request. Only present when","0","-","-","-","-"
"1623","error","/**
   * The error experienced while attempting to execute an HTTP request. Only present when","0","-","-","-","-"
"1624","isError","/**","0","-","-","-","-"
"1625","create","/**
   * Returns an instance which creates asynchronous observables that run on a background thread by
   * default. Applying","0","-","-","-","-"
"1626","createSynchronous","/**
   * Returns an instance which creates synchronous observables that do not operate on any scheduler
   * by default. Applying","0","-","-","-","-"
"1627","createWithScheduler","/**
   * Returns an instance which creates synchronous observables that","0","-","-","-","-"
"1628","RxJava3CallAdapterFactory","private RxJava3CallAdapterFactory(@Nullable Scheduler scheduler, boolean isAsync)","0","-","-","-","-"
"1629","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1630","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1631","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"1632","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1633","responseType","@Test
  public void responseType()","0","-","-","-","-"
"1634","nonListenableFutureReturnsNull","@Test
  public void nonListenableFutureReturnsNull()","0","-","-","-","-"
"1635","rawTypeThrows","@Test
  public void rawTypeThrows()","0","-","-","-","-"
"1636","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"1637","body","@GET(""/"")
    CompletableFuture<String> body();","0","-","-","-","-"
"1638","response","@GET(""/"")
    CompletableFuture<Response<String>> response();","0","-","-","-","-"
"1639","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1640","bodySuccess200","@Test
  public void bodySuccess200() throws Exception","0","-","-","-","-"
"1641","bodySuccess404","@Test
  public void bodySuccess404() throws Exception","0","-","-","-","-"
"1642","bodyFailure","@Test
  public void bodyFailure() throws Exception","0","-","-","-","-"
"1643","responseSuccess200","@Test
  public void responseSuccess200() throws Exception","0","-","-","-","-"
"1644","responseSuccess404","@Test
  public void responseSuccess404() throws Exception","0","-","-","-","-"
"1645","responseFailure","@Test
  public void responseFailure() throws Exception","0","-","-","-","-"
"1646","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"1647","create","public static Java8CallAdapterFactory create()","0","-","-","-","-"
"1648","Java8CallAdapterFactory","private Java8CallAdapterFactory()","0","-","-","-","-"
"1649","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1650","BodyCallAdapter","BodyCallAdapter(Type responseType)","0","-","-","-","-"
"1651","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"1652","adapt","@Override
    public CompletableFuture<R> adapt(final Call<R> call)","0","-","-","-","-"
"1653","cancel","@Override
            public boolean cancel(boolean mayInterruptIfRunning)","0","-","-","-","-"
"1654","onResponse","@Override
            public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"1655","onFailure","@Override
            public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"1656","ResponseCallAdapter","ResponseCallAdapter(Type responseType)","0","-","-","-","-"
"1657","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"1658","adapt","@Override
    public CompletableFuture<Response<R>> adapt(final Call<R> call)","0","-","-","-","-"
"1659","cancel","@Override
            public boolean cancel(boolean mayInterruptIfRunning)","0","-","-","-","-"
"1660","onResponse","@Override
            public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"1661","onFailure","@Override
            public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"1662","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1663","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1664","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1665","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1666","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1667","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1668","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1669","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1670","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1671","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1672","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1673","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1674","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1675","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1676","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1677","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1678","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1679","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1680","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1681","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1682","observableAssembly","@Test
  public void observableAssembly()","0","-","-","-","-"
"1683","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1684","go","@GET(""/"")
    Observable<String> go();","0","-","-","-","-"
"1685","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1686","disposeCancelsCall","@Test
  public void disposeCancelsCall()","0","-","-","-","-"
"1687","disposeBeforeEnqueueDoesNotEnqueue","@SuppressWarnings(""ResultOfMethodCallIgnored"")
  @Test
  public void disposeBeforeEnqueueDoesNotEnqueue()","0","-","-","-","-"
"1688","cancelDoesNotDispose","@Test
  public void cancelDoesNotDispose()","0","-","-","-","-"
"1689","RecordingCompletableObserver","private RecordingCompletableObserver()","0","-","-","-","-"
"1690","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1691","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1692","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1693","takeNotification","private Notification<?> takeNotification()","0","-","-","-","-"
"1694","takeError","public Throwable takeError()","0","-","-","-","-"
"1695","assertComplete","public void assertComplete()","0","-","-","-","-"
"1696","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1697","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1698","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1699","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1700","create","public <T> RecordingCompletableObserver create()","0","-","-","-","-"
"1701","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1702","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1703","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"1704","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"1705","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1706","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1707","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1708","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1709","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1710","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1711","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1712","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1713","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1714","completableSuccess200","@Test
  public void completableSuccess200()","0","-","-","-","-"
"1715","completableSuccess404","@Test
  public void completableSuccess404()","0","-","-","-","-"
"1716","completableFailure","@Test
  public void completableFailure()","0","-","-","-","-"
"1717","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1718","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1719","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1720","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1721","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1722","bodyThrowingInOnSuccessDeliveredToPlugin","@Test
  public void bodyThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1723","onSuccess","@Override
              public void onSuccess(String value)","0","-","-","-","-"
"1724","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1725","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1726","responseThrowingInOnSuccessDeliveredToPlugin","@Test
  public void responseThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1727","onSuccess","@Override
              public void onSuccess(Response<String> value)","0","-","-","-","-"
"1728","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1729","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1730","resultThrowingInOnSuccessDeliveredToPlugin","@Test
  public void resultThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1731","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1732","resultThrowingInOnErrorDeliveredToPlugin","@Ignore(""Single's contract is onNext|onError so we have no way of triggering this case"")
  @Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1733","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1734","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1735","ForwardingObserver","ForwardingObserver(MaybeObserver<T> delegate)","0","-","-","-","-"
"1736","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1737","onSuccess","@Override
    public void onSuccess(T value)","0","-","-","-","-"
"1738","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1739","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1740","go","@GET(""/"")
    Observable<String> go();","0","-","-","-","-"
"1741","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1742","disposeBeforeExecuteDoesNotEnqueue","@SuppressWarnings(""ResultOfMethodCallIgnored"")
  @Test
  public void disposeBeforeExecuteDoesNotEnqueue()","0","-","-","-","-"
"1743","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1744","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1745","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1746","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1747","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1748","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1749","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1750","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1751","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1752","tearDown","@After
  public void tearDown()","0","-","-","-","-"
"1753","success","@Test
  public void success() throws InterruptedException","0","-","-","-","-"
"1754","failure","@Test
  public void failure() throws InterruptedException","0","-","-","-","-"
"1755","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"1756","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1757","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"1758","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1759","bodyThrowingFatalInOnErrorPropagates","@Test
  public void bodyThrowingFatalInOnErrorPropagates() throws InterruptedException","0","-","-","-","-"
"1760","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1761","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1762","nullSchedulerThrows","@Test
  public void nullSchedulerThrows()","0","-","-","-","-"
"1763","nonRxJavaTypeReturnsNull","@Test
  public void nonRxJavaTypeReturnsNull()","0","-","-","-","-"
"1764","responseTypes","@Test
  public void responseTypes()","0","-","-","-","-"
"1765","rawBodyTypeThrows","@Test
  public void rawBodyTypeThrows()","0","-","-","-","-"
"1766","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"1767","rawResultTypeThrows","@Test
  public void rawResultTypeThrows()","0","-","-","-","-"
"1768","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1769","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1770","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1771","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1772","bodyThrowingInOnSuccessDeliveredToPlugin","@Test
  public void bodyThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1773","onSuccess","@Override
              public void onSuccess(String value)","0","-","-","-","-"
"1774","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1775","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1776","responseThrowingInOnSuccessDeliveredToPlugin","@Test
  public void responseThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1777","onSuccess","@Override
              public void onSuccess(Response<String> value)","0","-","-","-","-"
"1778","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1779","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1780","resultThrowingInOnSuccessDeliveredToPlugin","@Test
  public void resultThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"1781","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1782","resultThrowingInOnErrorDeliveredToPlugin","@Ignore(""Single's contract is onNext|onError so we have no way of triggering this case"")
  @Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1783","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"1784","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1785","ForwardingObserver","ForwardingObserver(SingleObserver<T> delegate)","0","-","-","-","-"
"1786","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1787","onSuccess","@Override
    public void onSuccess(T value)","0","-","-","-","-"
"1788","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1789","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1790","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1791","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1792","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1793","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1794","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"1795","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1796","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1797","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1798","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1799","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1800","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"1801","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1802","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1803","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1804","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1805","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1806","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1807","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"1808","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1809","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1810","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1811","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1812","ForwardingSubscriber","ForwardingSubscriber(Subscriber<T> delegate)","0","-","-","-","-"
"1813","onSubscribe","@Override
    public void onSubscribe(Subscription subscription)","0","-","-","-","-"
"1814","onNext","@Override
    public void onNext(T value)","0","-","-","-","-"
"1815","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1816","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1817","RecordingObserver","private RecordingObserver()","0","-","-","-","-"
"1818","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1819","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"1820","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1821","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1822","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1823","takeValue","public T takeValue()","0","-","-","-","-"
"1824","takeError","public Throwable takeError()","0","-","-","-","-"
"1825","assertAnyValue","public RecordingObserver<T> assertAnyValue()","0","-","-","-","-"
"1826","assertValue","public RecordingObserver<T> assertValue(T value)","0","-","-","-","-"
"1827","assertComplete","public void assertComplete()","0","-","-","-","-"
"1828","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1829","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1830","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1831","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1832","create","public <T> RecordingObserver<T> create()","0","-","-","-","-"
"1833","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1834","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1835","apply","@Override
  public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1836","evaluate","@Override
      public void evaluate() throws Throwable","0","-","-","-","-"
"1837","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1838","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1839","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1840","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1841","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"1842","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"1843","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"1844","response","@Test
  public void response()","0","-","-","-","-"
"1845","nullResponseThrows","@Test
  public void nullResponseThrows()","0","-","-","-","-"
"1846","error","@Test
  public void error()","0","-","-","-","-"
"1847","nullErrorThrows","@Test
  public void nullErrorThrows()","0","-","-","-","-"
"1848","RecordingMaybeObserver","private RecordingMaybeObserver()","0","-","-","-","-"
"1849","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1850","onSuccess","@Override
  public void onSuccess(T value)","0","-","-","-","-"
"1851","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1852","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1853","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1854","takeValue","public T takeValue()","0","-","-","-","-"
"1855","takeError","public Throwable takeError()","0","-","-","-","-"
"1856","assertAnyValue","public RecordingMaybeObserver<T> assertAnyValue()","0","-","-","-","-"
"1857","assertValue","public RecordingMaybeObserver<T> assertValue(T value)","0","-","-","-","-"
"1858","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1859","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1860","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1861","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1862","create","public <T> RecordingMaybeObserver<T> create()","0","-","-","-","-"
"1863","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1864","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1865","body","@GET(""/"")
    Flowable<String> body();","0","-","-","-","-"
"1866","response","@GET(""/"")
    Flowable<Response<String>> response();","0","-","-","-","-"
"1867","result","@GET(""/"")
    Flowable<Result<String>> result();","0","-","-","-","-"
"1868","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1869","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1870","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1871","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1872","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1873","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1874","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1875","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1876","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1877","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1878","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1879","body","@GET(""/"")
    Maybe<String> body();","0","-","-","-","-"
"1880","response","@GET(""/"")
    Maybe<Response<String>> response();","0","-","-","-","-"
"1881","result","@GET(""/"")
    Maybe<Result<String>> result();","0","-","-","-","-"
"1882","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1883","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1884","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1885","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1886","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1887","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1888","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1889","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1890","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1891","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1892","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1893","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"1894","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"1895","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"1896","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1897","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"1898","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"1899","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"1900","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"1901","responseSuccess404","@Test
  public void responseSuccess404()","0","-","-","-","-"
"1902","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"1903","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"1904","resultSuccess404","@Test
  public void resultSuccess404()","0","-","-","-","-"
"1905","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"1906","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"1907","RecordingSingleObserver","private RecordingSingleObserver()","0","-","-","-","-"
"1908","onSubscribe","@Override
  public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1909","onSuccess","@Override
  public void onSuccess(T value)","0","-","-","-","-"
"1910","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1911","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1912","takeValue","public T takeValue()","0","-","-","-","-"
"1913","takeError","public Throwable takeError()","0","-","-","-","-"
"1914","assertAnyValue","public RecordingSingleObserver<T> assertAnyValue()","0","-","-","-","-"
"1915","assertValue","public RecordingSingleObserver<T> assertValue(T value)","0","-","-","-","-"
"1916","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1917","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1918","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1919","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1920","create","public <T> RecordingSingleObserver<T> create()","0","-","-","-","-"
"1921","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1922","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1923","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"1924","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"1925","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"1926","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1927","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1928","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"1929","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1930","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1931","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1932","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1933","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1934","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"1935","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1936","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1937","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1938","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1939","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"1940","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1941","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"1942","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1943","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1944","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"1945","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1946","ForwardingObserver","ForwardingObserver(Observer<T> delegate)","0","-","-","-","-"
"1947","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1948","onNext","@Override
    public void onNext(T value)","0","-","-","-","-"
"1949","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1950","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1951","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1952","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1953","completableUsesScheduler","@Test
  public void completableUsesScheduler()","0","-","-","-","-"
"1954","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"1955","setUp","@Before
  public void setUp()","0","-","-","-","-"
"1956","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"1957","onComplete","@Override
              public void onComplete()","0","-","-","-","-"
"1958","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"1959","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"1960","ForwardingCompletableObserver","ForwardingCompletableObserver(CompletableObserver delegate)","0","-","-","-","-"
"1961","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1962","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1963","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1964","RecordingSubscriber","private RecordingSubscriber(long initialRequest)","0","-","-","-","-"
"1965","onSubscribe","@Override
  public void onSubscribe(Subscription subscription)","0","-","-","-","-"
"1966","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"1967","onComplete","@Override
  public void onComplete()","0","-","-","-","-"
"1968","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"1969","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"1970","takeValue","public T takeValue()","0","-","-","-","-"
"1971","takeError","public Throwable takeError()","0","-","-","-","-"
"1972","assertAnyValue","public RecordingSubscriber<T> assertAnyValue()","0","-","-","-","-"
"1973","assertValue","public RecordingSubscriber<T> assertValue(T value)","0","-","-","-","-"
"1974","assertComplete","public void assertComplete()","0","-","-","-","-"
"1975","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"1976","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"1977","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"1978","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"1979","request","public void request(long amount)","0","-","-","-","-"
"1980","create","public <T> RecordingSubscriber<T> create()","0","-","-","-","-"
"1981","createWithInitialRequest","public <T> RecordingSubscriber<T> createWithInitialRequest(long initialRequest)","0","-","-","-","-"
"1982","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"1983","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"1984","BodyObservable","BodyObservable(Observable<Response<T>> upstream)","0","-","-","-","-"
"1985","subscribeActual","@Override
  protected void subscribeActual(Observer<? super T> observer)","0","-","-","-","-"
"1986","BodyObserver","BodyObserver(Observer<? super R> observer)","0","-","-","-","-"
"1987","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"1988","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"1989","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"1990","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"1991","CallEnqueueObservable","CallEnqueueObservable(Call<T> originalCall)","0","-","-","-","-"
"1992","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Response<T>> observer)","0","-","-","-","-"
"1993","CallCallback","CallCallback(Call<?> call, Observer<? super Response<T>> observer)","0","-","-","-","-"
"1994","onResponse","@Override
    public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"1995","onFailure","@Override
    public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"1996","dispose","@Override
    public void dispose()","0","-","-","-","-"
"1997","isDisposed","@Override
    public boolean isDisposed()","0","-","-","-","-"
"1998","create","/**
   * Returns an instance which creates synchronous observables that do not operate on any scheduler
   * by default.
   */
  public static RxJava2CallAdapterFactory create()","0","-","-","-","-"
"1999","createAsync","/** Returns an instance which creates asynchronous observables. */
  public static RxJava2CallAdapterFactory createAsync()","0","-","-","-","-"
"2000","createWithScheduler","/**
   * Returns an instance which creates synchronous observables that","0","-","-","-","-"
"2001","RxJava2CallAdapterFactory","private RxJava2CallAdapterFactory(@Nullable Scheduler scheduler, boolean isAsync)","0","-","-","-","-"
"2002","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2003","RxJava2CallAdapter","RxJava2CallAdapter(
      Type responseType,
      @Nullable Scheduler scheduler,
      boolean isAsync,
      boolean isResult,
      boolean isBody,
      boolean isFlowable,
      boolean isSingle,
      boolean isMaybe,
      boolean isCompletable)","0","-","-","-","-"
"2004","responseType","@Override
  public Type responseType()","0","-","-","-","-"
"2005","adapt","@Override
  public Object adapt(Call<R> call)","0","-","-","-","-"
"2006","ResultObservable","ResultObservable(Observable<Response<T>> upstream)","0","-","-","-","-"
"2007","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Result<T>> observer)","0","-","-","-","-"
"2008","ResultObserver","ResultObserver(Observer<? super Result<R>> observer)","0","-","-","-","-"
"2009","onSubscribe","@Override
    public void onSubscribe(Disposable disposable)","0","-","-","-","-"
"2010","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"2011","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2012","onComplete","@Override
    public void onComplete()","0","-","-","-","-"
"2013","CallExecuteObservable","CallExecuteObservable(Call<T> originalCall)","0","-","-","-","-"
"2014","subscribeActual","@Override
  protected void subscribeActual(Observer<? super Response<T>> observer)","0","-","-","-","-"
"2015","CallDisposable","CallDisposable(Call<?> call)","0","-","-","-","-"
"2016","dispose","@Override
    public void dispose()","0","-","-","-","-"
"2017","isDisposed","@Override
    public boolean isDisposed()","0","-","-","-","-"
"2018","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"2019","error","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> error(Throwable error)","0","-","-","-","-"
"2020","response","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> response(Response<T> response)","0","-","-","-","-"
"2021","Result","private Result(@Nullable Response<T> response, @Nullable Throwable error)","0","-","-","-","-"
"2022","response","/**
   * The response received from executing an HTTP request. Only present when","0","-","-","-","-"
"2023","error","/**
   * The error experienced while attempting to execute an HTTP request. Only present when","0","-","-","-","-"
"2024","isError","/**","0","-","-","-","-"
"2025","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2026","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2027","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2028","responseType","@Test
  public void responseType()","0","-","-","-","-"
"2029","nonListenableFutureReturnsNull","@Test
  public void nonListenableFutureReturnsNull()","0","-","-","-","-"
"2030","rawTypeThrows","@Test
  public void rawTypeThrows()","0","-","-","-","-"
"2031","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"2032","body","@GET(""/"")
    ListenableFuture<String> body();","0","-","-","-","-"
"2033","response","@GET(""/"")
    ListenableFuture<Response<String>> response();","0","-","-","-","-"
"2034","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2035","bodySuccess200","@Test
  public void bodySuccess200() throws Exception","0","-","-","-","-"
"2036","bodySuccess404","@Test
  public void bodySuccess404() throws Exception","0","-","-","-","-"
"2037","bodyFailure","@Test
  public void bodyFailure() throws Exception","0","-","-","-","-"
"2038","responseSuccess200","@Test
  public void responseSuccess200() throws Exception","0","-","-","-","-"
"2039","responseSuccess404","@Test
  public void responseSuccess404() throws Exception","0","-","-","-","-"
"2040","responseFailure","@Test
  public void responseFailure() throws Exception","0","-","-","-","-"
"2041","create","public static GuavaCallAdapterFactory create()","0","-","-","-","-"
"2042","GuavaCallAdapterFactory","private GuavaCallAdapterFactory()","0","-","-","-","-"
"2043","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2044","BodyCallAdapter","BodyCallAdapter(Type responseType)","0","-","-","-","-"
"2045","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"2046","adapt","@Override
    public ListenableFuture<R> adapt(final Call<R> call)","0","-","-","-","-"
"2047","onResponse","@Override
            public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"2048","onFailure","@Override
            public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"2049","ResponseCallAdapter","ResponseCallAdapter(Type responseType)","0","-","-","-","-"
"2050","responseType","@Override
    public Type responseType()","0","-","-","-","-"
"2051","adapt","@Override
    public ListenableFuture<Response<R>> adapt(final Call<R> call)","0","-","-","-","-"
"2052","onResponse","@Override
            public void onResponse(Call<R> call, Response<R> response)","0","-","-","-","-"
"2053","onFailure","@Override
            public void onFailure(Call<R> call, Throwable t)","0","-","-","-","-"
"2054","CallCancelListenableFuture","CallCancelListenableFuture(Call<?> call)","0","-","-","-","-"
"2055","set","@Override
    public boolean set(T value)","0","-","-","-","-"
"2056","setException","@Override
    public boolean setException(Throwable throwable)","0","-","-","-","-"
"2057","interruptTask","@Override
    protected void interruptTask()","0","-","-","-","-"
"2058","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"2059","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2060","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2061","body","@GET(""/"")
    Future<String> body();","0","-","-","-","-"
"2062","response","@GET(""/"")
    Future<Response<String>> response();","0","-","-","-","-"
"2063","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2064","bodySuccess200","@Test
  public void bodySuccess200() throws Exception","0","-","-","-","-"
"2065","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"2066","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"2067","responseSuccess200","@Test
  public void responseSuccess200() throws Exception","0","-","-","-","-"
"2068","responseSuccess404","@Test
  public void responseSuccess404() throws Exception","0","-","-","-","-"
"2069","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"2070","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2071","responseType","@Test
  public void responseType()","0","-","-","-","-"
"2072","nonListenableFutureReturnsNull","@Test
  public void nonListenableFutureReturnsNull()","0","-","-","-","-"
"2073","rawTypeThrows","@Test
  public void rawTypeThrows()","0","-","-","-","-"
"2074","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"2075","create","public static ScalaCallAdapterFactory create()","0","-","-","-","-"
"2076","ScalaCallAdapterFactory","private ScalaCallAdapterFactory()","0","-","-","-","-"
"2077","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2078","BodyCallAdapter","BodyCallAdapter(Type responseType)","0","-","-","-","-"
"2079","responseType","@Override
  public Type responseType()","0","-","-","-","-"
"2080","adapt","@Override
  public Future<T> adapt(Call<T> call)","0","-","-","-","-"
"2081","onResponse","@Override
          public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"2082","onFailure","@Override
          public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"2083","ResponseCallAdapter","ResponseCallAdapter(Type responseType)","0","-","-","-","-"
"2084","responseType","@Override
  public Type responseType()","0","-","-","-","-"
"2085","adapt","@Override
  public Future<Response<T>> adapt(Call<T> call)","0","-","-","-","-"
"2086","onResponse","@Override
          public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"2087","onFailure","@Override
          public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"2088","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"2089","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"2090","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"2091","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2092","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"2093","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"2094","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"2095","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"2096","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"2097","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"2098","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2099","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"2100","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"2101","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"2102","bodyRespectsBackpressure","@Test
  public void bodyRespectsBackpressure()","0","-","-","-","-"
"2103","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"2104","responseSuccess404","@Test
  public void responseSuccess404() throws IOException","0","-","-","-","-"
"2105","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"2106","responseRespectsBackpressure","@Test
  public void responseRespectsBackpressure()","0","-","-","-","-"
"2107","responseUnsubscribedDoesNotCallCompleted","@Test
  public void responseUnsubscribedDoesNotCallCompleted() throws InterruptedException","0","-","-","-","-"
"2108","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"2109","resultSuccess404","@Test
  public void resultSuccess404() throws IOException","0","-","-","-","-"
"2110","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"2111","resultRespectsBackpressure","@Test
  public void resultRespectsBackpressure()","0","-","-","-","-"
"2112","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"2113","go","@GET(""/"")
    Observable<String> go();","0","-","-","-","-"
"2114","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2115","disposeCancelsCall","@Test
  public void disposeCancelsCall()","0","-","-","-","-"
"2116","cancelDoesNotDispose","@Test
  public void cancelDoesNotDispose()","0","-","-","-","-"
"2117","responseBodyConverter","@Override
  public Converter<ResponseBody, String> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2118","requestBodyConverter","@Override
  public Converter<String, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2119","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"2120","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"2121","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"2122","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2123","bodyUsesScheduler","@Test
  public void bodyUsesScheduler()","0","-","-","-","-"
"2124","responseUsesScheduler","@Test
  public void responseUsesScheduler()","0","-","-","-","-"
"2125","resultUsesScheduler","@Test
  public void resultUsesScheduler()","0","-","-","-","-"
"2126","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"2127","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2128","completableSuccess200","@Test
  public void completableSuccess200()","0","-","-","-","-"
"2129","completableSuccess404","@Test
  public void completableSuccess404()","0","-","-","-","-"
"2130","completableFailure","@Test
  public void completableFailure()","0","-","-","-","-"
"2131","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"2132","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"2133","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2134","success","@Test
  public void success() throws InterruptedException","0","-","-","-","-"
"2135","failure","@Test
  public void failure() throws InterruptedException","0","-","-","-","-"
"2136","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"2137","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2138","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2139","onError","@Override
              public void onError(Throwable t)","0","-","-","-","-"
"2140","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"2141","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2142","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2143","onError","@Override
              public void onError(Throwable t)","0","-","-","-","-"
"2144","bodyThrowingInOnSafeSubscriberErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnSafeSubscriberErrorDeliveredToPlugin() throws InterruptedException","0","-","-","-","-"
"2145","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2146","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2147","onError","@Override
              public void onError(Throwable t)","0","-","-","-","-"
"2148","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"2149","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"2150","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"2151","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2152","bodyThrowingInOnSuccessDeliveredToPlugin","@Test
  public void bodyThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"2153","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2154","onSuccess","@Override
              public void onSuccess(String value)","0","-","-","-","-"
"2155","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2156","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2157","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2158","responseThrowingInOnSuccessDeliveredToPlugin","@Test
  public void responseThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"2159","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2160","onSuccess","@Override
              public void onSuccess(Response<String> value)","0","-","-","-","-"
"2161","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2162","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2163","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2164","resultThrowingInOnSuccessDeliveredToPlugin","@Test
  public void resultThrowingInOnSuccessDeliveredToPlugin()","0","-","-","-","-"
"2165","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2166","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"2167","resultThrowingInOnErrorDeliveredToPlugin","@Ignore(""Single's contract is onNext|onError so we have no way of triggering this case"")
  @Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2168","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2169","onSuccess","@Override
              public void onSuccess(Result<String> value)","0","-","-","-","-"
"2170","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2171","ForwardingObserver","ForwardingObserver(Subscriber<T> delegate)","0","-","-","-","-"
"2172","onSuccess","@Override
    public void onSuccess(T value)","0","-","-","-","-"
"2173","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2174","ForwardingSubscriber","ForwardingSubscriber(Subscriber<T> delegate)","0","-","-","-","-"
"2175","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"2176","onCompleted","@Override
  public void onCompleted()","0","-","-","-","-"
"2177","onError","@Override
  public void onError(Throwable throwable)","0","-","-","-","-"
"2178","apply","@Override
  public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"2179","evaluate","@Override
      public void evaluate() throws Throwable","0","-","-","-","-"
"2180","response","@Test
  public void response()","0","-","-","-","-"
"2181","nullResponseThrows","@Test
  public void nullResponseThrows()","0","-","-","-","-"
"2182","error","@Test
  public void error()","0","-","-","-","-"
"2183","nullErrorThrows","@Test
  public void nullErrorThrows()","0","-","-","-","-"
"2184","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"2185","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"2186","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"2187","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2188","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2189","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"2190","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2191","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2192","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2193","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2194","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2195","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2196","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2197","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"2198","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2199","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2200","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2201","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2202","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2203","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2204","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2205","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"2206","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"2207","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2208","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2209","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2210","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2211","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"2212","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2213","body","@GET(""/"")
    Single<String> body();","0","-","-","-","-"
"2214","response","@GET(""/"")
    Single<Response<String>> response();","0","-","-","-","-"
"2215","result","@GET(""/"")
    Single<Result<String>> result();","0","-","-","-","-"
"2216","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2217","bodySuccess200","@Test
  public void bodySuccess200()","0","-","-","-","-"
"2218","bodySuccess404","@Test
  public void bodySuccess404()","0","-","-","-","-"
"2219","bodyFailure","@Test
  public void bodyFailure()","0","-","-","-","-"
"2220","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2221","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"2222","responseSuccess200","@Test
  public void responseSuccess200()","0","-","-","-","-"
"2223","responseSuccess404","@Test
  public void responseSuccess404() throws IOException","0","-","-","-","-"
"2224","responseFailure","@Test
  public void responseFailure()","0","-","-","-","-"
"2225","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2226","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"2227","resultSuccess200","@Test
  public void resultSuccess200()","0","-","-","-","-"
"2228","resultSuccess404","@Test
  public void resultSuccess404() throws IOException","0","-","-","-","-"
"2229","resultFailure","@Test
  public void resultFailure()","0","-","-","-","-"
"2230","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2231","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"2232","subscribeTwice","@Test
  public void subscribeTwice()","0","-","-","-","-"
"2233","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2234","nullSchedulerThrows","@Test
  public void nullSchedulerThrows()","0","-","-","-","-"
"2235","nonRxJavaTypeReturnsNull","@Test
  public void nonRxJavaTypeReturnsNull()","0","-","-","-","-"
"2236","responseTypes","@Test
  public void responseTypes()","0","-","-","-","-"
"2237","rawBodyTypeThrows","@Test
  public void rawBodyTypeThrows()","0","-","-","-","-"
"2238","rawResponseTypeThrows","@Test
  public void rawResponseTypeThrows()","0","-","-","-","-"
"2239","rawResultTypeThrows","@Test
  public void rawResultTypeThrows()","0","-","-","-","-"
"2240","body","@GET(""/"")
    Observable<String> body();","0","-","-","-","-"
"2241","response","@GET(""/"")
    Observable<Response<String>> response();","0","-","-","-","-"
"2242","result","@GET(""/"")
    Observable<Result<String>> result();","0","-","-","-","-"
"2243","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2244","bodyThrowingInOnNextDeliveredToError","@Test
  public void bodyThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2245","onNext","@Override
              public void onNext(String value)","0","-","-","-","-"
"2246","bodyThrowingInOnCompleteDeliveredToPlugin","@Test
  public void bodyThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2247","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2248","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2249","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2250","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2251","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2252","responseThrowingInOnNextDeliveredToError","@Test
  public void responseThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2253","onNext","@Override
              public void onNext(Response<String> value)","0","-","-","-","-"
"2254","responseThrowingInOnCompleteDeliveredToPlugin","@Test
  public void responseThrowingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2255","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2256","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2257","responseThrowingInOnErrorDeliveredToPlugin","@Test
  public void responseThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2258","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2259","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2260","resultThrowingInOnNextDeliveredToError","@Test
  public void resultThrowingInOnNextDeliveredToError()","0","-","-","-","-"
"2261","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"2262","resultThrowingInOnCompletedDeliveredToPlugin","@Test
  public void resultThrowingInOnCompletedDeliveredToPlugin()","0","-","-","-","-"
"2263","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2264","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2265","resultThrowingInOnErrorDeliveredToPlugin","@Test
  public void resultThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2266","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2267","onNext","@Override
              public void onNext(Result<String> value)","0","-","-","-","-"
"2268","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2269","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"2270","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2271","completableUsesScheduler","@Test
  public void completableUsesScheduler()","0","-","-","-","-"
"2272","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"2273","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2274","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2275","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2276","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2277","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2278","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2279","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2280","ForwardingCompletableObserver","ForwardingCompletableObserver(RecordingSubscriber<Void> delegate)","0","-","-","-","-"
"2281","onSubscribe","@Override
    public void onSubscribe(Subscription d)","0","-","-","-","-"
"2282","onCompleted","@Override
    public void onCompleted()","0","-","-","-","-"
"2283","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2284","completable","@GET(""/"")
    Completable completable();","0","-","-","-","-"
"2285","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2286","throwingInOnCompleteDeliveredToPlugin","@Test
  public void throwingInOnCompleteDeliveredToPlugin()","0","-","-","-","-"
"2287","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2288","onCompleted","@Override
              public void onCompleted()","0","-","-","-","-"
"2289","bodyThrowingInOnErrorDeliveredToPlugin","@Test
  public void bodyThrowingInOnErrorDeliveredToPlugin()","0","-","-","-","-"
"2290","handleError","@Override
              public void handleError(Throwable throwable)","0","-","-","-","-"
"2291","onError","@Override
              public void onError(Throwable throwable)","0","-","-","-","-"
"2292","ForwardingCompletableObserver","ForwardingCompletableObserver(RecordingSubscriber<Void> delegate)","0","-","-","-","-"
"2293","onSubscribe","@Override
    public void onSubscribe(Subscription d)","0","-","-","-","-"
"2294","onCompleted","@Override
    public void onCompleted()","0","-","-","-","-"
"2295","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2296","RecordingSubscriber","private RecordingSubscriber(long initialRequest)","0","-","-","-","-"
"2297","onStart","@Override
  public void onStart()","0","-","-","-","-"
"2298","onNext","@Override
  public void onNext(T value)","0","-","-","-","-"
"2299","onCompleted","@Override
  public void onCompleted()","0","-","-","-","-"
"2300","onError","@Override
  public void onError(Throwable e)","0","-","-","-","-"
"2301","takeNotification","private Notification<T> takeNotification()","0","-","-","-","-"
"2302","takeValue","public T takeValue()","0","-","-","-","-"
"2303","takeError","public Throwable takeError()","0","-","-","-","-"
"2304","assertAnyValue","public RecordingSubscriber<T> assertAnyValue()","0","-","-","-","-"
"2305","assertValue","public RecordingSubscriber<T> assertValue(T value)","0","-","-","-","-"
"2306","assertCompleted","public void assertCompleted()","0","-","-","-","-"
"2307","assertError","public void assertError(Throwable throwable)","0","-","-","-","-"
"2308","assertError","public void assertError(Class<? extends Throwable> errorClass)","0","-","-","-","-"
"2309","assertError","public void assertError(Class<? extends Throwable> errorClass, String message)","0","-","-","-","-"
"2310","assertNoEvents","public void assertNoEvents()","0","-","-","-","-"
"2311","requestMore","public void requestMore(long amount)","0","-","-","-","-"
"2312","create","public <T> RecordingSubscriber<T> create()","0","-","-","-","-"
"2313","createWithInitialRequest","public <T> RecordingSubscriber<T> createWithInitialRequest(long initialRequest)","0","-","-","-","-"
"2314","apply","@Override
    public Statement apply(final Statement base, Description description)","0","-","-","-","-"
"2315","evaluate","@Override
        public void evaluate() throws Throwable","0","-","-","-","-"
"2316","CallExecuteOnSubscribe","CallExecuteOnSubscribe(Call<T> originalCall)","0","-","-","-","-"
"2317","call","@Override
  public void call(Subscriber<? super Response<T>> subscriber)","0","-","-","-","-"
"2318","CallArbiter","CallArbiter(Call<T> call, Subscriber<? super Response<T>> subscriber)","0","-","-","-","-"
"2319","unsubscribe","@Override
  public void unsubscribe()","0","-","-","-","-"
"2320","isUnsubscribed","@Override
  public boolean isUnsubscribed()","0","-","-","-","-"
"2321","request","@Override
  public void request(long amount)","0","-","-","-","-"
"2322","emitResponse","void emitResponse(Response<T> response)","0","-","-","-","-"
"2323","deliverResponse","private void deliverResponse(Response<T> response)","0","-","-","-","-"
"2324","emitError","void emitError(Throwable t)","0","-","-","-","-"
"2325","RxJavaCallAdapter","RxJavaCallAdapter(
      Type responseType,
      @Nullable Scheduler scheduler,
      boolean isAsync,
      boolean isResult,
      boolean isBody,
      boolean isSingle,
      boolean isCompletable)","0","-","-","-","-"
"2326","responseType","@Override
  public Type responseType()","0","-","-","-","-"
"2327","adapt","@Override
  public Object adapt(Call<R> call)","0","-","-","-","-"
"2328","create","/**
   * Returns an instance which creates synchronous observables that do not operate on any scheduler
   * by default.
   */
  public static RxJavaCallAdapterFactory create()","0","-","-","-","-"
"2329","createAsync","/** Returns an instance which creates asynchronous observables. */
  public static RxJavaCallAdapterFactory createAsync()","0","-","-","-","-"
"2330","createWithScheduler","/**
   * Returns an instance which creates synchronous observables that","0","-","-","-","-"
"2331","RxJavaCallAdapterFactory","private RxJavaCallAdapterFactory(@Nullable Scheduler scheduler, boolean isAsync)","0","-","-","-","-"
"2332","get","@Override
  public @Nullable CallAdapter<?, ?> get(
      Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2333","CallEnqueueOnSubscribe","CallEnqueueOnSubscribe(Call<T> originalCall)","0","-","-","-","-"
"2334","call","@Override
  public void call(Subscriber<? super Response<T>> subscriber)","0","-","-","-","-"
"2335","onResponse","@Override
          public void onResponse(Call<T> call, Response<T> response)","0","-","-","-","-"
"2336","onFailure","@Override
          public void onFailure(Call<T> call, Throwable t)","0","-","-","-","-"
"2337","ResultOnSubscribe","ResultOnSubscribe(OnSubscribe<Response<T>> upstream)","0","-","-","-","-"
"2338","call","@Override
  public void call(Subscriber<? super Result<T>> subscriber)","0","-","-","-","-"
"2339","ResultSubscriber","ResultSubscriber(Subscriber<? super Result<R>> subscriber)","0","-","-","-","-"
"2340","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"2341","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2342","onCompleted","@Override
    public void onCompleted()","0","-","-","-","-"
"2343","HttpException","public HttpException(Response<?> response)","0","-","-","-","-"
"2344","error","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> error(Throwable error)","0","-","-","-","-"
"2345","response","@SuppressWarnings(""ConstantConditions"") // Guarding public API nullability.
  public static <T> Result<T> response(Response<T> response)","0","-","-","-","-"
"2346","Result","private Result(@Nullable Response<T> response, @Nullable Throwable error)","0","-","-","-","-"
"2347","response","/**
   * The response received from executing an HTTP request. Only present when","0","-","-","-","-"
"2348","error","/**
   * The error experienced while attempting to execute an HTTP request. Only present when","0","-","-","-","-"
"2349","isError","/**","0","-","-","-","-"
"2350","toString","@Override
  public String toString()","0","-","-","-","-"
"2351","BodyOnSubscribe","BodyOnSubscribe(OnSubscribe<Response<T>> upstream)","0","-","-","-","-"
"2352","call","@Override
  public void call(Subscriber<? super T> subscriber)","0","-","-","-","-"
"2353","BodySubscriber","BodySubscriber(Subscriber<? super R> subscriber)","0","-","-","-","-"
"2354","onNext","@Override
    public void onNext(Response<R> response)","0","-","-","-","-"
"2355","onError","@Override
    public void onError(Throwable throwable)","0","-","-","-","-"
"2356","onCompleted","@Override
    public void onCompleted()","0","-","-","-","-"
"2357","responseBodyConverter","@Override
  public Converter<ResponseBody, Object> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2358","optional","@GET(""/"")
    Call<Optional<Object>> optional();","0","-","-","-","-"
"2359","object","@GET(""/"")
    Call<Object> object();","0","-","-","-","-"
"2360","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2361","optional","@Test
  public void optional() throws IOException","0","-","-","-","-"
"2362","onlyMatchesOptional","@Test
  public void onlyMatchesOptional() throws IOException","0","-","-","-","-"
"2363","delegates","@Test
  public void delegates() throws IOException","0","-","-","-","-"
"2364","responseBodyConverter","@Nullable
                  @Override
                  public Converter<ResponseBody, ?> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2365","OptionalConverter","OptionalConverter(Converter<ResponseBody, T> delegate)","0","-","-","-","-"
"2366","convert","@Override
  public Optional<T> convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2367","create","public static Java8OptionalConverterFactory create()","0","-","-","-","-"
"2368","Java8OptionalConverterFactory","private Java8OptionalConverterFactory()","0","-","-","-","-"
"2369","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2370","getName","String getName();","0","-","-","-","-"
"2371","AnImplementation","AnImplementation(String name)","0","-","-","-","-"
"2372","getName","@Override
    public String getName()","0","-","-","-","-"
"2373","write","@Override
          public void write(JsonWriter out, ErroringValue value) throws IOException","0","-","-","-","-"
"2374","read","@Override
          @SuppressWarnings(""CheckReturnValue"")
          public ErroringValue read(JsonReader reader) throws IOException","0","-","-","-","-"
"2375","ErroringValue","ErroringValue(String theName)","0","-","-","-","-"
"2376","write","@Override
    public void write(JsonWriter jsonWriter, AnInterface anInterface) throws IOException","0","-","-","-","-"
"2377","read","@Override
    public AnInterface read(JsonReader jsonReader) throws IOException","0","-","-","-","-"
"2378","anImplementation","@POST(""/"")
    Call<AnImplementation> anImplementation(@Body AnImplementation impl);","0","-","-","-","-"
"2379","anInterface","@POST(""/"")
    Call<AnInterface> anInterface(@Body AnInterface impl);","0","-","-","-","-"
"2380","readErroringValue","@GET(""/"")
    Call<ErroringValue> readErroringValue();","0","-","-","-","-"
"2381","writeErroringValue","@POST(""/"")
    Call<Void> writeErroringValue(@Body ErroringValue value);","0","-","-","-","-"
"2382","GsonConverterFactoryTest","public GsonConverterFactoryTest(@TestParameter boolean streaming)","0","-","-","-","-"
"2383","anInterface","@Test
  public void anInterface() throws IOException, InterruptedException","0","-","-","-","-"
"2384","anImplementation","@Test
  public void anImplementation() throws IOException, InterruptedException","0","-","-","-","-"
"2385","serializeUsesConfiguration","@Test
  public void serializeUsesConfiguration() throws IOException, InterruptedException","0","-","-","-","-"
"2386","deserializeUsesConfiguration","@Test
  public void deserializeUsesConfiguration() throws IOException, InterruptedException","0","-","-","-","-"
"2387","requireFullResponseDocumentConsumption","@Test
  public void requireFullResponseDocumentConsumption() throws Exception","0","-","-","-","-"
"2388","serializeIsStreamed","@Test
  public void serializeIsStreamed() throws InterruptedException","0","-","-","-","-"
"2389","onResponse","@Override
          public void onResponse(Call<Void> call, Response<Void> response)","0","-","-","-","-"
"2390","onFailure","@Override
          public void onFailure(Call<Void> call, Throwable t)","0","-","-","-","-"
"2391","GsonStreamingRequestBody","public GsonStreamingRequestBody(Gson gson, TypeAdapter<T> adapter, T value)","0","-","-","-","-"
"2392","contentType","@Override
  public MediaType contentType()","0","-","-","-","-"
"2393","writeTo","@Override
  public void writeTo(BufferedSink sink) throws IOException","0","-","-","-","-"
"2394","GsonRequestBodyConverter","GsonRequestBodyConverter(Gson gson, TypeAdapter<T> adapter, boolean streaming)","0","-","-","-","-"
"2395","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2396","writeJson","static <T> void writeJson(BufferedSink sink, Gson gson, TypeAdapter<T> adapter, T value)
      throws IOException","0","-","-","-","-"
"2397","create","/**
   * Create an instance using a default","0","-","-","-","-"
"2398","create","/**
   * Create an instance using","0","-","-","-","-"
"2399","GsonConverterFactory","private GsonConverterFactory(Gson gson, boolean streaming)","0","-","-","-","-"
"2400","withStreaming","/**
   * Return a new factory which streams serialization of request messages to bytes on the HTTP thread
   * This is either the calling thread for","0","-","-","-","-"
"2401","responseBodyConverter","@Override
  public Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2402","requestBodyConverter","@Override
  public Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2403","GsonResponseBodyConverter","GsonResponseBodyConverter(Gson gson, TypeAdapter<T> adapter)","0","-","-","-","-"
"2404","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2405","CrashingPhone","public CrashingPhone(String number)","0","-","-","-","-"
"2406","CrashingPhone","public CrashingPhone(String number, ByteString unknownFields)","0","-","-","-","-"
"2407","newBuilder","@Override
  public Builder newBuilder()","0","-","-","-","-"
"2408","equals","@Override
  public boolean equals(Object other)","0","-","-","-","-"
"2409","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2410","toString","@Override
  public String toString()","0","-","-","-","-"
"2411","Builder","public Builder()","0","-","-","-","-"
"2412","number","public Builder number(String number)","0","-","-","-","-"
"2413","build","@Override
    public CrashingPhone build()","0","-","-","-","-"
"2414","ProtoAdapter_CrashingPhone","ProtoAdapter_CrashingPhone()","0","-","-","-","-"
"2415","encodedSize","@Override
    public int encodedSize(CrashingPhone value)","0","-","-","-","-"
"2416","encode","@Override
    public void encode(ProtoWriter writer, CrashingPhone value) throws IOException","0","-","-","-","-"
"2417","decode","@Override
    public CrashingPhone decode(ProtoReader reader) throws IOException","0","-","-","-","-"
"2418","redact","@Override
    public CrashingPhone redact(CrashingPhone value)","0","-","-","-","-"
"2419","Phone","public Phone(String number)","0","-","-","-","-"
"2420","Phone","public Phone(String number, ByteString unknownFields)","0","-","-","-","-"
"2421","newBuilder","@Override
  public Builder newBuilder()","0","-","-","-","-"
"2422","equals","@Override
  public boolean equals(Object other)","0","-","-","-","-"
"2423","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2424","toString","@Override
  public String toString()","0","-","-","-","-"
"2425","Builder","public Builder()","0","-","-","-","-"
"2426","number","public Builder number(String number)","0","-","-","-","-"
"2427","build","@Override
    public Phone build()","0","-","-","-","-"
"2428","ProtoAdapter_Phone","ProtoAdapter_Phone()","0","-","-","-","-"
"2429","encodedSize","@Override
    public int encodedSize(Phone value)","0","-","-","-","-"
"2430","encode","@Override
    public void encode(ProtoWriter writer, Phone value) throws IOException","0","-","-","-","-"
"2431","decode","@Override
    public Phone decode(ProtoReader reader) throws IOException","0","-","-","-","-"
"2432","redact","@Override
    public Phone redact(Phone value)","0","-","-","-","-"
"2433","get","@GET(""/"")
    Call<Phone> get();","0","-","-","-","-"
"2434","post","@POST(""/"")
    Call<Phone> post(@Body Phone impl);","0","-","-","-","-"
"2435","postCrashing","@POST(""/"")
    Call<Void> postCrashing(@Body CrashingPhone impl);","0","-","-","-","-"
"2436","wrongClass","@GET(""/"")
    Call<String> wrongClass();","0","-","-","-","-"
"2437","wrongType","@GET(""/"")
    Call<List<String>> wrongType();","0","-","-","-","-"
"2438","WireConverterFactoryTest","public WireConverterFactoryTest(@TestParameter boolean streaming)","0","-","-","-","-"
"2439","serializeAndDeserialize","@Test
  public void serializeAndDeserialize() throws IOException, InterruptedException","0","-","-","-","-"
"2440","serializeIsStreamed","@Test
  public void serializeIsStreamed() throws IOException, InterruptedException","0","-","-","-","-"
"2441","onResponse","@Override
          public void onResponse(Call<Void> call, Response<Void> response)","0","-","-","-","-"
"2442","onFailure","@Override
          public void onFailure(Call<Void> call, Throwable t)","0","-","-","-","-"
"2443","deserializeEmpty","@Test
  public void deserializeEmpty() throws IOException","0","-","-","-","-"
"2444","deserializeWrongClass","@Test
  public void deserializeWrongClass() throws IOException","0","-","-","-","-"
"2445","deserializeWrongType","@Test
  public void deserializeWrongType() throws IOException","0","-","-","-","-"
"2446","deserializeWrongValue","@Test
  public void deserializeWrongValue() throws IOException","0","-","-","-","-"
"2447","WireRequestBodyConverter","WireRequestBodyConverter(ProtoAdapter<T> adapter, boolean streaming)","0","-","-","-","-"
"2448","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2449","WireResponseBodyConverter","WireResponseBodyConverter(ProtoAdapter<T> adapter)","0","-","-","-","-"
"2450","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2451","WireStreamingRequestBody","WireStreamingRequestBody(ProtoAdapter<T> adapter, T value)","0","-","-","-","-"
"2452","contentType","@Override
  public MediaType contentType()","0","-","-","-","-"
"2453","writeTo","@Override
  public void writeTo(BufferedSink sink) throws IOException","0","-","-","-","-"
"2454","create","/**
   * Create an instance which serializes request messages to bytes eagerly on the caller thread
   * when either","0","-","-","-","-"
"2455","WireConverterFactory","private WireConverterFactory(boolean streaming)","0","-","-","-","-"
"2456","withStreaming","/**
   * Return a new factory which streams serialization of request messages to bytes on the HTTP thread
   * This is either the calling thread for","0","-","-","-","-"
"2457","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2458","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2459","optional","@GET(""/"")
    Call<Optional<Object>> optional();","0","-","-","-","-"
"2460","object","@GET(""/"")
    Call<Object> object();","0","-","-","-","-"
"2461","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2462","optional","@Test
  public void optional() throws IOException","0","-","-","-","-"
"2463","onlyMatchesOptional","@Test
  public void onlyMatchesOptional() throws IOException","0","-","-","-","-"
"2464","delegates","@Test
  public void delegates() throws IOException","0","-","-","-","-"
"2465","responseBodyConverter","@Nullable
                  @Override
                  public Converter<ResponseBody, Object> responseBodyConverter(
                      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2466","responseBodyConverter","@Override
  public Converter<ResponseBody, Object> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2467","OptionalConverter","OptionalConverter(Converter<ResponseBody, T> delegate)","0","-","-","-","-"
"2468","convert","@Override
  public Optional<T> convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2469","create","public static GuavaOptionalConverterFactory create()","0","-","-","-","-"
"2470","GuavaOptionalConverterFactory","private GuavaOptionalConverterFactory()","0","-","-","-","-"
"2471","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2472","object","@POST(""/"")
    Call<ResponseBody> object(@Body Object body);","0","-","-","-","-"
"2473","stringObject","@POST(""/"")
    Call<ResponseBody> stringObject(@Body String body);","0","-","-","-","-"
"2474","booleanPrimitive","@POST(""/"")
    Call<ResponseBody> booleanPrimitive(@Body boolean body);","0","-","-","-","-"
"2475","booleanObject","@POST(""/"")
    Call<ResponseBody> booleanObject(@Body Boolean body);","0","-","-","-","-"
"2476","bytePrimitive","@POST(""/"")
    Call<ResponseBody> bytePrimitive(@Body byte body);","0","-","-","-","-"
"2477","byteObject","@POST(""/"")
    Call<ResponseBody> byteObject(@Body Byte body);","0","-","-","-","-"
"2478","charPrimitive","@POST(""/"")
    Call<ResponseBody> charPrimitive(@Body char body);","0","-","-","-","-"
"2479","charObject","@POST(""/"")
    Call<ResponseBody> charObject(@Body Character body);","0","-","-","-","-"
"2480","doublePrimitive","@POST(""/"")
    Call<ResponseBody> doublePrimitive(@Body double body);","0","-","-","-","-"
"2481","doubleObject","@POST(""/"")
    Call<ResponseBody> doubleObject(@Body Double body);","0","-","-","-","-"
"2482","floatPrimitive","@POST(""/"")
    Call<ResponseBody> floatPrimitive(@Body float body);","0","-","-","-","-"
"2483","floatObject","@POST(""/"")
    Call<ResponseBody> floatObject(@Body Float body);","0","-","-","-","-"
"2484","integerPrimitive","@POST(""/"")
    Call<ResponseBody> integerPrimitive(@Body int body);","0","-","-","-","-"
"2485","integerObject","@POST(""/"")
    Call<ResponseBody> integerObject(@Body Integer body);","0","-","-","-","-"
"2486","longPrimitive","@POST(""/"")
    Call<ResponseBody> longPrimitive(@Body long body);","0","-","-","-","-"
"2487","longObject","@POST(""/"")
    Call<ResponseBody> longObject(@Body Long body);","0","-","-","-","-"
"2488","shortPrimitive","@POST(""/"")
    Call<ResponseBody> shortPrimitive(@Body short body);","0","-","-","-","-"
"2489","shortObject","@POST(""/"")
    Call<ResponseBody> shortObject(@Body Short body);","0","-","-","-","-"
"2490","object","@GET(""/"")
    Call<Object> object();","0","-","-","-","-"
"2491","stringObject","@GET(""/"")
    Call<String> stringObject();","0","-","-","-","-"
"2492","booleanObject","@GET(""/"")
    Call<Boolean> booleanObject();","0","-","-","-","-"
"2493","byteObject","@GET(""/"")
    Call<Byte> byteObject();","0","-","-","-","-"
"2494","charObject","@GET(""/"")
    Call<Character> charObject();","0","-","-","-","-"
"2495","doubleObject","@GET(""/"")
    Call<Double> doubleObject();","0","-","-","-","-"
"2496","floatObject","@GET(""/"")
    Call<Float> floatObject();","0","-","-","-","-"
"2497","integerObject","@GET(""/"")
    Call<Integer> integerObject();","0","-","-","-","-"
"2498","longObject","@GET(""/"")
    Call<Long> longObject();","0","-","-","-","-"
"2499","shortObject","@GET(""/"")
    Call<Short> shortObject();","0","-","-","-","-"
"2500","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2501","unsupportedRequestTypesNotMatched","@Test
  public void unsupportedRequestTypesNotMatched()","0","-","-","-","-"
"2502","supportedRequestTypes","@Test
  public void supportedRequestTypes() throws IOException, InterruptedException","0","-","-","-","-"
"2503","unsupportedResponseTypesNotMatched","@Test
  public void unsupportedResponseTypesNotMatched()","0","-","-","-","-"
"2504","supportedResponseTypes","@Test
  public void supportedResponseTypes() throws IOException, InterruptedException","0","-","-","-","-"
"2505","booleanPrimitive","@GET(""/"")
    boolean booleanPrimitive();","0","-","-","-","-"
"2506","bytePrimitive","@GET(""/"")
    byte bytePrimitive();","0","-","-","-","-"
"2507","charPrimitive","@GET(""/"")
    char charPrimitive();","0","-","-","-","-"
"2508","doublePrimitive","@GET(""/"")
    double doublePrimitive();","0","-","-","-","-"
"2509","floatPrimitive","@GET(""/"")
    float floatPrimitive();","0","-","-","-","-"
"2510","integerPrimitive","@GET(""/"")
    int integerPrimitive();","0","-","-","-","-"
"2511","longPrimitive","@GET(""/"")
    long longPrimitive();","0","-","-","-","-"
"2512","shortPrimitive","@GET(""/"")
    short shortPrimitive();","0","-","-","-","-"
"2513","DirectCallIOException","DirectCallIOException(String message, IOException e)","0","-","-","-","-"
"2514","get","@Override
    public CallAdapter<?, ?> get(
        final Type returnType, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2515","responseType","@Override
        public Type responseType()","0","-","-","-","-"
"2516","adapt","@Override
        public Object adapt(Call call)","0","-","-","-","-"
"2517","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2518","supportedResponseTypes","@Test
  public void supportedResponseTypes() throws IOException, InterruptedException","0","-","-","-","-"
"2519","ScalarResponseBodyConverters","private ScalarResponseBodyConverters()","0","-","-","-","-"
"2520","convert","@Override
    public String convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2521","convert","@Override
    public Boolean convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2522","convert","@Override
    public Byte convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2523","convert","@Override
    public Character convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2524","convert","@Override
    public Double convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2525","convert","@Override
    public Float convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2526","convert","@Override
    public Integer convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2527","convert","@Override
    public Long convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2528","convert","@Override
    public Short convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2529","create","public static ScalarsConverterFactory create()","0","-","-","-","-"
"2530","ScalarsConverterFactory","private ScalarsConverterFactory()","0","-","-","-","-"
"2531","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2532","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2533","ScalarRequestBodyConverter","private ScalarRequestBodyConverter()","0","-","-","-","-"
"2534","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2535","Contact","@SuppressWarnings(""unused"") // Used by JAXB.
  private Contact()","0","-","-","-","-"
"2536","Contact","public Contact(String name, List<PhoneNumber> phoneNumbers)","0","-","-","-","-"
"2537","equals","@Override
  public boolean equals(Object o)","0","-","-","-","-"
"2538","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2539","postXml","@POST(""/"")
    Call<Void> postXml(@Body Contact contact);","0","-","-","-","-"
"2540","getXml","@GET(""/"")
    Call<Contact> getXml();","0","-","-","-","-"
"2541","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2542","xmlRequestBody","@Test
  public void xmlRequestBody() throws Exception","0","-","-","-","-"
"2543","xmlResponseBody","@Test
  public void xmlResponseBody() throws Exception","0","-","-","-","-"
"2544","characterEncoding","@Test
  public void characterEncoding() throws Exception","0","-","-","-","-"
"2545","userSuppliedJaxbContext","@Test
  public void userSuppliedJaxbContext() throws Exception","0","-","-","-","-"
"2546","malformedXml","@Test
  public void malformedXml() throws Exception","0","-","-","-","-"
"2547","unrecognizedField","@Test
  public void unrecognizedField() throws Exception","0","-","-","-","-"
"2548","externalEntity","@Test
  public void externalEntity() throws Exception","0","-","-","-","-"
"2549","externalDtd","@Test
  public void externalDtd() throws Exception","0","-","-","-","-"
"2550","PhoneNumber","@SuppressWarnings(""unused"") // Used by JAXB.
  private PhoneNumber()","0","-","-","-","-"
"2551","PhoneNumber","PhoneNumber(String number, @Nullable Type type)","0","-","-","-","-"
"2552","equals","@Override
  public boolean equals(Object o)","0","-","-","-","-"
"2553","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2554","create","/** Create an instance using a default","0","-","-","-","-"
"2555","create","/** Create an instance using","0","-","-","-","-"
"2556","JaxbConverterFactory","private JaxbConverterFactory(@Nullable JAXBContext context)","0","-","-","-","-"
"2557","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2558","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2559","contextForType","private JAXBContext contextForType(Class<?> type)","0","-","-","-","-"
"2560","JaxbRequestConverter","JaxbRequestConverter(JAXBContext context, Class<T> type)","0","-","-","-","-"
"2561","convert","@Override
  public RequestBody convert(final T value) throws IOException","0","-","-","-","-"
"2562","JaxbResponseConverter","JaxbResponseConverter(JAXBContext context, Class<T> type)","0","-","-","-","-"
"2563","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2564","Contact","@SuppressWarnings(""unused"") // Used by JAXB.
  private Contact()","0","-","-","-","-"
"2565","Contact","public Contact(String name, List<PhoneNumber> phoneNumbers)","0","-","-","-","-"
"2566","equals","@Override
  public boolean equals(Object o)","0","-","-","-","-"
"2567","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2568","postXml","@POST(""/"")
    Call<Void> postXml(@Body Contact contact);","0","-","-","-","-"
"2569","getXml","@GET(""/"")
    Call<Contact> getXml();","0","-","-","-","-"
"2570","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2571","xmlRequestBody","@Test
  public void xmlRequestBody() throws Exception","0","-","-","-","-"
"2572","xmlResponseBody","@Test
  public void xmlResponseBody() throws Exception","0","-","-","-","-"
"2573","characterEncoding","@Test
  public void characterEncoding() throws Exception","0","-","-","-","-"
"2574","userSuppliedJaxbContext","@Test
  public void userSuppliedJaxbContext() throws Exception","0","-","-","-","-"
"2575","malformedXml","@Test
  public void malformedXml() throws Exception","0","-","-","-","-"
"2576","unrecognizedField","@Test
  public void unrecognizedField() throws Exception","0","-","-","-","-"
"2577","externalEntity","@Test
  public void externalEntity() throws Exception","0","-","-","-","-"
"2578","externalDtd","@Test
  public void externalDtd() throws Exception","0","-","-","-","-"
"2579","PhoneNumber","@SuppressWarnings(""unused"") // Used by JAXB.
  private PhoneNumber()","0","-","-","-","-"
"2580","PhoneNumber","PhoneNumber(String number, @Nullable Type type)","0","-","-","-","-"
"2581","equals","@Override
  public boolean equals(Object o)","0","-","-","-","-"
"2582","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2583","create","/** Create an instance using a default","0","-","-","-","-"
"2584","create","/** Create an instance using","0","-","-","-","-"
"2585","JaxbConverterFactory","private JaxbConverterFactory(@Nullable JAXBContext context)","0","-","-","-","-"
"2586","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2587","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2588","contextForType","private JAXBContext contextForType(Class<?> type)","0","-","-","-","-"
"2589","JaxbRequestConverter","JaxbRequestConverter(JAXBContext context, Class<T> type)","0","-","-","-","-"
"2590","convert","@Override
  public RequestBody convert(final T value) throws IOException","0","-","-","-","-"
"2591","JaxbResponseConverter","JaxbResponseConverter(JAXBContext context, Class<T> type)","0","-","-","-","-"
"2592","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2593","getName","String getName();","0","-","-","-","-"
"2594","AnImplementation","AnImplementation(String name)","0","-","-","-","-"
"2595","getName","@Override
    public String getName()","0","-","-","-","-"
"2596","ErroringValue","ErroringValue(String theName)","0","-","-","-","-"
"2597","write","@ToJson
    public void write(JsonWriter jsonWriter, AnInterface anInterface) throws IOException","0","-","-","-","-"
"2598","read","@FromJson
    public AnInterface read(JsonReader jsonReader) throws IOException","0","-","-","-","-"
"2599","write","@ToJson
    public void write(JsonWriter writer, @Qualifier String value) throws IOException","0","-","-","-","-"
"2600","readQualified","@FromJson
    @Qualifier
    public String readQualified(JsonReader reader) throws IOException","0","-","-","-","-"
"2601","readWithoutEndingObject","@FromJson
    public ErroringValue readWithoutEndingObject(JsonReader reader) throws IOException","0","-","-","-","-"
"2602","write","@ToJson
    public void write(JsonWriter writer, ErroringValue value) throws IOException","0","-","-","-","-"
"2603","anImplementation","@POST(""/"")
    Call<AnImplementation> anImplementation(@Body AnImplementation impl);","0","-","-","-","-"
"2604","anInterface","@POST(""/"")
    Call<AnInterface> anInterface(@Body AnInterface impl);","0","-","-","-","-"
"2605","readErroringValue","@GET(""/"")
    Call<ErroringValue> readErroringValue();","0","-","-","-","-"
"2606","writeErroringValue","@POST(""/"")
    Call<Void> writeErroringValue(@Body ErroringValue value);","0","-","-","-","-"
"2607","annotations","@POST(""/"")
    @Qualifier
    @NonQualifer //
    Call<String> annotations(@Body @Qualifier @NonQualifer String body);","0","-","-","-","-"
"2608","MoshiConverterFactoryTest","public MoshiConverterFactoryTest(@TestParameter boolean streaming)","0","-","-","-","-"
"2609","anInterface","@Test
  public void anInterface() throws IOException, InterruptedException","0","-","-","-","-"
"2610","anImplementation","@Test
  public void anImplementation() throws IOException, InterruptedException","0","-","-","-","-"
"2611","annotations","@Test
  public void annotations() throws IOException, InterruptedException","0","-","-","-","-"
"2612","asLenient","@Test
  public void asLenient() throws IOException, InterruptedException","0","-","-","-","-"
"2613","withNulls","@Test
  public void withNulls() throws IOException, InterruptedException","0","-","-","-","-"
"2614","failOnUnknown","@Test
  public void failOnUnknown() throws IOException, InterruptedException","0","-","-","-","-"
"2615","utf8BomSkipped","@Test
  public void utf8BomSkipped() throws IOException","0","-","-","-","-"
"2616","nonUtf8BomIsNotSkipped","@Test
  public void nonUtf8BomIsNotSkipped() throws IOException","0","-","-","-","-"
"2617","requireFullResponseDocumentConsumption","@Test
  public void requireFullResponseDocumentConsumption() throws Exception","0","-","-","-","-"
"2618","serializeIsStreamed","@Test
  public void serializeIsStreamed() throws InterruptedException","0","-","-","-","-"
"2619","onResponse","@Override
          public void onResponse(Call<Void> call, Response<Void> response)","0","-","-","-","-"
"2620","onFailure","@Override
          public void onFailure(Call<Void> call, Throwable t)","0","-","-","-","-"
"2621","create","/** Create an instance using a default","0","-","-","-","-"
"2622","create","/** Create an instance using","0","-","-","-","-"
"2623","MoshiConverterFactory","private MoshiConverterFactory(
      Moshi moshi,
      boolean lenient,
      boolean failOnUnknown,
      boolean serializeNulls,
      boolean streaming)","0","-","-","-","-"
"2624","asLenient","/** Return a new factory which uses","0","-","-","-","-"
"2625","failOnUnknown","/** Return a new factory which uses","0","-","-","-","-"
"2626","withNullSerialization","/** Return a new factory which includes null values into the serialized JSON. */
  public MoshiConverterFactory withNullSerialization()","0","-","-","-","-"
"2627","withStreaming","/**
   * Return a new factory which streams serialization of request messages to bytes on the HTTP thread
   * This is either the calling thread for","0","-","-","-","-"
"2628","responseBodyConverter","@Override
  public Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2629","requestBodyConverter","@Override
  public Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2630","jsonAnnotations","private static Set<? extends Annotation> jsonAnnotations(Annotation[] annotations)","0","-","-","-","-"
"2631","MoshiRequestBodyConverter","MoshiRequestBodyConverter(JsonAdapter<T> adapter, boolean streaming)","0","-","-","-","-"
"2632","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2633","MoshiResponseBodyConverter","MoshiResponseBodyConverter(JsonAdapter<T> adapter)","0","-","-","-","-"
"2634","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2635","MoshiStreamingRequestBody","public MoshiStreamingRequestBody(JsonAdapter<T> adapter, T value)","0","-","-","-","-"
"2636","contentType","@Override
  public MediaType contentType()","0","-","-","-","-"
"2637","writeTo","@Override
  public void writeTo(BufferedSink sink) throws IOException","0","-","-","-","-"
"2638","get","@GET(""/"")
    Call<MyObject> get();","0","-","-","-","-"
"2639","post","@POST(""/"")
    Call<MyObject> post(@Body MyObject impl);","0","-","-","-","-"
"2640","wrongClass","@GET(""/"")
    Call<String> wrongClass();","0","-","-","-","-"
"2641","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2642","bodyWays","@Test
  public void bodyWays() throws IOException, InterruptedException","0","-","-","-","-"
"2643","honorsCharacterEncoding","@Test
  public void honorsCharacterEncoding() throws IOException","0","-","-","-","-"
"2644","deserializeWrongValue","@Test
  public void deserializeWrongValue() throws IOException","0","-","-","-","-"
"2645","deserializeWrongClass","@Test
  public void deserializeWrongClass() throws IOException","0","-","-","-","-"
"2646","MyObject","public MyObject()","0","-","-","-","-"
"2647","MyObject","public MyObject(String message, int count)","0","-","-","-","-"
"2648","setMessage","public void setMessage(String message)","0","-","-","-","-"
"2649","getMessage","public String getMessage()","0","-","-","-","-"
"2650","setCount","public void setCount(int count)","0","-","-","-","-"
"2651","getCount","public int getCount()","0","-","-","-","-"
"2652","hashCode","@Override
  public int hashCode()","0","-","-","-","-"
"2653","equals","@Override
  public boolean equals(Object obj)","0","-","-","-","-"
"2654","SimpleXmlResponseBodyConverter","SimpleXmlResponseBodyConverter(Class<T> cls, Serializer serializer, boolean strict)","0","-","-","-","-"
"2655","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2656","SimpleXmlRequestBodyConverter","SimpleXmlRequestBodyConverter(Serializer serializer)","0","-","-","-","-"
"2657","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2658","create","/** Create an instance using a default","0","-","-","-","-"
"2659","create","/** Create an instance using","0","-","-","-","-"
"2660","createNonStrict","/** Create an instance using a default","0","-","-","-","-"
"2661","createNonStrict","/** Create an instance using","0","-","-","-","-"
"2662","SimpleXmlConverterFactory","private SimpleXmlConverterFactory(Serializer serializer, boolean strict)","0","-","-","-","-"
"2663","isStrict","public boolean isStrict()","0","-","-","-","-"
"2664","responseBodyConverter","@Override
  public Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2665","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2666","get","@GET(""/"")
    Call<Phone> get();","0","-","-","-","-"
"2667","post","@POST(""/"")
    Call<Phone> post(@Body Phone impl);","0","-","-","-","-"
"2668","wrongClass","@GET(""/"")
    Call<String> wrongClass();","0","-","-","-","-"
"2669","wrongType","@GET(""/"")
    Call<List<String>> wrongType();","0","-","-","-","-"
"2670","get","@GET(""/"")
    Call<Phone> get();","0","-","-","-","-"
"2671","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2672","serializeAndDeserialize","@Test
  public void serializeAndDeserialize() throws IOException, InterruptedException","0","-","-","-","-"
"2673","deserializeEmpty","@Test
  public void deserializeEmpty() throws IOException","0","-","-","-","-"
"2674","deserializeUsesRegistry","@Test
  public void deserializeUsesRegistry() throws IOException","0","-","-","-","-"
"2675","deserializeWrongClass","@Test
  public void deserializeWrongClass() throws IOException","0","-","-","-","-"
"2676","deserializeWrongType","@Test
  public void deserializeWrongType() throws IOException","0","-","-","-","-"
"2677","deserializeWrongValue","@Test
  public void deserializeWrongValue() throws IOException","0","-","-","-","-"
"2678","converterFactoryFallsBackToParserField","@Test
  public void converterFactoryFallsBackToParserField()","0","-","-","-","-"
"2679","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
"2680","ProtoResponseBodyConverter","ProtoResponseBodyConverter(Parser<T> parser, @Nullable ExtensionRegistryLite registry)","0","-","-","-","-"
"2681","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2682","create","public static ProtoConverterFactory create()","0","-","-","-","-"
"2683","createWithRegistry","/** Create an instance which uses","0","-","-","-","-"
"2684","ProtoConverterFactory","private ProtoConverterFactory(@Nullable ExtensionRegistryLite registry)","0","-","-","-","-"
"2685","responseBodyConverter","@Override
  public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2686","requestBodyConverter","@Override
  public @Nullable Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2687","getName","String getName();","0","-","-","-","-"
"2688","AnImplementation","AnImplementation()","0","-","-","-","-"
"2689","AnImplementation","AnImplementation(String name)","0","-","-","-","-"
"2690","getName","@Override
    public String getName()","0","-","-","-","-"
"2691","AnInterfaceSerializer","AnInterfaceSerializer()","0","-","-","-","-"
"2692","serialize","@Override
    public void serialize(
        AnInterface anInterface, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)
        throws IOException","0","-","-","-","-"
"2693","AnInterfaceDeserializer","AnInterfaceDeserializer()","0","-","-","-","-"
"2694","deserialize","@Override
    public AnInterface deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException","0","-","-","-","-"
"2695","anImplementation","@POST(""/"")
    Call<AnImplementation> anImplementation(@Body AnImplementation impl);","0","-","-","-","-"
"2696","anInterface","@POST(""/"")
    Call<AnInterface> anInterface(@Body AnInterface impl);","0","-","-","-","-"
"2697","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2698","anInterface","@Test
  public void anInterface() throws IOException, InterruptedException","0","-","-","-","-"
"2699","anImplementation","@Test
  public void anImplementation() throws IOException, InterruptedException","0","-","-","-","-"
"2700","IntWrapper","public IntWrapper(int v)","0","-","-","-","-"
"2701","IntWrapper","protected IntWrapper()","0","-","-","-","-"
"2702","post","@POST(""/"")
    Call<IntWrapper> post(@Body IntWrapper person);","0","-","-","-","-"
"2703","setUp","@Before
  public void setUp()","0","-","-","-","-"
"2704","post","@Test
  public void post() throws IOException, InterruptedException","0","-","-","-","-"
"2705","JacksonResponseBodyConverter","JacksonResponseBodyConverter(ObjectReader adapter)","0","-","-","-","-"
"2706","convert","@Override
  public T convert(ResponseBody value) throws IOException","0","-","-","-","-"
"2707","create","/** Create an instance using a default","0","-","-","-","-"
"2708","create","/** Create an instance using","0","-","-","-","-"
"2709","create","/** Create an instance using","0","-","-","-","-"
"2710","JacksonConverterFactory","private JacksonConverterFactory(ObjectMapper mapper, MediaType mediaType)","0","-","-","-","-"
"2711","responseBodyConverter","@Override
  public Converter<ResponseBody, ?> responseBodyConverter(
      Type type, Annotation[] annotations, Retrofit retrofit)","0","-","-","-","-"
"2712","requestBodyConverter","@Override
  public Converter<?, RequestBody> requestBodyConverter(
      Type type,
      Annotation[] parameterAnnotations,
      Annotation[] methodAnnotations,
      Retrofit retrofit)","0","-","-","-","-"
"2713","JacksonRequestBodyConverter","JacksonRequestBodyConverter(ObjectWriter adapter, MediaType mediaType)","0","-","-","-","-"
"2714","convert","@Override
  public RequestBody convert(T value) throws IOException","0","-","-","-","-"
