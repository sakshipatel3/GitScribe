"Index","Method Name","Method Signature","Commit Count","Change Types","Commit Message","Commit ID","Commit Author"
"1","principalEntityWithoutAuth","@GET
    @Path(""json-principal-entity"")
    public String principalEntityWithoutAuth(@Auth JsonPrincipal principal)","0","-","-","-","-"
"2","principalEntityWithoutAuth","@GET
    @Path(""null-principal-entity"")
    public String principalEntityWithoutAuth(@Auth NullPrincipal principal)","0","-","-","-","-"
"3","checkOptionalAuth","@GET
    @Path(""optional"")
    public String checkOptionalAuth(@Auth Optional<NullPrincipal> principalOpt)","0","-","-","-","-"
"4","principalEntityWithoutAuth","/**
     * Principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""principal-entity"")
    public String principalEntityWithoutAuth(JsonPrincipal principal)","0","-","-","-","-"
"5","annotatedPrincipalEntityWithoutAuth","/**
     * Annotated principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""annotated-principal-entity"")
    public String annotatedPrincipalEntityWithoutAuth(@DummyAnnotation JsonPrincipal principal)","0","-","-","-","-"
"6","principalEntityWithoutAuth","/**
     * Principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""json-principal-entity"")
    public String principalEntityWithoutAuth(JsonPrincipal principal)","0","-","-","-","-"
"7","principalEntityWithoutAuth","/**
     * Principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""null-principal-entity"")
    public String principalEntityWithoutAuth(NullPrincipal principal)","0","-","-","-","-"
"8","annotatedPrincipalEntityWithoutAuth","/**
     * Annotated principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""annotated-json-principal-entity"")
    public String annotatedPrincipalEntityWithoutAuth(@DummyAnnotation JsonPrincipal principal)","0","-","-","-","-"
"9","annotatedPrincipalEntityWithoutAuth","/**
     * Annotated principal instance must be injected even when no authentication is required.
     */
    @POST
    @Path(""annotated-null-principal-entity"")
    public String annotatedPrincipalEntityWithoutAuth(@DummyAnnotation NullPrincipal principal)","0","-","-","-","-"
"10","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"11","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"12","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"13","NoAuthPolymorphicPrincipalInjectedResourceConfig","public NoAuthPolymorphicPrincipalInjectedResourceConfig()","0","-","-","-","-"
"14","getPrincipalClass","@Override protected Class<? extends Principal> getPrincipalClass()","0","-","-","-","-"
"15","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"16","getAuthBinder","@Override protected AbstractBinder getAuthBinder()","0","-","-","-","-"
"17","getAuthDynamicFeature","@Override protected DynamicFeature getAuthDynamicFeature(ContainerRequestFilter authFilter)","0","-","-","-","-"
"18","jsonPrincipalEntityResourceWithoutAuth200","@Test
    void jsonPrincipalEntityResourceWithoutAuth200()","0","-","-","-","-"
"19","nullPrincipalEntityResourceWithoutAuth200","@Test
    void nullPrincipalEntityResourceWithoutAuth200()","0","-","-","-","-"
"20","annotatedJsonPrincipalEntityResourceWithoutAuth200","/**
     * When parameter is annotated then Jersey classifies such
     * parameter as","0","-","-","-","-"
"21","annotatedNullPrincipalEntityResourceWithoutAuth200","@Test
    void annotatedNullPrincipalEntityResourceWithoutAuth200()","0","-","-","-","-"
"22","NullPrincipal","public NullPrincipal()","0","-","-","-","-"
"23","JsonPrincipal","@JsonCreator
    public JsonPrincipal(@JsonProperty(""name"") String name)","0","-","-","-","-"
"24","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"25","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"26","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"27","PolymorphicPrincipalInjectedResourceConfig","public PolymorphicPrincipalInjectedResourceConfig()","0","-","-","-","-"
"28","getPrincipalClass","@Override protected Class<? extends Principal> getPrincipalClass()","0","-","-","-","-"
"29","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"30","getAuthBinder","@Override protected AbstractBinder getAuthBinder()","0","-","-","-","-"
"31","getAuthDynamicFeature","@Override protected DynamicFeature getAuthDynamicFeature(ContainerRequestFilter authFilter)","0","-","-","-","-"
"32","jsonPrincipalEntityResourceAuth200","@Test
    void jsonPrincipalEntityResourceAuth200()","0","-","-","-","-"
"33","jsonPrincipalEntityResourceNoAuth401","@Test
    void jsonPrincipalEntityResourceNoAuth401()","0","-","-","-","-"
"34","nullPrincipalEntityResourceAuth200","@Test
    void nullPrincipalEntityResourceAuth200()","0","-","-","-","-"
"35","nullPrincipalEntityResourceNoAuth401","@Test
    void nullPrincipalEntityResourceNoAuth401()","0","-","-","-","-"
"36","resourceWithValidOptionalAuthentication200","@Test
    void resourceWithValidOptionalAuthentication200()","0","-","-","-","-"
"37","resourceWithInvalidOptionalAuthentication200","@Test
    void resourceWithInvalidOptionalAuthentication200()","0","-","-","-","-"
"38","resourceWithoutOptionalAuthentication200","@Test
    void resourceWithoutOptionalAuthentication200()","0","-","-","-","-"
"39","resourceWithDifferentOptionalAuthentication200","@Test
    void resourceWithDifferentOptionalAuthentication200()","0","-","-","-","-"
"40","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"41","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"42","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"43","NoAuthPrincipalInjectedResourceConfig","public NoAuthPrincipalInjectedResourceConfig()","0","-","-","-","-"
"44","getPrincipalClass","@Override protected Class<? extends Principal> getPrincipalClass()","0","-","-","-","-"
"45","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"46","getAuthBinder","@Override protected AbstractBinder getAuthBinder()","0","-","-","-","-"
"47","getAuthDynamicFeature","@Override protected DynamicFeature getAuthDynamicFeature(ContainerRequestFilter authFilter)","0","-","-","-","-"
"48","principalEntityResourceWithoutAuth200","@Test
    void principalEntityResourceWithoutAuth200()","0","-","-","-","-"
"49","annotatedPrincipalEntityResourceWithoutAuth200","/**
     * When parameter is annotated then Jersey classifies such parameter as
     *","0","-","-","-","-"
"50","filter","@Override
        public void filter(ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"51","getUserPrincipal","@Override
                    public Principal getUserPrincipal()","0","-","-","-","-"
"52","isUserInRole","@Override
                    public boolean isUserInRole(String role)","0","-","-","-","-"
"53","isSecure","@Override
                    public boolean isSecure()","0","-","-","-","-"
"54","getAuthenticationScheme","@Override
                    public String getAuthenticationScheme()","0","-","-","-","-"
"55","InjectionResourceConfig","public InjectionResourceConfig()","0","-","-","-","-"
"56","getAuthFilter","@Override
        protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"57","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"58","testInjectionSupport","@Test
    void testInjectionSupport()","0","-","-","-","-"
"59","OAuthTestResourceConfig","public OAuthTestResourceConfig()","0","-","-","-","-"
"60","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"61","getDropwizardResourceConfig","@Override
    protected DropwizardResourceConfig getDropwizardResourceConfig()","0","-","-","-","-"
"62","getDropwizardResourceConfigClass","@Override
    protected Class<OAuthTestResourceConfig> getDropwizardResourceConfigClass()","0","-","-","-","-"
"63","getPrefix","@Override
    protected String getPrefix()","0","-","-","-","-"
"64","getOrdinaryGuyValidToken","@Override
    protected String getOrdinaryGuyValidToken()","0","-","-","-","-"
"65","getGoodGuyValidToken","@Override
    protected String getGoodGuyValidToken()","0","-","-","-","-"
"66","getBadGuyToken","@Override
    protected String getBadGuyToken()","0","-","-","-","-"
"67","OAuthTestResourceConfig","public OAuthTestResourceConfig()","0","-","-","-","-"
"68","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"69","checksQueryStringAccessTokenIfAuthorizationHeaderMissing","@Test
    void checksQueryStringAccessTokenIfAuthorizationHeaderMissing()","0","-","-","-","-"
"70","getDropwizardResourceConfig","@Override
    protected DropwizardResourceConfig getDropwizardResourceConfig()","0","-","-","-","-"
"71","getDropwizardResourceConfigClass","@Override
    protected Class<OAuthTestResourceConfig> getDropwizardResourceConfigClass()","0","-","-","-","-"
"72","getPrefix","@Override
    protected String getPrefix()","0","-","-","-","-"
"73","getOrdinaryGuyValidToken","@Override
    protected String getOrdinaryGuyValidToken()","0","-","-","-","-"
"74","getGoodGuyValidToken","@Override
    protected String getGoodGuyValidToken()","0","-","-","-","-"
"75","getBadGuyToken","@Override
    protected String getBadGuyToken()","0","-","-","-","-"
"76","authenticate","@Override
        public Optional<Principal> authenticate(String credentials) throws AuthenticationException","0","-","-","-","-"
"77","authorize","@Override
        public boolean authorize(Principal principal, String role, @Nullable ContainerRequestContext requestContext)","0","-","-","-","-"
"78","TestInjectableAuthFilter","public TestInjectableAuthFilter()","0","-","-","-","-"
"79","filter","@Override
        public void filter(ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"80","InjectionResourceConfig","public InjectionResourceConfig()","0","-","-","-","-"
"81","getAuthFilter","@Override
        protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"82","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"83","testInjectionSupport","@Test
    void testInjectionSupport()","0","-","-","-","-"
"84","getBasicAuthenticator","public static Authenticator<BasicCredentials, Principal> getBasicAuthenticator(final List<String> validUsers)","0","-","-","-","-"
"85","getSingleUserOAuthAuthenticator","public static Authenticator<String, Principal> getSingleUserOAuthAuthenticator(final String presented,
                                                                                   final String returned)","0","-","-","-","-"
"86","getMultiplyUsersOAuthAuthenticator","public static Authenticator<String, Principal> getMultiplyUsersOAuthAuthenticator(final List<String> validUsers)","0","-","-","-","-"
"87","getTestAuthorizer","public static Authorizer<Principal> getTestAuthorizer(final String validUser,
                                                          final String validRole)","0","-","-","-","-"
"88","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"89","cachesTheFirstReturnedPrincipal","@Test
    void cachesTheFirstReturnedPrincipal() throws Exception","0","-","-","-","-"
"90","invalidatesSingleCredentials","@Test
    void invalidatesSingleCredentials() throws Exception","0","-","-","-","-"
"91","invalidatesSetsOfCredentials","@Test
    void invalidatesSetsOfCredentials() throws Exception","0","-","-","-","-"
"92","invalidatesCredentialsMatchingGivenPredicate","@Test
    void invalidatesCredentialsMatchingGivenPredicate() throws Exception","0","-","-","-","-"
"93","invalidatesAllCredentials","@Test
    void invalidatesAllCredentials() throws Exception","0","-","-","-","-"
"94","calculatesTheSizeOfTheCache","@Test
    void calculatesTheSizeOfTheCache() throws Exception","0","-","-","-","-"
"95","calculatesCacheStats","@Test
    void calculatesCacheStats() throws Exception","0","-","-","-","-"
"96","shouldNotCacheAbsentPrincipals","@Test
    void shouldNotCacheAbsentPrincipals() throws Exception","0","-","-","-","-"
"97","shouldPropagateAuthenticationException","@Test
    void shouldPropagateAuthenticationException() throws AuthenticationException","0","-","-","-","-"
"98","shouldPropagateRuntimeException","@Test
    void shouldPropagateRuntimeException() throws AuthenticationException","0","-","-","-","-"
"99","cachesTheNegativeResultIfSpecified","@Test
    void cachesTheNegativeResultIfSpecified() throws Exception","0","-","-","-","-"
"100","isSecureShouldStayTheSame","@Test
    void isSecureShouldStayTheSame()","0","-","-","-","-"
"101","SimpleAuthFilter","SimpleAuthFilter()","0","-","-","-","-"
"102","filter","@Override
        public void filter(ContainerRequestContext requestContext)","0","-","-","-","-"
"103","FakeSecureRequestContext","FakeSecureRequestContext()","0","-","-","-","-"
"104","getSecurityContext","@Override
        public SecurityContext getSecurityContext()","0","-","-","-","-"
"105","setSecurityContext","@Override
        public void setSecurityContext(SecurityContext context)","0","-","-","-","-"
"106","getProperty","@Override
        public Object getProperty(String name)","0","-","-","-","-"
"107","getPropertyNames","@Override
        public Collection<String> getPropertyNames()","0","-","-","-","-"
"108","setProperty","@Override
        public void setProperty(String name, Object object)","0","-","-","-","-"
"109","removeProperty","@Override
        public void removeProperty(String name)","0","-","-","-","-"
"110","getUriInfo","@Override
        public UriInfo getUriInfo()","0","-","-","-","-"
"111","setRequestUri","@Override
        public void setRequestUri(URI requestUri)","0","-","-","-","-"
"112","setRequestUri","@Override
        public void setRequestUri(URI baseUri, URI requestUri)","0","-","-","-","-"
"113","getRequest","@Override
        public Request getRequest()","0","-","-","-","-"
"114","getMethod","@Override
        public String getMethod()","0","-","-","-","-"
"115","setMethod","@Override
        public void setMethod(String method)","0","-","-","-","-"
"116","getHeaders","@Override
        public MultivaluedMap<String, String> getHeaders()","0","-","-","-","-"
"117","getHeaderString","@Override
        public String getHeaderString(String name)","0","-","-","-","-"
"118","getDate","@Override
        public Date getDate()","0","-","-","-","-"
"119","getLanguage","@Override
        public Locale getLanguage()","0","-","-","-","-"
"120","getLength","@Override
        public int getLength()","0","-","-","-","-"
"121","getMediaType","@Override
        public MediaType getMediaType()","0","-","-","-","-"
"122","getAcceptableMediaTypes","@Override
        public List<MediaType> getAcceptableMediaTypes()","0","-","-","-","-"
"123","getAcceptableLanguages","@Override
        public List<Locale> getAcceptableLanguages()","0","-","-","-","-"
"124","getCookies","@Override
        public Map<String, Cookie> getCookies()","0","-","-","-","-"
"125","hasEntity","@Override
        public boolean hasEntity()","0","-","-","-","-"
"126","getEntityStream","@Override
        public InputStream getEntityStream()","0","-","-","-","-"
"127","setEntityStream","@Override
        public void setEntityStream(InputStream input)","0","-","-","-","-"
"128","abortWith","@Override
        public void abortWith(Response response)","0","-","-","-","-"
"129","BasicAuthTestResourceConfig","public BasicAuthTestResourceConfig()","0","-","-","-","-"
"130","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"131","getDropwizardResourceConfig","@Override
    protected DropwizardResourceConfig getDropwizardResourceConfig()","0","-","-","-","-"
"132","getDropwizardResourceConfigClass","@Override
    protected Class<BasicAuthTestResourceConfig> getDropwizardResourceConfigClass()","0","-","-","-","-"
"133","getPrefix","@Override
    protected String getPrefix()","0","-","-","-","-"
"134","getOrdinaryGuyValidToken","@Override
    protected String getOrdinaryGuyValidToken()","0","-","-","-","-"
"135","getGoodGuyValidToken","@Override
    protected String getGoodGuyValidToken()","0","-","-","-","-"
"136","getBadGuyToken","@Override
    protected String getBadGuyToken()","0","-","-","-","-"
"137","BasicAuthTestResourceConfig","public BasicAuthTestResourceConfig()","0","-","-","-","-"
"138","getAuthFilter","@Override protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"139","getDropwizardResourceConfig","@Override
    protected DropwizardResourceConfig getDropwizardResourceConfig()","0","-","-","-","-"
"140","getDropwizardResourceConfigClass","@Override
    protected Class<BasicCustomAuthProviderTest.BasicAuthTestResourceConfig> getDropwizardResourceConfigClass()","0","-","-","-","-"
"141","getPrefix","@Override
    protected String getPrefix()","0","-","-","-","-"
"142","getOrdinaryGuyValidToken","@Override
    protected String getOrdinaryGuyValidToken()","0","-","-","-","-"
"143","getGoodGuyValidToken","@Override
    protected String getGoodGuyValidToken()","0","-","-","-","-"
"144","getBadGuyToken","@Override
    protected String getBadGuyToken()","0","-","-","-","-"
"145","hasAUsername","@Test
    void hasAUsername()","0","-","-","-","-"
"146","hasAPassword","@Test
    void hasAPassword()","0","-","-","-","-"
"147","hasAWorkingEqualsMethod","@Test
    void hasAWorkingEqualsMethod()","0","-","-","-","-"
"148","hasAWorkingHashCode","@Test
    void hasAWorkingHashCode()","0","-","-","-","-"
"149","isHumanReadable","@Test
    void isHumanReadable()","0","-","-","-","-"
"150","ChainedAuthTestResourceConfig","public ChainedAuthTestResourceConfig()","0","-","-","-","-"
"151","buildHandlerList","@SuppressWarnings(""rawtypes"")
        public List<AuthFilter> buildHandlerList(AuthFilter<BasicCredentials, Principal> basicAuthFilter,
                                                 AuthFilter<String, Principal> oAuthFilter)","0","-","-","-","-"
"152","transformsBearerCredentialsToPrincipals","@Test
    void transformsBearerCredentialsToPrincipals() throws Exception","0","-","-","-","-"
"153","getDropwizardResourceConfig","@Override
    protected DropwizardResourceConfig getDropwizardResourceConfig()","0","-","-","-","-"
"154","getDropwizardResourceConfigClass","@Override
    protected Class<ChainedAuthTestResourceConfig> getDropwizardResourceConfigClass()","0","-","-","-","-"
"155","getPrefix","@Override
    protected String getPrefix()","0","-","-","-","-"
"156","getOrdinaryGuyValidToken","@Override
    protected String getOrdinaryGuyValidToken()","0","-","-","-","-"
"157","getGoodGuyValidToken","@Override
    protected String getGoodGuyValidToken()","0","-","-","-","-"
"158","getBadGuyToken","@Override
    protected String getBadGuyToken()","0","-","-","-","-"
"159","AbstractAuthResourceConfig","public AbstractAuthResourceConfig()","0","-","-","-","-"
"160","getPrincipalClass","/**
     * @return The type of injected principal instance.
     */
    protected Class<? extends Principal> getPrincipalClass()","0","-","-","-","-"
"161","getAuthBinder","/**
     * @return The binder to use for injecting request authentication.
     */
    protected AbstractBinder getAuthBinder()","0","-","-","-","-"
"162","getAuthDynamicFeature","/**
     * @return The","0","-","-","-","-"
"163","getAuthFilter","/**
     * @return The","0","-","-","-","-"
"164","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"165","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"166","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"167","BasicAuthResourceConfigWithAuthorizationFilter","public BasicAuthResourceConfigWithAuthorizationFilter()","0","-","-","-","-"
"168","getPrincipalClass","@Override
        protected Class<? extends Principal> getPrincipalClass()","0","-","-","-","-"
"169","getAuthFilter","@Override
        protected ContainerRequestFilter getAuthFilter()","0","-","-","-","-"
"170","getAuthBinder","@Override
        protected AbstractBinder getAuthBinder()","0","-","-","-","-"
"171","getAuthDynamicFeature","@Override
        protected DynamicFeature getAuthDynamicFeature(ContainerRequestFilter authFilter)","0","-","-","-","-"
"172","authenticationFilterShouldExecuteInAuthenticationPhaseForImplicitPermitall","@Test
    void authenticationFilterShouldExecuteInAuthenticationPhaseForImplicitPermitall()","0","-","-","-","-"
"173","authenticationFilterShouldExecuteInAuthenticationPhaseForOptionalPrincipal","@Test
    void authenticationFilterShouldExecuteInAuthenticationPhaseForOptionalPrincipal()","0","-","-","-","-"
"174","filter","@Override
        public void filter(ContainerRequestContext requestContext)","0","-","-","-","-"
"175","getUserPrincipal","@Override
                public Principal getUserPrincipal()","0","-","-","-","-"
"176","isUserInRole","@Override
                public boolean isUserInRole(String s)","0","-","-","-","-"
"177","isSecure","@Override
                public boolean isSecure()","0","-","-","-","-"
"178","getAuthenticationScheme","@Override
                public String getAuthenticationScheme()","0","-","-","-","-"
"179","filter","@Override
        public void filter(ContainerRequestContext request)","0","-","-","-","-"
"180","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory()
        throws TestContainerException","0","-","-","-","-"
"181","getDropwizardResourceConfig","protected abstract DropwizardResourceConfig getDropwizardResourceConfig();","0","-","-","-","-"
"182","getDropwizardResourceConfigClass","protected abstract Class<T> getDropwizardResourceConfigClass();","0","-","-","-","-"
"183","getPrefix","protected abstract String getPrefix();","0","-","-","-","-"
"184","getOrdinaryGuyValidToken","protected abstract String getOrdinaryGuyValidToken();","0","-","-","-","-"
"185","getGoodGuyValidToken","protected abstract String getGoodGuyValidToken();","0","-","-","-","-"
"186","getBadGuyToken","protected abstract String getBadGuyToken();","0","-","-","-","-"
"187","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"188","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"189","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"190","respondsToMissingCredentialsWith401","@Test
    void respondsToMissingCredentialsWith401()","0","-","-","-","-"
"191","resourceWithoutAuth200","@Test
    void resourceWithoutAuth200()","0","-","-","-","-"
"192","resourceWithAuthenticationWithoutAuthorizationWithCorrectCredentials200","@Test
    void resourceWithAuthenticationWithoutAuthorizationWithCorrectCredentials200()","0","-","-","-","-"
"193","resourceWithAuthenticationWithoutAuthorizationNoCredentials401","@Test
    void resourceWithAuthenticationWithoutAuthorizationNoCredentials401()","0","-","-","-","-"
"194","resourceWithValidOptionalAuthentication200","@Test
    void resourceWithValidOptionalAuthentication200()","0","-","-","-","-"
"195","resourceWithInvalidOptionalAuthentication200","@Test
    void resourceWithInvalidOptionalAuthentication200()","0","-","-","-","-"
"196","resourceWithoutOptionalAuthentication200","@Test
    void resourceWithoutOptionalAuthentication200()","0","-","-","-","-"
"197","resourceWithAuthorizationPrincipalIsNotAuthorized403","@Test
    void resourceWithAuthorizationPrincipalIsNotAuthorized403()","0","-","-","-","-"
"198","resourceWithDenyAllAndNoAuth401","@Test
    void resourceWithDenyAllAndNoAuth401()","0","-","-","-","-"
"199","resourceWithDenyAllAndAuth403","@Test
    void resourceWithDenyAllAndAuth403()","0","-","-","-","-"
"200","transformsCredentialsToPrincipals","@Test
    void transformsCredentialsToPrincipals()","0","-","-","-","-"
"201","transformsCredentialsToPrincipalsWhenAuthAnnotationExistsWithoutMethodAnnotation","@Test
    void transformsCredentialsToPrincipalsWhenAuthAnnotationExistsWithoutMethodAnnotation()","0","-","-","-","-"
"202","respondsToNonBasicCredentialsWith401","@Test
    void respondsToNonBasicCredentialsWith401()","0","-","-","-","-"
"203","respondsToExceptionsWith500","@Test
    void respondsToExceptionsWith500()","0","-","-","-","-"
"204","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"205","cachesTheFirstReturnedPrincipal","@Test
    void cachesTheFirstReturnedPrincipal()","0","-","-","-","-"
"206","respectsTheCacheConfiguration","@Test
    void respectsTheCacheConfiguration()","0","-","-","-","-"
"207","invalidatesPrincipalAndRole","@Test
    void invalidatesPrincipalAndRole()","0","-","-","-","-"
"208","invalidatesSinglePrincipal","@Test
    void invalidatesSinglePrincipal()","0","-","-","-","-"
"209","invalidatesSetsofPrincipals","@Test
    void invalidatesSetsofPrincipals()","0","-","-","-","-"
"210","invalidatesPrincipalsMatchingGivenPredicate","@Test
    void invalidatesPrincipalsMatchingGivenPredicate()","0","-","-","-","-"
"211","invalidatesAllPrincipals","@Test
    void invalidatesAllPrincipals()","0","-","-","-","-"
"212","calculatesTheSizeOfTheCache","@Test
    void calculatesTheSizeOfTheCache()","0","-","-","-","-"
"213","calculatesCacheStats","@Test
    void calculatesCacheStats()","0","-","-","-","-"
"214","shouldPropagateRuntimeException","@Test
    void shouldPropagateRuntimeException()","0","-","-","-","-"
"215","CustomAuthException","public CustomAuthException(String message)","0","-","-","-","-"
"216","buildException","@Override
        public RuntimeException buildException(String prefix, String realm)","0","-","-","-","-"
"217","toResponse","@Override
        public Response toResponse(CustomAuthException exception)","0","-","-","-","-"
"218","ping","@GET
        public String ping(@Auth Principal principal)","0","-","-","-","-"
"219","CustomAuthResourceConfig","public CustomAuthResourceConfig()","0","-","-","-","-"
"220","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory() throws TestContainerException","0","-","-","-","-"
"221","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"222","testCustomAuthException","@Test
    void testCustomAuthException()","0","-","-","-","-"
"223","show","@RolesAllowed(","0","-","-","-","-"
"224","showForEveryUser","@PermitAll
    @GET
    @Path(""profile"")
    public String showForEveryUser(@Auth Principal principal)","0","-","-","-","-"
"225","checkOptionalAuth","@PermitAll
    @GET
    @Path(""optional"")
    public String checkOptionalAuth(@Auth Optional<Principal> principalOpt)","0","-","-","-","-"
"226","implicitPermitAllAuthorization","@GET
    @Path(""implicit-permitall"")
    public String implicitPermitAllAuthorization(@Auth Principal principal)","0","-","-","-","-"
"227","hello","@GET
    @Path(""noauth"")
    public String hello()","0","-","-","-","-"
"228","denied","@DenyAll
    @GET
    @Path(""denied"")
    public String denied()","0","-","-","-","-"
"229","OptionalPrincipalContainerRequestValueFactory","public OptionalPrincipalContainerRequestValueFactory(ContainerRequest request)","0","-","-","-","-"
"230","provide","/**
     * @return","0","-","-","-","-"
"231","DefaultAuthorizationContext","DefaultAuthorizationContext(P principal, String role, @Nullable ContainerRequestContext requestContext)","0","-","-","-","-"
"232","OAuthCredentialAuthFilter","private OAuthCredentialAuthFilter()","0","-","-","-","-"
"233","filter","@Override
    public void filter(final ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"234","getCredentials","/**
     * Parses a value of the `Authorization` header in the form of `Bearer a892bf3e284da9bb40648ab10`.
     *
     * @param header the value of the `Authorization` header
     * @return a token
     */
    @Nullable
    private String getCredentials(String header)","0","-","-","-","-"
"235","newInstance","@Override
        protected OAuthCredentialAuthFilter<P> newInstance()","0","-","-","-","-"
"236","setJettyAuthenticationIfPossible","static void setJettyAuthenticationIfPossible(SecurityContext securityContext, @Nullable InjectionManager injectionManager)","0","-","-","-","-"
"237","DropwizardJettyAuthentication","public DropwizardJettyAuthentication(SecurityContext securityContext)","0","-","-","-","-"
"238","DropwizardJettyUserIdentity","public DropwizardJettyUserIdentity(SecurityContext securityContext)","0","-","-","-","-"
"239","getSubject","@Override
        public Subject getSubject()","0","-","-","-","-"
"240","getUserPrincipal","@Override
        public Principal getUserPrincipal()","0","-","-","-","-"
"241","isUserInRole","@Override
        public boolean isUserInRole(String role, Scope scope)","0","-","-","-","-"
"242","CachingAuthenticator","/**
     * Creates a new cached authenticator.
     *
     * @param metricRegistry the application's registry of metrics
     * @param authenticator  the underlying authenticator
     * @param cacheSpec      a","0","-","-","-","-"
"243","CachingAuthenticator","/**
     * Creates a new cached authenticator.
     *
     * @param metricRegistry the application's registry of metrics
     * @param authenticator  the underlying authenticator
     * @param builder        a","0","-","-","-","-"
"244","CachingAuthenticator","/**
     * Creates a new cached authenticator.
     *
     * @param metricRegistry      the application's registry of metrics
     * @param authenticator       the underlying authenticator
     * @param builder             a","0","-","-","-","-"
"245","CachingAuthenticator","/**
     * Creates a new cached authenticator.
     *
     * @param metricRegistry      the application's registry of metrics
     * @param authenticator       the underlying authenticator
     * @param builder             a","0","-","-","-","-"
"246","authenticate","@Override
    public Optional<P> authenticate(C credentials) throws AuthenticationException","0","-","-","-","-"
"247","invalidate","/**
     * Discards any cached principal for the given credentials.
     *
     * @param credentials a set of credentials
     */
    public void invalidate(C credentials)","0","-","-","-","-"
"248","invalidateAll","/**
     * Discards any cached principal for the given collection of credentials.
     *
     * @param credentials a collection of credentials
     */
    public void invalidateAll(Iterable<C> credentials)","0","-","-","-","-"
"249","invalidateAll","/**
     * Discards any cached principal for the collection of credentials satisfying the given predicate.
     *
     * @param predicate a predicate to filter credentials
     */
    public void invalidateAll(Predicate<? super C> predicate)","0","-","-","-","-"
"250","invalidateAll","/**
     * Discards all cached principals.
     */
    public void invalidateAll()","0","-","-","-","-"
"251","size","/**
     * Returns the number of cached principals.
     *
     * @return the number of cached principals
     */
    public long size()","0","-","-","-","-"
"252","stats","/**
     * Returns a set of statistics about the cache contents and usage.
     *
     * @return a set of statistics about the cache contents and usage
     */
    public CacheStats stats()","0","-","-","-","-"
"253","PolymorphicAuthDynamicFeature","public PolymorphicAuthDynamicFeature(Map<Class<? extends T>,  ContainerRequestFilter> authFilterMap)","0","-","-","-","-"
"254","configure","@Override
    public void configure(ResourceInfo resourceInfo, FeatureContext context)","0","-","-","-","-"
"255","configure","@Override
    public boolean configure(FeatureContext context)","0","-","-","-","-"
"256","BasicCredentialAuthFilter","private BasicCredentialAuthFilter()","0","-","-","-","-"
"257","filter","@Override
    public void filter(ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"258","getCredentials","/**
     * Parses a Base64-encoded value of the `Authorization` header
     * in the form of `Basic dXNlcm5hbWU6cGFzc3dvcmQ=`.
     *
     * @param header the value of the `Authorization` header
     * @return a username and a password as","0","-","-","-","-"
"259","newInstance","@Override
        protected BasicCredentialAuthFilter<P> newInstance()","0","-","-","-","-"
"260","BasicCredentials","/**
     * Creates a new BasicCredentials with the given username and password.
     *
     * @param username the username
     * @param password the password
     */
    public BasicCredentials(String username, String password)","0","-","-","-","-"
"261","getUsername","/**
     * Returns the credentials' username.
     *
     * @return the credentials' username
     */
    public String getUsername()","0","-","-","-","-"
"262","getPassword","/**
     * Returns the credentials' password.
     *
     * @return the credentials' password
     */
    public String getPassword()","0","-","-","-","-"
"263","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"264","equals","@Override
    public boolean equals(Object obj)","0","-","-","-","-"
"265","toString","@Override
    public String toString()","0","-","-","-","-"
"266","ChainedAuthFilter","public ChainedAuthFilter(@SuppressWarnings(""rawtypes"") List<AuthFilter> handlers)","0","-","-","-","-"
"267","filter","@Override
    public void filter(ContainerRequestContext containerRequestContext) throws IOException","0","-","-","-","-"
"268","AuthValueFactoryProvider","/**
     *","0","-","-","-","-"
"269","createValueProvider","@Nullable
    @Override
    protected Function<ContainerRequest, ?> createValueProvider(Parameter parameter)","0","-","-","-","-"
"270","PrincipalClassProvider","PrincipalClassProvider(Class<T> clazz)","0","-","-","-","-"
"271","Binder","public Binder(Class<T> principalClass)","0","-","-","-","-"
"272","configure","@Override
        protected void configure()","0","-","-","-","-"
"273","PrincipalImpl","public PrincipalImpl(String name)","0","-","-","-","-"
"274","getName","@Override
    public String getName()","0","-","-","-","-"
"275","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"276","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"277","toString","@Override
    public String toString()","0","-","-","-","-"
"278","authorize","/**
     * Decides if access is granted for the given principal in the given role.
     *
     * @param principal      a","0","-","-","-","-"
"279","getAuthorizationContext","/**
     * Returns an","0","-","-","-","-"
"280","PolymorphicAuthValueFactoryProvider","/**
     *","0","-","-","-","-"
"281","createValueProvider","@Nullable
    @Override
    protected Function<ContainerRequest, ?> createValueProvider(Parameter parameter)","0","-","-","-","-"
"282","PrincipalClassSetProvider","public PrincipalClassSetProvider(Set<Class<? extends T>> clazzSet)","0","-","-","-","-"
"283","Binder","public Binder(Set<Class<? extends T>> principalClassSet)","0","-","-","-","-"
"284","configure","@Override
        protected void configure()","0","-","-","-","-"
"285","WebApplicationExceptionCatchingFilter","public WebApplicationExceptionCatchingFilter(ContainerRequestFilter underlying)","0","-","-","-","-"
"286","filter","@Override
    public void filter(ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"287","CachingAuthorizer","/**
     * Creates a new cached authorizer.
     *
     * @param metricRegistry the application's registry of metrics
     * @param authorizer     the underlying authorizer
     * @param cacheSpec","0","-","-","-","-"
"288","CachingAuthorizer","/**
     * Creates a new cached authorizer.
     *
     * @param metricRegistry the application's registry of metrics
     * @param authorizer     the underlying authorizer
     * @param builder        a","0","-","-","-","-"
"289","CachingAuthorizer","/**
     * Creates a new cached authorizer.
     *
     * @param metricRegistry the application's registry of metrics
     * @param authorizer     the underlying authorizer
     * @param builder        a","0","-","-","-","-"
"290","authorize","@Override
    public boolean authorize(P principal, String role, @Nullable ContainerRequestContext requestContext)","0","-","-","-","-"
"291","getAuthorizationContext","@Override
    public AuthorizationContext<P> getAuthorizationContext(P principal, String role, @Nullable ContainerRequestContext requestContext)","0","-","-","-","-"
"292","invalidate","/**
     * Discards any cached role associations for the given principal and role.
     *
     * @param principal
     * @param role
     * @param requestContext
     */
    public void invalidate(P principal, String role, ContainerRequestContext requestContext)","0","-","-","-","-"
"293","invalidate","/**
     * Discards any cached role associations for the given principal.
     *
     * @param principal
     */
    public void invalidate(P principal)","0","-","-","-","-"
"294","invalidateAll","/**
     * Discards any cached role associations for the given collection
     * of principals.
     *
     * @param principals a list of principals
     */
    public void invalidateAll(Iterable<P> principals)","0","-","-","-","-"
"295","invalidateAll","/**
     * Discards any cached role associations for principals satisfying
     * the given predicate.
     *
     * @param predicate a predicate to filter credentials
     */
    public void invalidateAll(Predicate<? super P> predicate)","0","-","-","-","-"
"296","invalidateAll","/**
     * Discards all cached role associations.
     */
    public void invalidateAll()","0","-","-","-","-"
"297","size","/**
     * Returns the number of principals for which there are cached
     * role associations.
     *
     * @return the number of cached principals
     */
    public long size()","0","-","-","-","-"
"298","stats","/**
     * Returns a set of statistics about the cache contents and usage.
     *
     * @return a set of statistics about the cache contents and usage
     */
    public CacheStats stats()","0","-","-","-","-"
"299","buildResponse","@Nullable
    default Response buildResponse(String prefix, String realm)","0","-","-","-","-"
"300","buildException","/**
     * This method allows overriding the exception thrown from an","0","-","-","-","-"
"301","authenticate","/**
     * Given a set of user-provided credentials, return an optional principal.
     *
     * If the credentials are valid and map to a principal, returns an","0","-","-","-","-"
"302","AuthDynamicFeature","@SuppressWarnings(""NullAway"")
    public AuthDynamicFeature(ContainerRequestFilter authFilter)","0","-","-","-","-"
"303","AuthDynamicFeature","@SuppressWarnings(""NullAway"")
    public AuthDynamicFeature(Class<? extends ContainerRequestFilter> authFilterClass)","0","-","-","-","-"
"304","configure","@Override
    public void configure(ResourceInfo resourceInfo, FeatureContext context)","0","-","-","-","-"
"305","containsAuthAnnotation","private boolean containsAuthAnnotation(final Annotation[] annotations)","0","-","-","-","-"
"306","registerAuthFilter","private void registerAuthFilter(FeatureContext context)","0","-","-","-","-"
"307","registerAuthFilter","private void registerAuthFilter(FeatureContext context, @Nullable ContainerRequestFilter decoratedAuthFilter)","0","-","-","-","-"
"308","configure","@Override
    public boolean configure(FeatureContext context)","0","-","-","-","-"
"309","AuthInjectionHelper","private AuthInjectionHelper()","0","-","-","-","-"
"310","inject","static void inject(InjectionManager injectionManager, ContainerRequestFilter filter)","0","-","-","-","-"
"311","AuthenticationException","public AuthenticationException(String message)","0","-","-","-","-"
"312","AuthenticationException","public AuthenticationException(String message, Throwable cause)","0","-","-","-","-"
"313","AuthenticationException","public AuthenticationException(Throwable cause)","0","-","-","-","-"
"314","PrincipalContainerRequestValueFactory","public PrincipalContainerRequestValueFactory(ContainerRequest request)","0","-","-","-","-"
"315","provide","/**
     * @return","0","-","-","-","-"
"316","buildResponse","@Override
    public Response buildResponse(String prefix, String realm)","0","-","-","-","-"
"317","authorize","@Override
    public boolean authorize(P principal, String role, @Nullable ContainerRequestContext ctx)","0","-","-","-","-"
"318","buildResponse","@Override
    public Response buildResponse(String prefix, String realm)","0","-","-","-","-"
"319","setRealm","/**
         * Sets the given realm
         *
         * @param realm a realm
         * @return the current builder
         */
        public AuthFilterBuilder<C, P, T> setRealm(String realm)","0","-","-","-","-"
"320","setPrefix","/**
         * Sets the given prefix
         *
         * @param prefix a prefix
         * @return the current builder
         */
        public AuthFilterBuilder<C, P, T> setPrefix(String prefix)","0","-","-","-","-"
"321","setAuthorizer","/**
         * Sets the given authorizer
         *
         * @param authorizer an","0","-","-","-","-"
"322","setAuthenticator","/**
         * Sets the given authenticator
         *
         * @param authenticator an","0","-","-","-","-"
"323","setUnauthorizedHandler","/**
         * Sets the given unauthorized handler
         *
         * @param unauthorizedHandler an","0","-","-","-","-"
"324","buildAuthFilter","/**
         * Builds an instance of the filter with a provided authenticator,
         * an authorizer, a prefix, and a realm.
         *
         * @return a new instance of the filter
         */
        public T buildAuthFilter()","0","-","-","-","-"
"325","newInstance","protected abstract T newInstance();","0","-","-","-","-"
"326","authenticate","/**
     * Authenticates a request with user credentials and set up the security context.
     *
     * @param requestContext the context of the request
     * @param credentials    the user credentials
     * @param scheme         the authentication scheme; one of","0","-","-","-","-"
"327","getUserPrincipal","@Override
                public Principal getUserPrincipal()","0","-","-","-","-"
"328","isUserInRole","@Override
                public boolean isUserInRole(String role)","0","-","-","-","-"
"329","isSecure","@Override
                public boolean isSecure()","0","-","-","-","-"
"330","getAuthenticationScheme","@Override
                public String getAuthenticationScheme()","0","-","-","-","-"
"331","AuthorizationContext","public AuthorizationContext(P principal, String role, @Nullable ContainerRequestContext requestContext)","0","-","-","-","-"
"332","getPrincipal","public P getPrincipal()","0","-","-","-","-"
"333","getRole","public String getRole()","0","-","-","-","-"
"334","getRequestContext","@Nullable public ContainerRequestContext getRequestContext()","0","-","-","-","-"
"335","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"336","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"337","fromString","@JsonCreator
        public static EnumWithCreator fromString(String value)","0","-","-","-","-"
"338","USD","USD(""United States dollar""),
        AUD(""a_u_d""),
        CAD(""c-a-d""),
        BLA(""b.l.a""),
        EUR(""Euro""),
        GBP(""Pound sterling"");","0","-","-","-","-"
"339","CurrencyCode","CurrencyCode(String name)","0","-","-","-","-"
"340","toString","@Override
        public String toString()","0","-","-","-","-"
"341","toString","@Override
            public String toString()","0","-","-","-","-"
"342","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"343","mapsUpperCaseEnums","@Test
    void mapsUpperCaseEnums() throws Exception","0","-","-","-","-"
"344","mapsLowerCaseEnums","@Test
    void mapsLowerCaseEnums() throws Exception","0","-","-","-","-"
"345","mapsPaddedEnums","@Test
    void mapsPaddedEnums() throws Exception","0","-","-","-","-"
"346","mapsSpacedEnums","@Test
    void mapsSpacedEnums() throws Exception","0","-","-","-","-"
"347","mapsDashedEnums","@Test
    void mapsDashedEnums() throws Exception","0","-","-","-","-"
"348","mapsDottedEnums","@Test
    void mapsDottedEnums() throws Exception","0","-","-","-","-"
"349","mapsWhenEnumHasCreator","@Test
    void mapsWhenEnumHasCreator() throws Exception","0","-","-","-","-"
"350","failsOnIncorrectValue","@Test
    void failsOnIncorrectValue()","0","-","-","-","-"
"351","mapsToLowerCaseEnums","@Test
    void mapsToLowerCaseEnums() throws Exception","0","-","-","-","-"
"352","mapsMixedCaseEnums","@Test
    void mapsMixedCaseEnums() throws Exception","0","-","-","-","-"
"353","readsEnumsUsingToString","@Test
    void readsEnumsUsingToString() throws Exception","0","-","-","-","-"
"354","readsUnknownEnumValuesAsNull","@Test
    void readsUnknownEnumValuesAsNull() throws Exception","0","-","-","-","-"
"355","readsUnknownEnumValuesUsingDefaultValue","@Test
    void readsUnknownEnumValuesUsingDefaultValue() throws Exception","0","-","-","-","-"
"356","readsEnumsUsingToStringWithDeserializationFeatureOff","@Test
    void readsEnumsUsingToStringWithDeserializationFeatureOff() throws Exception","0","-","-","-","-"
"357","testEnumWithJsonPropertyRename","@Test
    void testEnumWithJsonPropertyRename() throws Exception","0","-","-","-","-"
"358","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"359","canDeserializeAHostAndPort","@Test
    void canDeserializeAHostAndPort() throws Exception","0","-","-","-","-"
"360","canDeserializeCacheBuilderSpecs","@Test
    void canDeserializeCacheBuilderSpecs() throws Exception","0","-","-","-","-"
"361","canSerializeCacheBuilderSpecs","@Test
    void canSerializeCacheBuilderSpecs() throws Exception","0","-","-","-","-"
"362","canDeserializeAbsentOptions","@Test
    void canDeserializeAbsentOptions() throws Exception","0","-","-","-","-"
"363","canDeserializePresentOptions","@Test
    void canDeserializePresentOptions() throws Exception","0","-","-","-","-"
"364","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"365","deserializePersonWithoutAnnotations","@Test
    void deserializePersonWithoutAnnotations() throws IOException","0","-","-","-","-"
"366","serializePersonWithoutAnnotations","@Test
    void serializePersonWithoutAnnotations() throws IOException","0","-","-","-","-"
"367","testDoesNotAttemptToDeserializeExtremelBigNumbers","@Test
    void testDoesNotAttemptToDeserializeExtremelBigNumbers() throws Exception","0","-","-","-","-"
"368","testCanDeserializeZero","@Test
    void testCanDeserializeZero() throws Exception","0","-","-","-","-"
"369","testCanDeserializeNormalTimestamp","@Test
    void testCanDeserializeNormalTimestamp() throws Exception","0","-","-","-","-"
"370","testCanDeserializeNormalTimestampWithNanoseconds","@Test
    void testCanDeserializeNormalTimestampWithNanoseconds() throws Exception","0","-","-","-","-"
"371","testCanDeserializeMinInstant","@Test
    void testCanDeserializeMinInstant() throws Exception","0","-","-","-","-"
"372","testCanDeserializeMaxInstant","@Test
    void testCanDeserializeMaxInstant() throws Exception","0","-","-","-","-"
"373","testCanNotDeserializeValueMoreThanMaxInstant","@Test
    void testCanNotDeserializeValueMoreThanMaxInstant()","0","-","-","-","-"
"374","testCanNotDeserializeValueLessThanMaxInstant","@Test
    void testCanNotDeserializeValueLessThanMaxInstant()","0","-","-","-","-"
"375","getId","@JsonProperty
        int getId()","0","-","-","-","-"
"376","setId","@JsonProperty
        void setId(int id)","0","-","-","-","-"
"377","getCreatedAt","@JsonProperty
        @Nullable
        Instant getCreatedAt()","0","-","-","-","-"
"378","setCreatedAt","@JsonProperty
        void setCreatedAt(Instant createdAt)","0","-","-","-","-"
"379","objectMapperUsesGivenCustomJsonFactory","@Test
    void objectMapperUsesGivenCustomJsonFactory()","0","-","-","-","-"
"380","objectMapperCanHandleNullInsteadOfCustomJsonFactory","@Test
    void objectMapperCanHandleNullInsteadOfCustomJsonFactory()","0","-","-","-","-"
"381","objectMapperCanDeserializeJdk7Types","@Test
    void objectMapperCanDeserializeJdk7Types() throws IOException","0","-","-","-","-"
"382","objectMapperSerializesNullValues","@Test
    void objectMapperSerializesNullValues() throws IOException","0","-","-","-","-"
"383","objectMapperIgnoresUnknownProperties","@Test
    void objectMapperIgnoresUnknownProperties() throws JsonProcessingException","0","-","-","-","-"
"384","objectMapperRegistersAfterburnerButNotBlackbird","@Test
    void objectMapperRegistersAfterburnerButNotBlackbird()","0","-","-","-","-"
"385","testDoesNotAttemptToDeserializeExtremelyBigNumbers","@Test
    void testDoesNotAttemptToDeserializeExtremelyBigNumbers() throws Exception","0","-","-","-","-"
"386","testCanDeserializeZero","@Test
    void testCanDeserializeZero() throws Exception","0","-","-","-","-"
"387","testCanDeserializeNormalTimestamp","@Test
    void testCanDeserializeNormalTimestamp() throws Exception","0","-","-","-","-"
"388","testCanDeserializeNormalTimestampWithNanoseconds","@Test
    void testCanDeserializeNormalTimestampWithNanoseconds() throws Exception","0","-","-","-","-"
"389","testCanDeserializeFromString","@Test
    void testCanDeserializeFromString() throws Exception","0","-","-","-","-"
"390","testCanDeserializeMinDuration","@Test
    void testCanDeserializeMinDuration() throws Exception","0","-","-","-","-"
"391","testCanDeserializeMaxDuration","@Test
    void testCanDeserializeMaxDuration() throws Exception","0","-","-","-","-"
"392","testCanNotDeserializeValueMoreThanMaxDuration","@Test
    void testCanNotDeserializeValueMoreThanMaxDuration()","0","-","-","-","-"
"393","testCanNotDeserializeValueLessThanMinDuration","@Test
    void testCanNotDeserializeValueLessThanMinDuration()","0","-","-","-","-"
"394","getId","@JsonProperty
        int getId()","0","-","-","-","-"
"395","setId","@JsonProperty
        void setId(int id)","0","-","-","-","-"
"396","getDuration","@JsonProperty
        @Nullable
        Duration getDuration()","0","-","-","-","-"
"397","setDuration","@JsonProperty
        void setDuration(Duration duration)","0","-","-","-","-"
"398","RegularExample","@SuppressWarnings(","0","-","-","-","-"
"399","RegularExample","public RegularExample(String firstName)","0","-","-","-","-"
"400","SnakeCaseExample","@SuppressWarnings(","0","-","-","-","-"
"401","SnakeCaseExample","public SnakeCaseExample(String firstName)","0","-","-","-","-"
"402","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"403","serializesRegularProperties","@Test
    void serializesRegularProperties() throws Exception","0","-","-","-","-"
"404","serializesSnakeCaseProperties","@Test
    void serializesSnakeCaseProperties() throws Exception","0","-","-","-","-"
"405","deserializesRegularProperties","@Test
    void deserializesRegularProperties() throws Exception","0","-","-","-","-"
"406","deserializesSnakeCaseProperties","@Test
    void deserializesSnakeCaseProperties() throws Exception","0","-","-","-","-"
"407","nameForConstructorParameterWorksWithNullField","@Test
    void nameForConstructorParameterWorksWithNullField()","0","-","-","-","-"
"408","nameForFieldWorksWithNullField","@Test
    void nameForFieldWorksWithNullField()","0","-","-","-","-"
"409","nameForGetterMethodWorksWithNullField","@Test
    void nameForGetterMethodWorksWithNullField()","0","-","-","-","-"
"410","nameForSetterMethodWorksWithNullField","@Test
    void nameForSetterMethodWorksWithNullField()","0","-","-","-","-"
"411","usingRangeHelperDoesNotThrowNullPointerException","@Test
    // https://github.com/dropwizard/dropwizard/issues/3514
    void usingRangeHelperDoesNotThrowNullPointerException()","0","-","-","-","-"
"412","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"413","discoversSubtypes","@Test
    void discoversSubtypes() throws Exception","0","-","-","-","-"
"414","Person","public Person(String name, String surname)","0","-","-","-","-"
"415","getName","public String getName()","0","-","-","-","-"
"416","getSurname","public String getSurname()","0","-","-","-","-"
"417","canDeserializeCacheBuilderSpecs","@Test
    void canDeserializeCacheBuilderSpecs() throws Exception","0","-","-","-","-"
"418","canSerializeCacheBuilderSpecs","@Test
    void canSerializeCacheBuilderSpecs() throws Exception","0","-","-","-","-"
"419","Issue1627","public Issue1627(@Nullable String string, @Nullable UUID uuid)","0","-","-","-","-"
"420","getString","@JsonProperty
    @Nullable
    public String getString()","0","-","-","-","-"
"421","getUuid","@JsonProperty
    @Nullable
    public UUID getUuid()","0","-","-","-","-"
"422","DiscoverableSubtypeResolver","/**
     * Constructs a subtype resolver which scans for subtypes of","0","-","-","-","-"
"423","DiscoverableSubtypeResolver","/**
     * Constructs a subtype resolver which scans for subtypes of the provided class.
     *
     * @param rootKlass the class to choose the correct","0","-","-","-","-"
"424","getDiscoveredSubtypes","/**
     * Returns the subtypes discovered from the","0","-","-","-","-"
"425","getClassLoader","/**
     * Returns a","0","-","-","-","-"
"426","discoverServices","/**
     * Discovers the services in the","0","-","-","-","-"
"427","loadClass","/**
     * Loads a class discovered from a service file without throwing a","0","-","-","-","-"
"428","Jackson","private Jackson()","0","-","-","-","-"
"429","newObjectMapper","/**
     * Creates a new","0","-","-","-","-"
"430","newObjectMapper","/**
     * Creates a new","0","-","-","-","-"
"431","newMinimalObjectMapper","/**
     * Creates a new minimal","0","-","-","-","-"
"432","configure","/**
     * Configures an","0","-","-","-","-"
"433","nameForConstructorParameter","@Override
    public String nameForConstructorParameter(MapperConfig<?> config,
                                              AnnotatedParameter ctorParam,
                                              String defaultName)","0","-","-","-","-"
"434","nameForField","@Override
    public String nameForField(MapperConfig<?> config,
                               AnnotatedField field,
                               String defaultName)","0","-","-","-","-"
"435","nameForGetterMethod","@Override
    public String nameForGetterMethod(MapperConfig<?> config,
                                      AnnotatedMethod method,
                                      String defaultName)","0","-","-","-","-"
"436","nameForSetterMethod","@Override
    public String nameForSetterMethod(MapperConfig<?> config,
                                      AnnotatedMethod method,
                                      String defaultName)","0","-","-","-","-"
"437","PermissiveEnumDeserializer","@SuppressWarnings(""unchecked"")
        protected PermissiveEnumDeserializer(Class<Enum<?>> clazz)","0","-","-","-","-"
"438","deserialize","@Override
        public Enum<?> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException","0","-","-","-","-"
"439","isCachable","/**
         * @since 2.0
         */
        @Override
        public boolean isCachable()","0","-","-","-","-"
"440","findEnumDeserializer","@Override
        @SuppressWarnings(""unchecked"")
        @Nullable
        public JsonDeserializer<?> findEnumDeserializer(Class<?> type,
                                                        DeserializationConfig config,
                                                        BeanDescription desc) throws JsonMappingException","0","-","-","-","-"
"441","getModuleName","@Override
    public String getModuleName()","0","-","-","-","-"
"442","version","@Override
    public Version version()","0","-","-","-","-"
"443","setupModule","@Override
    public void setupModule(final SetupContext context)","0","-","-","-","-"
"444","deserialize","@Override
        public CacheBuilderSpec deserialize(JsonParser jp,
                                            DeserializationContext ctxt) throws IOException","0","-","-","-","-"
"445","serialize","@Override
        public void serialize(CacheBuilderSpec value, JsonGenerator gen, SerializerProvider serializers) throws IOException","0","-","-","-","-"
"446","findBeanDeserializer","@Override
        public JsonDeserializer<?> findBeanDeserializer(JavaType type,
                                                        DeserializationConfig config,
                                                        BeanDescription beanDesc) throws JsonMappingException","0","-","-","-","-"
"447","findSerializer","@Override
        public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)","0","-","-","-","-"
"448","getModuleName","@Override
    public String getModuleName()","0","-","-","-","-"
"449","version","@Override
    public Version version()","0","-","-","-","-"
"450","setupModule","@Override
    public void setupModule(SetupContext context)","0","-","-","-","-"
"451","deserialize","@Override
        public CaffeineSpec deserialize(JsonParser jp,
                                        DeserializationContext ctxt) throws IOException","0","-","-","-","-"
"452","serialize","@Override
        public void serialize(CaffeineSpec value, JsonGenerator gen, SerializerProvider serializers) throws IOException","0","-","-","-","-"
"453","findBeanDeserializer","@Override
        public JsonDeserializer<?> findBeanDeserializer(JavaType type,
                                                        DeserializationConfig config,
                                                        BeanDescription beanDesc) throws JsonMappingException","0","-","-","-","-"
"454","findSerializer","@Override
        public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type, BeanDescription beanDesc)","0","-","-","-","-"
"455","getModuleName","@Override
    public String getModuleName()","0","-","-","-","-"
"456","version","@Override
    public Version version()","0","-","-","-","-"
"457","setupModule","@Override
    public void setupModule(SetupContext context)","0","-","-","-","-"
"458","testDefaults","@Test
    void testDefaults()","0","-","-","-","-"
"459","testSetDepth","@Test
    void testSetDepth()","0","-","-","-","-"
"460","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"461","testProducesDefaultMap","@Test
    void testProducesDefaultMap()","0","-","-","-","-"
"462","testLogsAnException","@Test
    void testLogsAnException()","0","-","-","-","-"
"463","testDisableTimestamp","@Test
    void testDisableTimestamp()","0","-","-","-","-"
"464","testLogVersion","@Test
    void testLogVersion()","0","-","-","-","-"
"465","testReplaceFieldName","@Test
    void testReplaceFieldName()","0","-","-","-","-"
"466","testAddNewField","@Test
    void testAddNewField()","0","-","-","-","-"
"467","testFilterMdc","@Test
    void testFilterMdc()","0","-","-","-","-"
"468","testFlattensMdcMap","@Test
    void testFlattensMdcMap()","0","-","-","-","-"
"469","testStartThrowableConverter","@Test
    void testStartThrowableConverter()","0","-","-","-","-"
"470","testStopThrowableConverter","@Test
    void testStopThrowableConverter()","0","-","-","-","-"
"471","testIncludeStringValue","@Test
    void testIncludeStringValue()","0","-","-","-","-"
"472","testDoNotIncludeStringValue","@Test
    void testDoNotIncludeStringValue()","0","-","-","-","-"
"473","testDoNotIncludeNullStringValue","@Test
    void testDoNotIncludeNullStringValue()","0","-","-","-","-"
"474","testIncludeNumberValue","@Test
    void testIncludeNumberValue()","0","-","-","-","-"
"475","testIncludeMapValue","@Test
    void testIncludeMapValue()","0","-","-","-","-"
"476","testDoNotIncludeEmptyMapValue","@Test
    void testDoNotIncludeEmptyMapValue()","0","-","-","-","-"
"477","testDoNotIncludeNullNumberValue","@Test
    void testDoNotIncludeNullNumberValue()","0","-","-","-","-"
"478","testIncludeFormattedTimestamp","@Test
    void testIncludeFormattedTimestamp()","0","-","-","-","-"
"479","testIncludeNotFormattedTimestamp","@Test
    void testIncludeNotFormattedTimestamp()","0","-","-","-","-"
"480","testReplaceStringFieldName","@Test
    void testReplaceStringFieldName()","0","-","-","-","-"
"481","testReplaceNumberFieldName","@Test
    void testReplaceNumberFieldName()","0","-","-","-","-"
"482","testAddAdditionalField","@Test
    void testAddAdditionalField()","0","-","-","-","-"
"483","testAddSupplier","@Test
    void testAddSupplier()","0","-","-","-","-"
"484","testAddNumberSupplier","@Test
    void testAddNumberSupplier()","0","-","-","-","-"
"485","testAddMapSupplier","@Test
    void testAddMapSupplier()","0","-","-","-","-"
"486","testAddSupplierNotInvoked","@Test
    void testAddSupplierNotInvoked()","0","-","-","-","-"
"487","testAddNumberSupplierNotInvoked","@Test
    void testAddNumberSupplierNotInvoked()","0","-","-","-","-"
"488","testAddMapSupplierNotInvoked","@Test
    void testAddMapSupplierNotInvoked()","0","-","-","-","-"
"489","testTimestampIsAlwaysFirst","@Test
    void testTimestampIsAlwaysFirst()","0","-","-","-","-"
"490","testTimestampIsAlwaysFirstWhenRenamed","@Test
    void testTimestampIsAlwaysFirstWhenRenamed()","0","-","-","-","-"
"491","testFormatTimestampAsString","@Test
    void testFormatTimestampAsString()","0","-","-","-","-"
"492","testFormatTimestampFromPredefinedFormat","@Test
    void testFormatTimestampFromPredefinedFormat()","0","-","-","-","-"
"493","testDoNotFormatTimestamp","@Test
    void testDoNotFormatTimestamp()","0","-","-","-","-"
"494","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"495","testProducesDefaultJsonMap","@Test
    void testProducesDefaultJsonMap()","0","-","-","-","-"
"496","testDisableRemoteAddress","@Test
    void testDisableRemoteAddress()","0","-","-","-","-"
"497","testDisableTimestamp","@Test
    void testDisableTimestamp()","0","-","-","-","-"
"498","testEnableSpecificResponseHeader","@Test
    void testEnableSpecificResponseHeader()","0","-","-","-","-"
"499","testEnableSpecificRequestHeader","@Test
    void testEnableSpecificRequestHeader()","0","-","-","-","-"
"500","testEnableEverything","@Test
    void testEnableEverything()","0","-","-","-","-"
"501","testAddAdditionalFields","@Test
    void testAddAdditionalFields()","0","-","-","-","-"
"502","testCustomFieldNames","@Test
    void testCustomFieldNames()","0","-","-","-","-"
"503","testRequestAttributes","@Test
    void testRequestAttributes()","0","-","-","-","-"
"504","testStartAndStop","@Test
    void testStartAndStop()","0","-","-","-","-"
"505","testRequestAttributesWithNull","@Test
    void testRequestAttributesWithNull()","0","-","-","-","-"
"506","testProducesCorrectJson","@Test
    void testProducesCorrectJson() throws Exception","0","-","-","-","-"
"507","testNoPrettyPrint","@ParameterizedTest
    @ValueSource(booleans=","0","-","-","-","-"
"508","testPrettyPrint","@ParameterizedTest
    @ValueSource(booleans=","0","-","-","-","-"
"509","before","@BeforeEach
    void before()","0","-","-","-","-"
"510","testCreateThrowableProxyConverter_Configured","@Test
    void testCreateThrowableProxyConverter_Configured()","0","-","-","-","-"
"511","testCreateThrowableProxyConverter_Default","@Test
    void testCreateThrowableProxyConverter_Default() throws Exception","0","-","-","-","-"
"512","getStackTraceAsString","private static String getStackTraceAsString(Throwable throwable) throws IOException","0","-","-","-","-"
"513","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"514","getAppenderFactory","@SuppressWarnings(""unchecked"")
    private <T extends DeferredProcessingAware> ConsoleAppenderFactory<T> getAppenderFactory(String s) throws Exception","0","-","-","-","-"
"515","testDeserializeJson","@Test
    void testDeserializeJson() throws Exception","0","-","-","-","-"
"516","testDeserializeAccessJson","@Test
    void testDeserializeAccessJson() throws Exception","0","-","-","-","-"
"517","testLogJsonToConsole","@Test
    void testLogJsonToConsole() throws Exception","0","-","-","-","-"
"518","testLogAccessJsonToConsole","@Test
    void testLogAccessJsonToConsole() throws Exception","0","-","-","-","-"
"519","invalidJsonLogLayoutField","@Test
    void invalidJsonLogLayoutField()","0","-","-","-","-"
"520","getIncludes","@JsonProperty
    public EnumSet<EventAttribute> getIncludes()","0","-","-","-","-"
"521","setIncludes","@JsonProperty
    public void setIncludes(EnumSet<EventAttribute> includes)","0","-","-","-","-"
"522","getIncludesMdcKeys","@JsonProperty
    public Set<String> getIncludesMdcKeys()","0","-","-","-","-"
"523","setIncludesMdcKeys","@JsonProperty
    public void setIncludesMdcKeys(Set<String> includesMdcKeys)","0","-","-","-","-"
"524","isFlattenMdc","@JsonProperty
    public boolean isFlattenMdc()","0","-","-","-","-"
"525","setFlattenMdc","@JsonProperty
    public void setFlattenMdc(boolean flattenMdc)","0","-","-","-","-"
"526","setExceptionFormat","/**
     * @since 2.0
     */
    @JsonProperty(""exception"")
    public void setExceptionFormat(ExceptionFormat exceptionFormat)","0","-","-","-","-"
"527","getExceptionFormat","/**
     * @since 2.0
     */
    @JsonProperty(""exception"")
    @Nullable
    public ExceptionFormat getExceptionFormat()","0","-","-","-","-"
"528","build","@Override
    public LayoutBase<ILoggingEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"529","createThrowableProxyConverter","protected ThrowableHandlingConverter createThrowableProxyConverter(LoggerContext context)","0","-","-","-","-"
"530","AbstractJsonLayout","protected AbstractJsonLayout(JsonFormatter jsonFormatter)","0","-","-","-","-"
"531","doLayout","@Override
    @Nullable
    public String doLayout(E event)","0","-","-","-","-"
"532","toJsonMap","/**
     * Converts the provided logging event to a generic","0","-","-","-","-"
"533","EventJsonLayout","public EventJsonLayout(JsonFormatter jsonFormatter, TimestampFormatter timestampFormatter,
                           ThrowableHandlingConverter throwableProxyConverter, Set<EventAttribute> includes,
                           Map<String, String> customFieldNames, Map<String, Object> additionalFields,
                           Set<String> includesMdcKeys, boolean flattenMdc)","0","-","-","-","-"
"534","start","@Override
    public void start()","0","-","-","-","-"
"535","stop","@Override
    public void stop()","0","-","-","-","-"
"536","toJsonMap","@Override
    protected Map<String, Object> toJsonMap(ILoggingEvent event)","0","-","-","-","-"
"537","filterMdc","private Map<String, String> filterMdc(Map<String, String> mdcPropertyMap)","0","-","-","-","-"
"538","isIncluded","private boolean isIncluded(EventAttribute include)","0","-","-","-","-"
"539","getIncludes","public Set<EventAttribute> getIncludes()","0","-","-","-","-"
"540","setIncludes","public void setIncludes(Set<EventAttribute> includes)","0","-","-","-","-"
"541","getJsonProtocolVersion","@Nullable
    public String getJsonProtocolVersion()","0","-","-","-","-"
"542","setJsonProtocolVersion","public void setJsonProtocolVersion(@Nullable String jsonProtocolVersion)","0","-","-","-","-"
"543","getIncludesMdcKeys","public Set<String> getIncludesMdcKeys()","0","-","-","-","-"
"544","setIncludesMdcKeys","public void setIncludesMdcKeys(Set<String> includesMdcKeys)","0","-","-","-","-"
"545","AccessJsonLayout","public AccessJsonLayout(JsonFormatter jsonFormatter, TimestampFormatter timestampFormatter,
                            Set<AccessAttribute> includes, Map<String, String> customFieldNames,
                            Map<String, Object> additionalFields)","0","-","-","-","-"
"546","toJsonMap","@Override
    protected Map<String, Object> toJsonMap(IAccessEvent event)","0","-","-","-","-"
"547","isIncluded","private boolean isIncluded(AccessAttribute attribute)","0","-","-","-","-"
"548","filterRequestAttributes","private Map<String, String> filterRequestAttributes(Set<String> requestAttributeNames, IAccessEvent event)","0","-","-","-","-"
"549","filterHeaders","private Map<String, String> filterHeaders(Map<String, String> headers, Set<String> filteredHeaderNames)","0","-","-","-","-"
"550","getIncludes","public Set<AccessAttribute> getIncludes()","0","-","-","-","-"
"551","setIncludes","public void setIncludes(Set<AccessAttribute> includes)","0","-","-","-","-"
"552","getJsonProtocolVersion","@Nullable
    public String getJsonProtocolVersion()","0","-","-","-","-"
"553","setJsonProtocolVersion","public void setJsonProtocolVersion(@Nullable String jsonProtocolVersion)","0","-","-","-","-"
"554","getRequestHeaders","public Set<String> getRequestHeaders()","0","-","-","-","-"
"555","setRequestHeaders","public void setRequestHeaders(Set<String> requestHeaders)","0","-","-","-","-"
"556","getResponseHeaders","public Set<String> getResponseHeaders()","0","-","-","-","-"
"557","setResponseHeaders","public void setResponseHeaders(Set<String> responseHeaders)","0","-","-","-","-"
"558","getRequestAttributes","/**
     * @since 2.0
     */
    public Set<String> getRequestAttributes()","0","-","-","-","-"
"559","setRequestAttributes","/**
     * @since 2.0
     */
    public void setRequestAttributes(Set<String> requestAttributes)","0","-","-","-","-"
"560","TimestampFormatter","public TimestampFormatter(@Nullable String timestampFormat, ZoneId zoneId)","0","-","-","-","-"
"561","format","public Object format(long timestamp)","0","-","-","-","-"
"562","JsonFormatter","public JsonFormatter(ObjectMapper objectMapper, boolean prettyPrint, boolean doesAppendLineSeparator,
                         int bufferSize)","0","-","-","-","-"
"563","JsonFormatter","public JsonFormatter(ObjectMapper objectMapper, boolean prettyPrint, boolean doesAppendLineSeparator)","0","-","-","-","-"
"564","toJson","/**
     * Converts the provided map as a JSON object according to the configured JSON mapper.
     *
     * @param map the provided map
     * @return the JSON as a string
     */
    @Nullable
    public String toJson(@Nullable Map<String, Object> map)","0","-","-","-","-"
"565","MapBuilder","public MapBuilder(TimestampFormatter timestampFormatter, Map<String, String> customFieldNames,
                      Map<String, Object> additionalFields, int expectedSize)","0","-","-","-","-"
"566","add","/**
     * Adds the string value to the provided map under the provided field name,
     * if it should be included.
     */
    public MapBuilder add(String fieldName, boolean include, @Nullable String value)","0","-","-","-","-"
"567","add","/**
     * Adds the string value to the provided map under the provided field name,
     * if it should be included. The supplier is only invoked if the field is to be included.
     *
     * @since 2.0
     */
    public MapBuilder add(String fieldName, boolean include, Supplier<String> supplier)","0","-","-","-","-"
"568","addNumber","/**
     * Adds the number to the provided map under the provided field name if it's should be included.
     */
    public MapBuilder addNumber(String fieldName, boolean include, @Nullable Number number)","0","-","-","-","-"
"569","addNumber","/**
     * Adds the number value to the provided map under the provided field name,
     * if it should be included. The supplier is only invoked if the field is to be included.
     *
     * @since 2.0
     */
    public MapBuilder addNumber(String fieldName, boolean include, Supplier<Number> supplier)","0","-","-","-","-"
"570","add","/**
     * Adds the map to the provided map under the provided field name if it's should be included.
     */
    public MapBuilder add(String fieldName, boolean include, @Nullable Map<String, ?> mapValue)","0","-","-","-","-"
"571","addMap","/**
     * Adds the map value to the provided map under the provided field name, if it should be
     * included. The supplier is only invoked if the field is to be included.
     *
     * @since 2.0
     */
    public MapBuilder addMap(String fieldName, boolean include, Supplier<Map<String, ?>> supplier)","0","-","-","-","-"
"572","addTimestamp","/**
     * Adds and optionally formats the timestamp to the provided map under the provided field name,
     * if it's should be included.
     */
    public MapBuilder addTimestamp(String fieldName, boolean include, long timestamp)","0","-","-","-","-"
"573","getFieldName","private String getFieldName(String fieldName)","0","-","-","-","-"
"574","build","public Map<String, Object> build()","0","-","-","-","-"
"575","isRootFirst","@JsonProperty
    public boolean isRootFirst()","0","-","-","-","-"
"576","setRootFirst","@JsonProperty
    public void setRootFirst(boolean rootFirst)","0","-","-","-","-"
"577","getDepth","@JsonProperty
    public String getDepth()","0","-","-","-","-"
"578","setDepth","@JsonProperty
    public void setDepth(String depth)","0","-","-","-","-"
"579","getEvaluators","@JsonProperty
    public List<String> getEvaluators()","0","-","-","-","-"
"580","setEvaluators","@JsonProperty
    public void setEvaluators(List<String> evaluators)","0","-","-","-","-"
"581","getTimestampFormat","@JsonProperty
    @Nullable
    public String getTimestampFormat()","0","-","-","-","-"
"582","setTimestampFormat","@JsonProperty
    public void setTimestampFormat(String timestampFormat)","0","-","-","-","-"
"583","isPrettyPrint","@JsonProperty
    public boolean isPrettyPrint()","0","-","-","-","-"
"584","setPrettyPrint","@JsonProperty
    public void setPrettyPrint(boolean prettyPrint)","0","-","-","-","-"
"585","isAppendLineSeparator","@JsonProperty
    public boolean isAppendLineSeparator()","0","-","-","-","-"
"586","setAppendLineSeparator","@JsonProperty
    public void setAppendLineSeparator(boolean appendLineSeparator)","0","-","-","-","-"
"587","getCustomFieldNames","@JsonProperty
    public Map<String, String> getCustomFieldNames()","0","-","-","-","-"
"588","setCustomFieldNames","@JsonProperty
    public void setCustomFieldNames(Map<String, String> customFieldNames)","0","-","-","-","-"
"589","getAdditionalFields","@JsonProperty
    public Map<String, Object> getAdditionalFields()","0","-","-","-","-"
"590","setAdditionalFields","@JsonProperty
    public void setAdditionalFields(Map<String, Object> additionalFields)","0","-","-","-","-"
"591","createDropwizardJsonFormatter","protected JsonFormatter createDropwizardJsonFormatter()","0","-","-","-","-"
"592","createTimestampFormatter","protected TimestampFormatter createTimestampFormatter(TimeZone timeZone)","0","-","-","-","-"
"593","getResponseHeaders","@JsonProperty
    public Set<String> getResponseHeaders()","0","-","-","-","-"
"594","setResponseHeaders","@JsonProperty
    public void setResponseHeaders(Set<String> responseHeaders)","0","-","-","-","-"
"595","getRequestHeaders","@JsonProperty
    public Set<String> getRequestHeaders()","0","-","-","-","-"
"596","setRequestHeaders","@JsonProperty
    public void setRequestHeaders(Set<String> requestHeaders)","0","-","-","-","-"
"597","getRequestAttributes","/**
     * @since 2.0
     */
    @JsonProperty
    public Set<String> getRequestAttributes()","0","-","-","-","-"
"598","setRequestAttributes","/**
     * @since 2.0
     */
    @JsonProperty
    public void setRequestAttributes(Set<String> requestAttributes)","0","-","-","-","-"
"599","getIncludes","@JsonProperty
    public EnumSet<AccessAttribute> getIncludes()","0","-","-","-","-"
"600","setIncludes","@JsonProperty
    public void setIncludes(EnumSet<AccessAttribute> includes)","0","-","-","-","-"
"601","build","@Override
    public LayoutBase<IAccessEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"602","canBeDeserialized","@Test
    void canBeDeserialized() throws Exception","0","-","-","-","-"
"603","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"604","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"605","testLoadAppenderWithCustomLayout","@Test
    @SuppressWarnings(""unchecked"")
    void testLoadAppenderWithCustomLayout() throws Exception","0","-","-","-","-"
"606","testBuildAppenderWithCustomLayout","@Test
    void testBuildAppenderWithCustomLayout() throws Exception","0","-","-","-","-"
"607","testBuildAppenderWithCustomPatternLayoutAndFormat","@Test
    void testBuildAppenderWithCustomPatternLayoutAndFormat() throws Exception","0","-","-","-","-"
"608","buildAppender","@SuppressWarnings(""unchecked"")
    private ConsoleAppender<?> buildAppender(String resourceName) throws Exception","0","-","-","-","-"
"609","getException","@Nullable
    private Exception getException()","0","-","-","-","-"
"610","throwRoot","private static void throwRoot() throws SocketTimeoutException","0","-","-","-","-"
"611","throwInnerWrapper","private void throwInnerWrapper() throws IOException","0","-","-","-","-"
"612","throwOuterWrapper","private void throwOuterWrapper()","0","-","-","-","-"
"613","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"614","prefixesExceptionsWithExclamationMarks","@Test
    void prefixesExceptionsWithExclamationMarks()","0","-","-","-","-"
"615","placesRootCauseIsFirst","@Test
    void placesRootCauseIsFirst()","0","-","-","-","-"
"616","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"617","hasADefaultLevel","@Test
    void hasADefaultLevel()","0","-","-","-","-"
"618","loggerLevelsCanBeOff","@Test
    void loggerLevelsCanBeOff() throws Exception","0","-","-","-","-"
"619","canParseNewLoggerFormat","@Test
    void canParseNewLoggerFormat() throws Exception","0","-","-","-","-"
"620","testConfigure","@Test
    void testConfigure(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"621","testResetAppenders","@Test
    void testResetAppenders() throws Exception","0","-","-","-","-"
"622","testToStringIsImplemented","@Test
    void testToStringIsImplemented()","0","-","-","-","-"
"623","testSendLogsByTcp","@Test
    void testSendLogsByTcp() throws Exception","0","-","-","-","-"
"624","generateLogs","private static List<String> generateLogs(final Logger logger, final int messageCount)","0","-","-","-","-"
"625","build","@Override
    public Filter<ILoggingEvent> build()","0","-","-","-","-"
"626","decide","@Override
            public FilterReply decide(ILoggingEvent event)","0","-","-","-","-"
"627","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"628","includesCallerData","@Test
    void includesCallerData()","0","-","-","-","-"
"629","appenderContextIsSet","@Test
    void appenderContextIsSet()","0","-","-","-","-"
"630","appenderNameIsSet","@Test
    void appenderNameIsSet()","0","-","-","-","-"
"631","isNeverBlock","@Test
    void isNeverBlock()","0","-","-","-","-"
"632","isNotNeverBlock","@Test
    void isNotNeverBlock()","0","-","-","-","-"
"633","defaultIsNotNeverBlock","@Test
    void defaultIsNotNeverBlock()","0","-","-","-","-"
"634","UdpServer","public UdpServer(DatagramSocket socket, int messageCount)","0","-","-","-","-"
"635","receive","public Future<List<String>> receive()","0","-","-","-","-"
"636","close","@Override
    public void close()","0","-","-","-","-"
"637","build","@Override
    public LayoutBase<ILoggingEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"638","TestPatternLayout","private TestPatternLayout(Context context)","0","-","-","-","-"
"639","doLayout","@Override
        public String doLayout(ILoggingEvent event)","0","-","-","-","-"
"640","getDefaultConverterSupplierMap","@Override
        protected Map<String,Supplier<DynamicConverter>> getDefaultConverterSupplierMap()","0","-","-","-","-"
"641","getDefaultConverterMap","@Override
        public Map<String, String> getDefaultConverterMap()","0","-","-","-","-"
"642","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"643","defaultIncludesAppName","@Test
    void defaultIncludesAppName()","0","-","-","-","-"
"644","defaultIncludesPid","@Test
    void defaultIncludesPid()","0","-","-","-","-"
"645","patternIncludesAppNameAndPid","@Test
    void patternIncludesAppNameAndPid()","0","-","-","-","-"
"646","stackTracePatternCanBeSet","@Test
    void stackTracePatternCanBeSet()","0","-","-","-","-"
"647","appenderContextIsSet","@Test
    void appenderContextIsSet()","0","-","-","-","-"
"648","appenderNameIsSet","@Test
    void appenderNameIsSet()","0","-","-","-","-"
"649","syslogFacilityTest","@Test
    void syslogFacilityTest()","0","-","-","-","-"
"650","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"651","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"652","configureLoggingFactoryWithFileAppender","private void configureLoggingFactoryWithFileAppender(File file)","0","-","-","-","-"
"653","newFileAppenderFactory","private AppenderFactory<ILoggingEvent> newFileAppenderFactory(File file)","0","-","-","-","-"
"654","configureAndGetOutputWrittenToErrorStream","private String configureAndGetOutputWrittenToErrorStream() throws UnsupportedEncodingException","0","-","-","-","-"
"655","testWhenUsingDefaultConstructor_SystemErrIsSet","@Test
    void testWhenUsingDefaultConstructor_SystemErrIsSet()","0","-","-","-","-"
"656","testWhenUsingDefaultConstructor_StaticILoggerFactoryIsSet","@Test
    void testWhenUsingDefaultConstructor_StaticILoggerFactoryIsSet()","0","-","-","-","-"
"657","testWhenFileAppenderDoesNotHaveWritePermissionToFolder_PrintsErrorMessageToConsole","@Test
    void testWhenFileAppenderDoesNotHaveWritePermissionToFolder_PrintsErrorMessageToConsole(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"658","testWhenSettingUpLoggingWithValidConfiguration_NoErrorMessageIsPrintedToConsole","@Test
    void testWhenSettingUpLoggingWithValidConfiguration_NoErrorMessageIsPrintedToConsole(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"659","testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut","@Test
    void testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut() throws Exception","0","-","-","-","-"
"660","testAppenderTimeZone","@ParameterizedTest
    @CsvSource(","0","-","-","-","-"
"661","testLoadAppenderWithSystemTimeZone","@Test
    void testLoadAppenderWithSystemTimeZone() throws Exception","0","-","-","-","-"
"662","testBuildAppenderWithTimeZonePlaceholderInLogFormat","@Test
    @SuppressWarnings(","0","-","-","-","-"
"663","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"664","includesCallerData","@Test
    void includesCallerData()","0","-","-","-","-"
"665","isRolling","@Test
    void isRolling(@TempDir Path tempDir)","0","-","-","-","-"
"666","buildAppender","@Override
            public FileAppender<ILoggingEvent> buildAppender(LoggerContext context)","0","-","-","-","-"
"667","testAppenderIsStarted","@Test
    void testAppenderIsStarted(@TempDir Path tempDir)","0","-","-","-","-"
"668","hasArchivedLogFilenamePattern","@Test
    void hasArchivedLogFilenamePattern(@TempDir Path tempDir)","0","-","-","-","-"
"669","isValidForInfiniteRolledFiles","@Test
    void isValidForInfiniteRolledFiles(@TempDir Path tempDir)","0","-","-","-","-"
"670","isValidForMaxFileSize","@Test
    void isValidForMaxFileSize(@TempDir Path tempDir)","0","-","-","-","-"
"671","hasMaxFileSizeValidation","@Test
    void hasMaxFileSizeValidation(@TempDir Path tempDir)","0","-","-","-","-"
"672","testCurrentFileNameErrorWhenArchiveIsNotEnabled","@Test
    void testCurrentFileNameErrorWhenArchiveIsNotEnabled()","0","-","-","-","-"
"673","testCurrentFileNameCanBeNullWhenArchiveIsEnabled","@Test
    void testCurrentFileNameCanBeNullWhenArchiveIsEnabled()","0","-","-","-","-"
"674","testCurrentLogFileNameIsEmptyAndAppenderUsesArchivedNameInstead","@Test
    void testCurrentLogFileNameIsEmptyAndAppenderUsesArchivedNameInstead(@TempDir Path tempDir)","0","-","-","-","-"
"675","hasMaxFileSize","@Test
    void hasMaxFileSize(@TempDir Path tempDir)","0","-","-","-","-"
"676","hasMaxFileSizeFixedWindow","@Test
    void hasMaxFileSizeFixedWindow(@TempDir Path tempDir)","0","-","-","-","-"
"677","appenderContextIsSet","@Test
    void appenderContextIsSet(@TempDir Path tempDir)","0","-","-","-","-"
"678","appenderNameIsSet","@Test
    void appenderNameIsSet(@TempDir Path tempDir)","0","-","-","-","-"
"679","isNeverBlock","@Test
    void isNeverBlock()","0","-","-","-","-"
"680","isNotNeverBlock","@Test
    void isNotNeverBlock()","0","-","-","-","-"
"681","defaultIsNotNeverBlock","@Test
    void defaultIsNotNeverBlock()","0","-","-","-","-"
"682","overrideBufferSize","@Test
    void overrideBufferSize()","0","-","-","-","-"
"683","isImmediateFlushed","@Test
    void isImmediateFlushed()","0","-","-","-","-"
"684","validSetTotalSizeCap","@Test
    void validSetTotalSizeCap() throws IOException, ConfigurationException","0","-","-","-","-"
"685","validSetTotalSizeCapNoMaxFileSize","@Test
    void validSetTotalSizeCapNoMaxFileSize() throws IOException, ConfigurationException","0","-","-","-","-"
"686","invalidUseOfTotalSizeCap","@Test
    void invalidUseOfTotalSizeCap()","0","-","-","-","-"
"687","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"688","createServerSocket","private ServerSocket createServerSocket()","0","-","-","-","-"
"689","testParseConfig","@Test
    void testParseConfig() throws Exception","0","-","-","-","-"
"690","testTestTcpLogging","@Test
    void testTestTcpLogging() throws Exception","0","-","-","-","-"
"691","testBufferingTcpLogging","@Test
    void testBufferingTcpLogging() throws Exception","0","-","-","-","-"
"692","generateLogs","private static List<String> generateLogs(final Logger logger)","0","-","-","-","-"
"693","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"694","prefixesExceptionsWithExclamationMarks","@Test
    void prefixesExceptionsWithExclamationMarks() throws Exception","0","-","-","-","-"
"695","prefixesThrowables","@Test
    void prefixesThrowables() throws Exception","0","-","-","-","-"
"696","prefixesExtendedThrowables","@Test
    void prefixesExtendedThrowables() throws Exception","0","-","-","-","-"
"697","hasAContext","@Test
    void hasAContext() throws Exception","0","-","-","-","-"
"698","hasAPatternWithATimeZoneAndExtendedThrowables","@Test
    void hasAPatternWithATimeZoneAndExtendedThrowables() throws Exception","0","-","-","-","-"
"699","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"700","createServerSocket","private ServerSocket createServerSocket()","0","-","-","-","-"
"701","createSslContextFactory","private SslContextFactory createSslContextFactory() throws Exception","0","-","-","-","-"
"702","resourcePath","private String resourcePath(String path) throws URISyntaxException","0","-","-","-","-"
"703","testTlsLogging","@Test
    void testTlsLogging() throws Exception","0","-","-","-","-"
"704","testParseCustomConfiguration","@Test
    void testParseCustomConfiguration() throws Exception","0","-","-","-","-"
"705","generateLogs","private static List<String> generateLogs(final Logger logger)","0","-","-","-","-"
"706","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"707","prefixesExceptionsWithExclamationMarks","@Test
    void prefixesExceptionsWithExclamationMarks() throws Exception","0","-","-","-","-"
"708","testCreatesCleanOutputStream","@Test
    void testCreatesCleanOutputStream() throws IOException","0","-","-","-","-"
"709","testThrowsExceptionIfCantCreateOutputStream","@Test
    void testThrowsExceptionIfCantCreateOutputStream()","0","-","-","-","-"
"710","testWriteMessage","@Test
    void testWriteMessage() throws Exception","0","-","-","-","-"
"711","testGetDescription","@Test
    void testGetDescription() throws IOException","0","-","-","-","-"
"712","build","@Override
    public Filter<ILoggingEvent> build()","0","-","-","-","-"
"713","decide","@Override
            public FilterReply decide(ILoggingEvent event)","0","-","-","-","-"
"714","build","@Override
    public LayoutBase<ILoggingEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"715","isIncludeSeparator","@JsonProperty
    public boolean isIncludeSeparator()","0","-","-","-","-"
"716","setIncludeSeparator","@JsonProperty
    public void setIncludeSeparator(boolean includeSeparator)","0","-","-","-","-"
"717","doLayout","@Override
        public String doLayout(ILoggingEvent event)","0","-","-","-","-"
"718","TcpServer","TcpServer(ServerSocket serverSocket)","0","-","-","-","-"
"719","receive","Future<List<String>> receive()","0","-","-","-","-"
"720","close","@Override
    public void close()","0","-","-","-","-"
"721","testSendMessage","@Test
    void testSendMessage() throws Exception","0","-","-","-","-"
"722","ConsoleStream","ConsoleStream(String value)","0","-","-","-","-"
"723","get","public String get()","0","-","-","-","-"
"724","getTarget","@JsonProperty
    public ConsoleStream getTarget()","0","-","-","-","-"
"725","setTarget","@JsonProperty
    public void setTarget(ConsoleStream target)","0","-","-","-","-"
"726","appender","@Override
    protected OutputStreamAppender<E> appender(LoggerContext context)","0","-","-","-","-"
"727","ResilientSocketOutputStream","/**
     * Creates a new stream based on the socket configuration.
     *
     * @param host                The host or an IP address of the server.
     * @param port                The port on the server which accepts TCP connections.
     * @param connectionTimeoutMs The timeout for establishing a new TCP connection.
     * @param sendBufferSize      The size of the send buffer of the socket stream in bytes.
     * @param socketFactory       The factory for customizing the client socket.
     */
    public ResilientSocketOutputStream(String host, int port, int connectionTimeoutMs, int sendBufferSize,
                                       SocketFactory socketFactory)","0","-","-","-","-"
"728","getDescription","@Override
    String getDescription()","0","-","-","-","-"
"729","close","@Override
    public void close() throws IOException","0","-","-","-","-"
"730","closeSocket","private void closeSocket() throws IOException","0","-","-","-","-"
"731","openNewOutputStream","@Override
    OutputStream openNewOutputStream() throws IOException","0","-","-","-","-"
"732","throwableProxyToString","@Override
    protected String throwableProxyToString(IThrowableProxy tp)","0","-","-","-","-"
"733","LoggingUtil","private LoggingUtil()","0","-","-","-","-"
"734","getLoggerContext","/**
     * Acquires the logger context.
     * <p/>
     * <p>It tries to correctly acquire the logger context in the multi-threaded environment.
     * Because of the <a href=""bug"">http://jira.qos.ch/browse/SLF4J-167</a> a thread, that didn't
     * start initialization has a possibility to get a reference not to a real context, but to a
     * substitute.</p>
     * <p>To work around this bug we spin-loop the thread with a sensible timeout, while the
     * context is not initialized. We can't just make this method synchronized, because
     *","0","-","-","-","-"
"735","hijackJDKLogging","/**
     * Gets the root j.u.l.Logger and removes all registered handlers
     * then redirects all active j.u.l. to SLF4J
     * <p/>
     * N.B. This should only happen once, hence the flag and locking
     */
    public static void hijackJDKLogging()","0","-","-","-","-"
"736","extraData","@Override
    protected void extraData(StringBuilder builder, StackTraceElementProxy step)","0","-","-","-","-"
"737","configure","void configure(MetricRegistry metricRegistry, String name);","0","-","-","-","-"
"738","stop","/** Should flush all log messages but not disable logging */
    void stop();","0","-","-","-","-"
"739","reset","/** Mainly useful in testing to reset the logging to a sane default before
     *  the next test configures logging to a desired level. */
    void reset();","0","-","-","-","-"
"740","build","/**
     * Creates a","0","-","-","-","-"
"741","build","@Override
    public PatternLayoutBase<ILoggingEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"742","build","/**
     * Creates a","0","-","-","-","-"
"743","build","/**
     * Creates an","0","-","-","-","-"
"744","build","/**
     * Creates an","0","-","-","-","-"
"745","getQueueSize","@JsonProperty
    public int getQueueSize()","0","-","-","-","-"
"746","setQueueSize","@JsonProperty
    public void setQueueSize(int queueSize)","0","-","-","-","-"
"747","getDiscardingThreshold","@JsonProperty
    public int getDiscardingThreshold()","0","-","-","-","-"
"748","setDiscardingThreshold","@JsonProperty
    public void setDiscardingThreshold(int discardingThreshold)","0","-","-","-","-"
"749","getMessageRate","/**
     * Returns the duration required between logged messages. Messages logged more frequently than this will be dropped.
     * A","0","-","-","-","-"
"750","setMessageRate","/**
     * Sets the time period required between logged messages. Messages logged more frequently than this will be dropped.
     * A","0","-","-","-","-"
"751","getThreshold","@JsonProperty
    public String getThreshold()","0","-","-","-","-"
"752","setThreshold","@JsonProperty
    public void setThreshold(String threshold)","0","-","-","-","-"
"753","getLogFormat","@JsonProperty
    @Nullable
    public String getLogFormat()","0","-","-","-","-"
"754","setLogFormat","@JsonProperty
    public void setLogFormat(@Nullable String logFormat)","0","-","-","-","-"
"755","getTimeZone","@JsonProperty
    public TimeZone getTimeZone()","0","-","-","-","-"
"756","setTimeZone","@JsonProperty
    public void setTimeZone(String zoneId)","0","-","-","-","-"
"757","setTimeZone","@JsonProperty
    public void setTimeZone(TimeZone timeZone)","0","-","-","-","-"
"758","isIncludeCallerData","@JsonProperty
    public boolean isIncludeCallerData()","0","-","-","-","-"
"759","setIncludeCallerData","@JsonProperty
    public void setIncludeCallerData(boolean includeCallerData)","0","-","-","-","-"
"760","getFilterFactories","@JsonProperty
    public List<FilterFactory<E>> getFilterFactories()","0","-","-","-","-"
"761","setFilterFactories","@JsonProperty
    public void setFilterFactories(List<FilterFactory<E>> appenders)","0","-","-","-","-"
"762","setNeverBlock","@JsonProperty
    public void setNeverBlock(boolean neverBlock)","0","-","-","-","-"
"763","getLayout","@Nullable
    @JsonProperty
    public DiscoverableLayoutFactory<?> getLayout()","0","-","-","-","-"
"764","setLayout","@JsonProperty
    public void setLayout(@Nullable DiscoverableLayoutFactory<E> layout)","0","-","-","-","-"
"765","wrapAsync","protected Appender<E> wrapAsync(Appender<E> appender, AsyncAppenderFactory<E> asyncAppenderFactory)","0","-","-","-","-"
"766","wrapAsync","protected Appender<E> wrapAsync(Appender<E> appender, AsyncAppenderFactory<E> asyncAppenderFactory, Context context)","0","-","-","-","-"
"767","buildLayout","protected LayoutBase<E> buildLayout(LoggerContext context, LayoutFactory<E> defaultLayoutFactory)","0","-","-","-","-"
"768","appender","protected abstract OutputStreamAppender<E> appender(LoggerContext context);","0","-","-","-","-"
"769","build","@Override
    public Appender<E> build(LoggerContext context, String applicationName, LayoutFactory<E> layoutFactory,
                             LevelFilterFactory<E> levelFilterFactory, AsyncAppenderFactory<E> asyncAppenderFactory)","0","-","-","-","-"
"770","configure","@Override
    public void configure(MetricRegistry metricRegistry, String name)","0","-","-","-","-"
"771","stop","@Override
    public void stop()","0","-","-","-","-"
"772","reset","@Override
    public void reset()","0","-","-","-","-"
"773","build","/**
     * Given a Logback context, an application name, a layout,
     * a levelFilterFactory, and an asyncAppenderFactory build a new appender.
     *
     * @param context         the Logback context
     * @param applicationName the application name
     * @param layoutFactory   the factory for the layout for logging
     * @param levelFilterFactory the factory for the level filter
     * @param asyncAppenderFactory   the factory for the async appender
     * @return a new, started","0","-","-","-","-"
"774","BootstrapLogging","private BootstrapLogging()","0","-","-","-","-"
"775","bootstrap","public static void bootstrap()","0","-","-","-","-"
"776","bootstrap","public static void bootstrap(Level level)","0","-","-","-","-"
"777","bootstrap","public static void bootstrap(Level level, DiscoverableLayoutFactory<ILoggingEvent> layoutFactory)","0","-","-","-","-"
"778","DefaultLoggingFactory","public DefaultLoggingFactory()","0","-","-","-","-"
"779","DefaultLoggingFactory","DefaultLoggingFactory(LoggerContext loggerContext, PrintStream configurationErrorsStream)","0","-","-","-","-"
"780","getLoggerContext","LoggerContext getLoggerContext()","0","-","-","-","-"
"781","getConfigurationErrorsStream","PrintStream getConfigurationErrorsStream()","0","-","-","-","-"
"782","getLevel","@JsonProperty
    public String getLevel()","0","-","-","-","-"
"783","setLevel","@JsonProperty
    public void setLevel(String level)","0","-","-","-","-"
"784","getLoggers","@JsonProperty
    public Map<String, JsonNode> getLoggers()","0","-","-","-","-"
"785","setLoggers","@JsonProperty
    public void setLoggers(Map<String, JsonNode> loggers)","0","-","-","-","-"
"786","getAppenders","@JsonProperty
    public List<AppenderFactory<ILoggingEvent>> getAppenders()","0","-","-","-","-"
"787","setAppenders","@JsonProperty
    public void setAppenders(List<AppenderFactory<ILoggingEvent>> appenders)","0","-","-","-","-"
"788","configure","@Override
    public void configure(MetricRegistry metricRegistry, String name)","0","-","-","-","-"
"789","stop","@Override
    public void stop()","0","-","-","-","-"
"790","reset","@Override
    public void reset()","0","-","-","-","-"
"791","flushAppender","private void flushAppender(AsyncAppenderBase<?> appender) throws InterruptedException","0","-","-","-","-"
"792","configureInstrumentation","private void configureInstrumentation(Logger root, MetricRegistry metricRegistry)","0","-","-","-","-"
"793","configureLoggers","private Logger configureLoggers(String name)","0","-","-","-","-"
"794","toLevel","static Level toLevel(@Nullable String text)","0","-","-","-","-"
"795","toString","@Override
    public String toString()","0","-","-","-","-"
"796","isPresumedInError","private boolean isPresumedInError()","0","-","-","-","-"
"797","write","@Override
    public void write(byte[] b, int off, int len)","0","-","-","-","-"
"798","write","@Override
    public void write(int b)","0","-","-","-","-"
"799","flush","@Override
    public void flush()","0","-","-","-","-"
"800","getDescription","abstract String getDescription();","0","-","-","-","-"
"801","openNewOutputStream","abstract OutputStream openNewOutputStream() throws IOException;","0","-","-","-","-"
"802","postSuccessfulWrite","private void postSuccessfulWrite()","0","-","-","-","-"
"803","postIOFailure","private void postIOFailure(IOException e)","0","-","-","-","-"
"804","close","@Override
    public void close() throws IOException","0","-","-","-","-"
"805","attemptRecovery","private void attemptRecovery()","0","-","-","-","-"
"806","addStatusIfCountNotOverLimit","private void addStatusIfCountNotOverLimit(Status s)","0","-","-","-","-"
"807","addStatus","private void addStatus(Status status)","0","-","-","-","-"
"808","getContext","public Context getContext()","0","-","-","-","-"
"809","setContext","public void setContext(Context context)","0","-","-","-","-"
"810","getHost","@JsonProperty
    public String getHost()","0","-","-","-","-"
"811","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"812","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"813","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"814","getConnectionTimeout","@JsonProperty
    public Duration getConnectionTimeout()","0","-","-","-","-"
"815","setConnectionTimeout","@JsonProperty
    public void setConnectionTimeout(Duration connectionTimeout)","0","-","-","-","-"
"816","isImmediateFlush","@JsonProperty
    public boolean isImmediateFlush()","0","-","-","-","-"
"817","setImmediateFlush","@JsonProperty
    public void setImmediateFlush(boolean immediateFlush)","0","-","-","-","-"
"818","getSendBufferSize","@JsonProperty
    public DataSize getSendBufferSize()","0","-","-","-","-"
"819","setSendBufferSize","@JsonProperty
    public void setSendBufferSize(DataSize sendBufferSize)","0","-","-","-","-"
"820","appender","@Override
    protected OutputStreamAppender<E> appender(LoggerContext context)","0","-","-","-","-"
"821","socketFactory","protected SocketFactory socketFactory()","0","-","-","-","-"
"822","isValidatePeers","@JsonProperty
    public boolean isValidatePeers()","0","-","-","-","-"
"823","setValidatePeers","@JsonProperty
    public void setValidatePeers(boolean validatePeers)","0","-","-","-","-"
"824","isValidateCerts","@JsonProperty
    public boolean isValidateCerts()","0","-","-","-","-"
"825","setValidateCerts","@JsonProperty
    public void setValidateCerts(boolean validateCerts)","0","-","-","-","-"
"826","getExcludedCipherSuites","@JsonProperty
    @Nullable
    public List<String> getExcludedCipherSuites()","0","-","-","-","-"
"827","setExcludedCipherSuites","@JsonProperty
    public void setExcludedCipherSuites(List<String> excludedCipherSuites)","0","-","-","-","-"
"828","getSupportedCipherSuites","@JsonProperty
    @Nullable
    public List<String> getSupportedCipherSuites()","0","-","-","-","-"
"829","setSupportedCipherSuites","@JsonProperty
    public void setSupportedCipherSuites(List<String> supportedCipherSuites)","0","-","-","-","-"
"830","getExcludedProtocols","@JsonProperty
    @Nullable
    public List<String> getExcludedProtocols()","0","-","-","-","-"
"831","setExcludedProtocols","@JsonProperty
    public void setExcludedProtocols(List<String> excludedProtocols)","0","-","-","-","-"
"832","getSupportedProtocols","@JsonProperty
    @Nullable
    public List<String> getSupportedProtocols()","0","-","-","-","-"
"833","setSupportedProtocols","@JsonProperty
    public void setSupportedProtocols(List<String> supportedProtocols)","0","-","-","-","-"
"834","getTrustStoreProvider","@JsonProperty
    @Nullable
    public String getTrustStoreProvider()","0","-","-","-","-"
"835","setTrustStoreProvider","@JsonProperty
    public void setTrustStoreProvider(String trustStoreProvider)","0","-","-","-","-"
"836","getTrustStoreType","@JsonProperty
    @Nullable
    public String getTrustStoreType()","0","-","-","-","-"
"837","setTrustStoreType","@JsonProperty
    public void setTrustStoreType(String trustStoreType)","0","-","-","-","-"
"838","getTrustStorePassword","@JsonProperty
    @Nullable
    public String getTrustStorePassword()","0","-","-","-","-"
"839","setTrustStorePassword","@JsonProperty
    public void setTrustStorePassword(String trustStorePassword)","0","-","-","-","-"
"840","getTrustStorePath","@JsonProperty
    @Nullable
    public String getTrustStorePath()","0","-","-","-","-"
"841","setTrustStorePath","@JsonProperty
    public void setTrustStorePath(String trustStorePath)","0","-","-","-","-"
"842","getKeyStoreProvider","@JsonProperty
    @Nullable
    public String getKeyStoreProvider()","0","-","-","-","-"
"843","setKeyStoreProvider","@JsonProperty
    public void setKeyStoreProvider(String keyStoreProvider)","0","-","-","-","-"
"844","getKeyStoreType","@JsonProperty
    @Nullable
    public String getKeyStoreType()","0","-","-","-","-"
"845","setKeyStoreType","@JsonProperty
    public void setKeyStoreType(String keyStoreType)","0","-","-","-","-"
"846","getKeyStorePassword","@JsonProperty
    @Nullable
    public String getKeyStorePassword()","0","-","-","-","-"
"847","setKeyStorePassword","@JsonProperty
    public void setKeyStorePassword(String keyStorePassword)","0","-","-","-","-"
"848","getKeyStorePath","@JsonProperty
    @Nullable
    public String getKeyStorePath()","0","-","-","-","-"
"849","setKeyStorePath","@JsonProperty
    public void setKeyStorePath(String keyStorePath)","0","-","-","-","-"
"850","getJceProvider","@JsonProperty
    @Nullable
    public String getJceProvider()","0","-","-","-","-"
"851","setJceProvider","@JsonProperty
    public void setJceProvider(String jceProvider)","0","-","-","-","-"
"852","createSslContextFactory","private SslContextFactory createSslContextFactory()","0","-","-","-","-"
"853","socketFactory","@Override
    protected SocketFactory socketFactory()","0","-","-","-","-"
"854","createSocket","@Override
            public Socket createSocket() throws IOException","0","-","-","-","-"
"855","createSocket","@Override
            public Socket createSocket(String host, int port)","0","-","-","-","-"
"856","createSocket","@Override
            public Socket createSocket(String host, int port, InetAddress localHost, int localPort)","0","-","-","-","-"
"857","createSocket","@Override
            public Socket createSocket(InetAddress host, int port)","0","-","-","-","-"
"858","createSocket","@Override
            public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort)","0","-","-","-","-"
"859","unsupported","private Socket unsupported()","0","-","-","-","-"
"860","getHost","@JsonProperty
    public String getHost()","0","-","-","-","-"
"861","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"862","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"863","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"864","appender","@Override
    protected OutputStreamAppender<E> appender(LoggerContext context)","0","-","-","-","-"
"865","build","Filter<E> build();","0","-","-","-","-"
"866","build","/**
     * Creates and starts a","0","-","-","-","-"
"867","build","/**
     * Creates a","0","-","-","-","-"
"868","build","/**
     * Creates a","0","-","-","-","-"
"869","decide","@Override
            public FilterReply decide(E event)","0","-","-","-","-"
"870","DropwizardLayout","public DropwizardLayout(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"871","SyslogAppenderFactory","public SyslogAppenderFactory()","0","-","-","-","-"
"872","getHost","/**
     * Returns the hostname of the syslog server.
     */
    @JsonProperty
    public String getHost()","0","-","-","-","-"
"873","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"874","getFacility","@JsonProperty
    public Facility getFacility()","0","-","-","-","-"
"875","setFacility","@JsonProperty
    public void setFacility(Facility facility)","0","-","-","-","-"
"876","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"877","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"878","getIncludeStackTrace","@JsonProperty
    public boolean getIncludeStackTrace()","0","-","-","-","-"
"879","setIncludeStackTrace","@JsonProperty
    public void setIncludeStackTrace(boolean includeStackTrace)","0","-","-","-","-"
"880","getStackTracePrefix","@JsonProperty
    public String getStackTracePrefix()","0","-","-","-","-"
"881","setStackTracePrefix","@JsonProperty
    public void setStackTracePrefix(String stackTracePrefix)","0","-","-","-","-"
"882","build","@Override
    public Appender<ILoggingEvent> build(LoggerContext context, String applicationName, LayoutFactory<ILoggingEvent> layoutFactory,
                                         LevelFilterFactory<ILoggingEvent> levelFilterFactory, AsyncAppenderFactory<ILoggingEvent> asyncAppenderFactory)","0","-","-","-","-"
"883","isAdditive","public boolean isAdditive()","0","-","-","-","-"
"884","setAdditive","public void setAdditive(boolean additive)","0","-","-","-","-"
"885","getLevel","public String getLevel()","0","-","-","-","-"
"886","setLevel","public void setLevel(String level)","0","-","-","-","-"
"887","getAppenders","public List<AppenderFactory<ILoggingEvent>> getAppenders()","0","-","-","-","-"
"888","setAppenders","public void setAppenders(List<AppenderFactory<ILoggingEvent>> appenders)","0","-","-","-","-"
"889","throwableProxyToString","@Override
    protected String throwableProxyToString(IThrowableProxy tp)","0","-","-","-","-"
"890","DropwizardUdpSocketAppender","public DropwizardUdpSocketAppender(String host, int port)","0","-","-","-","-"
"891","start","@Override
    public void start()","0","-","-","-","-"
"892","datagramSocketOutputStream","protected OutputStream datagramSocketOutputStream(String host, int port)","0","-","-","-","-"
"893","write","@Override
                public void write(int b) throws IOException","0","-","-","-","-"
"894","write","@Override
                public void write(byte[] b, int off, int len) throws IOException","0","-","-","-","-"
"895","close","@Override
                public void close() throws IOException","0","-","-","-","-"
"896","DropwizardSocketAppender","public DropwizardSocketAppender(String host, int port, int connectionTimeoutMs, int sendBufferSize,
                                    SocketFactory socketFactory)","0","-","-","-","-"
"897","start","@Override
    public void start()","0","-","-","-","-"
"898","socketOutputStream","protected OutputStream socketOutputStream()","0","-","-","-","-"
"899","getCurrentLogFilename","@JsonProperty
    @Nullable
    public String getCurrentLogFilename()","0","-","-","-","-"
"900","setCurrentLogFilename","@JsonProperty
    public void setCurrentLogFilename(@Nullable String currentLogFilename)","0","-","-","-","-"
"901","isArchive","@JsonProperty
    public boolean isArchive()","0","-","-","-","-"
"902","setArchive","@JsonProperty
    public void setArchive(boolean archive)","0","-","-","-","-"
"903","getArchivedLogFilenamePattern","@JsonProperty
    @Nullable
    public String getArchivedLogFilenamePattern()","0","-","-","-","-"
"904","setArchivedLogFilenamePattern","@JsonProperty
    public void setArchivedLogFilenamePattern(String archivedLogFilenamePattern)","0","-","-","-","-"
"905","getArchivedFileCount","@JsonProperty
    public int getArchivedFileCount()","0","-","-","-","-"
"906","setArchivedFileCount","@JsonProperty
    public void setArchivedFileCount(int archivedFileCount)","0","-","-","-","-"
"907","getMaxFileSize","@JsonProperty
    @Nullable
    public DataSize getMaxFileSize()","0","-","-","-","-"
"908","setMaxFileSize","@JsonProperty
    public void setMaxFileSize(@Nullable DataSize maxFileSize)","0","-","-","-","-"
"909","getTotalSizeCap","/**
     * Returns the total size threshold at which archived log files will be
     * removed. A zero value means there is limit.
     * @since 2.0
     */
    @JsonProperty
    @Nullable
    public DataSize getTotalSizeCap()","0","-","-","-","-"
"910","setTotalSizeCap","/**
     * Sets the total size threshold at which archived log files will be
     * removed. A zero value means there is limit.
     * @since 2.0
     */
    @JsonProperty
    public void setTotalSizeCap(@Nullable DataSize totalSizeCap)","0","-","-","-","-"
"911","getBufferSize","@JsonProperty
    public DataSize getBufferSize()","0","-","-","-","-"
"912","setBufferSize","@JsonProperty
    public void setBufferSize(DataSize bufferSize)","0","-","-","-","-"
"913","isImmediateFlush","public boolean isImmediateFlush()","0","-","-","-","-"
"914","setImmediateFlush","@JsonProperty
    public void setImmediateFlush(boolean immediateFlush)","0","-","-","-","-"
"915","isTotalSizeCapValid","/**
     * Returns a boolean indicating whether the","0","-","-","-","-"
"916","isValidArchiveConfiguration","@JsonIgnore
    @ValidationMethod(message = ""must have archivedLogFilenamePattern if archive is true"")
    public boolean isValidArchiveConfiguration()","0","-","-","-","-"
"917","isValidForMaxFileSizeSetting","@JsonIgnore
    @ValidationMethod(message = ""when specifying maxFileSize, archivedLogFilenamePattern must contain %i"")
    public boolean isValidForMaxFileSizeSetting()","0","-","-","-","-"
"918","isMaxFileSizeSettingSpecified","@JsonIgnore
    @ValidationMethod(message = ""when archivedLogFilenamePattern contains %i, maxFileSize must be specified"")
    public boolean isMaxFileSizeSettingSpecified()","0","-","-","-","-"
"919","isValidFileConfiguration","@JsonIgnore
    @ValidationMethod(message = ""currentLogFilename can only be null when archiving is enabled"")
    public boolean isValidFileConfiguration()","0","-","-","-","-"
"920","appender","@Override
    protected OutputStreamAppender<E> appender(LoggerContext context)","0","-","-","-","-"
"921","buildAppender","protected FileAppender<E> buildAppender(LoggerContext context)","0","-","-","-","-"
"922","canBeDeserialized","@Test
    void canBeDeserialized() throws Exception","0","-","-","-","-"
"923","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"924","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"925","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"926","testConvertOneParameter","@Test
    void testConvertOneParameter() throws Exception","0","-","-","-","-"
"927","testConvertSeveralParameters","@Test
    void testConvertSeveralParameters()","0","-","-","-","-"
"928","outputPatternAsHeaderIsFalse","@Test
    void outputPatternAsHeaderIsFalse()","0","-","-","-","-"
"929","hasAContext","@Test
    void hasAContext()","0","-","-","-","-"
"930","hasAPatternWithATimeZone","@Test
    void hasAPatternWithATimeZone()","0","-","-","-","-"
"931","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"932","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"933","logsRequestsToTheAppender","@Test
    void logsRequestsToTheAppender()","0","-","-","-","-"
"934","combinesHeaders","@Test
    void combinesHeaders()","0","-","-","-","-"
"935","logAndCapture","private IAccessEvent logAndCapture()","0","-","-","-","-"
"936","setUp","@BeforeAll
    static void setUp() throws Exception","0","-","-","-","-"
"937","testDeserialized","@Test
    void testDeserialized()","0","-","-","-","-"
"938","testLogFormat","@Test
    void testLogFormat() throws Exception","0","-","-","-","-"
"939","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"940","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"941","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"942","logsRequestsToTheAppenders","@Test
    void logsRequestsToTheAppenders() throws Exception","0","-","-","-","-"
"943","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"944","fileAppenderFactoryIsSet","@Test
    void fileAppenderFactoryIsSet()","0","-","-","-","-"
"945","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"946","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"947","shouldDenyLogsForConfiguredUri","@Test
    void shouldDenyLogsForConfiguredUri()","0","-","-","-","-"
"948","shouldNotDenyUnconfiguredUriLogs","@Test
    void shouldNotDenyUnconfiguredUriLogs()","0","-","-","-","-"
"949","shouldDenyLogsForAdditionalConfiguredUris","@Test
    void shouldDenyLogsForAdditionalConfiguredUris()","0","-","-","-","-"
"950","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"951","build","@Override
    public PatternLayoutBase<IAccessEvent> build(LoggerContext context, TimeZone timeZone)","0","-","-","-","-"
"952","start","@Override
    public void start()","0","-","-","-","-"
"953","convert","@Override
    public String convert(IAccessEvent accessEvent)","0","-","-","-","-"
"954","LogbackAccessRequestLayout","public LogbackAccessRequestLayout(Context context, TimeZone timeZone)","0","-","-","-","-"
"955","build","/**
     * Creates an","0","-","-","-","-"
"956","preprocess","@Override
            protected void preprocess(IAccessEvent event)","0","-","-","-","-"
"957","pattern","public static String pattern()","0","-","-","-","-"
"958","pattern","public static String pattern(TimeZone tz)","0","-","-","-","-"
"959","DropwizardSlf4jRequestLogWriter","DropwizardSlf4jRequestLogWriter(AppenderAttachableImpl<ILoggingEvent> appenders)","0","-","-","-","-"
"960","write","@Override
    public void write(String entry) throws IOException","0","-","-","-","-"
"961","doStop","@Override
    protected void doStop() throws Exception","0","-","-","-","-"
"962","RequestLogLayout","private RequestLogLayout(Context context)","0","-","-","-","-"
"963","doLayout","@Override
        public String doLayout(ILoggingEvent event)","0","-","-","-","-"
"964","getDefaultConverterSupplierMap","@Override
        protected Map<String,Supplier<DynamicConverter>> getDefaultConverterSupplierMap()","0","-","-","-","-"
"965","getDefaultConverterMap","@Override
        public Map<String, String> getDefaultConverterMap()","0","-","-","-","-"
"966","getAppenders","@JsonProperty
    public List<AppenderFactory<ILoggingEvent>> getAppenders()","0","-","-","-","-"
"967","setAppenders","@JsonProperty
    public void setAppenders(List<AppenderFactory<ILoggingEvent>> appenders)","0","-","-","-","-"
"968","getTimeZone","@JsonProperty
    public TimeZone getTimeZone()","0","-","-","-","-"
"969","setTimeZone","@JsonProperty
    public void setTimeZone(TimeZone timeZone)","0","-","-","-","-"
"970","isEnabled","@JsonIgnore
    @Override
    public boolean isEnabled()","0","-","-","-","-"
"971","build","@Override
    public RequestLog build(String name)","0","-","-","-","-"
"972","setEnabled","@JsonProperty
    public void setEnabled(boolean enabled)","0","-","-","-","-"
"973","isEnabled","@Override
    @JsonProperty
    public boolean isEnabled()","0","-","-","-","-"
"974","build","@Override
    public RequestLog build(String name)","0","-","-","-","-"
"975","getUris","@JsonProperty
    public Set<String> getUris()","0","-","-","-","-"
"976","setUris","@JsonProperty
    public void setUris(final Set<String> uris)","0","-","-","-","-"
"977","build","@Override
    public Filter<IAccessEvent> build()","0","-","-","-","-"
"978","decide","@Override
            public FilterReply decide(final IAccessEvent event)","0","-","-","-","-"
"979","configure","@Override
    public void configure()","0","-","-","-","-"
"980","log","@Override
    public void log(Request jettyRequest, Response jettyResponse)","0","-","-","-","-"
"981","appendLoopOnAppenders","private void appendLoopOnAppenders(IAccessEvent iAccessEvent)","0","-","-","-","-"
"982","addEventListener","@Override
    public boolean addEventListener(EventListener eventListener)","0","-","-","-","-"
"983","removeEventListener","@Override
    public boolean removeEventListener(EventListener eventListener)","0","-","-","-","-"
"984","getAppenders","@JsonProperty
    public List<AppenderFactory<IAccessEvent>> getAppenders()","0","-","-","-","-"
"985","setAppenders","@JsonProperty
    public void setAppenders(List<AppenderFactory<IAccessEvent>> appenders)","0","-","-","-","-"
"986","isEnabled","@JsonIgnore
    @Override
    public boolean isEnabled()","0","-","-","-","-"
"987","build","@Override
    public RequestLog build(String name)","0","-","-","-","-"
"988","isEnabled","boolean isEnabled();","0","-","-","-","-"
"989","build","T build(String name);","0","-","-","-","-"
"990","DropwizardJettyServerAdapter","public DropwizardJettyServerAdapter(Request request, Response response)","0","-","-","-","-"
"991","getRequestTimestamp","@Override
    public long getRequestTimestamp()","0","-","-","-","-"
"992","getContentLength","@Override
    public long getContentLength()","0","-","-","-","-"
"993","getStatusCode","@Override
    public int getStatusCode()","0","-","-","-","-"
"994","buildResponseHeaderMap","@Override
    public Map<String, String> buildResponseHeaderMap()","0","-","-","-","-"
"995","GzipHandlerTest","GzipHandlerTest()","0","-","-","-","-"
"996","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"997","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"998","testCompressResponse","@Test
    void testCompressResponse() throws Exception","0","-","-","-","-"
"999","testBadRequestStatusOnInvalidGzipBytes","@Test
    void testBadRequestStatusOnInvalidGzipBytes() throws Exception","0","-","-","-","-"
"1000","testDecompressRequest","@Test
    void testDecompressRequest() throws Exception","0","-","-","-","-"
"1001","setRequestPostPlainText","private void setRequestPostPlainText(byte[] content)","0","-","-","-","-"
"1002","setRequestPostGzipPlainText","private void setRequestPostGzipPlainText(byte[] content)","0","-","-","-","-"
"1003","doGet","@Override
        protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException","0","-","-","-","-"
"1004","doPost","@Override
        protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException","0","-","-","-","-"
"1005","startsAndStopsAllHandlers","@Test
    void startsAndStopsAllHandlers() throws Exception","0","-","-","-","-"
"1006","routesRequestsToTheConnectorSpecificHandler","@Test
    void routesRequestsToTheConnectorSpecificHandler() throws Exception","0","-","-","-","-"
"1007","withSessionHandler","@Test
    void withSessionHandler() throws Exception","0","-","-","-","-"
"1008","withoutSessionHandler","@Test
    void withoutSessionHandler() throws Exception","0","-","-","-","-"
"1009","getSessionHandlers","private Set<SessionHandler> getSessionHandlers(final RoutingHandler routingHandler)","0","-","-","-","-"
"1010","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"1011","testParsingConfiguration","@Test
    void testParsingConfiguration() throws Exception","0","-","-","-","-"
"1012","testSupportedProtocols","@Test
    void testSupportedProtocols() throws Exception","0","-","-","-","-"
"1013","testSupportedProtocolsWithWildcards","@Test
    void testSupportedProtocolsWithWildcards() throws Exception","0","-","-","-","-"
"1014","testExcludedProtocols","@Test
    @DisabledForJreRange(min = JRE.JAVA_16)
    void testExcludedProtocols() throws Exception","0","-","-","-","-"
"1015","testExcludedProtocolsJava16","@Test
    @DisabledForJreRange(max = JRE.JAVA_15)
    void testExcludedProtocolsJava16() throws Exception","0","-","-","-","-"
"1016","testExcludedProtocolsWithWildcards","@Test
    @DisabledForJreRange(min = JRE.JAVA_16)
    void testExcludedProtocolsWithWildcards() throws Exception","0","-","-","-","-"
"1017","testExcludedProtocolsWithWildcardsJava16","@Test
    @DisabledForJreRange(max = JRE.JAVA_15)
    void testExcludedProtocolsWithWildcardsJava16() throws Exception","0","-","-","-","-"
"1018","testDefaultExcludedProtocols","@Test
    void testDefaultExcludedProtocols() throws Exception","0","-","-","-","-"
"1019","nonWindowsKeyStoreValidation","@Test
    void nonWindowsKeyStoreValidation()","0","-","-","-","-"
"1020","windowsKeyStoreValidation","@Test
    void windowsKeyStoreValidation()","0","-","-","-","-"
"1021","canBuildContextFactoryWhenWindowsKeyStoreAvailable","@Test
    void canBuildContextFactoryWhenWindowsKeyStoreAvailable()","0","-","-","-","-"
"1022","windowsKeyStoreUnavailableThrowsException","@Test
    void windowsKeyStoreUnavailableThrowsException()","0","-","-","-","-"
"1023","testBuild","@Test
    void testBuild() throws Exception","0","-","-","-","-"
"1024","partitionSupportOnlyEnable","@Test
    void partitionSupportOnlyEnable()","0","-","-","-","-"
"1025","partitionSupportExclude","@Test
    void partitionSupportExclude()","0","-","-","-","-"
"1026","partitionSupportInclude","@Test
    void partitionSupportInclude()","0","-","-","-","-"
"1027","canAccessWindowsKeyStore","private boolean canAccessWindowsKeyStore()","0","-","-","-","-"
"1028","getViolationProperties","private static <T> Collection<String> getViolationProperties(Set<ConstraintViolation<T>> violations)","0","-","-","-","-"
"1029","newResource","private static Resource newResource(String resource)","0","-","-","-","-"
"1030","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1031","addsServletInstances","@Test
    void addsServletInstances() throws Exception","0","-","-","-","-"
"1032","addsServletClasses","@Test
    void addsServletClasses() throws Exception","0","-","-","-","-"
"1033","addsFilterInstances","@Test
    void addsFilterInstances() throws Exception","0","-","-","-","-"
"1034","addsFilterClasses","@Test
    void addsFilterClasses() throws Exception","0","-","-","-","-"
"1035","addsServletListeners","@Test
    void addsServletListeners()","0","-","-","-","-"
"1036","addsProtectedTargets","@Test
    void addsProtectedTargets()","0","-","-","-","-"
"1037","setsBaseResource","@Test
    void setsBaseResource(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"1038","setsBaseResourceList","@Test
    void setsBaseResourceList(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"1039","setsResourceBase","@Test
    void setsResourceBase() throws Exception","0","-","-","-","-"
"1040","setsBaseResourceStringList","@Test
    void setsBaseResourceStringList(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"1041","setsInitParams","@Test
    void setsInitParams()","0","-","-","-","-"
"1042","setsSessionHandlers","@Test
    void setsSessionHandlers()","0","-","-","-","-"
"1043","setsSecurityHandlers","@Test
    void setsSecurityHandlers()","0","-","-","-","-"
"1044","addsMimeMapping","@Test
    void addsMimeMapping()","0","-","-","-","-"
"1045","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1046","routesToTheBestPrefixMatch","@Test
    void routesToTheBestPrefixMatch() throws Exception","0","-","-","-","-"
"1047","routesToTheLongestPrefixMatch","@Test
    void routesToTheLongestPrefixMatch() throws Exception","0","-","-","-","-"
"1048","passesHandlingNonMatchingRequests","@Test
    void passesHandlingNonMatchingRequests() throws Exception","0","-","-","-","-"
"1049","startsAndStopsAllHandlers","@Test
    void startsAndStopsAllHandlers() throws Exception","0","-","-","-","-"
"1050","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1051","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"1052","testParseMinimalConfiguration","@Test
    void testParseMinimalConfiguration() throws Exception","0","-","-","-","-"
"1053","testParseFullConfiguration","@Test
    void testParseFullConfiguration() throws Exception","0","-","-","-","-"
"1054","testBuildConnector","@Test
    void testBuildConnector() throws Exception","0","-","-","-","-"
"1055","testBuildConnectorWithProxyProtocol","@Test
    void testBuildConnectorWithProxyProtocol() throws Exception","0","-","-","-","-"
"1056","testDefaultAcceptQueueSize","@Test
    void testDefaultAcceptQueueSize() throws Exception","0","-","-","-","-"
"1057","defaultsToSessionsBeingDisabled","@Test
    void defaultsToSessionsBeingDisabled() throws Exception","0","-","-","-","-"
"1058","defaultsToSecurityBeingDisabled","@Test
    void defaultsToSecurityBeingDisabled() throws Exception","0","-","-","-","-"
"1059","canEnableSessionManagement","@Test
    void canEnableSessionManagement() throws Exception","0","-","-","-","-"
"1060","canDisableSessionManagement","@Test
    void canDisableSessionManagement() throws Exception","0","-","-","-","-"
"1061","canEnableSecurity","@Test
    void canEnableSecurity() throws Exception","0","-","-","-","-"
"1062","canDisableSecurity","@Test
    void canDisableSecurity() throws Exception","0","-","-","-","-"
"1063","testDefaultTcpBacklogForWindows","@Test
    @EnabledOnOs(OS.WINDOWS)
    @DisabledIf(""isTcpBacklogSettingReadable"")
    void testDefaultTcpBacklogForWindows()","0","-","-","-","-"
"1064","testNonWindowsDefaultTcpBacklog","@Test
    @DisabledIf(""isTcpBacklogSettingReadable"")
    @EnabledOnOs(OS.MAC)
    void testNonWindowsDefaultTcpBacklog()","0","-","-","-","-"
"1065","testNonWindowsSpecifiedTcpBacklog","@Test
    @DisabledIf(""isTcpBacklogSettingReadable"")
    @EnabledOnOs(OS.MAC)
    void testNonWindowsSpecifiedTcpBacklog()","0","-","-","-","-"
"1066","testOsTcpBackloc","@Test
    @EnabledIf(""isTcpBacklogSettingReadable"")
    @EnabledOnOs(OS.LINUX)
    void testOsTcpBackloc()","0","-","-","-","-"
"1067","isTcpBacklogSettingReadable","private static boolean isTcpBacklogSettingReadable()","0","-","-","-","-"
"1068","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1069","canBeEnabled","@Test
    void canBeEnabled()","0","-","-","-","-"
"1070","hasAMinimumEntitySize","@Test
    void hasAMinimumEntitySize()","0","-","-","-","-"
"1071","hasABufferSize","@Test
    void hasABufferSize()","0","-","-","-","-"
"1072","hasCompressedMimeTypes","@Test
    void hasCompressedMimeTypes()","0","-","-","-","-"
"1073","testBuild","@Test
    void testBuild()","0","-","-","-","-"
"1074","testBuildDefault","@Test
    void testBuildDefault() throws Exception","0","-","-","-","-"
"1075","testBuilderProperties","@Test
    void testBuilderProperties()","0","-","-","-","-"
"1076","testLoadConfiguration","@Test
    void testLoadConfiguration() throws Exception","0","-","-","-","-"
"1077","testDefaultConfiguration","@Test
    void testDefaultConfiguration()","0","-","-","-","-"
"1078","testDontAddFilterByDefault","@Test
    void testDontAddFilterByDefault()","0","-","-","-","-"
"1079","testAddFilter","@Test
    void testAddFilter()","0","-","-","-","-"
"1080","testRefererHostsAndPortsAreNotSet","@Test
    void testRefererHostsAndPortsAreNotSet()","0","-","-","-","-"
"1081","getAllowRenegotiation","@JsonProperty
    public boolean getAllowRenegotiation()","0","-","-","-","-"
"1082","setAllowRenegotiation","@JsonProperty
    public void setAllowRenegotiation(boolean allowRenegotiation)","0","-","-","-","-"
"1083","getEndpointIdentificationAlgorithm","@JsonProperty
    @Nullable
    public String getEndpointIdentificationAlgorithm()","0","-","-","-","-"
"1084","setEndpointIdentificationAlgorithm","@JsonProperty
    public void setEndpointIdentificationAlgorithm(@Nullable String endpointIdentificationAlgorithm)","0","-","-","-","-"
"1085","getKeyStorePath","@JsonProperty
    @Nullable
    public String getKeyStorePath()","0","-","-","-","-"
"1086","setKeyStorePath","@JsonProperty
    public void setKeyStorePath(@Nullable String keyStorePath)","0","-","-","-","-"
"1087","getKeyStorePassword","@JsonProperty
    @Nullable
    public String getKeyStorePassword()","0","-","-","-","-"
"1088","setKeyStorePassword","@JsonProperty
    public void setKeyStorePassword(@Nullable String keyStorePassword)","0","-","-","-","-"
"1089","getKeyStoreType","@JsonProperty
    public String getKeyStoreType()","0","-","-","-","-"
"1090","setKeyStoreType","@JsonProperty
    public void setKeyStoreType(String keyStoreType)","0","-","-","-","-"
"1091","getKeyStoreProvider","@JsonProperty
    @Nullable
    public String getKeyStoreProvider()","0","-","-","-","-"
"1092","setKeyStoreProvider","@JsonProperty
    public void setKeyStoreProvider(@Nullable String keyStoreProvider)","0","-","-","-","-"
"1093","getTrustStoreType","@JsonProperty
    public String getTrustStoreType()","0","-","-","-","-"
"1094","setTrustStoreType","@JsonProperty
    public void setTrustStoreType(String trustStoreType)","0","-","-","-","-"
"1095","getTrustStoreProvider","@JsonProperty
    @Nullable
    public String getTrustStoreProvider()","0","-","-","-","-"
"1096","setTrustStoreProvider","@JsonProperty
    public void setTrustStoreProvider(@Nullable String trustStoreProvider)","0","-","-","-","-"
"1097","getKeyManagerPassword","@JsonProperty
    @Nullable
    public String getKeyManagerPassword()","0","-","-","-","-"
"1098","setKeyManagerPassword","@JsonProperty
    public void setKeyManagerPassword(@Nullable String keyManagerPassword)","0","-","-","-","-"
"1099","getTrustStorePath","@JsonProperty
    @Nullable
    public String getTrustStorePath()","0","-","-","-","-"
"1100","setTrustStorePath","@JsonProperty
    public void setTrustStorePath(@Nullable String trustStorePath)","0","-","-","-","-"
"1101","getTrustStorePassword","@JsonProperty
    @Nullable
    public String getTrustStorePassword()","0","-","-","-","-"
"1102","setTrustStorePassword","@JsonProperty
    public void setTrustStorePassword(@Nullable String trustStorePassword)","0","-","-","-","-"
"1103","getNeedClientAuth","@JsonProperty
    @Nullable
    public Boolean getNeedClientAuth()","0","-","-","-","-"
"1104","setNeedClientAuth","@JsonProperty
    public void setNeedClientAuth(@Nullable Boolean needClientAuth)","0","-","-","-","-"
"1105","getWantClientAuth","@JsonProperty
    @Nullable
    public Boolean getWantClientAuth()","0","-","-","-","-"
"1106","setWantClientAuth","@JsonProperty
    public void setWantClientAuth(@Nullable Boolean wantClientAuth)","0","-","-","-","-"
"1107","getCertAlias","@JsonProperty
    @Nullable
    public String getCertAlias()","0","-","-","-","-"
"1108","setCertAlias","@JsonProperty
    public void setCertAlias(@Nullable String certAlias)","0","-","-","-","-"
"1109","getCrlPath","@JsonProperty
    @Nullable
    public File getCrlPath()","0","-","-","-","-"
"1110","setCrlPath","@JsonProperty
    public void setCrlPath(@Nullable File crlPath)","0","-","-","-","-"
"1111","getEnableCRLDP","@JsonProperty
    @Nullable
    public Boolean getEnableCRLDP()","0","-","-","-","-"
"1112","setEnableCRLDP","@JsonProperty
    public void setEnableCRLDP(@Nullable Boolean enableCRLDP)","0","-","-","-","-"
"1113","getEnableOCSP","@JsonProperty
    @Nullable
    public Boolean getEnableOCSP()","0","-","-","-","-"
"1114","setEnableOCSP","@JsonProperty
    public void setEnableOCSP(@Nullable Boolean enableOCSP)","0","-","-","-","-"
"1115","getMaxCertPathLength","@JsonProperty
    @Nullable
    public Integer getMaxCertPathLength()","0","-","-","-","-"
"1116","setMaxCertPathLength","@JsonProperty
    public void setMaxCertPathLength(@Nullable Integer maxCertPathLength)","0","-","-","-","-"
"1117","getOcspResponderUrl","@JsonProperty
    @Nullable
    public URI getOcspResponderUrl()","0","-","-","-","-"
"1118","setOcspResponderUrl","@JsonProperty
    public void setOcspResponderUrl(@Nullable URI ocspResponderUrl)","0","-","-","-","-"
"1119","getJceProvider","@JsonProperty
    @Nullable
    public String getJceProvider()","0","-","-","-","-"
"1120","setJceProvider","@JsonProperty
    public void setJceProvider(@Nullable String jceProvider)","0","-","-","-","-"
"1121","getValidatePeers","@JsonProperty
    public boolean getValidatePeers()","0","-","-","-","-"
"1122","setValidatePeers","@JsonProperty
    public void setValidatePeers(boolean validatePeers)","0","-","-","-","-"
"1123","getSupportedProtocols","@JsonProperty
    @Nullable
    public List<String> getSupportedProtocols()","0","-","-","-","-"
"1124","setSupportedProtocols","@JsonProperty
    public void setSupportedProtocols(@Nullable List<String> supportedProtocols)","0","-","-","-","-"
"1125","getExcludedProtocols","@JsonProperty
    @Nullable
    public List<String> getExcludedProtocols()","0","-","-","-","-"
"1126","setExcludedProtocols","@JsonProperty
    public void setExcludedProtocols(@Nullable List<String> excludedProtocols)","0","-","-","-","-"
"1127","getSupportedCipherSuites","@JsonProperty
    @Nullable
    public List<String> getSupportedCipherSuites()","0","-","-","-","-"
"1128","getExcludedCipherSuites","@JsonProperty
    @Nullable
    public List<String> getExcludedCipherSuites()","0","-","-","-","-"
"1129","setExcludedCipherSuites","@JsonProperty
    public void setExcludedCipherSuites(@Nullable List<String> excludedCipherSuites)","0","-","-","-","-"
"1130","setSupportedCipherSuites","@JsonProperty
    public void setSupportedCipherSuites(@Nullable List<String> supportedCipherSuites)","0","-","-","-","-"
"1131","isValidateCerts","@JsonProperty
    public boolean isValidateCerts()","0","-","-","-","-"
"1132","setValidateCerts","@JsonProperty
    public void setValidateCerts(boolean validateCerts)","0","-","-","-","-"
"1133","isDisableSniHostCheck","@JsonProperty
    public boolean isDisableSniHostCheck()","0","-","-","-","-"
"1134","setDisableSniHostCheck","@JsonProperty
    public void setDisableSniHostCheck(boolean disableSniHostCheck)","0","-","-","-","-"
"1135","isValidKeyStorePath","@ValidationMethod(message = ""keyStorePath should not be null"")
    public boolean isValidKeyStorePath()","0","-","-","-","-"
"1136","isValidKeyStorePassword","@ValidationMethod(message = ""keyStorePassword should not be null or empty"")
    public boolean isValidKeyStorePassword()","0","-","-","-","-"
"1137","build","@Override
    public Connector build(Server server, MetricRegistry metrics, String name, @Nullable ThreadPool threadPool)","0","-","-","-","-"
"1138","buildHttpConfiguration","@Override
    protected HttpConfiguration buildHttpConfiguration()","0","-","-","-","-"
"1139","logSslParameters","/**
     * Register a listener that waits until the SSL context factory has started. Once it has
     * started we can grab the fully initialized context so we can log the parameters.
     *
     * @since 2.1.0
     */
    protected LifeCycle.Listener logSslParameters(final SslContextFactory sslContextFactory)","0","-","-","-","-"
"1140","lifeCycleStarted","@Override
            public void lifeCycleStarted(LifeCycle event)","0","-","-","-","-"
"1141","partitionSupport","/**
     * Given a list of protocols available to the JVM that we can serve up to the client, partition
     * this list into two groups: a group of protocols we can serve and a group where we can't. This
     * list takes into account protocols that may have been disabled at the JVM level, and also
     * protocols that the user explicitly wants to include / exclude. The exclude list (blacklist)
     * is stronger than include list (whitelist), so a protocol that is in both lists will be
     * excluded. Other than the initial list of available protocols, the other lists are patterns,
     * such that one can exclude all SSL protocols with a single exclude entry of ""SSL.*"". This
     * function will handle both cipher suites and protocols, but for the sake of conciseness, this
     * documentation only talks about protocols. This implementation is a slimmed down version from
     * jetty:
     * https://github.com/eclipse/jetty.project/blob/93a8afcc6bd1a6e0af7bd9f967c97ae1bc3eb718/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslSelectionDump.java
     *
     * @param supportedByJVM protocols available to the JVM.
     * @param enabledByJVM protocols enabled by lib/security/java.security.
     * @param excludedByConfig protocols the user doesn't want to expose.
     * @param includedByConfig the only protocols the user wants to expose.
     * @return two entry map of protocols that are enabled (true) and those that have been disabled (false).
     */
    static Map<Boolean, List<String>> partitionSupport(
        String[] supportedByJVM,
        String[] enabledByJVM,
        String[] excludedByConfig,
        String[] includedByConfig
    )","0","-","-","-","-"
"1142","logSupportedParameters","private void logSupportedParameters(SslContextFactory contextFactory)","0","-","-","-","-"
"1143","configureSslContextFactory","protected SslContextFactory.Server configureSslContextFactory(SslContextFactory sslContextFactory)","0","-","-","-","-"
"1144","ServletEnvironment","public ServletEnvironment(MutableServletContextHandler handler)","0","-","-","-","-"
"1145","addServlet","/**
     * Add a servlet instance.
     *
     * @param name    the servlet's name
     * @param servlet the servlet instance
     * @return a","0","-","-","-","-"
"1146","addServlet","/**
     * Add a servlet class.
     *
     * @param name  the servlet's name
     * @param klass the servlet class
     * @return a","0","-","-","-","-"
"1147","addFilter","/**
     * Add a filter instance.
     *
     * @param name   the filter's name
     * @param filter the filter instance
     * @return a","0","-","-","-","-"
"1148","addFilter","/**
     * Add a filter class.
     *
     * @param name  the filter's name
     * @param klass the filter class
     * @return a","0","-","-","-","-"
"1149","addFilter","private FilterRegistration.Dynamic addFilter(String name, FilterHolder holder)","0","-","-","-","-"
"1150","addServletListeners","/**
     * Add one or more servlet event listeners.
     *
     * @param listeners one or more listener instances that implement","0","-","-","-","-"
"1151","setProtectedTargets","/**
     * Set protected targets.
     *
     * @param targets Array of URL prefix. Each prefix is in the form /path and
     *                will match either /path exactly or /path/anything
     */
    public void setProtectedTargets(String... targets)","0","-","-","-","-"
"1152","setBaseResource","/**
     * Sets the base resource for this context.
     *
     * @param baseResource The resource to be used as the base for all static content of this context.
     */
    public void setBaseResource(Resource baseResource)","0","-","-","-","-"
"1153","setBaseResource","/**
     * Sets the base resources for this context.
     *
     * @param baseResources The list of resources to be used as the base for all static
     *                      content of this context.
     */
    public void setBaseResource(Resource... baseResources)","0","-","-","-","-"
"1154","setBaseResource","/**
     * Sets the base resources for this context.
     *
     * @param resources A list of strings representing the base resources to serve static
     *                  content for the context. Any string accepted by Resource.newResource(String)
     *                  may be passed and the call is equivalent to","0","-","-","-","-"
"1155","setResourceBase","/**
     * Sets the base resource for this context.
     * @param resourceBase A string representing the base resource for the context. Any
     *                     string accepted by Resource.newResource(String) may be passed
     *                     and the call is equivalent to","0","-","-","-","-"
"1156","setInitParameter","/**
     * Set an initialization parameter.
     *
     * @param name  Parameter name
     * @param value Parameter value
     */
    public void setInitParameter(String name, String value)","0","-","-","-","-"
"1157","setSessionHandler","/**
     * Set the session handler.
     *
     * @param sessionHandler The sessionHandler to set.
     */
    public void setSessionHandler(SessionHandler sessionHandler)","0","-","-","-","-"
"1158","setSecurityHandler","/**
     * Set the security handler.
     *
     * @param securityHandler The securityHandler to set.
     */
    public void setSecurityHandler(SecurityHandler securityHandler)","0","-","-","-","-"
"1159","addMimeMapping","/**
     * Set a mime mapping.
     *
     * @param extension Extension
     * @param type      Mime type
     */
    public void addMimeMapping(String extension, String type)","0","-","-","-","-"
"1160","checkDuplicateRegistration","private void checkDuplicateRegistration(String name, Set<String> items, String type)","0","-","-","-","-"
"1161","StringMethodSerializer","protected StringMethodSerializer(Class<T> clazz, Function<T, String> serializerFunction)","0","-","-","-","-"
"1162","serialize","@Override
    public void serialize(T t, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException","0","-","-","-","-"
"1163","ContextRoutingHandler","public ContextRoutingHandler(Map<String, ? extends Handler> handlers)","0","-","-","-","-"
"1164","handle","@Override
    public void handle(String target,
                       Request baseRequest,
                       HttpServletRequest request,
                       HttpServletResponse response) throws IOException, ServletException","0","-","-","-","-"
"1165","doStart","@Override
    protected void doStart() throws Exception","0","-","-","-","-"
"1166","doStop","@Override
    protected void doStop() throws Exception","0","-","-","-","-"
"1167","getHandlers","@Override
    public Handler[] getHandlers()","0","-","-","-","-"
"1168","expandChildren","@Override
    protected void expandChildren(List<Handler> list, Class<?> byClass)","0","-","-","-","-"
"1169","StringMethodDeserializer","protected StringMethodDeserializer(Class<T> clazz, Function<String, T> deserializerFunction)","0","-","-","-","-"
"1170","deserialize","@Override
    public @Nullable T deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException","0","-","-","-","-"
"1171","SslReload","public SslReload(SslContextFactory factory, Consumer<SslContextFactory> configurer)","0","-","-","-","-"
"1172","reload","public void reload() throws Exception","0","-","-","-","-"
"1173","reloadDryRun","/**
     * Perform a mock configuration reload
     *
     * @since 2.1.0
     * @throws Exception if the reload failed, e.g. due to invalid configuration
     */
    public void reloadDryRun() throws Exception","0","-","-","-","-"
"1174","getFactory","public SslContextFactory getFactory()","0","-","-","-","-"
"1175","isEnabled","@JsonProperty
    public boolean isEnabled()","0","-","-","-","-"
"1176","setEnabled","@JsonProperty
    public void setEnabled(boolean enabled)","0","-","-","-","-"
"1177","getAssociatePeriod","@JsonProperty
    public Duration getAssociatePeriod()","0","-","-","-","-"
"1178","setAssociatePeriod","@JsonProperty
    public void setAssociatePeriod(Duration associatePeriod)","0","-","-","-","-"
"1179","getMaxAssociations","@JsonProperty
    public int getMaxAssociations()","0","-","-","-","-"
"1180","setMaxAssociations","@JsonProperty
    public void setMaxAssociations(int maxAssociations)","0","-","-","-","-"
"1181","getRefererHosts","@Nullable
    @JsonProperty
    public List<String> getRefererHosts()","0","-","-","-","-"
"1182","setRefererHosts","@JsonProperty
    public void setRefererHosts(@Nullable List<String> refererHosts)","0","-","-","-","-"
"1183","getRefererPorts","@Nullable
    @JsonProperty
    public List<Integer> getRefererPorts()","0","-","-","-","-"
"1184","setRefererPorts","@JsonProperty
    public void setRefererPorts(@Nullable List<Integer> refererPorts)","0","-","-","-","-"
"1185","addFilter","public void addFilter(ServletContextHandler handler)","0","-","-","-","-"
"1186","Entry","private Entry(Connector connector, Handler handler)","0","-","-","-","-"
"1187","RoutingHandler","public RoutingHandler(Map<Connector, Handler> handlers)","0","-","-","-","-"
"1188","handle","@Override
    public void handle(String target,
                       Request baseRequest,
                       HttpServletRequest request,
                       HttpServletResponse response) throws IOException, ServletException","0","-","-","-","-"
"1189","use","boolean use(NetworkInterface networkInterface, InetAddress address) throws SocketException;","0","-","-","-","-"
"1190","isEnabled","@JsonProperty
    public boolean isEnabled()","0","-","-","-","-"
"1191","setEnabled","@JsonProperty
    public void setEnabled(boolean enabled)","0","-","-","-","-"
"1192","getMinimumEntitySize","@JsonProperty
    public DataSize getMinimumEntitySize()","0","-","-","-","-"
"1193","setMinimumEntitySize","@JsonProperty
    public void setMinimumEntitySize(DataSize size)","0","-","-","-","-"
"1194","getBufferSize","@JsonProperty
    public DataSize getBufferSize()","0","-","-","-","-"
"1195","setBufferSize","@JsonProperty
    public void setBufferSize(DataSize size)","0","-","-","-","-"
"1196","getCompressedMimeTypes","@JsonProperty
    @Nullable
    public Set<String> getCompressedMimeTypes()","0","-","-","-","-"
"1197","setCompressedMimeTypes","@JsonProperty
    public void setCompressedMimeTypes(Set<String> mimeTypes)","0","-","-","-","-"
"1198","getExcludedMimeTypes","/**
     * @since 2.0
     */
    @JsonProperty
    @Nullable
    public Set<String> getExcludedMimeTypes()","0","-","-","-","-"
"1199","setExcludedMimeTypes","/**
     * @since 2.0
     */
    @JsonProperty
    public void setExcludedMimeTypes(Set<String> mimeTypes)","0","-","-","-","-"
"1200","getDeflateCompressionLevel","@JsonProperty
    public int getDeflateCompressionLevel()","0","-","-","-","-"
"1201","setDeflateCompressionLevel","@JsonProperty
    public void setDeflateCompressionLevel(int level)","0","-","-","-","-"
"1202","getIncludedMethods","@JsonProperty
    @Nullable
    public Set<String> getIncludedMethods()","0","-","-","-","-"
"1203","setIncludedMethods","@JsonProperty
    public void setIncludedMethods(Set<String> methods)","0","-","-","-","-"
"1204","getExcludedPaths","/**
     * @since 2.0
     */
    @JsonProperty
    @Nullable
    public Set<String> getExcludedPaths()","0","-","-","-","-"
"1205","setExcludedPaths","/**
     * @since 2.0
     */
    @JsonProperty
    public void setExcludedPaths(Set<String> paths)","0","-","-","-","-"
"1206","getIncludedPaths","/**
     * @since 2.0
     */
    @JsonProperty
    @Nullable
    public Set<String> getIncludedPaths()","0","-","-","-","-"
"1207","setIncludedPaths","/**
     * @since 2.0
     */
    @JsonProperty
    public void setIncludedPaths(Set<String> paths)","0","-","-","-","-"
"1208","isSyncFlush","@JsonProperty
    public boolean isSyncFlush()","0","-","-","-","-"
"1209","setSyncFlush","@JsonProperty
    public void setSyncFlush(boolean syncFlush)","0","-","-","-","-"
"1210","build","public GzipHandler build(@Nullable Handler handler)","0","-","-","-","-"
"1211","isSecurityEnabled","public boolean isSecurityEnabled()","0","-","-","-","-"
"1212","setSecurityEnabled","public void setSecurityEnabled(boolean enabled)","0","-","-","-","-"
"1213","isSessionsEnabled","public boolean isSessionsEnabled()","0","-","-","-","-"
"1214","setSessionsEnabled","public void setSessionsEnabled(boolean enabled)","0","-","-","-","-"
"1215","application","public static ConnectorFactory application()","0","-","-","-","-"
"1216","admin","public static ConnectorFactory admin()","0","-","-","-","-"
"1217","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"1218","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"1219","getBindHost","@JsonProperty
    @Nullable
    public String getBindHost()","0","-","-","-","-"
"1220","setBindHost","@JsonProperty
    public void setBindHost(String bindHost)","0","-","-","-","-"
"1221","isInheritChannel","@JsonProperty
    public boolean isInheritChannel()","0","-","-","-","-"
"1222","setInheritChannel","@JsonProperty
    public void setInheritChannel(boolean inheritChannel)","0","-","-","-","-"
"1223","getHeaderCacheSize","@JsonProperty
    public DataSize getHeaderCacheSize()","0","-","-","-","-"
"1224","setHeaderCacheSize","@JsonProperty
    public void setHeaderCacheSize(DataSize headerCacheSize)","0","-","-","-","-"
"1225","getOutputBufferSize","@JsonProperty
    public DataSize getOutputBufferSize()","0","-","-","-","-"
"1226","setOutputBufferSize","@JsonProperty
    public void setOutputBufferSize(DataSize outputBufferSize)","0","-","-","-","-"
"1227","getMaxRequestHeaderSize","@JsonProperty
    public DataSize getMaxRequestHeaderSize()","0","-","-","-","-"
"1228","setMaxRequestHeaderSize","@JsonProperty
    public void setMaxRequestHeaderSize(DataSize maxRequestHeaderSize)","0","-","-","-","-"
"1229","getMaxResponseHeaderSize","@JsonProperty
    public DataSize getMaxResponseHeaderSize()","0","-","-","-","-"
"1230","setMaxResponseHeaderSize","@JsonProperty
    public void setMaxResponseHeaderSize(DataSize maxResponseHeaderSize)","0","-","-","-","-"
"1231","getInputBufferSize","@JsonProperty
    public DataSize getInputBufferSize()","0","-","-","-","-"
"1232","setInputBufferSize","@JsonProperty
    public void setInputBufferSize(DataSize inputBufferSize)","0","-","-","-","-"
"1233","getIdleTimeout","@JsonProperty
    public Duration getIdleTimeout()","0","-","-","-","-"
"1234","setIdleTimeout","@JsonProperty
    public void setIdleTimeout(Duration idleTimeout)","0","-","-","-","-"
"1235","getMinBufferPoolSize","@JsonProperty
    public DataSize getMinBufferPoolSize()","0","-","-","-","-"
"1236","setMinBufferPoolSize","@JsonProperty
    public void setMinBufferPoolSize(DataSize minBufferPoolSize)","0","-","-","-","-"
"1237","getBufferPoolIncrement","@JsonProperty
    public DataSize getBufferPoolIncrement()","0","-","-","-","-"
"1238","setBufferPoolIncrement","@JsonProperty
    public void setBufferPoolIncrement(DataSize bufferPoolIncrement)","0","-","-","-","-"
"1239","getMaxBufferPoolSize","@JsonProperty
    public DataSize getMaxBufferPoolSize()","0","-","-","-","-"
"1240","setMaxBufferPoolSize","@JsonProperty
    public void setMaxBufferPoolSize(DataSize maxBufferPoolSize)","0","-","-","-","-"
"1241","getMinResponseDataPerSecond","@JsonProperty
    public DataSize getMinResponseDataPerSecond()","0","-","-","-","-"
"1242","setMinResponseDataPerSecond","@JsonProperty
    public void setMinResponseDataPerSecond(DataSize minResponseDataPerSecond)","0","-","-","-","-"
"1243","getMinRequestDataPerSecond","@JsonProperty
    public DataSize getMinRequestDataPerSecond()","0","-","-","-","-"
"1244","setMinRequestDataPerSecond","@JsonProperty
    public void setMinRequestDataPerSecond(DataSize minRequestDataPerSecond)","0","-","-","-","-"
"1245","getAcceptorThreads","@JsonProperty
    public Optional<Integer> getAcceptorThreads()","0","-","-","-","-"
"1246","setAcceptorThreads","@JsonProperty
    public void setAcceptorThreads(Optional<Integer> acceptorThreads)","0","-","-","-","-"
"1247","getSelectorThreads","@JsonProperty
    public Optional<Integer> getSelectorThreads()","0","-","-","-","-"
"1248","setSelectorThreads","@JsonProperty
    public void setSelectorThreads(Optional<Integer> selectorThreads)","0","-","-","-","-"
"1249","getAcceptQueueSize","@JsonProperty
    @Nullable
    public Integer getAcceptQueueSize()","0","-","-","-","-"
"1250","setAcceptQueueSize","@JsonProperty
    public void setAcceptQueueSize(Integer acceptQueueSize)","0","-","-","-","-"
"1251","isReuseAddress","@JsonProperty
    public boolean isReuseAddress()","0","-","-","-","-"
"1252","setReuseAddress","@JsonProperty
    public void setReuseAddress(boolean reuseAddress)","0","-","-","-","-"
"1253","isUseServerHeader","@JsonProperty
    public boolean isUseServerHeader()","0","-","-","-","-"
"1254","setUseServerHeader","@JsonProperty
    public void setUseServerHeader(boolean useServerHeader)","0","-","-","-","-"
"1255","isUseDateHeader","@JsonProperty
    public boolean isUseDateHeader()","0","-","-","-","-"
"1256","setUseDateHeader","@JsonProperty
    public void setUseDateHeader(boolean useDateHeader)","0","-","-","-","-"
"1257","isUseForwardedHeaders","@JsonProperty
    public boolean isUseForwardedHeaders()","0","-","-","-","-"
"1258","setUseForwardedHeaders","@JsonProperty
    public void setUseForwardedHeaders(boolean useForwardedHeaders)","0","-","-","-","-"
"1259","isUseProxyProtocol","/**
     * @since 2.0
     */
    @JsonProperty
    public boolean isUseProxyProtocol()","0","-","-","-","-"
"1260","setUseProxyProtocol","/**
     * @since 2.0
     */
    @JsonProperty
    public void setUseProxyProtocol(boolean useProxyProtocol)","0","-","-","-","-"
"1261","getHttpCompliance","@JsonProperty
    public HttpCompliance getHttpCompliance()","0","-","-","-","-"
"1262","setHttpCompliance","@JsonProperty
    public void setHttpCompliance(HttpCompliance httpCompliance)","0","-","-","-","-"
"1263","getUriCompliance","@JsonProperty
    public UriCompliance getUriCompliance()","0","-","-","-","-"
"1264","setUriCompliance","@JsonProperty
    public void setUriCompliance(UriCompliance uriCompliance)","0","-","-","-","-"
"1265","getRequestCookieCompliance","/**
     * @since 2.0
     */
    @JsonProperty
    public CookieCompliance getRequestCookieCompliance()","0","-","-","-","-"
"1266","setRequestCookieCompliance","/**
     * @since 2.0
     */
    @JsonProperty
    public void setRequestCookieCompliance(CookieCompliance requestCookieCompliance)","0","-","-","-","-"
"1267","getResponseCookieCompliance","/**
     * @since 2.0
     */
    @JsonProperty
    public CookieCompliance getResponseCookieCompliance()","0","-","-","-","-"
"1268","setResponseCookieCompliance","/**
     * @since 2.0
     */
    @JsonProperty
    public void setResponseCookieCompliance(CookieCompliance responseCookieCompliance)","0","-","-","-","-"
"1269","HttpComplianceSerializer","public HttpComplianceSerializer()","0","-","-","-","-"
"1270","HttpComplianceDeserializer","public HttpComplianceDeserializer()","0","-","-","-","-"
"1271","CookieComplianceSerializer","public CookieComplianceSerializer()","0","-","-","-","-"
"1272","CookieComplianceDeserializer","public CookieComplianceDeserializer()","0","-","-","-","-"
"1273","UriComplianceSerializer","public UriComplianceSerializer()","0","-","-","-","-"
"1274","UriComplianceDeserializer","public UriComplianceDeserializer()","0","-","-","-","-"
"1275","build","@Override
    public Connector build(Server server,
                           MetricRegistry metrics,
                           String name,
                           @Nullable ThreadPool threadPool)","0","-","-","-","-"
"1276","httpConnections","/**
     * Get name of the timer that tracks incoming HTTP connections
     */
    protected String httpConnections()","0","-","-","-","-"
"1277","buildConnector","protected ServerConnector buildConnector(Server server,
                                             Scheduler scheduler,
                                             ByteBufferPool bufferPool,
                                             String name,
                                             @Nullable ThreadPool threadPool,
                                             ConnectionFactory... factories)","0","-","-","-","-"
"1278","buildHttpConnectionFactory","protected HttpConnectionFactory buildHttpConnectionFactory(HttpConfiguration httpConfig)","0","-","-","-","-"
"1279","buildHttpConfiguration","protected HttpConfiguration buildHttpConfiguration()","0","-","-","-","-"
"1280","buildBufferPool","protected ByteBufferPool buildBufferPool()","0","-","-","-","-"
"1281","buildBufferPool","ByteBufferPool buildBufferPool(int minCapacity, int factor, int maxCapacity)","0","-","-","-","-"
"1282","getTcpBacklog","/**
     * The SOMAXCONN value of the current machine.  If failed to get the value,","0","-","-","-","-"
"1283","getTcpBacklog","static int getTcpBacklog(int tcpBacklog)","0","-","-","-","-"
"1284","isWindows","private static boolean isWindows()","0","-","-","-","-"
"1285","getDefaultTcpBacklog","private static int getDefaultTcpBacklog()","0","-","-","-","-"
"1286","build","/**
     * Create a new connector.
     *
     * @param server     the application's","0","-","-","-","-"
"1287","handle","@Override
    public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException","0","-","-","-","-"
"1288","testFullConfiguration","@Test
    void testFullConfiguration() throws Exception","0","-","-","-","-"
"1289","testMinimalConfiguration","@Test
    void testMinimalConfiguration() throws Exception","0","-","-","-","-"
"1290","testInlineUserPasswordConfiguration","@Test
    void testInlineUserPasswordConfiguration() throws Exception","0","-","-","-","-"
"1291","testInitialSizeZeroIsAllowed","@Test
    void testInitialSizeZeroIsAllowed() throws Exception","0","-","-","-","-"
"1292","testEmptyDriverClassIsAllowed","@Test
    void testEmptyDriverClassIsAllowed() throws Exception","0","-","-","-","-"
"1293","getDataSourceFactory","private DataSourceFactory getDataSourceFactory(String resourceName) throws Exception","0","-","-","-","-"
"1294","testCheck","@Test
    @SuppressWarnings(""unchecked"")
    void testCheck() throws InterruptedException, ExecutionException, TimeoutException","0","-","-","-","-"
"1295","hasNoParentLogger","@Test
    void hasNoParentLogger()","0","-","-","-","-"
"1296","validate","@Override
    public boolean validate(Connection connection, int validateAction)","0","-","-","-","-"
"1297","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1298","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"1299","dataSource","private ManagedDataSource dataSource() throws Exception","0","-","-","-","-"
"1300","testEmptyDriverClass","@Test
    void testEmptyDriverClass()","0","-","-","-","-"
"1301","testInitialSizeIsZero","@Test
    void testInitialSizeIsZero()","0","-","-","-","-"
"1302","buildsAConnectionPoolToTheDatabase","@Test
    void buildsAConnectionPoolToTheDatabase() throws Exception","0","-","-","-","-"
"1303","testNoValidationQueryTimeout","@Test
    void testNoValidationQueryTimeout() throws Exception","0","-","-","-","-"
"1304","testValidationQueryTimeoutIsSet","@Test
    void testValidationQueryTimeoutIsSet() throws Exception","0","-","-","-","-"
"1305","invalidJDBCDriverClassThrowsSQLException","@Test
    void invalidJDBCDriverClassThrowsSQLException()","0","-","-","-","-"
"1306","testCustomValidator","@Test
    void testCustomValidator() throws Exception","0","-","-","-","-"
"1307","testJdbcInterceptors","@Test
    void testJdbcInterceptors() throws Exception","0","-","-","-","-"
"1308","createDefaultFactory","@Test
    void createDefaultFactory() throws Exception","0","-","-","-","-"
"1309","metricsRecorded","@Test
    void metricsRecorded() throws Exception","0","-","-","-","-"
"1310","TimeBoundHealthCheck","public TimeBoundHealthCheck(ExecutorService executorService, Duration duration)","0","-","-","-","-"
"1311","check","public HealthCheck.Result check(Callable<HealthCheck.Result> c)","0","-","-","-","-"
"1312","unhealthy","private HealthCheck.Result unhealthy()","0","-","-","-","-"
"1313","ManagedPooledDataSource","/**
     * Create a new data source with the given connection pool configuration.
     *
     * @param config the connection pool configuration
     */
    public ManagedPooledDataSource(PoolConfiguration config, MetricRegistry metricRegistry)","0","-","-","-","-"
"1314","getParentLogger","@Override
    public Logger getParentLogger() throws SQLFeatureNotSupportedException","0","-","-","-","-"
"1315","start","@Override
    public void start() throws Exception","0","-","-","-","-"
"1316","stop","@Override
    public void stop() throws Exception","0","-","-","-","-"
"1317","TransactionIsolation","TransactionIsolation(int value)","0","-","-","-","-"
"1318","get","public int get()","0","-","-","-","-"
"1319","isAutoCommentsEnabled","@JsonProperty
    @Override
    public boolean isAutoCommentsEnabled()","0","-","-","-","-"
"1320","setAutoCommentsEnabled","@JsonProperty
    public void setAutoCommentsEnabled(boolean autoCommentsEnabled)","0","-","-","-","-"
"1321","getDriverClass","@Nullable
    @JsonProperty
    @Override
    public String getDriverClass()","0","-","-","-","-"
"1322","setDriverClass","@JsonProperty
    public void setDriverClass(@Nullable String driverClass)","0","-","-","-","-"
"1323","getUser","@JsonProperty
    @Nullable
    public String getUser()","0","-","-","-","-"
"1324","setUser","@JsonProperty
    public void setUser(@Nullable String user)","0","-","-","-","-"
"1325","getPassword","@JsonProperty
    @Nullable
    public String getPassword()","0","-","-","-","-"
"1326","setPassword","@JsonProperty
    public void setPassword(@Nullable String password)","0","-","-","-","-"
"1327","getUrl","@JsonProperty
    @Override
    public String getUrl()","0","-","-","-","-"
"1328","setUrl","@JsonProperty
    public void setUrl(String url)","0","-","-","-","-"
"1329","getProperties","@JsonProperty
    @Override
    public Map<String, String> getProperties()","0","-","-","-","-"
"1330","setProperties","@JsonProperty
    public void setProperties(Map<String, String> properties)","0","-","-","-","-"
"1331","getMaxWaitForConnection","@JsonProperty
    public Duration getMaxWaitForConnection()","0","-","-","-","-"
"1332","setMaxWaitForConnection","@JsonProperty
    public void setMaxWaitForConnection(Duration maxWaitForConnection)","0","-","-","-","-"
"1333","getValidationQuery","@Override
    @JsonProperty
    public Optional<String> getValidationQuery()","0","-","-","-","-"
"1334","setValidationQuery","@JsonProperty
    public void setValidationQuery(@Nullable String validationQuery)","0","-","-","-","-"
"1335","getMinSize","@JsonProperty
    public int getMinSize()","0","-","-","-","-"
"1336","setMinSize","@JsonProperty
    public void setMinSize(int minSize)","0","-","-","-","-"
"1337","getMaxSize","@JsonProperty
    public int getMaxSize()","0","-","-","-","-"
"1338","setMaxSize","@JsonProperty
    public void setMaxSize(int maxSize)","0","-","-","-","-"
"1339","getCheckConnectionWhileIdle","@JsonProperty
    public boolean getCheckConnectionWhileIdle()","0","-","-","-","-"
"1340","setCheckConnectionWhileIdle","@JsonProperty
    public void setCheckConnectionWhileIdle(boolean checkConnectionWhileIdle)","0","-","-","-","-"
"1341","isMinSizeLessThanMaxSize","@JsonIgnore
    @ValidationMethod(message = "".minSize must be less than or equal to maxSize"")
    public boolean isMinSizeLessThanMaxSize()","0","-","-","-","-"
"1342","isInitialSizeLessThanMaxSize","@JsonIgnore
    @ValidationMethod(message = "".initialSize must be less than or equal to maxSize"")
    public boolean isInitialSizeLessThanMaxSize()","0","-","-","-","-"
"1343","isInitialSizeGreaterThanMinSize","@JsonIgnore
    @ValidationMethod(message = "".initialSize must be greater than or equal to minSize"")
    public boolean isInitialSizeGreaterThanMinSize()","0","-","-","-","-"
"1344","getAbandonWhenPercentageFull","@JsonProperty
    public int getAbandonWhenPercentageFull()","0","-","-","-","-"
"1345","setAbandonWhenPercentageFull","@JsonProperty
    public void setAbandonWhenPercentageFull(int percentage)","0","-","-","-","-"
"1346","isAlternateUsernamesAllowed","@JsonProperty
    public boolean isAlternateUsernamesAllowed()","0","-","-","-","-"
"1347","setAlternateUsernamesAllowed","@JsonProperty
    public void setAlternateUsernamesAllowed(boolean allow)","0","-","-","-","-"
"1348","getCommitOnReturn","@JsonProperty
    public boolean getCommitOnReturn()","0","-","-","-","-"
"1349","getRollbackOnReturn","@JsonProperty
    public boolean getRollbackOnReturn()","0","-","-","-","-"
"1350","setCommitOnReturn","@JsonProperty
    public void setCommitOnReturn(boolean commitOnReturn)","0","-","-","-","-"
"1351","setRollbackOnReturn","@JsonProperty
    public void setRollbackOnReturn(boolean rollbackOnReturn)","0","-","-","-","-"
"1352","getAutoCommitByDefault","@JsonProperty
    @Nullable
    public Boolean getAutoCommitByDefault()","0","-","-","-","-"
"1353","setAutoCommitByDefault","@JsonProperty
    public void setAutoCommitByDefault(@Nullable Boolean autoCommit)","0","-","-","-","-"
"1354","getDefaultCatalog","@JsonProperty
    @Nullable
    public String getDefaultCatalog()","0","-","-","-","-"
"1355","setDefaultCatalog","@JsonProperty
    public void setDefaultCatalog(@Nullable String defaultCatalog)","0","-","-","-","-"
"1356","getReadOnlyByDefault","@JsonProperty
    @Nullable
    public Boolean getReadOnlyByDefault()","0","-","-","-","-"
"1357","setReadOnlyByDefault","@JsonProperty
    public void setReadOnlyByDefault(@Nullable Boolean readOnlyByDefault)","0","-","-","-","-"
"1358","getDefaultTransactionIsolation","@JsonProperty
    public TransactionIsolation getDefaultTransactionIsolation()","0","-","-","-","-"
"1359","setDefaultTransactionIsolation","@JsonProperty
    public void setDefaultTransactionIsolation(TransactionIsolation isolation)","0","-","-","-","-"
"1360","getUseFairQueue","@JsonProperty
    public boolean getUseFairQueue()","0","-","-","-","-"
"1361","setUseFairQueue","@JsonProperty
    public void setUseFairQueue(boolean fair)","0","-","-","-","-"
"1362","getInitialSize","@JsonProperty
    public int getInitialSize()","0","-","-","-","-"
"1363","setInitialSize","@JsonProperty
    public void setInitialSize(int initialSize)","0","-","-","-","-"
"1364","getInitializationQuery","@JsonProperty
    @Nullable
    public String getInitializationQuery()","0","-","-","-","-"
"1365","setInitializationQuery","@JsonProperty
    public void setInitializationQuery(@Nullable String query)","0","-","-","-","-"
"1366","getLogAbandonedConnections","@JsonProperty
    public boolean getLogAbandonedConnections()","0","-","-","-","-"
"1367","setLogAbandonedConnections","@JsonProperty
    public void setLogAbandonedConnections(boolean log)","0","-","-","-","-"
"1368","getLogValidationErrors","@JsonProperty
    public boolean getLogValidationErrors()","0","-","-","-","-"
"1369","setLogValidationErrors","@JsonProperty
    public void setLogValidationErrors(boolean log)","0","-","-","-","-"
"1370","getMaxConnectionAge","@JsonProperty
    public Optional<Duration> getMaxConnectionAge()","0","-","-","-","-"
"1371","setMaxConnectionAge","@JsonProperty
    public void setMaxConnectionAge(@Nullable Duration age)","0","-","-","-","-"
"1372","getMinIdleTime","@JsonProperty
    public Duration getMinIdleTime()","0","-","-","-","-"
"1373","setMinIdleTime","@JsonProperty
    public void setMinIdleTime(Duration time)","0","-","-","-","-"
"1374","getCheckConnectionOnBorrow","@JsonProperty
    public boolean getCheckConnectionOnBorrow()","0","-","-","-","-"
"1375","setCheckConnectionOnBorrow","@JsonProperty
    public void setCheckConnectionOnBorrow(boolean checkConnectionOnBorrow)","0","-","-","-","-"
"1376","getCheckConnectionOnConnect","@JsonProperty
    public boolean getCheckConnectionOnConnect()","0","-","-","-","-"
"1377","setCheckConnectionOnConnect","@JsonProperty
    public void setCheckConnectionOnConnect(boolean checkConnectionOnConnect)","0","-","-","-","-"
"1378","getCheckConnectionOnReturn","@JsonProperty
    public boolean getCheckConnectionOnReturn()","0","-","-","-","-"
"1379","setCheckConnectionOnReturn","@JsonProperty
    public void setCheckConnectionOnReturn(boolean checkConnectionOnReturn)","0","-","-","-","-"
"1380","getEvictionInterval","@JsonProperty
    public Duration getEvictionInterval()","0","-","-","-","-"
"1381","setEvictionInterval","@JsonProperty
    public void setEvictionInterval(Duration interval)","0","-","-","-","-"
"1382","getValidationInterval","@JsonProperty
    public Duration getValidationInterval()","0","-","-","-","-"
"1383","setValidationInterval","@JsonProperty
    public void setValidationInterval(Duration validationInterval)","0","-","-","-","-"
"1384","getValidationQueryTimeout","@Override
    @JsonProperty
    public Optional<Duration> getValidationQueryTimeout()","0","-","-","-","-"
"1385","getValidatorClassName","@JsonProperty
    public Optional<String> getValidatorClassName()","0","-","-","-","-"
"1386","setValidatorClassName","@JsonProperty
    public void setValidatorClassName(Optional<String> validatorClassName)","0","-","-","-","-"
"1387","setValidationQueryTimeout","@JsonProperty
    public void setValidationQueryTimeout(@Nullable Duration validationQueryTimeout)","0","-","-","-","-"
"1388","isRemoveAbandoned","@JsonProperty
    public boolean isRemoveAbandoned()","0","-","-","-","-"
"1389","setRemoveAbandoned","@JsonProperty
    public void setRemoveAbandoned(boolean removeAbandoned)","0","-","-","-","-"
"1390","getRemoveAbandonedTimeout","@JsonProperty
    public Duration getRemoveAbandonedTimeout()","0","-","-","-","-"
"1391","setRemoveAbandonedTimeout","@JsonProperty
    public void setRemoveAbandonedTimeout(Duration removeAbandonedTimeout)","0","-","-","-","-"
"1392","getJdbcInterceptors","@JsonProperty
    public Optional<String> getJdbcInterceptors()","0","-","-","-","-"
"1393","setJdbcInterceptors","@JsonProperty
    public void setJdbcInterceptors(Optional<String> jdbcInterceptors)","0","-","-","-","-"
"1394","isIgnoreExceptionOnPreLoad","@JsonProperty
    public boolean isIgnoreExceptionOnPreLoad()","0","-","-","-","-"
"1395","setIgnoreExceptionOnPreLoad","@JsonProperty
    public void setIgnoreExceptionOnPreLoad(boolean ignoreExceptionOnPreLoad)","0","-","-","-","-"
"1396","asSingleConnectionPool","@Override
    public void asSingleConnectionPool()","0","-","-","-","-"
"1397","build","@Override
    public ManagedDataSource build(MetricRegistry metricRegistry, String name)","0","-","-","-","-"
"1398","isAutoCommentsEnabled","/**
     * Whether ORM tools allowed to add comments to SQL queries.
     *
     * @return","0","-","-","-","-"
"1399","getProperties","/**
     * Returns the configuration properties for ORM tools.
     *
     * @return configuration properties as a map
     */
    Map<String, String> getProperties();","0","-","-","-","-"
"1400","getValidationQueryTimeout","/**
     * Returns the timeout for awaiting a response from the database
     * during connection health checks.
     *
     * @return the timeout as","0","-","-","-","-"
"1401","getValidationQuery","/**
     * Returns the SQL query, which is being used for the database
     * connection health check.
     *
     * @return the SQL query as a string
     */
    Optional<String> getValidationQuery();","0","-","-","-","-"
"1402","getDriverClass","/**
     * Returns the Java class of the database driver.
     *
     * @return the JDBC driver class as a string
     */
    @Nullable
    String getDriverClass();","0","-","-","-","-"
"1403","getUrl","/**
     * Returns the JDBC connection URL.
     *
     * @return the JDBC connection URL as a string
     */
    String getUrl();","0","-","-","-","-"
"1404","asSingleConnectionPool","/**
     * Configures the pool as a single connection pool.
     * It's useful for tools that use only one database connection,
     * such as database migrations.
     */
    void asSingleConnectionPool();","0","-","-","-","-"
"1405","build","/**
     * Builds a new JDBC data source backed by the connection pool
     * and managed by Dropwizard.
     *
     * @param metricRegistry the application metric registry
     * @param name           name of the connection pool
     * @return a new JDBC data source as","0","-","-","-","-"
"1406","getDataSourceFactory","PooledDataSourceFactory getDataSourceFactory(T configuration);","0","-","-","-","-"
"1407","setUp","@Setup
    public void setUp() throws Exception","0","-","-","-","-"
"1408","configure","@Override
            protected Application configure()","0","-","-","-","-"
"1409","getEndpointsInfo","@Benchmark
    public String getEndpointsInfo()","0","-","-","-","-"
"1410","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"1411","insert","@POST
        public String insert(String asset)","0","-","-","-","-"
"1412","get","@GET
        @Path(""","0","-","-","-","-"
"1413","getDetails","@GET
        @Path(""","0","-","-","-","-"
"1414","getAll","@GET
        public List<String> getAll()","0","-","-","-","-"
"1415","delete","@DELETE
        @Path(""","0","-","-","-","-"
"1416","update","@PUT
        @Path(""","0","-","-","-","-"
"1417","start","@POST
        @Path(""","0","-","-","-","-"
"1418","complete","@POST
        @Path(""","0","-","-","-","-"
"1419","abort","@POST
        @Path(""","0","-","-","-","-"
"1420","delete","@POST
        @Path(""","0","-","-","-","-"
"1421","getStatus","@GET
        @Path(""","0","-","-","-","-"
"1422","insert","@POST
        public String insert(String cluster)","0","-","-","-","-"
"1423","get","@GET
        @Path(""","0","-","-","-","-"
"1424","getAll","@GET
        public List<String> getAll()","0","-","-","-","-"
"1425","delete","@DELETE
        @Path(""","0","-","-","-","-"
"1426","paramFunc","public String paramFunc(@HeaderParam(""cheese"") @NotEmpty String secretSauce)","0","-","-","-","-"
"1427","objectFunc","public String objectFunc(@Valid Foo foo)","0","-","-","-","-"
"1428","prepare","@Setup
    public void prepare() throws NoSuchMethodException","0","-","-","-","-"
"1429","paramViolation","@Benchmark
    public String paramViolation()","0","-","-","-","-"
"1430","objViolation","@Benchmark
    public String objViolation()","0","-","-","-","-"
"1431","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"1432","isValid1","@ValidationMethod
        public boolean isValid1(String param1)","0","-","-","-","-"
"1433","isValid2","@ValidationMethod
        public boolean isValid2(String param1, int param2)","0","-","-","-","-"
"1434","isInvalid1","@ValidationMethod(message = ""invalid1"")
        public boolean isInvalid1(String param1)","0","-","-","-","-"
"1435","isInvalid2","@ValidationMethod(message = ""invalid2"")
        public boolean isInvalid2(String param1, int param2)","0","-","-","-","-"
"1436","validateValid1","@SelfValidation
        public void validateValid1(ViolationCollector collector)","0","-","-","-","-"
"1437","validateValid2","@SelfValidation
        public void validateValid2(ViolationCollector collector)","0","-","-","-","-"
"1438","validateInvalid1","@SelfValidation
        public void validateInvalid1(ViolationCollector collector)","0","-","-","-","-"
"1439","validateInvalid2","@SelfValidation
        public void validateInvalid2(ViolationCollector collector)","0","-","-","-","-"
"1440","prepare","@Setup
    public void prepare()","0","-","-","-","-"
"1441","validationMethod","@Benchmark
    public void validationMethod()","0","-","-","-","-"
"1442","selfValidating","@Benchmark
    public void selfValidating()","0","-","-","-","-"
"1443","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"1444","parseDuration","@Benchmark
    public Duration parseDuration()","0","-","-","-","-"
"1445","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"1446","parseSize","@Benchmark
    public DataSize parseSize()","0","-","-","-","-"
"1447","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"1448","testRun","@Test
    void testRun()","0","-","-","-","-"
"1449","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"1450","acceptsNonPrivilegedPorts","@Test
    void acceptsNonPrivilegedPorts()","0","-","-","-","-"
"1451","acceptsDynamicPorts","@Test
    void acceptsDynamicPorts()","0","-","-","-","-"
"1452","rejectsNegativePorts","@Test
    void rejectsNegativePorts()","0","-","-","-","-"
"1453","allowsForCustomMinimumPorts","@Test
    void allowsForCustomMinimumPorts()","0","-","-","-","-"
"1454","allowsForCustomMaximumPorts","@Test
    void allowsForCustomMaximumPorts()","0","-","-","-","-"
"1455","rejectsInvalidPortsInList","@Test
    void rejectsInvalidPortsInList()","0","-","-","-","-"
"1456","acceptsNull","@Test
    @SuppressWarnings(""NullAway"")
    void acceptsNull()","0","-","-","-","-"
"1457","isDefaultLocaleEnglish","private static boolean isDefaultLocaleEnglish()","0","-","-","-","-"
"1458","setTooBig","void setTooBig(DataSize tooBig)","0","-","-","-","-"
"1459","setTooSmall","void setTooSmall(DataSize tooSmall)","0","-","-","-","-"
"1460","setOutOfRange","void setOutOfRange(DataSize outOfRange)","0","-","-","-","-"
"1461","setMaxDataSize","void setMaxDataSize(List<DataSize> maxDataSize)","0","-","-","-","-"
"1462","setMinDataSize","void setMinDataSize(List<DataSize> minDataSize)","0","-","-","-","-"
"1463","setRangeDataSize","void setRangeDataSize(List<DataSize> rangeDataSize)","0","-","-","-","-"
"1464","returnsASetOfErrorsForAnObject","@Test
    void returnsASetOfErrorsForAnObject()","0","-","-","-","-"
"1465","returnsAnEmptySetForAValidObject","@Test
    void returnsAnEmptySetForAValidObject()","0","-","-","-","-"
"1466","isOK","@ValidationMethod(message = ""also needs something special"")
        public boolean isOK()","0","-","-","-","-"
"1467","isFalse","@ValidationMethod(message = ""must have a false thing"")
        public boolean isFalse()","0","-","-","-","-"
"1468","isTrue","@ValidationMethod(message = ""must have a true thing"")
        public boolean isTrue()","0","-","-","-","-"
"1469","complainsAboutMethodsWhichReturnFalse","@Test
    void complainsAboutMethodsWhichReturnFalse() throws Exception","0","-","-","-","-"
"1470","getName","@JsonProperty
    public String getName()","0","-","-","-","-"
"1471","setName","@JsonProperty
    public void setName(String name)","0","-","-","-","-"
"1472","setTooBig","public void setTooBig(Duration tooBig)","0","-","-","-","-"
"1473","setTooBigExclusive","public void setTooBigExclusive(Duration tooBigExclusive)","0","-","-","-","-"
"1474","setTooSmall","public void setTooSmall(Duration tooSmall)","0","-","-","-","-"
"1475","setTooSmallExclusive","public void setTooSmallExclusive(Duration tooSmallExclusive)","0","-","-","-","-"
"1476","setOutOfRange","public void setOutOfRange(Duration outOfRange)","0","-","-","-","-"
"1477","setMaxDurs","public void setMaxDurs(List<Duration> maxDurs)","0","-","-","-","-"
"1478","setMinDurs","public void setMinDurs(List<Duration> minDurs)","0","-","-","-","-"
"1479","setRangeDurs","public void setRangeDurs(List<Duration> rangeDurs)","0","-","-","-","-"
"1480","returnsASetOfErrorsForAnObject","@Test
    void returnsASetOfErrorsForAnObject() throws Exception","0","-","-","-","-"
"1481","returnsAnEmptySetForAValidObject","@Test
    void returnsAnEmptySetForAValidObject() throws Exception","0","-","-","-","-"
"1482","allowsExactElements","@Test
    void allowsExactElements() throws Exception","0","-","-","-","-"
"1483","doesNotAllowOtherElements","@Test
    void doesNotAllowOtherElements() throws Exception","0","-","-","-","-"
"1484","doesNotAllowBadElementsInList","@Test
    void doesNotAllowBadElementsInList()","0","-","-","-","-"
"1485","optionallyIgnoresCase","@Test
    void optionallyIgnoresCase() throws Exception","0","-","-","-","-"
"1486","optionallyIgnoresWhitespace","@Test
    void optionallyIgnoresWhitespace() throws Exception","0","-","-","-","-"
"1487","getAllLoggingEvents","public List<ILoggingEvent> getAllLoggingEvents()","0","-","-","-","-"
"1488","clearAllLoggingEvents","public void clearAllLoggingEvents()","0","-","-","-","-"
"1489","append","@Override
        protected void append(ILoggingEvent iLoggingEvent)","0","-","-","-","-"
"1490","setUp","@BeforeAll
    static void setUp()","0","-","-","-","-"
"1491","clearAllLoggers","@AfterEach
    @BeforeEach
    public void clearAllLoggers()","0","-","-","-","-"
"1492","validateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail(ViolationCollector col)","0","-","-","-","-"
"1493","subValidateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void subValidateFail(ViolationCollector col)","0","-","-","-","-"
"1494","subValidateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void subValidateFail(ViolationCollector col)","0","-","-","-","-"
"1495","validateFail","@Override
        public void validateFail(ViolationCollector col)","0","-","-","-","-"
"1496","validateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail(ViolationCollector col)","0","-","-","-","-"
"1497","validateCorrect","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateCorrect(ViolationCollector col)","0","-","-","-","-"
"1498","validateCorrect","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateCorrect(ViolationCollector col)","0","-","-","-","-"
"1499","validateFailAdditionalParameters","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFailAdditionalParameters(ViolationCollector col, int a)","0","-","-","-","-"
"1500","validateFailReturn","@SelfValidation
        public boolean validateFailReturn(ViolationCollector col)","0","-","-","-","-"
"1501","validateFailPrivate","@SelfValidation
        private void validateFailPrivate(ViolationCollector col)","0","-","-","-","-"
"1502","validateFail1","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail1(ViolationCollector col)","0","-","-","-","-"
"1503","validateFail2","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail2(ViolationCollector col)","0","-","-","-","-"
"1504","validateFail3","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail3(ViolationCollector col)","0","-","-","-","-"
"1505","validateFail4","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail4(ViolationCollector col)","0","-","-","-","-"
"1506","validateCorrect","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateCorrect(ViolationCollector col)","0","-","-","-","-"
"1507","validateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail(ViolationCollector col)","0","-","-","-","-"
"1508","validateFail","@SuppressWarnings(""unused"")
        @SelfValidation
        public void validateFail(ViolationCollector col)","0","-","-","-","-"
"1509","failingExample","@Test
    void failingExample()","0","-","-","-","-"
"1510","subClassExample","@Test
    void subClassExample()","0","-","-","-","-"
"1511","annotatedSubClassExample","@Test
    void annotatedSubClassExample()","0","-","-","-","-"
"1512","overridingSubClassExample","@Test
    void overridingSubClassExample()","0","-","-","-","-"
"1513","correctExample","@Test
    void correctExample()","0","-","-","-","-"
"1514","multipleTestingOfSameClass","@Test
    void multipleTestingOfSameClass()","0","-","-","-","-"
"1515","testDirectContextUsage","@Test
    void testDirectContextUsage()","0","-","-","-","-"
"1516","complexExample","@Test
    void complexExample()","0","-","-","-","-"
"1517","invalidExample","@Test
    void invalidExample() throws Exception","0","-","-","-","-"
"1518","giveWarningIfNoValidationMethods","@Test
    void giveWarningIfNoValidationMethods()","0","-","-","-","-"
"1519","violationMessagesAreEscapedByDefault","@Test
    void violationMessagesAreEscapedByDefault()","0","-","-","-","-"
"1520","messageParametersExample","@Test
    void messageParametersExample()","0","-","-","-","-"
"1521","validObjectHasNoViolations","@Test
    void validObjectHasNoViolations()","0","-","-","-","-"
"1522","invalidObjectHasViolations","@Test
    void invalidObjectHasViolations()","0","-","-","-","-"
"1523","correctMethod","@Test
    void correctMethod()","0","-","-","-","-"
"1524","voidIsNotAccepted","@Test
    void voidIsNotAccepted()","0","-","-","-","-"
"1525","privateIsNotAccepted","@Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void privateIsNotAccepted() throws NoSuchMethodException","0","-","-","-","-"
"1526","additionalParametersAreNotAccepted","@Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void additionalParametersAreNotAccepted() throws NoSuchMethodException","0","-","-","-","-"
"1527","getMethod","private ResolvedMethod getMethod(String name, Class<?>... params)","0","-","-","-","-"
"1528","hasSignature","private boolean hasSignature(ResolvedMethod m, String name, Class<?>[] params)","0","-","-","-","-"
"1529","validateCorrect","@SelfValidation
        public void validateCorrect(ViolationCollector col)","0","-","-","-","-"
"1530","validateFailAdditionalParameters","@SelfValidation
        public void validateFailAdditionalParameters(ViolationCollector col, int a)","0","-","-","-","-"
"1531","validateFailReturn","@SelfValidation
        public boolean validateFailReturn(ViolationCollector col)","0","-","-","-","-"
"1532","validateFailPrivate","@SelfValidation
        private void validateFailPrivate(ViolationCollector col)","0","-","-","-","-"
"1533","ValidExample","ValidExample(int n)","0","-","-","-","-"
"1534","validate","@SelfValidation
        public void validate(ViolationCollector col)","0","-","-","-","-"
"1535","succeedsWhenAbsent","@Test
    void succeedsWhenAbsent()","0","-","-","-","-"
"1536","failsWhenFailingConstraint","@Test
    void failsWhenFailingConstraint()","0","-","-","-","-"
"1537","succeedsWhenConstraintsMet","@Test
    void succeedsWhenConstraintsMet()","0","-","-","-","-"
"1538","notNullFailsWhenAbsent","@Test
    void notNullFailsWhenAbsent()","0","-","-","-","-"
"1539","succeedsWhenAbsent","@Test
    void succeedsWhenAbsent()","0","-","-","-","-"
"1540","failsWhenFailingConstraint","@Test
    void failsWhenFailingConstraint()","0","-","-","-","-"
"1541","succeedsWhenConstraintsMet","@Test
    void succeedsWhenConstraintsMet()","0","-","-","-","-"
"1542","notNullFailsWhenAbsent","@Test
    void notNullFailsWhenAbsent()","0","-","-","-","-"
"1543","initialize","@Override
    public void initialize(PortRange constraintAnnotation)","0","-","-","-","-"
"1544","isValid","@Override
    public boolean isValid(Integer value, ConstraintValidatorContext context)","0","-","-","-","-"
"1545","initialize","@Override
    public void initialize(OneOf constraintAnnotation)","0","-","-","-","-"
"1546","isValid","@Override
    public boolean isValid(Object value, ConstraintValidatorContext context)","0","-","-","-","-"
"1547","initialize","@Override
    public void initialize(MaxDataSize constraintAnnotation)","0","-","-","-","-"
"1548","isValid","@Override
    public boolean isValid(DataSize value, ConstraintValidatorContext context)","0","-","-","-","-"
"1549","isValid","@Override
    public boolean isValid(Boolean value, ConstraintValidatorContext context)","0","-","-","-","-"
"1550","InterpolationHelper","private InterpolationHelper()","0","-","-","-","-"
"1551","escapeMessageParameter","/**
     * Escapes a string with the","0","-","-","-","-"
"1552","initialize","@Override
    public void initialize(MinDuration constraintAnnotation)","0","-","-","-","-"
"1553","isValid","@Override
    public boolean isValid(Duration value, ConstraintValidatorContext context)","0","-","-","-","-"
"1554","ConstraintViolations","private ConstraintViolations()","0","-","-","-","-"
"1555","format","/**
     * Computes a string representation from a","0","-","-","-","-"
"1556","format","/**
     * Computes a set of formatted messages from the given typed set of","0","-","-","-","-"
"1557","formatUntyped","/**
     * Computes a set of formatted messages from the given untyped set of","0","-","-","-","-"
"1558","copyOf","/**
     * Copies a set of","0","-","-","-","-"
"1559","initialize","@Override
    public void initialize(MinDataSize constraintAnnotation)","0","-","-","-","-"
"1560","isValid","@Override
    public boolean isValid(DataSize value, ConstraintValidatorContext context)","0","-","-","-","-"
"1561","SelfValidatingValidator","/**
     * Constructs a new","0","-","-","-","-"
"1562","SelfValidatingValidator","SelfValidatingValidator(Logger logger)","0","-","-","-","-"
"1563","isValid","@SuppressWarnings(","0","-","-","-","-"
"1564","findMethods","/**
     * This method generates <code>ValidationCaller</code>s for each method annotated
     * with <code>@SelfValidation</code> that adheres to required signature.
     */
    @SuppressWarnings(","0","-","-","-","-"
"1565","isValidationMethod","private boolean isValidationMethod(ResolvedMethod m)","0","-","-","-","-"
"1566","isMethodCorrect","boolean isMethodCorrect(ResolvedMethod m)","0","-","-","-","-"
"1567","ProxyValidationCaller","ProxyValidationCaller(Class<T> cls, ResolvedMethod resolvedMethod)","0","-","-","-","-"
"1568","call","@Override
        public void call(ViolationCollector vc)","0","-","-","-","-"
"1569","ViolationCollector","/**
     * Constructs a new","0","-","-","-","-"
"1570","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1571","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1572","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1573","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1574","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1575","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1576","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1577","addViolation","/**
     * Adds a new violation to this collector. This also sets","0","-","-","-","-"
"1578","getContextWithMessageParameters","/**
     * Returns a","0","-","-","-","-"
"1579","getContext","/**
     * This method returns the wrapped context for raw access to the validation framework. If you use
     * the context to add violations make sure to call <code>setViolationOccurred(true)</code>.
     *
     * @return the wrapped Hibernate ConstraintValidatorContext
     */
    public ConstraintValidatorContext getContext()","0","-","-","-","-"
"1580","hasViolationOccurred","/**
     * Returns, if a violation has previously occurred.
     *
     * @return if any violation was collected
     */
    public boolean hasViolationOccurred()","0","-","-","-","-"
"1581","setViolationOccurred","/**
     * Manually sets if a violation occurred. This is automatically set if <code>addViolation</code> is called.
     *
     * @param violationOccurred if any violation was collected
     */
    public void setViolationOccurred(boolean violationOccurred)","0","-","-","-","-"
"1582","setValidationObject","/**
     * Sets the validation object variable.
     *
     * @param obj the new validation object
     */
    public void setValidationObject(T obj)","0","-","-","-","-"
"1583","getValidationObject","/**
     * Gets the validation object.
     *
     * @return the validation object
     */
    @Nullable
    public T getValidationObject()","0","-","-","-","-"
"1584","call","/**
     * This method is intended to call a validation methods on the validation object.
     *
     * @param vc the","0","-","-","-","-"
"1585","initialize","@Override
    public void initialize(MaxDuration constraintAnnotation)","0","-","-","-","-"
"1586","isValid","@Override
    public boolean isValid(Duration value, ConstraintValidatorContext context)","0","-","-","-","-"
"1587","GuavaOptionalValueExtractor","private GuavaOptionalValueExtractor()","0","-","-","-","-"
"1588","extractValues","@Override
    public void extractValues(Optional<?> originalValue, ValueExtractor.ValueReceiver receiver)","0","-","-","-","-"
"1589","BaseValidator","private BaseValidator()","0","-","-","-","-"
"1590","newValidator","/**
     * Creates a new","0","-","-","-","-"
"1591","newConfiguration","/**
     * Creates a new","0","-","-","-","-"
"1592","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1593","hasADefaultPath","@Test
    void hasADefaultPath()","0","-","-","-","-"
"1594","canHaveCustomPaths","@Test
    void canHaveCustomPaths()","0","-","-","-","-"
"1595","canHaveDifferentUriAndResourcePaths","@Test
    void canHaveDifferentUriAndResourcePaths()","0","-","-","-","-"
"1596","canSupportDifferentAssetsBundleName","@Test
    void canSupportDifferentAssetsBundleName()","0","-","-","-","-"
"1597","canHaveDifferentUriAndResourcePathsAndIndexFilename","@Test
    void canHaveDifferentUriAndResourcePathsAndIndexFilename()","0","-","-","-","-"
"1598","canHaveDifferentDefaultMediaType","@Test
    void canHaveDifferentDefaultMediaType()","0","-","-","-","-"
"1599","normalize","private URL normalize(String path)","0","-","-","-","-"
"1600","runBundle","private void runBundle(AssetsBundle bundle)","0","-","-","-","-"
"1601","runBundle","private void runBundle(AssetsBundle bundle, String assetName)","0","-","-","-","-"
"1602","AssetsBundle","/**
     * Creates a new AssetsBundle which serves up static assets from
     *","0","-","-","-","-"
"1603","AssetsBundle","/**
     * Creates a new AssetsBundle which will configure the application to serve the static files
     * located in","0","-","-","-","-"
"1604","AssetsBundle","/**
     * Creates a new AssetsBundle which will configure the application to serve the static files
     * located in","0","-","-","-","-"
"1605","AssetsBundle","/**
     * Creates a new AssetsBundle which will configure the application to serve the static files
     * located in","0","-","-","-","-"
"1606","AssetsBundle","/**
     * Creates a new AssetsBundle which will configure the application to serve the static files
     * located in","0","-","-","-","-"
"1607","AssetsBundle","/**
     * Creates a new AssetsBundle which will configure the application to serve the static files
     * located in","0","-","-","-","-"
"1608","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"1609","getResourcePath","public String getResourcePath()","0","-","-","-","-"
"1610","getUriPath","public String getUriPath()","0","-","-","-","-"
"1611","getIndexFile","public String getIndexFile()","0","-","-","-","-"
"1612","getDefaultMediaType","/**
     * @since 2.0
     */
    public String getDefaultMediaType()","0","-","-","-","-"
"1613","createServlet","protected AssetServlet createServlet()","0","-","-","-","-"
"1614","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1615","testOverrideDefaultExceptionMapper","@Test
    void testOverrideDefaultExceptionMapper() throws Exception","0","-","-","-","-"
"1616","toResponse","@Override
        public Response toResponse(JerseyViolationException e)","0","-","-","-","-"
"1617","get","@GET
        public String get(@NotEmpty @QueryParam(""foo"") String foo)","0","-","-","-","-"
"1618","addsATaskServlet","@Test
    void addsATaskServlet() throws Exception","0","-","-","-","-"
"1619","execute","@Override
            public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"1620","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1621","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1622","hasAnApplication","@Test
    void hasAnApplication() throws Exception","0","-","-","-","-"
"1623","hasAnObjectMapper","@Test
    void hasAnObjectMapper() throws Exception","0","-","-","-","-"
"1624","hasHealthCheckRegistry","@Test
    void hasHealthCheckRegistry()","0","-","-","-","-"
"1625","defaultsToUsingFilesForConfiguration","@Test
    void defaultsToUsingFilesForConfiguration() throws Exception","0","-","-","-","-"
"1626","defaultsToUsingTheDefaultClassLoader","@Test
    void defaultsToUsingTheDefaultClassLoader() throws Exception","0","-","-","-","-"
"1627","comesWithJvmInstrumentation","@Test
    void comesWithJvmInstrumentation() throws Exception","0","-","-","-","-"
"1628","defaultsToDefaultConfigurationFactoryFactory","@Test
    void defaultsToDefaultConfigurationFactoryFactory() throws Exception","0","-","-","-","-"
"1629","bringsYourOwnMetricRegistry","@Test
    void bringsYourOwnMetricRegistry()","0","-","-","-","-"
"1630","histogram","@Override
            public Histogram histogram(String name)","0","-","-","-","-"
"1631","allowsAccessToJmxReporter","@Test
    void allowsAccessToJmxReporter()","0","-","-","-","-"
"1632","canUseCustomValidatorFactory","@Test
    void canUseCustomValidatorFactory() throws Exception","0","-","-","-","-"
"1633","canUseCustomObjectMapper","@Test
    void canUseCustomObjectMapper()","0","-","-","-","-"
"1634","canUseCustomHealthCheckRegistry","@Test
    void canUseCustomHealthCheckRegistry()","0","-","-","-","-"
"1635","hasAnHttpConfiguration","@Test
    void hasAnHttpConfiguration() throws Exception","0","-","-","-","-"
"1636","hasALoggingConfiguration","@Test
    void hasALoggingConfiguration() throws Exception","0","-","-","-","-"
"1637","ensureConfigSerializable","@Test
    void ensureConfigSerializable() throws Exception","0","-","-","-","-"
"1638","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1639","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"1640","testGetAdminContext","@Test
    void testGetAdminContext()","0","-","-","-","-"
"1641","testGetApplicationContext","@Test
    void testGetApplicationContext()","0","-","-","-","-"
"1642","testGetPort","@Test
    void testGetPort()","0","-","-","-","-"
"1643","testBuild","@Test
    void testBuild() throws Exception","0","-","-","-","-"
"1644","testConfiguredEnvironment","@Test
    void testConfiguredEnvironment()","0","-","-","-","-"
"1645","testDeserializeWithoutJsonAutoDetect","@Test
    void testDeserializeWithoutJsonAutoDetect() throws ConfigurationException, IOException","0","-","-","-","-"
"1646","httpRequest","public static String httpRequest(String requestMethod, String url) throws Exception","0","-","-","-","-"
"1647","get","@GET
        public String get() throws Exception","0","-","-","-","-"
"1648","TestTask","public TestTask()","0","-","-","-","-"
"1649","execute","@Override
        public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"1650","before","@BeforeEach
    void before()","0","-","-","-","-"
"1651","usesYamlDefinedPattern","@Test
    void usesYamlDefinedPattern()","0","-","-","-","-"
"1652","usesRunDefinedPatternWhenNoYaml","@Test
    void usesRunDefinedPatternWhenNoYaml()","0","-","-","-","-"
"1653","usesDefaultPatternWhenNoneSet","@Test
    void usesDefaultPatternWhenNoneSet()","0","-","-","-","-"
"1654","usesDefaultResponseMeteredLevelWhenNotSet","@Test
    void usesDefaultResponseMeteredLevelWhenNotSet()","0","-","-","-","-"
"1655","usesDefaultMetricPrefixWhenNotSet","@Test
    void usesDefaultMetricPrefixWhenNotSet()","0","-","-","-","-"
"1656","build","@Override
        public Server build(Environment environment)","0","-","-","-","-"
"1657","configure","@Override
        public void configure(Environment environment)","0","-","-","-","-"
"1658","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1659","loadsGzipConfig","@Test
    void loadsGzipConfig()","0","-","-","-","-"
"1660","loadsServerPushConfig","@Test
    void loadsServerPushConfig()","0","-","-","-","-"
"1661","hasAMaximumNumberOfThreads","@Test
    void hasAMaximumNumberOfThreads()","0","-","-","-","-"
"1662","hasAMinimumNumberOfThreads","@Test
    void hasAMinimumNumberOfThreads()","0","-","-","-","-"
"1663","hasResponseMeteredLevel","@Test
    void hasResponseMeteredLevel()","0","-","-","-","-"
"1664","hasMetricPrefix","@Test
    void hasMetricPrefix()","0","-","-","-","-"
"1665","hasApplicationContextPath","@Test
    void hasApplicationContextPath()","0","-","-","-","-"
"1666","hasAdminContextPath","@Test
    void hasAdminContextPath()","0","-","-","-","-"
"1667","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"1668","registersDefaultExceptionMappers","@Test
    void registersDefaultExceptionMappers()","0","-","-","-","-"
"1669","doesNotDefaultExceptionMappers","@Test
    void doesNotDefaultExceptionMappers()","0","-","-","-","-"
"1670","defaultsDumpAfterStartFalse","@Test
    void defaultsDumpAfterStartFalse()","0","-","-","-","-"
"1671","defaultsDumpBeforeStopFalse","@Test
    void defaultsDumpBeforeStopFalse()","0","-","-","-","-"
"1672","configuresDumpAfterStart","@Test
    void configuresDumpAfterStart()","0","-","-","-","-"
"1673","configuresDumpBeforeExit","@Test
    void configuresDumpBeforeExit()","0","-","-","-","-"
"1674","defaultsDetailedJsonProcessingExceptionToFalse","@Test
    void defaultsDetailedJsonProcessingExceptionToFalse()","0","-","-","-","-"
"1675","doesNotDefaultDetailedJsonProcessingExceptionToFalse","@Test
    void doesNotDefaultDetailedJsonProcessingExceptionToFalse()","0","-","-","-","-"
"1676","testGracefulShutdown","@Test
    void testGracefulShutdown() throws Exception","0","-","-","-","-"
"1677","testConfiguredEnvironment","@Test
    void testConfiguredEnvironment()","0","-","-","-","-"
"1678","testDeserializeWithoutJsonAutoDetect","@Test
    void testDeserializeWithoutJsonAutoDetect() throws ConfigurationException, IOException","0","-","-","-","-"
"1679","TestResource","public TestResource(CountDownLatch requestReceived, CountDownLatch shutdownInvoked)","0","-","-","-","-"
"1680","get","@GET
        public String get() throws Exception","0","-","-","-","-"
"1681","reloadingNothingSucceeds","@Test
    void reloadingNothingSucceeds()","0","-","-","-","-"
"1682","failingDryRunSkipsAll","@Test
    void failingDryRunSkipsAll() throws Exception","0","-","-","-","-"
"1683","reloadsMultiple","@Test
    void reloadsMultiple() throws Exception","0","-","-","-","-"
"1684","TestCommand","protected TestCommand()","0","-","-","-","-"
"1685","configure","@Override
        public void configure(Subparser subparser)","0","-","-","-","-"
"1686","run","@Override
        public void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception","0","-","-","-","-"
"1687","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1688","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1689","listHelpOnceOnArgumentOmission","@Test
    void listHelpOnceOnArgumentOmission() throws Exception","0","-","-","-","-"
"1690","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1691","doStop","@Override
        protected void doStop() throws Exception","0","-","-","-","-"
"1692","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1693","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"1694","hasAName","@Test
    void hasAName()","0","-","-","-","-"
"1695","hasADescription","@Test
    void hasADescription()","0","-","-","-","-"
"1696","hasTheApplicationsConfigurationClass","@Test
    void hasTheApplicationsConfigurationClass()","0","-","-","-","-"
"1697","buildsAndRunsAConfiguredServer","@Test
    void buildsAndRunsAConfiguredServer() throws Exception","0","-","-","-","-"
"1698","stopsAServerIfThereIsAnErrorStartingIt","@Test
    void stopsAServerIfThereIsAnErrorStartingIt()","0","-","-","-","-"
"1699","doStart","@Override
            protected void doStart() throws Exception","0","-","-","-","-"
"1700","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1701","hasAName","@Test
    void hasAName()","0","-","-","-","-"
"1702","hasADescription","@Test
    void hasADescription()","0","-","-","-","-"
"1703","doesNotInteractWithAnything","@Test
    void doesNotInteractWithAnything() throws Exception","0","-","-","-","-"
"1704","TestCommand","protected TestCommand()","0","-","-","-","-"
"1705","run","@Override
        protected void run(Bootstrap<Configuration> bootstrap, Namespace namespace, Configuration configuration) throws Exception","0","-","-","-","-"
"1706","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1707","canUseCustomConfigurationFactory","@SuppressWarnings(""unchecked"")
    @Test
    void canUseCustomConfigurationFactory() throws Exception","0","-","-","-","-"
"1708","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1709","BadAppException","BadAppException()","0","-","-","-","-"
"1710","printStackTrace","@Override
        public void printStackTrace(PrintWriter writer)","0","-","-","-","-"
"1711","equals","@Override
        public boolean equals(Object o)","0","-","-","-","-"
"1712","hashCode","@Override
        public int hashCode()","0","-","-","-","-"
"1713","CustomCommand","CustomCommand()","0","-","-","-","-"
"1714","configure","@Override
        public void configure(Subparser subparser)","0","-","-","-","-"
"1715","run","@Override
        public void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception","0","-","-","-","-"
"1716","onError","@Override
        public void onError(Cli cli, Namespace namespace, Throwable e)","0","-","-","-","-"
"1717","init","@BeforeAll
    static void init()","0","-","-","-","-"
"1718","shutdown","@AfterAll
    static void shutdown()","0","-","-","-","-"
"1719","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1720","handlesShortVersionCommands","@Test
    void handlesShortVersionCommands() throws Exception","0","-","-","-","-"
"1721","handlesLongVersionCommands","@Test
    void handlesLongVersionCommands() throws Exception","0","-","-","-","-"
"1722","handlesMissingVersions","@Test
    void handlesMissingVersions() throws Exception","0","-","-","-","-"
"1723","handlesZeroArgumentsAsHelpCommand","@Test
    void handlesZeroArgumentsAsHelpCommand() throws Exception","0","-","-","-","-"
"1724","handlesShortHelpCommands","@Test
    void handlesShortHelpCommands() throws Exception","0","-","-","-","-"
"1725","handlesLongHelpCommands","@Test
    void handlesLongHelpCommands() throws Exception","0","-","-","-","-"
"1726","handlesShortHelpSubcommands","@Test
    void handlesShortHelpSubcommands() throws Exception","0","-","-","-","-"
"1727","handlesLongHelpSubcommands","@Test
    void handlesLongHelpSubcommands() throws Exception","0","-","-","-","-"
"1728","rejectsBadCommandFlags","@Test
    void rejectsBadCommandFlags() throws Exception","0","-","-","-","-"
"1729","rejectsBadSubcommandFlags","@Test
    void rejectsBadSubcommandFlags() throws Exception","0","-","-","-","-"
"1730","rejectsBadSubcommands","@Test
    void rejectsBadSubcommands() throws Exception","0","-","-","-","-"
"1731","runsCommands","@Test
    void runsCommands() throws Exception","0","-","-","-","-"
"1732","unhandledExceptionsMessagesArePrintedForCheck","@Test
    void unhandledExceptionsMessagesArePrintedForCheck() throws Exception","0","-","-","-","-"
"1733","unhandledExceptionsCustomCommand","@Test
    void unhandledExceptionsCustomCommand() throws Exception","0","-","-","-","-"
"1734","unhandledExceptionsCustomCommandDebug","@Test
    void unhandledExceptionsCustomCommandDebug() throws Exception","0","-","-","-","-"
"1735","ApiCommand","protected ApiCommand(final Application<Configuration> application)","0","-","-","-","-"
"1736","initialize","@Override
        public void initialize(final Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"1737","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"1738","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"1739","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"1740","hasAName","@Test
    void hasAName() throws Exception","0","-","-","-","-"
"1741","hasADescription","@Test
    void hasADescription() throws Exception","0","-","-","-","-"
"1742","buildsAndRunsAConfiguredServer","@Test
    void buildsAndRunsAConfiguredServer() throws Exception","0","-","-","-","-"
"1743","usesDefaultConfigPath","@Test
    void usesDefaultConfigPath() throws Exception","0","-","-","-","-"
"1744","build","@Override
            public Configuration build(final ConfigurationSourceProvider provider, final String path)","0","-","-","-","-"
"1745","build","@Override
            public Configuration build()","0","-","-","-","-"
"1746","run","@Override
            protected void run(final Bootstrap<Configuration> bootstrap, final Namespace namespace, final Configuration configuration)","0","-","-","-","-"
"1747","addFileArgument","@Override
            protected Argument addFileArgument(final Subparser subparser)","0","-","-","-","-"
"1748","run","@Override
        public void run(FakeConfiguration configuration, Environment environment)","0","-","-","-","-"
"1749","onFatalError","@Override
        protected void onFatalError(Throwable throwable)","0","-","-","-","-"
"1750","WrapperApplication","private WrapperApplication(Application<C> application)","0","-","-","-","-"
"1751","initialize","@Override
        public void initialize(Bootstrap<C> bootstrap)","0","-","-","-","-"
"1752","run","@Override
        public void run(C configuration, Environment environment) throws Exception","0","-","-","-","-"
"1753","hasAReferenceToItsTypeParameter","@Test
    void hasAReferenceToItsTypeParameter() throws Exception","0","-","-","-","-"
"1754","canDetermineConfiguration","@Test
    void canDetermineConfiguration() throws Exception","0","-","-","-","-"
"1755","canDetermineWrappedConfiguration","@Test
    void canDetermineWrappedConfiguration() throws Exception","0","-","-","-","-"
"1756","exitWithFatalErrorWhenCommandFails","@Test
    void exitWithFatalErrorWhenCommandFails() throws Exception","0","-","-","-","-"
"1757","virtualThreadsEnabledWhenRequested","@Test
    void virtualThreadsEnabledWhenRequested() throws Exception","0","-","-","-","-"
"1758","virtualThreadsDisabledWhenNotRequested","@Test
    void virtualThreadsDisabledWhenNotRequested() throws Exception","0","-","-","-","-"
"1759","virtualAdminThreadsEnabledWhenRequested","@Test
    void virtualAdminThreadsEnabledWhenRequested() throws Exception","0","-","-","-","-"
"1760","virtualAdminThreadsDisabledWhenNotRequested","@Test
    void virtualAdminThreadsDisabledWhenNotRequested() throws Exception","0","-","-","-","-"
"1761","probeVirtualThread","private boolean probeVirtualThread(Consumer<DefaultServerFactory> defaultServerFactoryConsumer,
                                       Function<Server, ThreadPool> threadPoolSelector) throws Exception","0","-","-","-","-"
"1762","selectServerThreadPool","private ThreadPool selectServerThreadPool(Server server)","0","-","-","-","-"
"1763","selectAdminThreadPool","private ThreadPool selectAdminThreadPool(Server server)","0","-","-","-","-"
"1764","initialize","@Override
        public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"1765","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"1766","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"1767","shouldReplaceValidatorFactory","@Test
    void shouldReplaceValidatorFactory()","0","-","-","-","-"
"1768","shouldValidateNormally","@Test
    void shouldValidateNormally()","0","-","-","-","-"
"1769","shouldInvokeUpdatedFactory","@Test
    void shouldInvokeUpdatedFactory()","0","-","-","-","-"
"1770","Bean","Bean(int value)","0","-","-","-","-"
"1771","Application","protected Application()","0","-","-","-","-"
"1772","bootstrapLogLevel","/**
     * The log level at which to bootstrap logging on application startup.
     */
    protected Level bootstrapLogLevel()","0","-","-","-","-"
"1773","bootstrapLogging","protected void bootstrapLogging()","0","-","-","-","-"
"1774","getConfigurationClass","/**
     * Returns the","0","-","-","-","-"
"1775","getName","/**
     * Returns the name of the application.
     *
     * @return the application's name
     */
    public String getName()","0","-","-","-","-"
"1776","initialize","/**
     * Initializes the application bootstrap.
     *
     * @param bootstrap the application bootstrap
     */
    public void initialize(Bootstrap<T> bootstrap)","0","-","-","-","-"
"1777","run","/**
     * When the application runs, this is called after the","0","-","-","-","-"
"1778","run","/**
     * Parses command-line arguments and runs the application. Call this method from a","0","-","-","-","-"
"1779","addDefaultCommands","/**
     * Called by","0","-","-","-","-"
"1780","onFatalError","/**
     * Called by","0","-","-","-","-"
"1781","getServerFactory","/**
     * Returns the server-specific section of the configuration file.
     *
     * @return server-specific configuration parameters
     */
    @JsonProperty(""server"")
    public ServerFactory getServerFactory()","0","-","-","-","-"
"1782","setServerFactory","/**
     * Sets the HTTP-specific section of the configuration file.
     */
    @JsonProperty(""server"")
    public void setServerFactory(ServerFactory factory)","0","-","-","-","-"
"1783","getLoggingFactory","/**
     * Returns the logging-specific section of the configuration file.
     *
     * @return logging-specific configuration parameters
     */
    @JsonProperty(""logging"")
    public synchronized LoggingFactory getLoggingFactory()","0","-","-","-","-"
"1784","setLoggingFactory","/**
     * Sets the logging-specific section of the configuration file.
     */
    @JsonProperty(""logging"")
    public synchronized void setLoggingFactory(LoggingFactory factory)","0","-","-","-","-"
"1785","getMetricsFactory","@JsonProperty(""metrics"")
    public MetricsFactory getMetricsFactory()","0","-","-","-","-"
"1786","setMetricsFactory","@JsonProperty(""metrics"")
    public void setMetricsFactory(MetricsFactory metrics)","0","-","-","-","-"
"1787","getAdminFactory","/**
     * Returns the admin interface-specific section of the configuration file.
     *
     * @return admin interface-specific configuration parameters
     * @since 2.0
     */
    @JsonProperty(""admin"")
    public AdminFactory getAdminFactory()","0","-","-","-","-"
"1788","setAdminFactory","/**
     * Sets the admin interface-specific section of the configuration file.
     *
     * @since 2.0
     */
    @JsonProperty(""admin"")
    public void setAdminFactory(AdminFactory admin)","0","-","-","-","-"
"1789","getHealthFactory","/**
     * Returns the health interface-specific section of the configuration file.
     *
     * @return health interface-specific configuration parameters
     * @since 2.1
     */
    @JsonProperty(""health"")
    public Optional<HealthFactory> getHealthFactory()","0","-","-","-","-"
"1790","setHealthFactory","/**
     * Sets the health interface-specific section of the configuration file.
     *
     * @since 2.1
     */
    @JsonProperty(""health"")
    public void setHealthFactory(HealthFactory health)","0","-","-","-","-"
"1791","toString","@Override
    public String toString()","0","-","-","-","-"
"1792","Bootstrap","/**
     * Creates a new","0","-","-","-","-"
"1793","registerMetrics","/**
     * Registers the JVM metrics to the metric registry and start to report
     * the registry metrics via JMX.
     */
    public void registerMetrics()","0","-","-","-","-"
"1794","getJmxReporter","/**
     * Returns the","0","-","-","-","-"
"1795","getApplication","/**
     * Returns the bootstrap's","0","-","-","-","-"
"1796","getConfigurationSourceProvider","/**
     * Returns the bootstrap's","0","-","-","-","-"
"1797","setConfigurationSourceProvider","/**
     * Sets the bootstrap's","0","-","-","-","-"
"1798","getClassLoader","/**
     * Returns the bootstrap's class loader.
     */
    public ClassLoader getClassLoader()","0","-","-","-","-"
"1799","setClassLoader","/**
     * Sets the bootstrap's class loader.
     */
    public void setClassLoader(ClassLoader classLoader)","0","-","-","-","-"
"1800","addBundle","/**
     * Adds the given bundle to the bootstrap.
     *
     * @param bundle a","0","-","-","-","-"
"1801","addCommand","/**
     * Adds the given command to the bootstrap.
     *
     * @param command a","0","-","-","-","-"
"1802","addCommand","/**
     * Adds the given command to the bootstrap.
     *
     * @param command a","0","-","-","-","-"
"1803","getObjectMapper","/**
     * Returns the bootstrap's","0","-","-","-","-"
"1804","setObjectMapper","/**
     * Sets the given","0","-","-","-","-"
"1805","run","/**
     * Runs the bootstrap's bundles with the given configuration and environment.
     *
     * @param configuration the parsed configuration
     * @param environment   the application environment
     * @throws Exception if a bundle throws an exception
     */
    public void run(T configuration, Environment environment) throws Exception","0","-","-","-","-"
"1806","getCommands","/**
     * Returns the application's commands.
     */
    public List<Command> getCommands()","0","-","-","-","-"
"1807","getMetricRegistry","/**
     * Returns the application metrics.
     */
    public MetricRegistry getMetricRegistry()","0","-","-","-","-"
"1808","setMetricRegistry","/**
     * Sets a custom registry for the application metrics.
     *
     * @param metricRegistry a custom metric registry
     */
    public void setMetricRegistry(MetricRegistry metricRegistry)","0","-","-","-","-"
"1809","getValidatorFactory","/**
     * Returns the application's validator factory.
     */
    public ValidatorFactory getValidatorFactory()","0","-","-","-","-"
"1810","setValidatorFactory","public void setValidatorFactory(ValidatorFactory validatorFactory)","0","-","-","-","-"
"1811","getConfigurationFactoryFactory","public ConfigurationFactoryFactory<T> getConfigurationFactoryFactory()","0","-","-","-","-"
"1812","setConfigurationFactoryFactory","public void setConfigurationFactoryFactory(ConfigurationFactoryFactory<T> configurationFactoryFactory)","0","-","-","-","-"
"1813","getHealthCheckRegistry","/**
     * returns the health check registry
     */
    public HealthCheckRegistry getHealthCheckRegistry()","0","-","-","-","-"
"1814","setHealthCheckRegistry","public void setHealthCheckRegistry(HealthCheckRegistry healthCheckRegistry)","0","-","-","-","-"
"1815","isServletEnabled","@JsonProperty(""servletEnabled"")
    public boolean isServletEnabled()","0","-","-","-","-"
"1816","setServletEnabled","@JsonProperty(""servletEnabled"")
    public void setServletEnabled(boolean servletEnabled)","0","-","-","-","-"
"1817","getMinThreads","@JsonProperty(""minThreads"")
    public int getMinThreads()","0","-","-","-","-"
"1818","setMinThreads","@JsonProperty(""minThreads"")
    public void setMinThreads(int minThreads)","0","-","-","-","-"
"1819","getMaxThreads","@JsonProperty(""maxThreads"")
    public int getMaxThreads()","0","-","-","-","-"
"1820","setMaxThreads","@JsonProperty(""maxThreads"")
    public void setMaxThreads(int maxThreads)","0","-","-","-","-"
"1821","getWorkQueueSize","@JsonProperty(""workQueueSize"")
    public int getWorkQueueSize()","0","-","-","-","-"
"1822","setWorkQueueSize","@JsonProperty(""workQueueSize"")
    public void setWorkQueueSize(int workQueueSize)","0","-","-","-","-"
"1823","toString","@Override
    public String toString()","0","-","-","-","-"
"1824","Environment","/**
     * Creates a new environment.
     *
     * @param name                the name of the application
     * @param objectMapper the","0","-","-","-","-"
"1825","Environment","/**
     * Creates an environment with the system classloader, default object mapper, default validator factory,
     * default health check registry, and default configuration for tests.
     *
     * @since 2.0
     */
    public Environment(String name)","0","-","-","-","-"
"1826","jersey","/**
     * Returns the application's","0","-","-","-","-"
"1827","getHealthCheckExecutorService","/**
     * Returns an","0","-","-","-","-"
"1828","admin","/**
     * Returns the application's","0","-","-","-","-"
"1829","lifecycle","/**
     * Returns the application's","0","-","-","-","-"
"1830","servlets","/**
     * Returns the application's","0","-","-","-","-"
"1831","health","/**
     * Returns the application's","0","-","-","-","-"
"1832","getObjectMapper","/**
     * Returns the application's","0","-","-","-","-"
"1833","getName","/**
     * Returns the application's name.
     */
    public String getName()","0","-","-","-","-"
"1834","getValidator","/**
     * Returns the application's","0","-","-","-","-"
"1835","setValidator","/**
     * Sets the application's","0","-","-","-","-"
"1836","metrics","/**
     * Returns the application's","0","-","-","-","-"
"1837","healthChecks","/**
     * Returns the application's","0","-","-","-","-"
"1838","getApplicationContext","public MutableServletContextHandler getApplicationContext()","0","-","-","-","-"
"1839","getJerseyServletContainer","@Nullable
    public Servlet getJerseyServletContainer()","0","-","-","-","-"
"1840","getAdminContext","public MutableServletContextHandler getAdminContext()","0","-","-","-","-"
"1841","ExceptionMapperBinder","public ExceptionMapperBinder(boolean showDetails)","0","-","-","-","-"
"1842","configure","@Override
    protected void configure()","0","-","-","-","-"
"1843","isShowDetails","public boolean isShowDetails()","0","-","-","-","-"
"1844","AdminEnvironment","/**
     * Creates a new","0","-","-","-","-"
"1845","lifeCycleStarting","@Override
            public void lifeCycleStarting(LifeCycle event)","0","-","-","-","-"
"1846","addTask","/**
     * Adds the given task to the set of tasks exposed via the admin interface.
     *
     * @param task a task
     */
    public void addTask(Task task)","0","-","-","-","-"
"1847","logTasks","private void logTasks()","0","-","-","-","-"
"1848","firstNonNull","private static <T> T firstNonNull(T first, T second)","0","-","-","-","-"
"1849","logHealthChecks","@SuppressWarnings(""Slf4jFormatShouldBeConst"")
    private void logHealthChecks()","0","-","-","-","-"
"1850","isHealthCheckServletEnabled","public boolean isHealthCheckServletEnabled()","0","-","-","-","-"
"1851","getHealthChecks","@JsonProperty(""healthChecks"")
    public HealthCheckConfiguration getHealthChecks()","0","-","-","-","-"
"1852","setHealthChecks","@JsonProperty(""healthChecks"")
    public void setHealthChecks(HealthCheckConfiguration healthChecks)","0","-","-","-","-"
"1853","getTasks","@JsonProperty(""tasks"")
    public TaskConfiguration getTasks()","0","-","-","-","-"
"1854","setTasks","@JsonProperty(""tasks"")
    public void setTasks(TaskConfiguration tasks)","0","-","-","-","-"
"1855","toString","@Override
    public String toString()","0","-","-","-","-"
"1856","isThreadPoolSizedCorrectly","@JsonIgnore
    @ValidationMethod(message = ""must have a smaller minThreads than maxThreads"")
    public boolean isThreadPoolSizedCorrectly()","0","-","-","-","-"
"1857","getRequestLogFactory","@JsonProperty(""requestLog"")
    public synchronized RequestLogFactory<?> getRequestLogFactory()","0","-","-","-","-"
"1858","setRequestLogFactory","@JsonProperty(""requestLog"")
    public synchronized void setRequestLogFactory(RequestLogFactory<?> requestLog)","0","-","-","-","-"
"1859","getGzipFilterFactory","@JsonProperty(""gzip"")
    public GzipHandlerFactory getGzipFilterFactory()","0","-","-","-","-"
"1860","setGzipFilterFactory","@JsonProperty(""gzip"")
    public void setGzipFilterFactory(GzipHandlerFactory gzip)","0","-","-","-","-"
"1861","getServerPush","@JsonProperty(""serverPush"")
    public ServerPushFilterFactory getServerPush()","0","-","-","-","-"
"1862","setServerPush","@JsonProperty(""serverPush"")
    public void setServerPush(ServerPushFilterFactory serverPush)","0","-","-","-","-"
"1863","getResponseMeteredLevel","@JsonProperty(""responseMeteredLevel"")
    public ResponseMeteredLevel getResponseMeteredLevel()","0","-","-","-","-"
"1864","getMetricPrefix","@JsonProperty(""metricPrefix"")
    @Nullable
    public String getMetricPrefix()","0","-","-","-","-"
"1865","getMaxThreads","@JsonProperty
    public int getMaxThreads()","0","-","-","-","-"
"1866","setMaxThreads","@JsonProperty
    public void setMaxThreads(int count)","0","-","-","-","-"
"1867","getMinThreads","@JsonProperty
    public int getMinThreads()","0","-","-","-","-"
"1868","setMinThreads","@JsonProperty
    public void setMinThreads(int count)","0","-","-","-","-"
"1869","getMaxQueuedRequests","@JsonProperty
    public int getMaxQueuedRequests()","0","-","-","-","-"
"1870","setMaxQueuedRequests","@JsonProperty
    public void setMaxQueuedRequests(int maxQueuedRequests)","0","-","-","-","-"
"1871","getIdleThreadTimeout","@JsonProperty
    public Duration getIdleThreadTimeout()","0","-","-","-","-"
"1872","setIdleThreadTimeout","@JsonProperty
    public void setIdleThreadTimeout(Duration idleThreadTimeout)","0","-","-","-","-"
"1873","getNofileSoftLimit","@JsonProperty
    @Nullable
    public Integer getNofileSoftLimit()","0","-","-","-","-"
"1874","setNofileSoftLimit","@JsonProperty
    public void setNofileSoftLimit(Integer nofileSoftLimit)","0","-","-","-","-"
"1875","getNofileHardLimit","@JsonProperty
    @Nullable
    public Integer getNofileHardLimit()","0","-","-","-","-"
"1876","setNofileHardLimit","@JsonProperty
    public void setNofileHardLimit(Integer nofileHardLimit)","0","-","-","-","-"
"1877","getGid","@JsonProperty
    @Nullable
    public Integer getGid()","0","-","-","-","-"
"1878","setGid","@JsonProperty
    public void setGid(Integer gid)","0","-","-","-","-"
"1879","getUid","@JsonProperty
    @Nullable
    public Integer getUid()","0","-","-","-","-"
"1880","setUid","@JsonProperty
    public void setUid(Integer uid)","0","-","-","-","-"
"1881","getUser","@JsonProperty
    @Nullable
    public String getUser()","0","-","-","-","-"
"1882","setUser","@JsonProperty
    public void setUser(String user)","0","-","-","-","-"
"1883","getGroup","@JsonProperty
    @Nullable
    public String getGroup()","0","-","-","-","-"
"1884","setGroup","@JsonProperty
    public void setGroup(String group)","0","-","-","-","-"
"1885","getUmask","@JsonProperty
    @Nullable
    public String getUmask()","0","-","-","-","-"
"1886","setUmask","@JsonProperty
    public void setUmask(String umask)","0","-","-","-","-"
"1887","getStartsAsRoot","@JsonProperty
    @Nullable
    public Boolean getStartsAsRoot()","0","-","-","-","-"
"1888","setStartsAsRoot","@JsonProperty
    public void setStartsAsRoot(Boolean startsAsRoot)","0","-","-","-","-"
"1889","getRegisterDefaultExceptionMappers","public Boolean getRegisterDefaultExceptionMappers()","0","-","-","-","-"
"1890","setRegisterDefaultExceptionMappers","@JsonProperty
    public void setRegisterDefaultExceptionMappers(Boolean registerDefaultExceptionMappers)","0","-","-","-","-"
"1891","getDetailedJsonProcessingExceptionMapper","public Boolean getDetailedJsonProcessingExceptionMapper()","0","-","-","-","-"
"1892","setDetailedJsonProcessingExceptionMapper","@JsonProperty
    public void setDetailedJsonProcessingExceptionMapper(Boolean detailedJsonProcessingExceptionMapper)","0","-","-","-","-"
"1893","getShutdownGracePeriod","@JsonProperty
    public Duration getShutdownGracePeriod()","0","-","-","-","-"
"1894","setShutdownGracePeriod","@JsonProperty
    public void setShutdownGracePeriod(Duration shutdownGracePeriod)","0","-","-","-","-"
"1895","getAllowedMethods","@JsonProperty
    public Set<String> getAllowedMethods()","0","-","-","-","-"
"1896","setAllowedMethods","@JsonProperty
    public void setAllowedMethods(Set<String> allowedMethods)","0","-","-","-","-"
"1897","getJerseyRootPath","@JsonProperty(""rootPath"")
    public Optional<String> getJerseyRootPath()","0","-","-","-","-"
"1898","setJerseyRootPath","@JsonProperty(""rootPath"")
    public void setJerseyRootPath(String jerseyRootPath)","0","-","-","-","-"
"1899","getEnableThreadNameFilter","@JsonProperty
    public boolean getEnableThreadNameFilter()","0","-","-","-","-"
"1900","setEnableThreadNameFilter","@JsonProperty
    public void setEnableThreadNameFilter(boolean enableThreadNameFilter)","0","-","-","-","-"
"1901","getDumpAfterStart","/**
     * @since 2.0
     */
    @JsonProperty
    public boolean getDumpAfterStart()","0","-","-","-","-"
"1902","setDumpAfterStart","/**
     * @since 2.0
     */
    @JsonProperty
    public void setDumpAfterStart(boolean dumpAfterStart)","0","-","-","-","-"
"1903","getDumpBeforeStop","/**
     * @since 2.0
     */
    @JsonProperty
    public boolean getDumpBeforeStop()","0","-","-","-","-"
"1904","setDumpBeforeStop","/**
     * @since 2.0
     */
    @JsonProperty
    public void setDumpBeforeStop(boolean dumpBeforeStop)","0","-","-","-","-"
"1905","isEnableVirtualThreads","@JsonProperty
    public boolean isEnableVirtualThreads()","0","-","-","-","-"
"1906","setEnableVirtualThreads","@JsonProperty
    public void setEnableVirtualThreads(boolean enableVirtualThreads)","0","-","-","-","-"
"1907","createAdminServlet","protected Handler createAdminServlet(Server server,
                                         MutableServletContextHandler handler,
                                         MetricRegistry metrics,
                                         HealthCheckRegistry healthChecks,
                                         AdminEnvironment admin)","0","-","-","-","-"
"1908","configureSessionsAndSecurity","private void configureSessionsAndSecurity(MutableServletContextHandler handler, Server server)","0","-","-","-","-"
"1909","createAppServlet","protected Handler createAppServlet(Server server,
                                       JerseyEnvironment jersey,
                                       ObjectMapper objectMapper,
                                       Validator validator,
                                       MutableServletContextHandler handler,
                                       @Nullable Servlet jerseyContainer,
                                       MetricRegistry metricRegistry)","0","-","-","-","-"
"1910","createThreadPool","protected ThreadPool createThreadPool(MetricRegistry metricRegistry)","0","-","-","-","-"
"1911","getVirtualThreadsExecutorService","protected ExecutorService getVirtualThreadsExecutorService()","0","-","-","-","-"
"1912","buildServer","protected Server buildServer(LifecycleEnvironment lifecycle,
                                 ThreadPool threadPool)","0","-","-","-","-"
"1913","buildSetUIDListener","protected SetUIDListener buildSetUIDListener()","0","-","-","-","-"
"1914","addRequestLog","/**
     * @deprecated Jetty 12 removes the","0","-","-","-","-"
"1915","addStatsHandler","/**
     * @deprecated Graceful shutdown isn't performed with the","0","-","-","-","-"
"1916","buildGzipHandler","protected Handler buildGzipHandler(Handler handler)","0","-","-","-","-"
"1917","printBanner","@SuppressWarnings(""Slf4jFormatShouldBeConst"")
    protected void printBanner(String name)","0","-","-","-","-"
"1918","getApplicationConnectors","@JsonProperty
    public List<ConnectorFactory> getApplicationConnectors()","0","-","-","-","-"
"1919","setApplicationConnectors","@JsonProperty
    public void setApplicationConnectors(List<ConnectorFactory> connectors)","0","-","-","-","-"
"1920","getAdminConnectors","@JsonProperty
    public List<ConnectorFactory> getAdminConnectors()","0","-","-","-","-"
"1921","setAdminConnectors","@JsonProperty
    public void setAdminConnectors(List<ConnectorFactory> connectors)","0","-","-","-","-"
"1922","getAdminMaxThreads","@JsonProperty
    public int getAdminMaxThreads()","0","-","-","-","-"
"1923","setAdminMaxThreads","@JsonProperty
    public void setAdminMaxThreads(int adminMaxThreads)","0","-","-","-","-"
"1924","getAdminMinThreads","@JsonProperty
    public int getAdminMinThreads()","0","-","-","-","-"
"1925","setAdminMinThreads","@JsonProperty
    public void setAdminMinThreads(int adminMinThreads)","0","-","-","-","-"
"1926","isEnableAdminVirtualThreads","@JsonProperty
    public boolean isEnableAdminVirtualThreads()","0","-","-","-","-"
"1927","setEnableAdminVirtualThreads","@JsonProperty
    public void setEnableAdminVirtualThreads(boolean enableAdminVirtualThreads)","0","-","-","-","-"
"1928","getApplicationContextPath","@JsonProperty
    public String getApplicationContextPath()","0","-","-","-","-"
"1929","setApplicationContextPath","@JsonProperty
    public void setApplicationContextPath(final String applicationContextPath)","0","-","-","-","-"
"1930","getAdminContextPath","@JsonProperty
    public String getAdminContextPath()","0","-","-","-","-"
"1931","setAdminContextPath","@JsonProperty
    public void setAdminContextPath(final String adminContextPath)","0","-","-","-","-"
"1932","build","@Override
    public Server build(Environment environment)","0","-","-","-","-"
"1933","configure","@Override
    public void configure(Environment environment)","0","-","-","-","-"
"1934","buildRoutingHandler","private RoutingHandler buildRoutingHandler(MetricRegistry metricRegistry,
                                               Server server,
                                               Handler applicationHandler,
                                               Handler adminHandler)","0","-","-","-","-"
"1935","buildAdminConnectors","private List<Connector> buildAdminConnectors(MetricRegistry metricRegistry, Server server)","0","-","-","-","-"
"1936","buildAppConnectors","private List<Connector> buildAppConnectors(MetricRegistry metricRegistry, Server server)","0","-","-","-","-"
"1937","toString","@Override
    public String toString()","0","-","-","-","-"
"1938","build","/**
     * Build a server for the given Dropwizard application.
     *
     * @param environment the application's environment
     * @return a","0","-","-","-","-"
"1939","configure","/**
     * Configures the given environment with settings defined in the factory.
     *
     * @param environment the application's environment
     */
    void configure(Environment environment);","0","-","-","-","-"
"1940","getConnector","@JsonProperty
    public ConnectorFactory getConnector()","0","-","-","-","-"
"1941","setConnector","@JsonProperty
    public void setConnector(ConnectorFactory factory)","0","-","-","-","-"
"1942","getApplicationContextPath","@JsonProperty
    public String getApplicationContextPath()","0","-","-","-","-"
"1943","setApplicationContextPath","@JsonProperty
    public void setApplicationContextPath(String contextPath)","0","-","-","-","-"
"1944","getAdminContextPath","@JsonProperty
    public String getAdminContextPath()","0","-","-","-","-"
"1945","setAdminContextPath","@JsonProperty
    public void setAdminContextPath(String contextPath)","0","-","-","-","-"
"1946","build","@Override
    public Server build(Environment environment)","0","-","-","-","-"
"1947","configure","@Override
    public void configure(Environment environment)","0","-","-","-","-"
"1948","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"1949","lifeCycleStarted","@Override
            public void lifeCycleStarted(LifeCycle event)","0","-","-","-","-"
"1950","getReloaders","private Collection<SslReload> getReloaders(MutableServletContextHandler handler)","0","-","-","-","-"
"1951","SslReloadTask","protected SslReloadTask()","0","-","-","-","-"
"1952","execute","@Override
    public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"1953","getReloaders","public Collection<SslReload> getReloaders()","0","-","-","-","-"
"1954","setReloaders","public void setReloaders(Collection<SslReload> reloader)","0","-","-","-","-"
"1955","ConfiguredCommand","protected ConfiguredCommand(String name, String description)","0","-","-","-","-"
"1956","getConfigurationClass","/**
     * Returns the","0","-","-","-","-"
"1957","getConfiguration","/**
     * Returns the parsed configuration or","0","-","-","-","-"
"1958","configure","/**
     * Configure the command's","0","-","-","-","-"
"1959","addFileArgument","/**
     * Adds the configuration file argument for the configured command.
     * @param subparser The subparser to register the argument on
     * @return the register argument
     */
    protected Argument addFileArgument(Subparser subparser)","0","-","-","-","-"
"1960","run","@Override
    @SuppressWarnings(""unchecked"")
    public void run(Bootstrap<?> wildcardBootstrap, Namespace namespace) throws Exception","0","-","-","-","-"
"1961","cleanupAsynchronously","protected void cleanupAsynchronously()","0","-","-","-","-"
"1962","cleanup","protected void cleanup()","0","-","-","-","-"
"1963","run","/**
     * Runs the command with the given","0","-","-","-","-"
"1964","parseConfiguration","private T parseConfiguration(ConfigurationFactoryFactory<T> configurationFactoryFactory,
                                 ConfigurationSourceProvider provider,
                                 Validator validator,
                                 String path,
                                 Class<T> klass,
                                 ObjectMapper objectMapper) throws IOException, ConfigurationException","0","-","-","-","-"
"1965","Command","/**
     * Create a new command with the given name and description.
     *
     * @param name        the name of the command, used for command line invocation
     * @param description a description of the command's purpose
     */
    protected Command(String name, String description)","0","-","-","-","-"
"1966","getName","/**
     * Returns the command's name.
     *
     * @return the command's name
     */
    public final String getName()","0","-","-","-","-"
"1967","getDescription","/**
     * Returns the command's description.
     *
     * @return the command's description
     */
    public final String getDescription()","0","-","-","-","-"
"1968","configure","/**
     * Configure the command's","0","-","-","-","-"
"1969","run","/**
     * Executes when the user runs this specific command.
     *
     * @param bootstrap the bootstrap
     * @param namespace the parsed command line namespace
     * @throws Exception if something goes wrong
     */
    public abstract void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception;","0","-","-","-","-"
"1970","onError","/**
     * Method is called if there is an issue parsing configuration, setting up the
     * environment, or running the command itself. The default is printing the stacktrace
     * to facilitate debugging, but can be customized per command.
     *
     * @param cli contains the streams for stdout and stderr
     * @param namespace the parsed arguments from the commandline
     * @param e The exception that was thrown when setting up or running the command
     */
    public void onError(Cli cli, Namespace namespace, Throwable e)","0","-","-","-","-"
"1971","ServerCommand","public ServerCommand(Application<T> application)","0","-","-","-","-"
"1972","ServerCommand","/**
     * A constructor to allow reuse of the server command as a different name
     * @param application the application using this command
     * @param name the argument name to invoke this command
     * @param description a summary of what the command does
     */
    protected ServerCommand(final Application<T> application, final String name, final String description)","0","-","-","-","-"
"1973","getConfigurationClass","@Override
    protected Class<T> getConfigurationClass()","0","-","-","-","-"
"1974","run","@Override
    protected void run(Environment environment, Namespace namespace, T configuration) throws Exception","0","-","-","-","-"
"1975","lifeCycleStopped","@Override
        public void lifeCycleStopped(LifeCycle event)","0","-","-","-","-"
"1976","Cli","/**
     * Create a new CLI interface for an application and its bootstrapped environment.
     *
     * @param location     the location of the application
     * @param bootstrap    the bootstrap for the application
     * @param stdOut       standard out
     * @param stdErr       standard err
     */
    public Cli(JarLocation location, Bootstrap<?> bootstrap, OutputStream stdOut, OutputStream stdErr)","0","-","-","-","-"
"1977","run","/**
     * Runs the command line interface given some arguments.
     *
     * @param arguments the command line arguments
     * @return the error or an empty optional if command succeeded
     */
    public Optional<Throwable> run(String... arguments)","0","-","-","-","-"
"1978","isFlag","private static boolean isFlag(String[][] flags, String[] arguments)","0","-","-","-","-"
"1979","buildParser","private ArgumentParser buildParser(JarLocation location)","0","-","-","-","-"
"1980","addHelp","private void addHelp(ArgumentParser p)","0","-","-","-","-"
"1981","addCommand","private void addCommand(Command command)","0","-","-","-","-"
"1982","getStdOut","public PrintWriter getStdOut()","0","-","-","-","-"
"1983","getStdErr","public PrintWriter getStdErr()","0","-","-","-","-"
"1984","SafeHelpAction","SafeHelpAction(PrintWriter out)","0","-","-","-","-"
"1985","run","@Override
        public void run(ArgumentParser parser, Argument arg,
                        Map<String, Object> attrs, String flag, Object value)
                throws ArgumentParserException","0","-","-","-","-"
"1986","consumeArgument","@Override
        public boolean consumeArgument()","0","-","-","-","-"
"1987","onAttach","@Override
        public void onAttach(Argument arg)","0","-","-","-","-"
"1988","CheckCommand","public CheckCommand(Application<T> application)","0","-","-","-","-"
"1989","getConfigurationClass","@Override
    protected Class<T> getConfigurationClass()","0","-","-","-","-"
"1990","run","@Override
    protected void run(Bootstrap<T> bootstrap,
                       Namespace namespace,
                       T configuration) throws Exception","0","-","-","-","-"
"1991","onError","@Override
    public void onError(Cli cli, Namespace namespace, Throwable e)","0","-","-","-","-"
"1992","EnvironmentCommand","/**
     * Creates a new environment command.
     *
     * @param application     the application providing this command
     * @param name        the name of the command, used for command line invocation
     * @param description a description of the command's purpose
     */
    protected EnvironmentCommand(Application<T> application, String name, String description)","0","-","-","-","-"
"1993","getEnvironment","/**
     * Returns the constructed environment or","0","-","-","-","-"
"1994","run","@SuppressWarnings(""NullAway"")
    @Override
    protected void run(Bootstrap<T> bootstrap, Namespace namespace, T configuration) throws Exception","0","-","-","-","-"
"1995","run","/**
     * Runs the command with the given","0","-","-","-","-"
"1996","run","/**
     * Initializes the environment.
     *
     * @param configuration    the configuration object
     * @param environment      the application's","0","-","-","-","-"
"1997","initialize","/**
     * Initializes the application bootstrap.
     *
     * @param bootstrap the application bootstrap
     */
    default void initialize(Bootstrap<?> bootstrap)","0","-","-","-","-"
"1998","InjectValidatorFeature","public InjectValidatorFeature(ValidatorFactory validatorFactory)","0","-","-","-","-"
"1999","configure","@Override
    public boolean configure(FeatureContext context)","0","-","-","-","-"
"2000","testProxyListIsNotSet","@Test
    void testProxyListIsNotSet()","0","-","-","-","-"
"2001","testHostNotInBlackList","@Test
    void testHostNotInBlackList() throws Exception","0","-","-","-","-"
"2002","testPlainHostIsMatched","@Test
    void testPlainHostIsMatched() throws Exception","0","-","-","-","-"
"2003","testHostWithStartWildcardIsMatched","@Test
    void testHostWithStartWildcardIsMatched() throws Exception","0","-","-","-","-"
"2004","testHostWithEndWildcardIsMatched","@Test
    void testHostWithEndWildcardIsMatched() throws Exception","0","-","-","-","-"
"2005","load","private void load(String configLocation) throws Exception","0","-","-","-","-"
"2006","testNoProxy","@Test
    void testNoProxy() throws Exception","0","-","-","-","-"
"2007","testFullConfigBasicProxy","@Test
    void testFullConfigBasicProxy() throws Exception","0","-","-","-","-"
"2008","testFullConfigNtlmProxy","@Test
    void testFullConfigNtlmProxy() throws Exception","0","-","-","-","-"
"2009","testNoScheme","@Test
    void testNoScheme() throws Exception","0","-","-","-","-"
"2010","testNoAuth","@Test
    void testNoAuth() throws Exception","0","-","-","-","-"
"2011","testNoPort","@Test
    void testNoPort() throws Exception","0","-","-","-","-"
"2012","testNoNonProxy","@Test
    void testNoNonProxy() throws Exception","0","-","-","-","-"
"2013","testNoHost","@Test
    void testNoHost()","0","-","-","-","-"
"2014","testBadPort","@Test
    void testBadPort()","0","-","-","-","-"
"2015","testBadScheme","@Test
    void testBadScheme()","0","-","-","-","-"
"2016","testBadAuthUsername","@Test
    void testBadAuthUsername()","0","-","-","-","-"
"2017","testBadPassword","@Test
    void testBadPassword()","0","-","-","-","-"
"2018","testBadAuthScheme","@Test
    void testBadAuthScheme()","0","-","-","-","-"
"2019","testBadCredentialType","@Test
    void testBadCredentialType()","0","-","-","-","-"
"2020","assertConfigurationValidationException","private void assertConfigurationValidationException(String configLocation)","0","-","-","-","-"
"2021","testBasicJerseyClient","@Test
    void testBasicJerseyClient() throws Exception","0","-","-","-","-"
"2022","create","public static AnotherHttpClientBuilder create()","0","-","-","-","-"
"2023","CustomBuilder","public CustomBuilder(MetricRegistry metricRegistry)","0","-","-","-","-"
"2024","CustomBuilder","public CustomBuilder(MetricRegistry metricRegistry, org.apache.hc.client5.http.impl.classic.HttpClientBuilder builder)","0","-","-","-","-"
"2025","createBuilder","@Override
        protected org.apache.hc.client5.http.impl.classic.HttpClientBuilder createBuilder()","0","-","-","-","-"
"2026","createRequestExecutor","@Override
        protected HttpRequestExecutor createRequestExecutor(String name)","0","-","-","-","-"
"2027","customizeBuilder","@Override
        protected org.apache.hc.client5.http.impl.classic.HttpClientBuilder customizeBuilder(
                org.apache.hc.client5.http.impl.classic.HttpClientBuilder builder
        )","0","-","-","-","-"
"2028","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"2029","validate","@AfterEach
    void validate()","0","-","-","-","-"
"2030","setsTheMaximumConnectionPoolSize","@Test
    void setsTheMaximumConnectionPoolSize()","0","-","-","-","-"
"2031","setsTheMaximumRoutePoolSize","@Test
    void setsTheMaximumRoutePoolSize()","0","-","-","-","-"
"2032","setsTheUserAgent","@Test
    void setsTheUserAgent()","0","-","-","-","-"
"2033","canUseACustomDnsResolver","@Test
    void canUseACustomDnsResolver()","0","-","-","-","-"
"2034","usesASystemDnsResolverByDefault","@Test
    void usesASystemDnsResolverByDefault()","0","-","-","-","-"
"2035","canUseACustomHostnameVerifierWhenTlsConfigurationNotSpecified","@Test
    void canUseACustomHostnameVerifierWhenTlsConfigurationNotSpecified()","0","-","-","-","-"
"2036","canUseACustomHostnameVerifierWhenTlsConfigurationSpecified","@Test
    void canUseACustomHostnameVerifierWhenTlsConfigurationSpecified()","0","-","-","-","-"
"2037","canUseASystemHostnameVerifierByDefaultWhenTlsConfigurationNotSpecified","@Test
    void canUseASystemHostnameVerifierByDefaultWhenTlsConfigurationNotSpecified()","0","-","-","-","-"
"2038","canUseASystemHostnameVerifierByDefaultWhenTlsConfigurationSpecified","@Test
    void canUseASystemHostnameVerifierByDefaultWhenTlsConfigurationSpecified()","0","-","-","-","-"
"2039","doesNotReuseConnectionsIfKeepAliveIsZero","@Test
    void doesNotReuseConnectionsIfKeepAliveIsZero()","0","-","-","-","-"
"2040","reusesConnectionsIfKeepAliveIsNonZero","@Test
    void reusesConnectionsIfKeepAliveIsNonZero()","0","-","-","-","-"
"2041","usesKeepAliveForPersistentConnections","@Test
    void usesKeepAliveForPersistentConnections()","0","-","-","-","-"
"2042","usesDefaultForNonPersistentConnections","@Test
    void usesDefaultForNonPersistentConnections()","0","-","-","-","-"
"2043","ignoresCookiesByDefault","@Test
    void ignoresCookiesByDefault()","0","-","-","-","-"
"2044","usesBestMatchCookiePolicyIfCookiesAreEnabled","@Test
    void usesBestMatchCookiePolicyIfCookiesAreEnabled()","0","-","-","-","-"
"2045","setsTheSocketTimeout","@Test
    void setsTheSocketTimeout()","0","-","-","-","-"
"2046","setsTheConnectTimeout","@Test
    void setsTheConnectTimeout()","0","-","-","-","-"
"2047","setsTheConnectionRequestTimeout","@Test
    void setsTheConnectionRequestTimeout()","0","-","-","-","-"
"2048","usesTheDefaultRoutePlanner","@Test
    void usesTheDefaultRoutePlanner()","0","-","-","-","-"
"2049","usesACustomRoutePlanner","@Test
    void usesACustomRoutePlanner()","0","-","-","-","-"
"2050","select","@Override
            public List<Proxy> select(URI uri)","0","-","-","-","-"
"2051","connectFailed","@Override
            public void connectFailed(URI uri, SocketAddress sa, IOException ioe)","0","-","-","-","-"
"2052","usesACustomHttpRequestRetryHandler","@Test
    void usesACustomHttpRequestRetryHandler()","0","-","-","-","-"
"2053","retryRequest","@Override
            public boolean retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)","0","-","-","-","-"
"2054","retryRequest","@Override
            public boolean retryRequest(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2055","getRetryInterval","@Override
            @Nullable
            public TimeValue getRetryInterval(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2056","usesCredentialsProvider","@Test
    void usesCredentialsProvider()","0","-","-","-","-"
"2057","setCredentials","@Override
            public void setCredentials(AuthScope authscope, Credentials credentials)","0","-","-","-","-"
"2058","getCredentials","@Override
            @Nullable
            public Credentials getCredentials(AuthScope authScope, HttpContext context)","0","-","-","-","-"
"2059","clear","@Override
            public void clear()","0","-","-","-","-"
"2060","usesProxy","@Test
    void usesProxy()","0","-","-","-","-"
"2061","usesProxyWithoutPort","@Test
    void usesProxyWithoutPort()","0","-","-","-","-"
"2062","usesProxyWithBasicAuth","@Test
    void usesProxyWithBasicAuth()","0","-","-","-","-"
"2063","usesProxyWithNtlmAuth","@Test
    void usesProxyWithNtlmAuth()","0","-","-","-","-"
"2064","usesProxyWithNonProxyHosts","@Test
    void usesProxyWithNonProxyHosts()","0","-","-","-","-"
"2065","usesProxyWithNonProxyHostsAndTargetDoesNotMatch","@Test
    void usesProxyWithNonProxyHostsAndTargetDoesNotMatch()","0","-","-","-","-"
"2066","usesNoProxy","@Test
    void usesNoProxy()","0","-","-","-","-"
"2067","checkProxy","private CloseableHttpClient checkProxy(HttpClientConfiguration config, HttpHost target,
                                           @Nullable HttpHost expectedProxy)","0","-","-","-","-"
"2068","setValidateAfterInactivityPeriodFromConfiguration","@Test
    void setValidateAfterInactivityPeriodFromConfiguration()","0","-","-","-","-"
"2069","usesACustomHttpClientMetricNameStrategy","@Test
    void usesACustomHttpClientMetricNameStrategy()","0","-","-","-","-"
"2070","usesMethodOnlyHttpClientMetricNameStrategyByDefault","@Test
    void usesMethodOnlyHttpClientMetricNameStrategyByDefault()","0","-","-","-","-"
"2071","exposedConfigIsTheSameAsInternalToTheWrappedHttpClient","@Test
    void exposedConfigIsTheSameAsInternalToTheWrappedHttpClient()","0","-","-","-","-"
"2072","disablesContentCompression","@Test
    void disablesContentCompression()","0","-","-","-","-"
"2073","managedByEnvironment","@Test
    void managedByEnvironment() throws Exception","0","-","-","-","-"
"2074","usesACustomRedirectStrategy","@Test
    void usesACustomRedirectStrategy()","0","-","-","-","-"
"2075","isRedirected","@Override
            public boolean isRedirected(HttpRequest httpRequest,
                                        HttpResponse httpResponse,
                                        HttpContext httpContext)","0","-","-","-","-"
"2076","getLocationURI","@Override
            @Nullable
            public URI getLocationURI(HttpRequest request, HttpResponse response, HttpContext context)","0","-","-","-","-"
"2077","usesDefaultHeaders","@Test
    void usesDefaultHeaders()","0","-","-","-","-"
"2078","usesHttpProcessor","@Test
    void usesHttpProcessor()","0","-","-","-","-"
"2079","allowsCustomBuilderConfiguration","@Test
    void allowsCustomBuilderConfiguration()","0","-","-","-","-"
"2080","buildWithAnotherBuilder","@Test
    void buildWithAnotherBuilder()","0","-","-","-","-"
"2081","configureCredentialReturnsNTCredentialsForNTLMConfig","@Test
    void configureCredentialReturnsNTCredentialsForNTLMConfig()","0","-","-","-","-"
"2082","configureCredentialReturnsUserNamePasswordCredentialsForBasicConfig","@Test
    void configureCredentialReturnsUserNamePasswordCredentialsForBasicConfig()","0","-","-","-","-"
"2083","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"2084","getDefaultRequestConfig_returns_config_provided_at_construction","@Test
    void getDefaultRequestConfig_returns_config_provided_at_construction()","0","-","-","-","-"
"2085","getClient_returns_config_provided_at_construction","@Test
    void getClient_returns_config_provided_at_construction()","0","-","-","-","-"
"2086","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"2087","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"2088","throwsAnExceptionWithoutAnEnvironmentOrAThreadPoolAndObjectMapper","@Test
    void throwsAnExceptionWithoutAnEnvironmentOrAThreadPoolAndObjectMapper()","0","-","-","-","-"
"2089","throwsAnExceptionWithoutAnEnvironmentAndOnlyObjectMapper","@Test
    void throwsAnExceptionWithoutAnEnvironmentAndOnlyObjectMapper()","0","-","-","-","-"
"2090","throwsAnExceptionWithoutAnEnvironmentAndOnlyAThreadPool","@Test
    void throwsAnExceptionWithoutAnEnvironmentAndOnlyAThreadPool()","0","-","-","-","-"
"2091","includesJerseyProperties","@Test
    void includesJerseyProperties()","0","-","-","-","-"
"2092","includesJerseyProviderSingletons","@Test
    void includesJerseyProviderSingletons()","0","-","-","-","-"
"2093","includesJerseyProviderClasses","@Test
    void includesJerseyProviderClasses()","0","-","-","-","-"
"2094","createsAnRxEnabledClient","@Test
    void createsAnRxEnabledClient()","0","-","-","-","-"
"2095","usesTheGivenThreadPool","@Test
    void usesTheGivenThreadPool()","0","-","-","-","-"
"2096","usesTheGivenThreadPoolAndEnvironmentsObjectMapper","@Test
    void usesTheGivenThreadPoolAndEnvironmentsObjectMapper()","0","-","-","-","-"
"2097","createsNewConnectorProvider","@Test
    void createsNewConnectorProvider()","0","-","-","-","-"
"2098","usesSameConnectorProvider","@Test
    void usesSameConnectorProvider()","0","-","-","-","-"
"2099","addBidirectionalGzipSupportIfEnabled","@Test
    void addBidirectionalGzipSupportIfEnabled()","0","-","-","-","-"
"2100","disablesGzipSupportIfDisabled","@Test
    void disablesGzipSupportIfDisabled()","0","-","-","-","-"
"2101","usesAnExecutorServiceFromTheEnvironment","@Test
    @SuppressWarnings(","0","-","-","-","-"
"2102","usesACustomHttpClientMetricNameStrategy","@Test
    void usesACustomHttpClientMetricNameStrategy()","0","-","-","-","-"
"2103","usesACustomHttpRequestRetryHandler","@Test
    void usesACustomHttpRequestRetryHandler()","0","-","-","-","-"
"2104","usesACustomDnsResolver","@Test
    void usesACustomDnsResolver()","0","-","-","-","-"
"2105","usesACustomHostnameVerifier","@Test
    void usesACustomHostnameVerifier()","0","-","-","-","-"
"2106","usesACustomConnectionFactoryRegistry","@Test
    void usesACustomConnectionFactoryRegistry() throws Exception","0","-","-","-","-"
"2107","checkClientTrusted","@Override
                public void checkClientTrusted(X509Certificate[] xcs, String string)","0","-","-","-","-"
"2108","checkServerTrusted","@Override
                public void checkServerTrusted(X509Certificate[] xcs, String string)","0","-","-","-","-"
"2109","getAcceptedIssuers","@Override
                @Nullable
                public X509Certificate @Nullable [] getAcceptedIssuers()","0","-","-","-","-"
"2110","usesACustomEnvironmentName","@Test
    void usesACustomEnvironmentName()","0","-","-","-","-"
"2111","usesACustomHttpRoutePlanner","@Test
    void usesACustomHttpRoutePlanner()","0","-","-","-","-"
"2112","select","@Override
            public List<Proxy> select(URI uri)","0","-","-","-","-"
"2113","connectFailed","@Override
            public void connectFailed(URI uri, SocketAddress sa, IOException ioe)","0","-","-","-","-"
"2114","usesACustomCredentialsProvider","@Test
    void usesACustomCredentialsProvider()","0","-","-","-","-"
"2115","apacheConnectorCanOverridden","@Test
    void apacheConnectorCanOverridden()","0","-","-","-","-"
"2116","createDropwizardApacheConnector","@Override
            protected DropwizardApacheConnector createDropwizardApacheConnector(ConfiguredCloseableHttpClient configuredClient)","0","-","-","-","-"
"2117","getHttpEntity","@Override
                    protected HttpEntity getHttpEntity(ClientRequest jerseyRequest)","0","-","-","-","-"
"2118","isReadable","@Override
        public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"2119","readFrom","@Override
        @Nullable
        public JerseyClientBuilderTest readFrom(Class<JerseyClientBuilderTest> type, Type genericType,
                                                Annotation[] annotations, MediaType mediaType,
                                                MultivaluedMap<String, String> httpHeaders, InputStream entityStream)
            throws WebApplicationException","0","-","-","-","-"
"2120","setup","@BeforeEach
    void setup() throws Exception","0","-","-","-","-"
"2121","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"2122","testChunkedGzipPost","@Test
    void testChunkedGzipPost() throws Exception","0","-","-","-","-"
"2123","testBufferedGzipPost","@Test
    void testBufferedGzipPost()","0","-","-","-","-"
"2124","testChunkedPost","@Test
    void testChunkedPost() throws Exception","0","-","-","-","-"
"2125","testChunkedPostWithoutGzip","@Test
    void testChunkedPostWithoutGzip() throws Exception","0","-","-","-","-"
"2126","testRetryHandler","@Test
    void testRetryHandler() throws Exception","0","-","-","-","-"
"2127","postRequest","private void postRequest(JerseyClientConfiguration configuration)","0","-","-","-","-"
"2128","retryRequest","@Override
                    public boolean retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)","0","-","-","-","-"
"2129","retryRequest","@Override
                    public boolean retryRequest(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2130","getRetryInterval","@Override
                    @Nullable
                    public TimeValue getRetryInterval(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2131","postResponse","private void postResponse(HttpExchange httpExchange) throws IOException","0","-","-","-","-"
"2132","checkBody","private void checkBody(HttpExchange httpExchange, boolean gzip) throws IOException","0","-","-","-","-"
"2133","testGet","@Test
    void testGet()","0","-","-","-","-"
"2134","testSetUserAgent","@Test
    void testSetUserAgent()","0","-","-","-","-"
"2135","testFilterOnAWebTarget","/**
     * Test for ConnectorProvider idempotency
     */
    @Test
    void testFilterOnAWebTarget()","0","-","-","-","-"
"2136","testAsyncWithCustomized","@Test
    void testAsyncWithCustomized() throws Exception","0","-","-","-","-"
"2137","Person","Person(@JsonProperty(""email"") String email, @JsonProperty(""name"") String name)","0","-","-","-","-"
"2138","Credentials","Credentials(@JsonProperty(""id"") long id, @JsonProperty(""token"") String token)","0","-","-","-","-"
"2139","setup","@BeforeEach
    void setup() throws Exception","0","-","-","-","-"
"2140","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"2141","when_no_read_timeout_override_then_client_request_times_out","@Test
    void when_no_read_timeout_override_then_client_request_times_out()","0","-","-","-","-"
"2142","when_read_timeout_override_created_then_client_requests_completes_successfully","@Test
    void when_read_timeout_override_created_then_client_requests_completes_successfully()","0","-","-","-","-"
"2143","connect_timeout_override_changes_how_long_it_takes_for_a_connection_to_timeout","/**
     * <p>In first assertion we prove, that a request takes no longer than:
     * <em>request_time < connect_timeout + error_margin</em> (1)</p>
     * <p/>
     * </p>In the second we show that if we set <b>connect_timeout</b> to
     * <b>set_connect_timeout + increase + error_margin</b> then
     * <em>request_time > connect_timeout + increase + error_margin</em> (2)</p>
     * <p/>
     * <p>Now, (1) and (2) can hold at the same time if then connect_timeout update was successful.</p>
     */
    @Test
    @Disabled(""Flaky, timeout jumps over the threshold"")
    void connect_timeout_override_changes_how_long_it_takes_for_a_connection_to_timeout()","0","-","-","-","-"
"2144","when_no_override_then_redirected_request_successfully_redirected","@Test
    void when_no_override_then_redirected_request_successfully_redirected()","0","-","-","-","-"
"2145","when_configuration_overridden_to_disallow_redirects_temporary_redirect_status_returned","@Test
    void when_configuration_overridden_to_disallow_redirects_temporary_redirect_status_returned()","0","-","-","-","-"
"2146","when_jersey_client_runtime_is_garbage_collected_apache_client_is_not_closed","@Test
    void when_jersey_client_runtime_is_garbage_collected_apache_client_is_not_closed()","0","-","-","-","-"
"2147","multiple_headers_with_the_same_name_are_processed_successfully","@Test
    void multiple_headers_with_the_same_name_are_processed_successfully() throws Exception","0","-","-","-","-"
"2148","getWithSleep","@GET
        @Path(""/long_running"")
        public String getWithSleep() throws InterruptedException","0","-","-","-","-"
"2149","getWithRedirect","@GET
        @Path(""redirect"")
        public Response getWithRedirect()","0","-","-","-","-"
"2150","redirectedGet","@GET
        @Path(""redirected"")
        public String redirectedGet()","0","-","-","-","-"
"2151","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"2152","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2153","check","@Override
                protected Result check()","0","-","-","-","-"
"2154","assertThatConnectionTimeoutFor","private static AbstractLongAssert<?> assertThatConnectionTimeoutFor(WebTarget webTarget)","0","-","-","-","-"
"2155","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"2156","clientIsSetRequestIsNotSet","@Test
    void clientIsSetRequestIsNotSet()","0","-","-","-","-"
"2157","clientIsNotSetRequestIsSet","@Test
    void clientIsNotSetRequestIsSet()","0","-","-","-","-"
"2158","clientIsNotSetRequestIsNotSet","@Test
    void clientIsNotSetRequestIsNotSet()","0","-","-","-","-"
"2159","clientIsSetRequestIsSet","@Test
    void clientIsSetRequestIsSet()","0","-","-","-","-"
"2160","getReturnUserAgentHeader","@GET
        @Path(""user_agent"")
        public String getReturnUserAgentHeader(@HeaderParam(""User-Agent"") String userAgentHeader)","0","-","-","-","-"
"2161","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"2162","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2163","respondOk","@GET
        public Response respondOk()","0","-","-","-","-"
"2164","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"2165","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2166","classTearDown","@AfterAll
    static void classTearDown()","0","-","-","-","-"
"2167","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"2168","configOnlyConstructorShouldSetNullCustomVerifier","@Test
    void configOnlyConstructorShouldSetNullCustomVerifier()","0","-","-","-","-"
"2169","shouldReturn200IfServerCertInTruststore","@Test
    void shouldReturn200IfServerCertInTruststore()","0","-","-","-","-"
"2170","shouldErrorIfServerCertNotFoundInTruststore","@Test
    void shouldErrorIfServerCertNotFoundInTruststore() throws Exception","0","-","-","-","-"
"2171","shouldNotErrorIfServerCertSelfSignedAndSelfSignedCertsAllowed","@Test
    void shouldNotErrorIfServerCertSelfSignedAndSelfSignedCertsAllowed()","0","-","-","-","-"
"2172","shouldErrorIfServerCertSelfSignedAndSelfSignedCertsNotAllowed","@Test
    void shouldErrorIfServerCertSelfSignedAndSelfSignedCertsNotAllowed()","0","-","-","-","-"
"2173","shouldReturn200IfAbleToClientAuth","@Test
    void shouldReturn200IfAbleToClientAuth() throws Exception","0","-","-","-","-"
"2174","shouldErrorIfClientAuthFails","@Test
    void shouldErrorIfClientAuthFails() throws Exception","0","-","-","-","-"
"2175","shouldReturn200IfAbleToClientAuthSpecifyingCertAliasForGoodCert","@Test
    void shouldReturn200IfAbleToClientAuthSpecifyingCertAliasForGoodCert() throws Exception","0","-","-","-","-"
"2176","shouldErrorIfTryToClientAuthSpecifyingCertAliasForBadCert","@Test
    void shouldErrorIfTryToClientAuthSpecifyingCertAliasForBadCert() throws Exception","0","-","-","-","-"
"2177","shouldErrorIfTryToClientAuthSpecifyingUnknownCertAlias","@Test
    void shouldErrorIfTryToClientAuthSpecifyingUnknownCertAlias() throws Exception","0","-","-","-","-"
"2178","shouldErrorIfHostnameVerificationOnAndServerHostnameDoesntMatch","@Test
    void shouldErrorIfHostnameVerificationOnAndServerHostnameDoesntMatch()","0","-","-","-","-"
"2179","shouldErrorIfHostnameVerificationOnAndServerHostnameMatchesAndFailVerifierSpecified","@Test
    void shouldErrorIfHostnameVerificationOnAndServerHostnameMatchesAndFailVerifierSpecified()","0","-","-","-","-"
"2180","shouldBeOkIfHostnameVerificationOnAndServerHostnameDoesntMatchAndNoopVerifierSpecified","@Test
    void shouldBeOkIfHostnameVerificationOnAndServerHostnameDoesntMatchAndNoopVerifierSpecified()","0","-","-","-","-"
"2181","shouldBeOkIfHostnameVerificationOffAndServerHostnameDoesntMatch","@Test
    void shouldBeOkIfHostnameVerificationOffAndServerHostnameDoesntMatch()","0","-","-","-","-"
"2182","shouldBeOkIfHostnameVerificationOffAndServerHostnameMatchesAndFailVerifierSpecified","@Test
    void shouldBeOkIfHostnameVerificationOffAndServerHostnameMatchesAndFailVerifierSpecified()","0","-","-","-","-"
"2183","shouldRejectNonSupportedProtocols","@Test
    void shouldRejectNonSupportedProtocols()","0","-","-","-","-"
"2184","shouldSucceedWithBcProvider","@Test
    void shouldSucceedWithBcProvider() throws Exception","0","-","-","-","-"
"2185","verify","@Override
        public boolean verify(String arg0, SSLSession arg1)","0","-","-","-","-"
"2186","toFile","private static File toFile(final String resourceName) throws URISyntaxException","0","-","-","-","-"
"2187","setTrustSelfSignedCertificates","@JsonProperty
    public void setTrustSelfSignedCertificates(boolean trustSelfSignedCertificates)","0","-","-","-","-"
"2188","isTrustSelfSignedCertificates","@JsonProperty
    public boolean isTrustSelfSignedCertificates()","0","-","-","-","-"
"2189","getKeyStorePath","@JsonProperty
    @Nullable
    public File getKeyStorePath()","0","-","-","-","-"
"2190","setKeyStorePath","@JsonProperty
    public void setKeyStorePath(File keyStorePath)","0","-","-","-","-"
"2191","getKeyStorePassword","@JsonProperty
    @Nullable
    public String getKeyStorePassword()","0","-","-","-","-"
"2192","setKeyStorePassword","@JsonProperty
    public void setKeyStorePassword(String keyStorePassword)","0","-","-","-","-"
"2193","getKeyStoreType","@JsonProperty
    public String getKeyStoreType()","0","-","-","-","-"
"2194","setKeyStoreType","@JsonProperty
    public void setKeyStoreType(String keyStoreType)","0","-","-","-","-"
"2195","getTrustStoreType","@JsonProperty
    public String getTrustStoreType()","0","-","-","-","-"
"2196","setTrustStoreType","@JsonProperty
    public void setTrustStoreType(String trustStoreType)","0","-","-","-","-"
"2197","getTrustStorePath","@JsonProperty
    @Nullable
    public File getTrustStorePath()","0","-","-","-","-"
"2198","setTrustStorePath","@JsonProperty
    public void setTrustStorePath(File trustStorePath)","0","-","-","-","-"
"2199","getTrustStorePassword","@JsonProperty
    @Nullable
    public String getTrustStorePassword()","0","-","-","-","-"
"2200","setTrustStorePassword","@JsonProperty
    public void setTrustStorePassword(String trustStorePassword)","0","-","-","-","-"
"2201","isVerifyHostname","@JsonProperty
    public boolean isVerifyHostname()","0","-","-","-","-"
"2202","setVerifyHostname","@JsonProperty
    public void setVerifyHostname(boolean verifyHostname)","0","-","-","-","-"
"2203","getProtocol","@JsonProperty
    public String getProtocol()","0","-","-","-","-"
"2204","setProtocol","@JsonProperty
    public void setProtocol(String protocol)","0","-","-","-","-"
"2205","getProvider","@JsonProperty
    @Nullable
    public String getProvider()","0","-","-","-","-"
"2206","setProvider","@JsonProperty
    public void setProvider(@Nullable String provider)","0","-","-","-","-"
"2207","getSupportedCiphers","@Nullable
    @JsonProperty
    public List<String> getSupportedCiphers()","0","-","-","-","-"
"2208","setSupportedCiphers","@JsonProperty
    public void setSupportedCiphers(@Nullable List<String> supportedCiphers)","0","-","-","-","-"
"2209","getSupportedProtocols","@Nullable
    @JsonProperty
    public List<String> getSupportedProtocols()","0","-","-","-","-"
"2210","setSupportedProtocols","@JsonProperty
    public void setSupportedProtocols(@Nullable List<String> supportedProtocols)","0","-","-","-","-"
"2211","getCertAlias","@Nullable
    @JsonProperty
    public String getCertAlias()","0","-","-","-","-"
"2212","setCertAlias","@JsonProperty
    public void setCertAlias(@Nullable String certAlias)","0","-","-","-","-"
"2213","isValidKeyStorePassword","@ValidationMethod(message = ""keyStorePassword should not be null or empty if keyStorePath not null"")
    public boolean isValidKeyStorePassword()","0","-","-","-","-"
"2214","isValidTrustStorePassword","@ValidationMethod(message = ""trustStorePassword should not be null or empty if trustStorePath not null"")
    public boolean isValidTrustStorePassword()","0","-","-","-","-"
"2215","getKeyStoreProvider","/**
     * @since 2.0
     */
    @Nullable
    public String getKeyStoreProvider()","0","-","-","-","-"
"2216","setKeyStoreProvider","/**
     * @since 2.0
     */
    public void setKeyStoreProvider(@Nullable String keyStoreProvider)","0","-","-","-","-"
"2217","getTrustStoreProvider","/**
     * @since 2.0
     */
    @Nullable
    public String getTrustStoreProvider()","0","-","-","-","-"
"2218","setTrustStoreProvider","/**
     * @since 2.0
     */
    public void setTrustStoreProvider(@Nullable String trustStoreProvider)","0","-","-","-","-"
"2219","DropwizardExecutorProvider","DropwizardExecutorProvider(ExecutorService executor)","0","-","-","-","-"
"2220","getExecutorService","@Override
    public ExecutorService getExecutorService()","0","-","-","-","-"
"2221","dispose","@Override
    public void dispose(ExecutorService executorService)","0","-","-","-","-"
"2222","AuthConfiguration","public AuthConfiguration()","0","-","-","-","-"
"2223","AuthConfiguration","public AuthConfiguration(String username, String password)","0","-","-","-","-"
"2224","AuthConfiguration","public AuthConfiguration(String username, String password, String authScheme, String realm, String hostname, String domain, String credentialType)","0","-","-","-","-"
"2225","getUsername","@JsonProperty
    public String getUsername()","0","-","-","-","-"
"2226","setUsername","@JsonProperty
    public void setUsername(String username)","0","-","-","-","-"
"2227","getPassword","@JsonProperty
    public String getPassword()","0","-","-","-","-"
"2228","setPassword","@JsonProperty
    public void setPassword(String password)","0","-","-","-","-"
"2229","getAuthScheme","@JsonProperty
    @Nullable
    public String getAuthScheme()","0","-","-","-","-"
"2230","setAuthScheme","@JsonProperty
    public void setAuthScheme(String authScheme)","0","-","-","-","-"
"2231","getRealm","@JsonProperty
    @Nullable
    public String getRealm()","0","-","-","-","-"
"2232","setRealm","@JsonProperty
    public void setRealm(String realm)","0","-","-","-","-"
"2233","getHostname","@JsonProperty
    @Nullable
    public String getHostname()","0","-","-","-","-"
"2234","setHostname","@JsonProperty
    public void setHostname(String hostname)","0","-","-","-","-"
"2235","getDomain","@JsonProperty
    @Nullable
    public String getDomain()","0","-","-","-","-"
"2236","setDomain","@JsonProperty
    public void setDomain(String domain)","0","-","-","-","-"
"2237","getCredentialType","@JsonProperty
    @Nullable
    public String getCredentialType()","0","-","-","-","-"
"2238","setCredentialType","@JsonProperty
    public void setCredentialType(String credentialType)","0","-","-","-","-"
"2239","ProxyConfiguration","public ProxyConfiguration()","0","-","-","-","-"
"2240","ProxyConfiguration","public ProxyConfiguration(@NotNull String host)","0","-","-","-","-"
"2241","ProxyConfiguration","public ProxyConfiguration(@NotNull String host, int port)","0","-","-","-","-"
"2242","ProxyConfiguration","public ProxyConfiguration(@NotNull String host, int port, String scheme, AuthConfiguration auth)","0","-","-","-","-"
"2243","getHost","@JsonProperty
    public String getHost()","0","-","-","-","-"
"2244","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"2245","getPort","@JsonProperty
    public Integer getPort()","0","-","-","-","-"
"2246","setPort","@JsonProperty
    public void setPort(Integer port)","0","-","-","-","-"
"2247","getScheme","@JsonProperty
    public String getScheme()","0","-","-","-","-"
"2248","setScheme","@JsonProperty
    public void setScheme(String scheme)","0","-","-","-","-"
"2249","getNonProxyHosts","@JsonProperty
    @Nullable
    public List<String> getNonProxyHosts()","0","-","-","-","-"
"2250","setNonProxyHosts","@JsonProperty
    public void setNonProxyHosts(List<String> nonProxyHosts)","0","-","-","-","-"
"2251","getAuth","@Nullable
    public AuthConfiguration getAuth()","0","-","-","-","-"
"2252","setAuth","public void setAuth(AuthConfiguration auth)","0","-","-","-","-"
"2253","NonProxyListProxyRoutePlanner","public NonProxyListProxyRoutePlanner(HttpHost proxy, @Nullable List<String> nonProxyHosts)","0","-","-","-","-"
"2254","NonProxyListProxyRoutePlanner","public NonProxyListProxyRoutePlanner(HttpHost proxy, SchemePortResolver schemePortResolver,
                                         @Nullable List<String> nonProxyHosts)","0","-","-","-","-"
"2255","getNonProxyHostPatterns","private List<Pattern> getNonProxyHostPatterns(@Nullable List<String> nonProxyHosts)","0","-","-","-","-"
"2256","getNonProxyHostPatterns","protected List<Pattern> getNonProxyHostPatterns()","0","-","-","-","-"
"2257","determineProxy","@Override
    @Nullable
    protected HttpHost determineProxy(HttpHost target, HttpContext context) throws HttpException","0","-","-","-","-"
"2258","retryRequest","@Override
        public boolean retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)","0","-","-","-","-"
"2259","retryRequest","@Override
        public boolean retryRequest(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2260","getRetryInterval","@Override
        @Nullable
        public TimeValue getRetryInterval(HttpResponse response, int execCount, HttpContext context)","0","-","-","-","-"
"2261","HttpClientBuilder","public HttpClientBuilder(MetricRegistry metricRegistry)","0","-","-","-","-"
"2262","HttpClientBuilder","public HttpClientBuilder(Environment environment)","0","-","-","-","-"
"2263","name","/**
     * Use the given environment name. This is used in the user agent.
     *
     * @param environmentName an environment name to use in the user agent.
     * @return","0","-","-","-","-"
"2264","using","/**
     * Use the given","0","-","-","-","-"
"2265","using","/**
     * Use the given","0","-","-","-","-"
"2266","using","/**
     * Use the given","0","-","-","-","-"
"2267","using","/**
     * Uses the","0","-","-","-","-"
"2268","using","/**
     * Use the given","0","-","-","-","-"
"2269","using","/**
     * Use the given","0","-","-","-","-"
"2270","using","/**
     * Use the given","0","-","-","-","-"
"2271","using","/**
     * Use the given","0","-","-","-","-"
"2272","using","/**
     * Use the given","0","-","-","-","-"
"2273","using","/**
     * Use the given default headers for each HTTP request
     *
     * @param defaultHeaders HTTP headers
     * @return","0","-","-","-","-"
"2274","using","/**
     * Use the given","0","-","-","-","-"
"2275","disableContentCompression","/**
     * Disable support of decompression of responses
     *
     * @param disableContentCompression","0","-","-","-","-"
"2276","build","/**
     * Builds the","0","-","-","-","-"
"2277","stop","@Override
                public void stop() throws Exception","0","-","-","-","-"
"2278","buildWithDefaultRequestConfiguration","/**
     * For internal use only, used in","0","-","-","-","-"
"2279","createRequestExecutor","/**
     * Creates a","0","-","-","-","-"
"2280","createBuilder","/**
     * Creates an Apache","0","-","-","-","-"
"2281","customizeBuilder","/**
     * Configures an Apache","0","-","-","-","-"
"2282","createClient","/**
     * Map the parameters in","0","-","-","-","-"
"2283","getKeepAliveDuration","@Override
                public TimeValue getKeepAliveDuration(HttpResponse response, HttpContext context)","0","-","-","-","-"
"2284","createUserAgent","/**
     * Create a user agent string using the configured user agent if defined, otherwise
     * using a combination of the environment name and this client name
     *
     * @param name the name of this client
     * @return the user agent string to be used by this client
     */
    protected String createUserAgent(String name)","0","-","-","-","-"
"2285","createConnectionManager","/**
     * Create a InstrumentedHttpClientConnectionManager based on the
     * HttpClientConfiguration. It sets the maximum connections per route and
     * the maximum total connections that the connection manager can create
     *
     * @param registry
     * @param name
     * @return a InstrumentedHttpClientConnectionManger instance
     */
    protected InstrumentedHttpClientConnectionManager createConnectionManager(Registry<ConnectionSocketFactory> registry,
                                                                              String name)","0","-","-","-","-"
"2286","createConfiguredRegistry","Registry<ConnectionSocketFactory> createConfiguredRegistry()","0","-","-","-","-"
"2287","configureConnectionManager","protected InstrumentedHttpClientConnectionManager configureConnectionManager(
            InstrumentedHttpClientConnectionManager connectionManager)","0","-","-","-","-"
"2288","configureCredentials","/**
     * determine the Credentials implementation to use
     * @param auth
     * @return a","0","-","-","-","-"
"2289","getMinThreads","@JsonProperty
    public int getMinThreads()","0","-","-","-","-"
"2290","setMinThreads","@JsonProperty
    public void setMinThreads(int minThreads)","0","-","-","-","-"
"2291","getMaxThreads","@JsonProperty
    public int getMaxThreads()","0","-","-","-","-"
"2292","setMaxThreads","@JsonProperty
    public void setMaxThreads(int maxThreads)","0","-","-","-","-"
"2293","isGzipEnabled","@JsonProperty
    public boolean isGzipEnabled()","0","-","-","-","-"
"2294","setGzipEnabled","@JsonProperty
    public void setGzipEnabled(boolean enabled)","0","-","-","-","-"
"2295","isGzipEnabledForRequests","@JsonProperty
    public boolean isGzipEnabledForRequests()","0","-","-","-","-"
"2296","setGzipEnabledForRequests","@JsonProperty
    public void setGzipEnabledForRequests(boolean enabled)","0","-","-","-","-"
"2297","isChunkedEncodingEnabled","@JsonProperty
    public boolean isChunkedEncodingEnabled()","0","-","-","-","-"
"2298","setChunkedEncodingEnabled","@JsonProperty
    public void setChunkedEncodingEnabled(final boolean chunkedEncodingEnabled)","0","-","-","-","-"
"2299","getWorkQueueSize","@JsonProperty
    public int getWorkQueueSize()","0","-","-","-","-"
"2300","setWorkQueueSize","@JsonProperty
    public void setWorkQueueSize(int workQueueSize)","0","-","-","-","-"
"2301","isThreadPoolSizedCorrectly","@JsonIgnore
    @ValidationMethod(message = "".minThreads must be less than or equal to maxThreads"")
    public boolean isThreadPoolSizedCorrectly()","0","-","-","-","-"
"2302","isCompressionConfigurationValid","@JsonIgnore
    @ValidationMethod(message = "".gzipEnabledForRequests requires gzipEnabled set to true"")
    public boolean isCompressionConfigurationValid()","0","-","-","-","-"
"2303","DropwizardSSLConnectionSocketFactory","public DropwizardSSLConnectionSocketFactory(TlsConfiguration configuration)","0","-","-","-","-"
"2304","DropwizardSSLConnectionSocketFactory","public DropwizardSSLConnectionSocketFactory(TlsConfiguration configuration, @Nullable HostnameVerifier verifier)","0","-","-","-","-"
"2305","getSocketFactory","public SSLConnectionSocketFactory getSocketFactory() throws SSLInitializationException","0","-","-","-","-"
"2306","getSupportedCiphers","@Nullable
    private String @Nullable [] getSupportedCiphers()","0","-","-","-","-"
"2307","getSupportedProtocols","@Nullable
    private String @Nullable [] getSupportedProtocols()","0","-","-","-","-"
"2308","chooseHostnameVerifier","private HostnameVerifier chooseHostnameVerifier()","0","-","-","-","-"
"2309","buildSslContext","private SSLContext buildSslContext() throws SSLInitializationException","0","-","-","-","-"
"2310","choosePrivateKeyStrategy","@Nullable
    private PrivateKeyStrategy choosePrivateKeyStrategy()","0","-","-","-","-"
"2311","loadKeyMaterial","private void loadKeyMaterial(SSLContextBuilder sslContextBuilder) throws Exception","0","-","-","-","-"
"2312","loadTrustMaterial","private void loadTrustMaterial(SSLContextBuilder sslContextBuilder) throws Exception","0","-","-","-","-"
"2313","loadKeyStore","private static KeyStore loadKeyStore(String type, File path, String password,
                                         @Nullable String provider) throws Exception","0","-","-","-","-"
"2314","getKeepAlive","public Duration getKeepAlive()","0","-","-","-","-"
"2315","setKeepAlive","@JsonProperty
    public void setKeepAlive(Duration keepAlive)","0","-","-","-","-"
"2316","getMaxConnectionsPerRoute","@JsonProperty
    public int getMaxConnectionsPerRoute()","0","-","-","-","-"
"2317","setMaxConnectionsPerRoute","@JsonProperty
    public void setMaxConnectionsPerRoute(int maxConnectionsPerRoute)","0","-","-","-","-"
"2318","getTimeout","@JsonProperty
    public Duration getTimeout()","0","-","-","-","-"
"2319","getConnectionTimeout","@JsonProperty
    public Duration getConnectionTimeout()","0","-","-","-","-"
"2320","getTimeToLive","@JsonProperty
    public Duration getTimeToLive()","0","-","-","-","-"
"2321","isCookiesEnabled","@JsonProperty
    public boolean isCookiesEnabled()","0","-","-","-","-"
"2322","setTimeout","@JsonProperty
    public void setTimeout(Duration duration)","0","-","-","-","-"
"2323","setConnectionTimeout","@JsonProperty
    public void setConnectionTimeout(Duration duration)","0","-","-","-","-"
"2324","getConnectionRequestTimeout","@JsonProperty
    public Duration getConnectionRequestTimeout()","0","-","-","-","-"
"2325","setConnectionRequestTimeout","@JsonProperty
    public void setConnectionRequestTimeout(Duration connectionRequestTimeout)","0","-","-","-","-"
"2326","setTimeToLive","@JsonProperty
    public void setTimeToLive(Duration timeToLive)","0","-","-","-","-"
"2327","setCookiesEnabled","@JsonProperty
    public void setCookiesEnabled(boolean enabled)","0","-","-","-","-"
"2328","getMaxConnections","@JsonProperty
    public int getMaxConnections()","0","-","-","-","-"
"2329","setMaxConnections","@JsonProperty
    public void setMaxConnections(int maxConnections)","0","-","-","-","-"
"2330","getRetries","@JsonProperty
    public int getRetries()","0","-","-","-","-"
"2331","setRetries","@JsonProperty
    public void setRetries(int retries)","0","-","-","-","-"
"2332","getUserAgent","@JsonProperty
    public Optional<String> getUserAgent()","0","-","-","-","-"
"2333","setUserAgent","@JsonProperty
    public void setUserAgent(Optional<String> userAgent)","0","-","-","-","-"
"2334","getProxyConfiguration","@JsonProperty(""proxy"")
    @Nullable
    public ProxyConfiguration getProxyConfiguration()","0","-","-","-","-"
"2335","setProxyConfiguration","@JsonProperty(""proxy"")
    public void setProxyConfiguration(ProxyConfiguration proxyConfiguration)","0","-","-","-","-"
"2336","getValidateAfterInactivityPeriod","@JsonProperty
    public Duration getValidateAfterInactivityPeriod()","0","-","-","-","-"
"2337","setValidateAfterInactivityPeriod","@JsonProperty
    public void setValidateAfterInactivityPeriod(Duration validateAfterInactivityPeriod)","0","-","-","-","-"
"2338","getTlsConfiguration","@JsonProperty(""tls"")
    @Nullable
    public TlsConfiguration getTlsConfiguration()","0","-","-","-","-"
"2339","setTlsConfiguration","@JsonProperty(""tls"")
    public void setTlsConfiguration(TlsConfiguration tlsConfiguration)","0","-","-","-","-"
"2340","isProtocolUpgradeEnabled","@JsonProperty
    public boolean isProtocolUpgradeEnabled()","0","-","-","-","-"
"2341","setProtocolUpgradeEnabled","@JsonProperty
    public void setProtocolUpgradeEnabled(boolean protocolUpgradeEnabled)","0","-","-","-","-"
"2342","JerseyClientBuilder","public JerseyClientBuilder(Environment environment)","0","-","-","-","-"
"2343","JerseyClientBuilder","public JerseyClientBuilder(MetricRegistry metricRegistry)","0","-","-","-","-"
"2344","setApacheHttpClientBuilder","public void setApacheHttpClientBuilder(HttpClientBuilder apacheHttpClientBuilder)","0","-","-","-","-"
"2345","withProvider","/**
     * Adds the given object as a Jersey provider.
     *
     * @param provider a Jersey provider
     * @return","0","-","-","-","-"
"2346","withProvider","/**
     * Adds the given class as a Jersey provider. <p/><b>N.B.:</b> This class must either have a
     * no-args constructor or use Jersey's built-in dependency injection.
     *
     * @param klass a Jersey provider class
     * @return","0","-","-","-","-"
"2347","withProperty","/**
     * Sets the state of the given Jersey property.
     * <p/>
     * <p/><b>WARNING:</b> The default connector ignores Jersey properties.
     * Use","0","-","-","-","-"
"2348","using","/**
     * Uses the given","0","-","-","-","-"
"2349","using","/**
     * Uses the given","0","-","-","-","-"
"2350","using","/**
     * Use the given","0","-","-","-","-"
"2351","using","/**
     * Uses the given","0","-","-","-","-"
"2352","using","/**
     * Uses the given","0","-","-","-","-"
"2353","using","/**
     * Uses the given","0","-","-","-","-"
"2354","using","/**
     * Use the given","0","-","-","-","-"
"2355","using","/**
     * Uses the","0","-","-","-","-"
"2356","using","/**
     * Use the given","0","-","-","-","-"
"2357","using","/**
     * Use the given","0","-","-","-","-"
"2358","using","/**
     * Use the given","0","-","-","-","-"
"2359","using","/**
     * Use the given","0","-","-","-","-"
"2360","name","/**
     * Use the given environment name. This is used in the user agent.
     *
     * @param environmentName an environment name to use in the user agent.
     * @return","0","-","-","-","-"
"2361","using","/**
     * Use the given","0","-","-","-","-"
"2362","using","/**
     * Use the given","0","-","-","-","-"
"2363","buildRx","/**
     * Builds the","0","-","-","-","-"
"2364","build","/**
     * Builds the","0","-","-","-","-"
"2365","build","private Client build(String name, ExecutorService threadPool,
                         ObjectMapper objectMapper,
                         Validator validator)","0","-","-","-","-"
"2366","stop","@Override
                public void stop()","0","-","-","-","-"
"2367","buildConfig","private Configuration buildConfig(final String name, final ExecutorService threadPool,
                                      final ObjectMapper objectMapper,
                                      final Validator validator)","0","-","-","-","-"
"2368","createDropwizardApacheConnector","/**
     * Builds","0","-","-","-","-"
"2369","ConfiguredCloseableHttpClient","ConfiguredCloseableHttpClient(CloseableHttpClient closeableHttpClient, RequestConfig defaultRequestConfig)","0","-","-","-","-"
"2370","getDefaultRequestConfig","public RequestConfig getDefaultRequestConfig()","0","-","-","-","-"
"2371","getClient","public CloseableHttpClient getClient()","0","-","-","-","-"
"2372","DropwizardApacheConnector","public DropwizardApacheConnector(CloseableHttpClient client, @Nullable RequestConfig defaultRequestConfig,
                                     boolean chunkedEncodingEnabled)","0","-","-","-","-"
"2373","apply","/**
     *","0","-","-","-","-"
"2374","buildApacheRequest","/**
     * Build a new Apache's","0","-","-","-","-"
"2375","addJerseyRequestConfig","private Optional<RequestConfig> addJerseyRequestConfig(ClientRequest clientRequest)","0","-","-","-","-"
"2376","getHttpEntity","/**
     * Get an Apache's","0","-","-","-","-"
"2377","apply","/**
     *","0","-","-","-","-"
"2378","getName","/**
     *","0","-","-","-","-"
"2379","close","/**
     *","0","-","-","-","-"
"2380","JerseyRequestHttpEntity","private JerseyRequestHttpEntity(ClientRequest clientRequest)","0","-","-","-","-"
"2381","isRepeatable","/**
         *","0","-","-","-","-"
"2382","getContentLength","/**
         *","0","-","-","-","-"
"2383","getContent","/**
         *","0","-","-","-","-"
"2384","writeTo","/**
         *","0","-","-","-","-"
"2385","isStreaming","/**
         *","0","-","-","-","-"
"2386","close","/**
         *","0","-","-","-","-"
"2387","BufferedJerseyRequestHttpEntity","private BufferedJerseyRequestHttpEntity(ClientRequest clientRequest)","0","-","-","-","-"
"2388","isRepeatable","/**
         *","0","-","-","-","-"
"2389","getContentLength","/**
         *","0","-","-","-","-"
"2390","getContent","/**
         *","0","-","-","-","-"
"2391","writeTo","/**
         *","0","-","-","-","-"
"2392","isStreaming","/**
         *","0","-","-","-","-"
"2393","close","/**
         *","0","-","-","-","-"
"2394","getEncoding","@Nullable
    private static String getEncoding(ClientRequest clientRequest)","0","-","-","-","-"
"2395","filter","@Override
    public void filter(ClientRequestContext requestContext) throws IOException","0","-","-","-","-"
"2396","RelativeView","public RelativeView()","0","-","-","-","-"
"2397","ErrorView","protected ErrorView()","0","-","-","-","-"
"2398","BadView","public BadView()","0","-","-","-","-"
"2399","showAbsolute","@GET
        @Path(""/absolute"")
        public AbsoluteView showAbsolute()","0","-","-","-","-"
"2400","showRelative","@GET
        @Path(""/relative"")
        public RelativeView showRelative()","0","-","-","-","-"
"2401","showBad","@GET
        @Path(""/bad"")
        public BadView showBad()","0","-","-","-","-"
"2402","showError","@GET
        @Path(""/error"")
        public ErrorView showError()","0","-","-","-","-"
"2403","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"2404","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"2405","configure","@Override
    protected Application configure()","0","-","-","-","-"
"2406","rendersViewsWithAbsoluteTemplatePaths","@Test
    void rendersViewsWithAbsoluteTemplatePaths()","0","-","-","-","-"
"2407","rendersViewsWithRelativeTemplatePaths","@Test
    void rendersViewsWithRelativeTemplatePaths()","0","-","-","-","-"
"2408","returnsA500ForViewsWithBadTemplatePaths","@Test
    void returnsA500ForViewsWithBadTemplatePaths()","0","-","-","-","-"
"2409","returnsA500ForViewsThatCantCompile","@Test
    void returnsA500ForViewsThatCantCompile()","0","-","-","-","-"
"2410","showAbsolute","@GET
        @Path(""/absolute"")
        public AbsoluteView showAbsolute()","0","-","-","-","-"
"2411","showRelative","@GET
        @Path(""/relative"")
        public RelativeView showRelative()","0","-","-","-","-"
"2412","showBad","@GET
        @Path(""/bad"")
        public BadView showBad()","0","-","-","-","-"
"2413","showError","@GET
        @Path(""/error"")
        public ErrorView showError()","0","-","-","-","-"
"2414","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"2415","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"2416","configure","@Override
    protected Application configure()","0","-","-","-","-"
"2417","rendersViewsWithAbsoluteTemplatePaths","@Test
    void rendersViewsWithAbsoluteTemplatePaths()","0","-","-","-","-"
"2418","rendersViewsWithRelativeTemplatePaths","@Test
    void rendersViewsWithRelativeTemplatePaths()","0","-","-","-","-"
"2419","returnsA500ForViewsWithBadTemplatePaths","@Test
    void returnsA500ForViewsWithBadTemplatePaths()","0","-","-","-","-"
"2420","returnsA500ForViewsThatCantCompile","@Test
    void returnsA500ForViewsThatCantCompile()","0","-","-","-","-"
"2421","cacheByDefault","@Test
    void cacheByDefault()","0","-","-","-","-"
"2422","canDisableCache","@Test
    void canDisableCache()","0","-","-","-","-"
"2423","AbsoluteView","public AbsoluteView(String name)","0","-","-","-","-"
"2424","getName","public String getName()","0","-","-","-","-"
"2425","MustacheViewRenderer","public MustacheViewRenderer()","0","-","-","-","-"
"2426","load","@Override
            public MustacheFactory load(Class<? extends View> key) throws Exception","0","-","-","-","-"
"2427","isRenderable","@Override
    public boolean isRenderable(View view)","0","-","-","-","-"
"2428","render","@Override
    public void render(View view, Locale locale, OutputStream output) throws IOException","0","-","-","-","-"
"2429","configure","@Override
    public void configure(Map<String, String> options)","0","-","-","-","-"
"2430","isUseCache","boolean isUseCache()","0","-","-","-","-"
"2431","getConfigurationKey","@Override
    public String getConfigurationKey()","0","-","-","-","-"
"2432","createNewMustacheFactory","private MustacheFactory createNewMustacheFactory(Class<? extends View> key)","0","-","-","-","-"
"2433","PerClassMustacheResolver","PerClassMustacheResolver(Class<? extends View> klass)","0","-","-","-","-"
"2434","getReader","@Override
    @Nullable
    public Reader getReader(String resourceName)","0","-","-","-","-"
"2435","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"2436","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"2437","configure","@Override
    protected Application configure()","0","-","-","-","-"
"2438","testJsonContentType","@Test
    void testJsonContentType()","0","-","-","-","-"
"2439","testHtmlContentType","@Test
    void testHtmlContentType()","0","-","-","-","-"
"2440","testOnlyJsonContentType","@Test
    void testOnlyJsonContentType()","0","-","-","-","-"
"2441","testOnlyHtmlContentType","@Test
    void testOnlyHtmlContentType()","0","-","-","-","-"
"2442","getInfoCombined","@GET
        @Produces(","0","-","-","-","-"
"2443","getInfoJson","@GET
        @Produces(MediaType.APPLICATION_JSON)
        @Path(""json"")
        public Response getInfoJson()","0","-","-","-","-"
"2444","getInfoHtml","@GET
        @Produces(MediaType.TEXT_HTML)
        @Path(""html"")
        public Response getInfoHtml()","0","-","-","-","-"
"2445","Info","public Info(@JsonProperty(""title"") String title, @JsonProperty(""content"") String content)","0","-","-","-","-"
"2446","getTitle","public String getTitle()","0","-","-","-","-"
"2447","getContent","public String getContent()","0","-","-","-","-"
"2448","equals","@Override
        public boolean equals(Object o)","0","-","-","-","-"
"2449","hashCode","@Override
        public int hashCode()","0","-","-","-","-"
"2450","toString","@Override
        public String toString()","0","-","-","-","-"
"2451","isWriteable","@Override
        public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"2452","getSize","@Override
        public long getSize(Info info, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"2453","writeTo","@Override
        public void writeTo(Info info, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,
                            MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)
            throws IOException, WebApplicationException","0","-","-","-","-"
"2454","showAbsolute","@GET
        @Path(""/absolute"")
        public AbsoluteView showAbsolute()","0","-","-","-","-"
"2455","showRelative","@GET
        @Path(""/relative"")
        public RelativeView showRelative()","0","-","-","-","-"
"2456","showBad","@GET
        @Path(""/bad"")
        public BadView showBad()","0","-","-","-","-"
"2457","showError","@GET
        @Path(""/error"")
        public ErrorView showError()","0","-","-","-","-"
"2458","showUserInputSafely","@POST
        @Path(""/auto-escaping"")
        public AutoEscapingView showUserInputSafely(@FormParam(""input"") String userInput)","0","-","-","-","-"
"2459","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"2460","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"2461","configure","@Override
    protected Application configure()","0","-","-","-","-"
"2462","rendersViewsWithAbsoluteTemplatePaths","@Test
    void rendersViewsWithAbsoluteTemplatePaths()","0","-","-","-","-"
"2463","rendersViewsWithRelativeTemplatePaths","@Test
    void rendersViewsWithRelativeTemplatePaths()","0","-","-","-","-"
"2464","returnsA500ForViewsWithBadTemplatePaths","@Test
    void returnsA500ForViewsWithBadTemplatePaths()","0","-","-","-","-"
"2465","returnsA500ForViewsThatCantCompile","@Test
    @Disabled(""Flaky on JUnit5"")
    void returnsA500ForViewsThatCantCompile()","0","-","-","-","-"
"2466","rendersViewsUsingUnsafeInputWithAutoEscapingEnabled","@Test
    void rendersViewsUsingUnsafeInputWithAutoEscapingEnabled()","0","-","-","-","-"
"2467","RelativeView","public RelativeView()","0","-","-","-","-"
"2468","ErrorView","protected ErrorView()","0","-","-","-","-"
"2469","BadView","public BadView()","0","-","-","-","-"
"2470","AutoEscapingView","protected AutoEscapingView(String content)","0","-","-","-","-"
"2471","getContent","public String getContent()","0","-","-","-","-"
"2472","AbsoluteView","public AbsoluteView(String name)","0","-","-","-","-"
"2473","getName","public String getName()","0","-","-","-","-"
"2474","TemplateLoader","private TemplateLoader(Version incompatibleImprovementsVersion)","0","-","-","-","-"
"2475","load","@Override
        public Configuration load(@NonNull Class<?> key) throws Exception","0","-","-","-","-"
"2476","setBaseConfig","void setBaseConfig(Map<String, String> baseConfig)","0","-","-","-","-"
"2477","FreemarkerViewRenderer","/**
     * @deprecated Use","0","-","-","-","-"
"2478","FreemarkerViewRenderer","/**
     * @param incompatibleImprovementsVersion FreeMarker version number for backward compatible bug fixes and improvements.
     *                                        See","0","-","-","-","-"
"2479","isRenderable","@Override
    public boolean isRenderable(View view)","0","-","-","-","-"
"2480","render","@Override
    public void render(View view,
                       Locale locale,
                       OutputStream output) throws IOException","0","-","-","-","-"
"2481","configure","@Override
    public void configure(Map<String, String> baseConfig)","0","-","-","-","-"
"2482","getConfigurationKey","@Override
    public String getConfigurationKey()","0","-","-","-","-"
"2483","setup","@BeforeEach
    void setup() throws Exception","0","-","-","-","-"
"2484","buildsMyResource","@Test
    void buildsMyResource() throws Exception","0","-","-","-","-"
"2485","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2486","getMessageQueueFactory","@JsonProperty(""messageQueue"")
    public MessageQueueFactory getMessageQueueFactory()","0","-","-","-","-"
"2487","setMessageQueueFactory","@JsonProperty(""messageQueue"")
    public void setMessageQueueFactory(MessageQueueFactory factory)","0","-","-","-","-"
"2488","getMyParam","@JsonProperty(""myParam"")
    public String getMyParam()","0","-","-","-","-"
"2489","setMyParam","@JsonProperty(""myParam"")
    public void setMyParam(String myParam)","0","-","-","-","-"
"2490","initialize","@Override
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"2491","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2492","run","@Override
    // core: CustomTaskApp#run
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2493","TruncateDatabaseTask","public TruncateDatabaseTask(Database database)","0","-","-","-","-"
"2494","execute","@Override
    public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"2495","hello","@GET
    public String hello()","0","-","-","-","-"
"2496","EchoTask","public EchoTask()","0","-","-","-","-"
"2497","execute","@Override
    public void execute(Map<String, List<String>> parameters, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"2498","run","@Override
    public void run(MyConfiguredBundleConfig applicationConfig, Environment environment)","0","-","-","-","-"
"2499","initialize","@Override
    public void initialize(Bootstrap<?> bootstrap)","0","-","-","-","-"
"2500","getBundleSpecificConfig","String getBundleSpecificConfig();","0","-","-","-","-"
"2501","MyCommand","public MyCommand()","0","-","-","-","-"
"2502","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"2503","run","@Override
    public void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception","0","-","-","-","-"
"2504","initialize","@Override
    // core: ExampleApp#initialize
    public void initialize(Bootstrap<ExampleConfiguration> bootstrap)","0","-","-","-","-"
"2505","run","@Override
    // core: ExampleApp#run
    public void run(ExampleConfiguration configuration,
                    Environment environment)","0","-","-","-","-"
"2506","run","@Override
    public void run(MyConfiguration configuration, Environment environment)","0","-","-","-","-"
"2507","initialize","@Override
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"2508","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2509","isConnected","public boolean isConnected()","0","-","-","-","-"
"2510","getUrl","public String getUrl()","0","-","-","-","-"
"2511","truncate","public void truncate()","0","-","-","-","-"
"2512","DatabaseHealthCheck","public DatabaseHealthCheck(Database database)","0","-","-","-","-"
"2513","check","@Override
    protected Result check() throws Exception","0","-","-","-","-"
"2514","MessageQueueClient","public MessageQueueClient(String host, int port)","0","-","-","-","-"
"2515","close","@Override
    public void close()","0","-","-","-","-"
"2516","getHost","@JsonProperty
    public String getHost()","0","-","-","-","-"
"2517","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"2518","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"2519","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"2520","build","public MessageQueueClient build(Environment environment)","0","-","-","-","-"
"2521","start","@Override
            public void start()","0","-","-","-","-"
"2522","stop","@Override
            public void stop()","0","-","-","-","-"
"2523","run","@Override
    // core: ManagedExecutorApp#run
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2524","initialize","@Override
    // core: SslReloadApp#initialize
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"2525","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2526","start","public void start()","0","-","-","-","-"
"2527","stop","public void stop()","0","-","-","-","-"
"2528","RiakClientManager","public RiakClientManager(RiakClient client)","0","-","-","-","-"
"2529","start","@Override
    public void start() throws Exception","0","-","-","-","-"
"2530","stop","@Override
    public void stop() throws Exception","0","-","-","-","-"
"2531","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"2532","MyConfiguredCommand","public MyConfiguredCommand()","0","-","-","-","-"
"2533","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"2534","run","@Override
    protected void run(Bootstrap<Configuration> bootstrap,
                       Namespace namespace,
                       Configuration configuration) throws Exception","0","-","-","-","-"
"2535","getTemplate","@JsonProperty
    public String getTemplate()","0","-","-","-","-"
"2536","setTemplate","@JsonProperty
    public void setTemplate(String template)","0","-","-","-","-"
"2537","getDefaultName","@JsonProperty
    public String getDefaultName()","0","-","-","-","-"
"2538","setDefaultName","@JsonProperty
    public void setDefaultName(String name)","0","-","-","-","-"
"2539","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"2540","getName","@Override
    public String getName()","0","-","-","-","-"
"2541","initialize","@Override
    public void initialize(Bootstrap<HelloWorldConfiguration> bootstrap)","0","-","-","-","-"
"2542","run","@Override
    public void run(HelloWorldConfiguration configuration, Environment environment)","0","-","-","-","-"
"2543","TemplateHealthCheck","public TemplateHealthCheck(String template)","0","-","-","-","-"
"2544","check","@Override
    protected Result check() throws Exception","0","-","-","-","-"
"2545","HelloWorldResource","public HelloWorldResource(String template, String defaultName)","0","-","-","-","-"
"2546","sayHello","@GET
    @Timed
    public Saying sayHello(@QueryParam(""name"") Optional<String> name)","0","-","-","-","-"
"2547","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"2548","getName","@Override
    public String getName()","0","-","-","-","-"
"2549","initialize","@Override
    public void initialize(Bootstrap<HelloWorldConfiguration> bootstrap)","0","-","-","-","-"
"2550","run","@Override
    public void run(HelloWorldConfiguration configuration, Environment environment)","0","-","-","-","-"
"2551","Saying","public Saying()","0","-","-","-","-"
"2552","Saying","public Saying(long id, String content)","0","-","-","-","-"
"2553","getId","@JsonProperty
    public long getId()","0","-","-","-","-"
"2554","getContent","@JsonProperty
    public String getContent()","0","-","-","-","-"
"2555","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2556","getViewRendererConfiguration","public Map<String, Map<String, String>> getViewRendererConfiguration()","0","-","-","-","-"
"2557","PersonView","public PersonView(Person person)","0","-","-","-","-"
"2558","getPerson","public Person getPerson()","0","-","-","-","-"
"2559","PersonResource","public PersonResource(PersonDAO dao)","0","-","-","-","-"
"2560","getPerson","@GET
    public PersonView getPerson(@PathParam(""id"") String id)","0","-","-","-","-"
"2561","ValidationErrorView","public ValidationErrorView(ValidationErrorMessage message)","0","-","-","-","-"
"2562","getMessage","public ValidationErrorMessage getMessage()","0","-","-","-","-"
"2563","initialize","@Override
    public void initialize(Bootstrap<ViewsConfiguration> bootstrap)","0","-","-","-","-"
"2564","getViewConfiguration","@Override
            public Map<String, Map<String, String>> getViewConfiguration(ViewsConfiguration config)","0","-","-","-","-"
"2565","run","@Override
    public void run(ViewsConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2566","toResponse","@Override
            public Response toResponse(WebApplicationException exception)","0","-","-","-","-"
"2567","isMappable","@Override
            public boolean isMappable(WebApplicationException e)","0","-","-","-","-"
"2568","toResponse","@Override
            public Response toResponse(WebApplicationException exception)","0","-","-","-","-"
"2569","isMappable","@Override
            public boolean isMappable(WebApplicationException e)","0","-","-","-","-"
"2570","getRepresentation","@Override
            protected View getRepresentation(ErrorMessage errorMessage)","0","-","-","-","-"
"2571","getRepresentation","@Override
            protected View getRepresentation(ValidationErrorMessage message)","0","-","-","-","-"
"2572","ErrorView","public ErrorView(ErrorMessage errorMessage)","0","-","-","-","-"
"2573","getErrorMessage","public ErrorMessage getErrorMessage()","0","-","-","-","-"
"2574","Person","@JsonCreator
    public Person(@JsonProperty(""name"") String name)","0","-","-","-","-"
"2575","getName","@JsonProperty(""name"")
    public String getName()","0","-","-","-","-"
"2576","find","public Person find(String id)","0","-","-","-","-"
"2577","convertsToPetabytes","@Test
    void convertsToPetabytes()","0","-","-","-","-"
"2578","convertsToTerabytes","@Test
    void convertsToTerabytes()","0","-","-","-","-"
"2579","convertsToGigabytes","@Test
    void convertsToGigabytes()","0","-","-","-","-"
"2580","convertsToMegabytes","@Test
    void convertsToMegabytes()","0","-","-","-","-"
"2581","convertsToKilobytes","@Test
    void convertsToKilobytes()","0","-","-","-","-"
"2582","convertsToBytes","@Test
    void convertsToBytes()","0","-","-","-","-"
"2583","parsesPetabytes","@Test
    void parsesPetabytes()","0","-","-","-","-"
"2584","parsesPebibytes","@Test
    void parsesPebibytes()","0","-","-","-","-"
"2585","parsesTerabytes","@Test
    void parsesTerabytes()","0","-","-","-","-"
"2586","parsesTebibytes","@Test
    void parsesTebibytes()","0","-","-","-","-"
"2587","parsesGigabytes","@Test
    void parsesGigabytes()","0","-","-","-","-"
"2588","parsesGibibytes","@Test
    void parsesGibibytes()","0","-","-","-","-"
"2589","parsesMegabytes","@Test
    void parsesMegabytes()","0","-","-","-","-"
"2590","parsesMebibytes","@Test
    void parsesMebibytes()","0","-","-","-","-"
"2591","parsesKilobytes","@Test
    void parsesKilobytes()","0","-","-","-","-"
"2592","parsesKibibytes","@Test
    void parsesKibibytes()","0","-","-","-","-"
"2593","parsesBytes","@Test
    void parsesBytes()","0","-","-","-","-"
"2594","parseDataSizeWithWhiteSpaces","@Test
    void parseDataSizeWithWhiteSpaces()","0","-","-","-","-"
"2595","parseCaseInsensitive","@Test
    void parseCaseInsensitive()","0","-","-","-","-"
"2596","parseSingleLetterSuffix","@Test
    void parseSingleLetterSuffix()","0","-","-","-","-"
"2597","unableParseWrongDataSizeCount","@Test
    void unableParseWrongDataSizeCount()","0","-","-","-","-"
"2598","unableParseWrongDataSizeUnit","@Test
    void unableParseWrongDataSizeUnit()","0","-","-","-","-"
"2599","unableParseWrongDataSizeFormat","@Test
    void unableParseWrongDataSizeFormat()","0","-","-","-","-"
"2600","isHumanReadable","@Test
    void isHumanReadable()","0","-","-","-","-"
"2601","hasAQuantity","@Test
    void hasAQuantity()","0","-","-","-","-"
"2602","hasAUnit","@Test
    void hasAUnit()","0","-","-","-","-"
"2603","isComparable","@Test
    void isComparable()","0","-","-","-","-"
"2604","serializesCorrectlyWithJackson","@Test
    void serializesCorrectlyWithJackson() throws IOException","0","-","-","-","-"
"2605","deserializesCorrectlyWithJackson","@Test
    void deserializesCorrectlyWithJackson() throws IOException","0","-","-","-","-"
"2606","testParseWithDefaultDataSizeUnit","@Test
    void testParseWithDefaultDataSizeUnit()","0","-","-","-","-"
"2607","testSerialization","@Test
    void testSerialization() throws IOException, ClassNotFoundException","0","-","-","-","-"
"2608","findsNothingFromNull","@Test
    void findsNothingFromNull()","0","-","-","-","-"
"2609","findsSimpleException","@Test
    void findsSimpleException()","0","-","-","-","-"
"2610","findsChainedException","@Test
    void findsChainedException()","0","-","-","-","-"
"2611","ignoresCircularChains","@Test
    void ignoresCircularChains()","0","-","-","-","-"
"2612","LateBoundCauseException","LateBoundCauseException(@Nullable String message)","0","-","-","-","-"
"2613","setCause","void setCause(@Nullable Throwable cause)","0","-","-","-","-"
"2614","getCause","@Override
        @Nullable
        public Throwable getCause()","0","-","-","-","-"
"2615","convertsDays","@Test
    void convertsDays() throws Exception","0","-","-","-","-"
"2616","convertsHours","@Test
    void convertsHours() throws Exception","0","-","-","-","-"
"2617","convertsMinutes","@Test
    void convertsMinutes() throws Exception","0","-","-","-","-"
"2618","convertsSeconds","@Test
    void convertsSeconds() throws Exception","0","-","-","-","-"
"2619","convertsMilliseconds","@Test
    void convertsMilliseconds() throws Exception","0","-","-","-","-"
"2620","convertsMicroseconds","@Test
    void convertsMicroseconds() throws Exception","0","-","-","-","-"
"2621","convertsNanoseconds","@Test
    void convertsNanoseconds() throws Exception","0","-","-","-","-"
"2622","parsesDays","@Test
    void parsesDays() throws Exception","0","-","-","-","-"
"2623","parsesHours","@Test
    void parsesHours() throws Exception","0","-","-","-","-"
"2624","parsesMinutes","@Test
    void parsesMinutes() throws Exception","0","-","-","-","-"
"2625","parsesSeconds","@Test
    void parsesSeconds() throws Exception","0","-","-","-","-"
"2626","parsesMilliseconds","@Test
    void parsesMilliseconds() throws Exception","0","-","-","-","-"
"2627","parsesMicroseconds","@Test
    void parsesMicroseconds() throws Exception","0","-","-","-","-"
"2628","parsesNanoseconds","@Test
    void parsesNanoseconds() throws Exception","0","-","-","-","-"
"2629","parseDurationWithWhiteSpaces","@Test
    void parseDurationWithWhiteSpaces()","0","-","-","-","-"
"2630","unableParseWrongDurationCount","@Test
    void unableParseWrongDurationCount()","0","-","-","-","-"
"2631","unableParseWrongDurationTimeUnit","@Test
    void unableParseWrongDurationTimeUnit()","0","-","-","-","-"
"2632","unableParseWrongDurationFormat","@Test
    void unableParseWrongDurationFormat()","0","-","-","-","-"
"2633","isHumanReadable","@Test
    void isHumanReadable() throws Exception","0","-","-","-","-"
"2634","hasAQuantity","@Test
    void hasAQuantity() throws Exception","0","-","-","-","-"
"2635","hasAUnit","@Test
    void hasAUnit() throws Exception","0","-","-","-","-"
"2636","isComparable","@Test
    void isComparable() throws Exception","0","-","-","-","-"
"2637","serializesCorrectlyWithJackson","@Test
    void serializesCorrectlyWithJackson() throws IOException","0","-","-","-","-"
"2638","deserializesCorrectlyWithJackson","@Test
    void deserializesCorrectlyWithJackson() throws IOException","0","-","-","-","-"
"2639","testSerialization","@Test
    void testSerialization() throws IOException, ClassNotFoundException","0","-","-","-","-"
"2640","convertsToJavaDuration","@ParameterizedTest
    @CsvSource(","0","-","-","-","-"
"2641","data","public static Stream<Arguments> data()","0","-","-","-","-"
"2642","testTypeParameter","@ParameterizedTest
    @MethodSource(""data"")
    void testTypeParameter(Class<?> klass, Class<?> typeParameter, Class<? super T> bound, Class<?> boundTypeParameter,
                                  Class<? extends Exception> expectedException, String expectedMessage)","0","-","-","-","-"
"2643","testBoundTypeParameter","@ParameterizedTest
    @MethodSource(""data"")
    void testBoundTypeParameter(Class<?> klass, Class<?> typeParameter, Class<? super T> bound, Class<?> boundTypeParameter,
                                       Class<? extends Exception> expectedException, String expectedMessage)","0","-","-","-","-"
"2644","Converter","Converter(Function<Long, Long> f)","0","-","-","-","-"
"2645","toOneDst","long toOneDst()","0","-","-","-","-"
"2646","parameters","static Stream<Arguments> parameters()","0","-","-","-","-"
"2647","oneSrcUnitInDstUnits","@ParameterizedTest(name = ""","0","-","-","-","-"
"2648","toString","@Override
            public String toString()","0","-","-","-","-"
"2649","fromString","public static VideoFormat fromString(String s)","0","-","-","-","-"
"2650","data","public static Stream<Arguments> data()","0","-","-","-","-"
"2651","canGuess","@ParameterizedTest
    @MethodSource(""data"")
    void canGuess(String text, VideoFormat result)","0","-","-","-","-"
"2652","isHumanReadable","@Test
    void isHumanReadable() throws Exception","0","-","-","-","-"
"2653","hasAVersion","@Test
    void hasAVersion() throws Exception","0","-","-","-","-"
"2654","fromStringFuzzy","/**
     * Convert a string to an enum with more permissive rules than","0","-","-","-","-"
"2655","execute","@Override
    public void execute(Runnable command)","0","-","-","-","-"
"2656","isShutdown","@Override
    public boolean isShutdown()","0","-","-","-","-"
"2657","shutdown","@Override
    public void shutdown()","0","-","-","-","-"
"2658","shutdownNow","@Override
    public List<Runnable> shutdownNow()","0","-","-","-","-"
"2659","isTerminated","@Override
    public boolean isTerminated()","0","-","-","-","-"
"2660","awaitTermination","@Override
    public boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException","0","-","-","-","-"
"2661","startTask","/**
     * Checks if the executor has been shut down and increments the running task count.
     *
     * @throws RejectedExecutionException if the executor has been previously shutdown
     */
    private void startTask()","0","-","-","-","-"
"2662","endTask","/**
     * Decrements the running task count.
     */
    private void endTask()","0","-","-","-","-"
"2663","Generics","private Generics()","0","-","-","-","-"
"2664","getTypeParameter","/**
     * Finds the type parameter for the given class.
     *
     * @param klass a parameterized class
     * @return the class's type parameter
     */
    public static Class<?> getTypeParameter(Class<?> klass)","0","-","-","-","-"
"2665","getTypeParameter","/**
     * Finds the type parameter for the given class which is assignable to the bound class.
     *
     * @param klass a parameterized class
     * @param bound the type bound
     * @param <T>   the type bound
     * @return the class's type parameter
     */
    public static <T> Class<T> getTypeParameter(Class<?> klass, Class<? super T> bound)","0","-","-","-","-"
"2666","determineClass","@SuppressWarnings(""unchecked"")
    @Nullable
    private static <T> Class<T> determineClass(Class<? super T> bound, Type candidate)","0","-","-","-","-"
"2667","nanoseconds","/**
     * Constructs a new","0","-","-","-","-"
"2668","microseconds","/**
     * Constructs a new","0","-","-","-","-"
"2669","milliseconds","/**
     * Constructs a new","0","-","-","-","-"
"2670","seconds","/**
     * Constructs a new","0","-","-","-","-"
"2671","minutes","/**
     * Constructs a new","0","-","-","-","-"
"2672","hours","/**
     * Constructs a new","0","-","-","-","-"
"2673","days","/**
     * Constructs a new","0","-","-","-","-"
"2674","parse","/**
     * Parses a given input string to a","0","-","-","-","-"
"2675","Duration","private Duration(long count, TimeUnit unit)","0","-","-","-","-"
"2676","getQuantity","/**
     * Gets the quantity of the current","0","-","-","-","-"
"2677","getUnit","/**
     * Returns the","0","-","-","-","-"
"2678","toNanoseconds","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2679","toMicroseconds","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2680","toMilliseconds","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2681","toSeconds","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2682","toMinutes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2683","toHours","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2684","toDays","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2685","toJavaDuration","/**
     * Constructs a","0","-","-","-","-"
"2686","equals","/**
     *","0","-","-","-","-"
"2687","hashCode","/**
     *","0","-","-","-","-"
"2688","toString","/**
     *","0","-","-","-","-"
"2689","compareTo","/**
     *","0","-","-","-","-"
"2690","JarLocation","/**
     * Constructs a new","0","-","-","-","-"
"2691","getVersion","/**
     * Returns the version of the current jar holding the provided","0","-","-","-","-"
"2692","toString","/**
     *","0","-","-","-","-"
"2693","bytes","/**
     * Constructs a new","0","-","-","-","-"
"2694","kilobytes","/**
     * Constructs a new","0","-","-","-","-"
"2695","megabytes","/**
     * Constructs a new","0","-","-","-","-"
"2696","gigabytes","/**
     * Constructs a new","0","-","-","-","-"
"2697","terabytes","/**
     * Constructs a new","0","-","-","-","-"
"2698","petabytes","/**
     * Constructs a new","0","-","-","-","-"
"2699","kibibytes","/**
     * Constructs a new","0","-","-","-","-"
"2700","mebibytes","/**
     * Constructs a new","0","-","-","-","-"
"2701","gibibytes","/**
     * Constructs a new","0","-","-","-","-"
"2702","tebibytes","/**
     * Constructs a new","0","-","-","-","-"
"2703","pebibytes","/**
     * Constructs a new","0","-","-","-","-"
"2704","parse","/**
     * Parses a given","0","-","-","-","-"
"2705","parse","/**
     * Parses a given","0","-","-","-","-"
"2706","DataSize","private DataSize(long count, DataSizeUnit unit)","0","-","-","-","-"
"2707","getQuantity","/**
     * Gets the quantity of the current","0","-","-","-","-"
"2708","getUnit","/**
     * Returns the","0","-","-","-","-"
"2709","toBytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2710","toKilobytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2711","toMegabytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2712","toGigabytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2713","toTerabytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2714","toPetabytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2715","toKibibytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2716","toMebibytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2717","toGibibytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2718","toTebibytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2719","toPebibytes","/**
     * Returns the quantity of the current","0","-","-","-","-"
"2720","equals","/**
     *","0","-","-","-","-"
"2721","hashCode","/**
     *","0","-","-","-","-"
"2722","toString","/**
     *","0","-","-","-","-"
"2723","compareTo","/**
     *","0","-","-","-","-"
"2724","Resources","private Resources()","0","-","-","-","-"
"2725","getResource","/**
     * Returns a","0","-","-","-","-"
"2726","Throwables","private Throwables()","0","-","-","-","-"
"2727","findThrowableInChain","/**
     * Search an exception chain for an exception matching a given condition.
     *
     * @param condition The condition to match on
     * @param t The head of the exception chain
     * @return An","0","-","-","-","-"
"2728","setUp","@BeforeAll
    static void setUp() throws Exception","0","-","-","-","-"
"2729","tearDown","@AfterAll
    static void tearDown()","0","-","-","-","-"
"2730","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2731","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2732","returnsEnvironment","@Test
    void returnsEnvironment()","0","-","-","-","-"
"2733","doesNotOverwriteConfigSourceProviderIfNotProvidedInConstructor","@Test
    void doesNotOverwriteConfigSourceProviderIfNotProvidedInConstructor() throws Exception","0","-","-","-","-"
"2734","open","@Override
        public InputStream open(String path) throws IOException","0","-","-","-","-"
"2735","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"2736","PersonResource","public PersonResource(PeopleStore store)","0","-","-","-","-"
"2737","getPerson","@GET
    @Timed
    public Person getPerson(@PathParam(""name"") String name)","0","-","-","-","-"
"2738","getPersonList","@GET
    @Timed
    @Path(""/list"")
    public List<Person> getPersonList(@PathParam(""name"") String name)","0","-","-","-","-"
"2739","getPersonWithIndex","@GET
    @Timed
    @Path(""/index"")
    public Person getPersonWithIndex(@QueryParam(""ind"") @Min(0) IntParam index,
                                     @PathParam(""name"") String name)","0","-","-","-","-"
"2740","exceptional","@POST
    @Path(""/runtime-exception"")
    public Person exceptional(Map<String, String> mapper) throws Exception","0","-","-","-","-"
"2741","eofException","@GET
    @Path(""/eof-exception"")
    public Person eofException() throws Exception","0","-","-","-","-"
"2742","validationGroupsException","@POST
    @Path(""/validation-groups-exception"")
    public String validationGroupsException(
        @Valid @Validated(Partial1.class) @BeanParam BeanParameter params,
        @Valid @Validated(Default.class) byte[] entity)","0","-","-","-","-"
"2743","run","@Override
    public void run(TestConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2744","run","@Override
    public void run(TestConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2745","TestResource","public TestResource(String message)","0","-","-","-","-"
"2746","test","@Path(""test"")
        @GET
        public String test()","0","-","-","-","-"
"2747","messageView","@Path(""message"")
        @GET
        @Produces(MediaType.APPLICATION_JSON)
        public MessageView messageView()","0","-","-","-","-"
"2748","echoPatch","@Path(""echoPatch"")
        @PATCH
        public String echoPatch(String patchMessage)","0","-","-","-","-"
"2749","HelloTask","public HelloTask()","0","-","-","-","-"
"2750","execute","@Override
        public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"2751","EchoTask","public EchoTask()","0","-","-","-","-"
"2752","execute","@Override
        public void execute(Map<String, List<String>> parameters, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"2753","MessageView","@JsonCreator
        public MessageView(@JsonProperty(""message"") @Nullable String message)","0","-","-","-","-"
"2754","getMessage","@JsonProperty
        public Optional<String> getMessage()","0","-","-","-","-"
"2755","Person","public Person()","0","-","-","-","-"
"2756","Person","public Person(String name, String email)","0","-","-","-","-"
"2757","getName","public String getName()","0","-","-","-","-"
"2758","setName","public void setName(String name)","0","-","-","-","-"
"2759","getEmail","public String getEmail()","0","-","-","-","-"
"2760","setEmail","public void setEmail(String email)","0","-","-","-","-"
"2761","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"2762","equals","@Override
    public boolean equals(Object obj)","0","-","-","-","-"
"2763","toString","@Override
    public String toString()","0","-","-","-","-"
"2764","fetchPerson","Person fetchPerson(String name);","0","-","-","-","-"
"2765","TestConfiguration","public TestConfiguration()","0","-","-","-","-"
"2766","TestConfiguration","public TestConfiguration(String message, String extra)","0","-","-","-","-"
"2767","getMessage","public String getMessage()","0","-","-","-","-"
"2768","getExtra","public String getExtra()","0","-","-","-","-"
"2769","TestResource","public TestResource()","0","-","-","-","-"
"2770","TestResource","public TestResource(String message)","0","-","-","-","-"
"2771","test","@Path(""test"")
    @GET
    public String test()","0","-","-","-","-"
"2772","TestEntity","protected TestEntity()","0","-","-","-","-"
"2773","TestEntity","public TestEntity(@Nullable String description)","0","-","-","-","-"
"2774","getId","public long getId()","0","-","-","-","-"
"2775","getDescription","public String getDescription()","0","-","-","-","-"
"2776","setDescription","public void setDescription(final String description)","0","-","-","-","-"
"2777","getUriPath","@GET
    @Timed
    public String getUriPath(@Context UriInfo uriInfo)","0","-","-","-","-"
"2778","getThis","@POST
    public String getThis()","0","-","-","-","-"
"2779","echoPatch","@PATCH
    public String echoPatch(String patchMessage)","0","-","-","-","-"
"2780","configurationDoesNotExist","@Test
    void configurationDoesNotExist()","0","-","-","-","-"
"2781","getExtension","@Override
    DropwizardAppExtension<TestConfiguration> getExtension()","0","-","-","-","-"
"2782","eachTestShouldUseANewPort","@Test
    void eachTestShouldUseANewPort() throws Throwable","0","-","-","-","-"
"2783","testClientSupportsPatchMethod","@Test
    void testClientSupportsPatchMethod()","0","-","-","-","-"
"2784","testCustomClientConfiguration","@Test
    void testCustomClientConfiguration()","0","-","-","-","-"
"2785","toResponse","@Override
        public Response toResponse(WebApplicationException e)","0","-","-","-","-"
"2786","run","@Override
            protected void run(Bootstrap<TestConfiguration> bootstrap, Namespace namespace, TestConfiguration configuration) throws Exception","0","-","-","-","-"
"2787","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2788","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2789","environmentIsNull","@Test
    void environmentIsNull()","0","-","-","-","-"
"2790","clientHasNotBeenClosed","@Test
    void clientHasNotBeenClosed()","0","-","-","-","-"
"2791","clientHasNotBeenClosed","@Test
    void clientHasNotBeenClosed()","0","-","-","-","-"
"2792","shouldGetStringBodyFromDropWizard","@Test
    void shouldGetStringBodyFromDropWizard() throws IOException","0","-","-","-","-"
"2793","shouldGetDefaultStringBodyFromDropWizard","@Test
    void shouldGetDefaultStringBodyFromDropWizard() throws IOException","0","-","-","-","-"
"2794","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2795","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2796","environmentIsNull","@Test
    void environmentIsNull()","0","-","-","-","-"
"2797","staticApp","@Test
    void staticApp()","0","-","-","-","-"
"2798","staticClient","@Test
    void staticClient()","0","-","-","-","-"
"2799","staticDao","@Test
    void staticDao()","0","-","-","-","-"
"2800","staticResources","@Test
    void staticResources()","0","-","-","-","-"
"2801","app","@Test
    void app()","0","-","-","-","-"
"2802","client","@Test
    void client()","0","-","-","-","-"
"2803","dao","@Test
    void dao()","0","-","-","-","-"
"2804","resources","@Test
    void resources()","0","-","-","-","-"
"2805","staticApp","@Test
        void staticApp()","0","-","-","-","-"
"2806","staticClient","@Test
        void staticClient()","0","-","-","-","-"
"2807","staticDao","@Test
        void staticDao()","0","-","-","-","-"
"2808","staticResources","@Test
        void staticResources()","0","-","-","-","-"
"2809","app","@Test
        void app()","0","-","-","-","-"
"2810","client","@Test
        void client()","0","-","-","-","-"
"2811","dao","@Test
        void dao()","0","-","-","-","-"
"2812","resources","@Test
        void resources()","0","-","-","-","-"
"2813","staticApp","@Test
            void staticApp()","0","-","-","-","-"
"2814","staticClient","@Test
            void staticClient()","0","-","-","-","-"
"2815","staticDao","@Test
            void staticDao()","0","-","-","-","-"
"2816","staticResources","@Test
            void staticResources()","0","-","-","-","-"
"2817","app","@Test
            void app()","0","-","-","-","-"
"2818","client","@Test
            void client()","0","-","-","-","-"
"2819","dao","@Test
            void dao()","0","-","-","-","-"
"2820","resources","@Test
            void resources()","0","-","-","-","-"
"2821","explicitConfigCreatesSessionFactory","@Test
    void explicitConfigCreatesSessionFactory()","0","-","-","-","-"
"2822","testLogbackExcludedClassNotFound","@Test
    void testLogbackExcludedClassNotFound() throws Exception","0","-","-","-","-"
"2823","testLogbackExcludedNoClassDef","@Test
    void testLogbackExcludedNoClassDef() throws Exception","0","-","-","-","-"
"2824","testPropagatedException","@Test
    void testPropagatedException()","0","-","-","-","-"
"2825","testBuildConfigurationMetadata","public void testBuildConfigurationMetadata(CheckedConsumer<String> classFilter) throws Exception","0","-","-","-","-"
"2826","captureStderr","/**
     * Replace stderr with a byte-backed stream until the returned stream is closed.
     */
    private static ByteArrayOutputStream captureStderr()","0","-","-","-","-"
"2827","close","@Override
            public void close()","0","-","-","-","-"
"2828","accept","void accept(T t) throws ClassNotFoundException;","0","-","-","-","-"
"2829","CustomClassLoader","public CustomClassLoader(CheckedConsumer<String> classFilter)","0","-","-","-","-"
"2830","loadClass","@Override
        public Class<?> loadClass(String name) throws ClassNotFoundException","0","-","-","-","-"
"2831","reloadClass","/**
         * Get the supplied class object via this class loader so that any references made to it are resolved through
         * this class loader.
         */
        public <T> Class<T> reloadClass(Class<T> clazz) throws ClassNotFoundException","0","-","-","-","-"
"2832","getClassSystemLoader","private static Class<?> getClassSystemLoader(String name) throws ClassNotFoundException","0","-","-","-","-"
"2833","getUrl","private static Optional<URL> getUrl(Class<?> clazz)","0","-","-","-","-"
"2834","testDefaultVaryHeader","@Test
    void testDefaultVaryHeader()","0","-","-","-","-"
"2835","createResource","private TestResource createResource()","0","-","-","-","-"
"2836","accessingMockPersonSucceeds","@Test
    void accessingMockPersonSucceeds()","0","-","-","-","-"
"2837","TestResource","public TestResource(Person person)","0","-","-","-","-"
"2838","getPersonName","@GET
        @Path(""/name"")
        public String getPersonName()","0","-","-","-","-"
"2839","testClientSupportsPatchMethod","@Test
    void testClientSupportsPatchMethod()","0","-","-","-","-"
"2840","testCustomClientConfiguration","@Test
    void testCustomClientConfiguration()","0","-","-","-","-"
"2841","toResponse","@Override
        public Response toResponse(WebApplicationException e)","0","-","-","-","-"
"2842","configure","@Override
            public void configure(Subparser subparser)","0","-","-","-","-"
"2843","run","@Override
            public void run(Bootstrap<?> bootstrap, Namespace namespace) throws Exception","0","-","-","-","-"
"2844","configurationIsNull","@Test
    void configurationIsNull()","0","-","-","-","-"
"2845","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2846","environmentIsNull","@Test
    void environmentIsNull()","0","-","-","-","-"
"2847","invoke","void invoke();","0","-","-","-","-"
"2848","before","@Override
    public void before() throws Throwable","0","-","-","-","-"
"2849","after","@Override
    public void after() throws Throwable","0","-","-","-","-"
"2850","getBeforeInvocations","public int getBeforeInvocations()","0","-","-","-","-"
"2851","getAfterInvocations","public int getAfterInvocations()","0","-","-","-","-"
"2852","getDelayedAssertions","List<Invokable> getDelayedAssertions();","0","-","-","-","-"
"2853","afterEach","@Override
    public void afterEach(ExtensionContext context) throws Exception","0","-","-","-","-"
"2854","getExtension","protected abstract CountingExtension getExtension();","0","-","-","-","-"
"2855","parentClassTestMethod","@Test
    public void parentClassTestMethod()","0","-","-","-","-"
"2856","overriddenTestMethod","@Test
    public void overriddenTestMethod()","0","-","-","-","-"
"2857","getDelayedAssertions","@Override
        public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2858","onlyInParent","@Test
        void onlyInParent()","0","-","-","-","-"
"2859","getDelayedAssertions","@Override
    public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2860","parentClassTestMethod","@Test
    public void parentClassTestMethod()","0","-","-","-","-"
"2861","overriddenTestMethod","@Test
    public void overriddenTestMethod()","0","-","-","-","-"
"2862","getDelayedAssertions","@Override
        public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2863","onlyInParent","@Test
        void onlyInParent()","0","-","-","-","-"
"2864","getDelayedAssertions","@Override
    public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2865","regularTestMethod","@Test
    void regularTestMethod()","0","-","-","-","-"
"2866","getDelayedAssertions","@Override
        public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2867","nestedClassMethod","@Test
        void nestedClassMethod()","0","-","-","-","-"
"2868","getDelayedAssertions","@Override
        public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2869","getExtension","@Override
        protected CountingExtension getExtension()","0","-","-","-","-"
"2870","childClassTestMethod","@Test
        void childClassTestMethod()","0","-","-","-","-"
"2871","parentClassTestMethod","@Test
        @Override
        public void parentClassTestMethod()","0","-","-","-","-"
"2872","getExtension","@Override
    protected CountingExtension getExtension()","0","-","-","-","-"
"2873","getDelayedAssertions","@Override
    public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2874","regularTestMethod","@Test
    void regularTestMethod()","0","-","-","-","-"
"2875","getDelayedAssertions","@Override
        public List<Invokable> getDelayedAssertions()","0","-","-","-","-"
"2876","nestedClassMethod","@Test
        void nestedClassMethod()","0","-","-","-","-"
"2877","childClassTestMethod","@Test
        void childClassTestMethod()","0","-","-","-","-"
"2878","parentClassTestMethod","@Test
        @Override
        public void parentClassTestMethod()","0","-","-","-","-"
"2879","runWithoutConfigFile","@Test
    void runWithoutConfigFile()","0","-","-","-","-"
"2880","run","@Override
        public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2881","get","@GET
        public Response get()","0","-","-","-","-"
"2882","getExtension","@Override
    DropwizardAppExtension<TestConfiguration> getExtension()","0","-","-","-","-"
"2883","shouldProvideSession","@Test
    void shouldProvideSession()","0","-","-","-","-"
"2884","toResponse","@Override
        public Response toResponse(WebApplicationException e)","0","-","-","-","-"
"2885","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"2886","testGetPerson","@Test
    void testGetPerson()","0","-","-","-","-"
"2887","testGetImmutableListOfPersons","@Test
    void testGetImmutableListOfPersons()","0","-","-","-","-"
"2888","testGetPersonWithQueryParam","@Test
    void testGetPersonWithQueryParam()","0","-","-","-","-"
"2889","testDefaultConstraintViolation","@Test
    void testDefaultConstraintViolation()","0","-","-","-","-"
"2890","testDefaultJsonProcessingMapper","@Test
    void testDefaultJsonProcessingMapper()","0","-","-","-","-"
"2891","testDefaultExceptionMapper","@Test
    void testDefaultExceptionMapper()","0","-","-","-","-"
"2892","testDefaultEofExceptionMapper","@Test
    void testDefaultEofExceptionMapper()","0","-","-","-","-"
"2893","testValidationGroupsException","@Test
    void testValidationGroupsException()","0","-","-","-","-"
"2894","testCustomClientConfiguration","@Test
    void testCustomClientConfiguration()","0","-","-","-","-"
"2895","canGetExpectedResourceOverHttp","@Test
    void canGetExpectedResourceOverHttp()","0","-","-","-","-"
"2896","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2897","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2898","returnsEnvironment","@Test
    void returnsEnvironment()","0","-","-","-","-"
"2899","canPerformAdminTask","@Test
    void canPerformAdminTask()","0","-","-","-","-"
"2900","canPerformAdminTaskWithPostBody","@Test
    void canPerformAdminTaskWithPostBody()","0","-","-","-","-"
"2901","clientUsesJacksonMapperFromEnvironment","@Test
    void clientUsesJacksonMapperFromEnvironment()","0","-","-","-","-"
"2902","clientSupportsPatchMethod","@Test
    void clientSupportsPatchMethod()","0","-","-","-","-"
"2903","getExtension","abstract DropwizardAppExtension<TestConfiguration> getExtension();","0","-","-","-","-"
"2904","runWithExplicitConfig","@Test
    void runWithExplicitConfig()","0","-","-","-","-"
"2905","run","@Override
        public void run(TestConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2906","TestResource","TestResource(String m)","0","-","-","-","-"
"2907","get","@GET
        public Response get()","0","-","-","-","-"
"2908","extensionCreatedSessionFactory","@Test
    void extensionCreatedSessionFactory()","0","-","-","-","-"
"2909","extensionCanOpenTransaction","@Test
    void extensionCanOpenTransaction()","0","-","-","-","-"
"2910","extensionCanRoundtrip","@Test
    void extensionCanRoundtrip()","0","-","-","-","-"
"2911","transactionThrowsExceptionAsExpected","@Test()
    void transactionThrowsExceptionAsExpected()","0","-","-","-","-"
"2912","rollsBackTransaction","@Test
    void rollsBackTransaction()","0","-","-","-","-"
"2913","persist","private TestEntity persist(TestEntity testEntity)","0","-","-","-","-"
"2914","get","private TestEntity get(Serializable id)","0","-","-","-","-"
"2915","supportsRandomPortsConfigAttributeOverrides","@Test
    void supportsRandomPortsConfigAttributeOverrides()","0","-","-","-","-"
"2916","supportsConfigAttributeOverrides","@Test
    void supportsConfigAttributeOverrides()","0","-","-","-","-"
"2917","supportsSuppliedConfigAttributeOverrides","@Test
    void supportsSuppliedConfigAttributeOverrides()","0","-","-","-","-"
"2918","test2","@Test
    void test2() throws Exception","0","-","-","-","-"
"2919","testDefaultConstraintViolation","@Test
    void testDefaultConstraintViolation()","0","-","-","-","-"
"2920","testDefaultJsonProcessingMapper","@Test
    void testDefaultJsonProcessingMapper()","0","-","-","-","-"
"2921","testDefaultExceptionMapper","@Test
    void testDefaultExceptionMapper()","0","-","-","-","-"
"2922","testDefaultEofExceptionMapper","@Test
    void testDefaultEofExceptionMapper()","0","-","-","-","-"
"2923","toResponse","@Override
        public Response toResponse(JerseyViolationException exception)","0","-","-","-","-"
"2924","isMappable","@Override
        public boolean isMappable(Throwable throwable)","0","-","-","-","-"
"2925","toResponse","@Override
        public Response toResponse(Throwable exception)","0","-","-","-","-"
"2926","setUp","@BeforeAll
    static void setUp() throws Exception","0","-","-","-","-"
"2927","tearDown","@AfterAll
    static void tearDown()","0","-","-","-","-"
"2928","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2929","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2930","returnsEnvironment","@Test
    void returnsEnvironment()","0","-","-","-","-"
"2931","setUp","@BeforeAll
    static void setUp() throws Exception","0","-","-","-","-"
"2932","tearDown","@AfterAll
    static void tearDown()","0","-","-","-","-"
"2933","canGetExpectedResourceOverHttp","@Test
    void canGetExpectedResourceOverHttp()","0","-","-","-","-"
"2934","returnsConfiguration","@Test
    void returnsConfiguration()","0","-","-","-","-"
"2935","returnsApplication","@Test
    void returnsApplication()","0","-","-","-","-"
"2936","returnsEnvironment","@Test
    void returnsEnvironment()","0","-","-","-","-"
"2937","canPerformAdminTask","@Test
    void canPerformAdminTask()","0","-","-","-","-"
"2938","canPerformAdminTaskWithPostBody","@Test
    void canPerformAdminTaskWithPostBody()","0","-","-","-","-"
"2939","isCustomFactoryCalled","@Test
    void isCustomFactoryCalled() throws Exception","0","-","-","-","-"
"2940","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"2941","run","@Override
        public void run(TestConfiguration configuration, Environment environment)","0","-","-","-","-"
"2942","FailingConfigurationFactory","FailingConfigurationFactory(Class<TestConfiguration> klass, Validator validator, ObjectMapper objectMapper, String propertyPrefix)","0","-","-","-","-"
"2943","run","@Override
        public void run(TestConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"2944","HelloTask","HelloTask()","0","-","-","-","-"
"2945","execute","@Override
        public void execute(Map<String, List<String>> parameters, PrintWriter output)","0","-","-","-","-"
"2946","EchoTask","EchoTask()","0","-","-","-","-"
"2947","execute","@Override
        public void execute(Map<String, List<String>> parameters, String body, PrintWriter output)","0","-","-","-","-"
"2948","onRun","@Override
        public void onRun(T configuration, Environment environment, DropwizardTestSupport<T> rule) throws Exception","0","-","-","-","-"
"2949","onStop","@Override
        public void onStop(DropwizardTestSupport<T> rule) throws Exception","0","-","-","-","-"
"2950","start","@Override
        public void start()","0","-","-","-","-"
"2951","stop","@Override
        public void stop()","0","-","-","-","-"
"2952","ConfigOverrideRandomPorts","ConfigOverrideRandomPorts(String propertyPrefix)","0","-","-","-","-"
"2953","addToSystemProperties","@Override
    public void addToSystemProperties()","0","-","-","-","-"
"2954","removeFromSystemProperties","@Override
    public void removeFromSystemProperties()","0","-","-","-","-"
"2955","ConfigOverrideValue","ConfigOverrideValue(String propertyPrefix, String key, Supplier<String> value)","0","-","-","-","-"
"2956","addToSystemProperties","@Override
    public void addToSystemProperties()","0","-","-","-","-"
"2957","removeFromSystemProperties","@Override
    public void removeFromSystemProperties()","0","-","-","-","-"
"2958","build","public DAOTestExtension build()","0","-","-","-","-"
"2959","newBuilder","/**
     * Creates a new builder for","0","-","-","-","-"
"2960","DAOTestExtension","/**
     * Use","0","-","-","-","-"
"2961","before","@Override
    public void before() throws Throwable","0","-","-","-","-"
"2962","after","@Override
    public void after()","0","-","-","-","-"
"2963","beforeAll","@Override
    public void beforeAll(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"2964","afterAll","@Override
    public void afterAll(ExtensionContext extensionContext)","0","-","-","-","-"
"2965","getSessionFactory","/**
     * Returns the current active session factory for injecting to DAOs.
     *
     * @return","0","-","-","-","-"
"2966","inTransaction","/**
     * Performs a call in a transaction
     *
     * @param call the call
     * @param <T>  the type of the returned result
     * @return the result of the call
     */
    public <T> T inTransaction(Callable<T> call)","0","-","-","-","-"
"2967","inTransaction","/**
     * Performs an action in a transaction
     *
     * @param action the action
     */
    public void inTransaction(Runnable action)","0","-","-","-","-"
"2968","DropwizardClientExtension","public DropwizardClientExtension(Object... resources)","0","-","-","-","-"
"2969","baseUri","public URI baseUri()","0","-","-","-","-"
"2970","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"2971","getEnvironment","public Environment getEnvironment()","0","-","-","-","-"
"2972","before","@Override
    public void before() throws Throwable","0","-","-","-","-"
"2973","after","@Override
    public void after()","0","-","-","-","-"
"2974","DropwizardAppExtension","public DropwizardAppExtension(Class<? extends Application<C>> applicationClass)","0","-","-","-","-"
"2975","DropwizardAppExtension","public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2976","DropwizardAppExtension","/**
     * @since 2.0
     */
    public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  ConfigurationSourceProvider configSourceProvider,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2977","DropwizardAppExtension","/**
     * @since 2.0
     */
    public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  @Nullable String customPropertyPrefix,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2978","DropwizardAppExtension","/**
     * @since 2.0
     */
    public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  ConfigurationSourceProvider configSourceProvider,
                                  @Nullable String customPropertyPrefix,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2979","DropwizardAppExtension","public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  @Nullable String customPropertyPrefix,
                                  Function<Application<C>, Command> commandInstantiator,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2980","DropwizardAppExtension","public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  @Nullable String configPath,
                                  ConfigurationSourceProvider configSourceProvider,
                                  @Nullable String customPropertyPrefix,
                                  Function<Application<C>, Command> commandInstantiator,
                                  ConfigOverride... configOverrides)","0","-","-","-","-"
"2981","DropwizardAppExtension","/**
     * Alternate constructor that allows specifying exact Configuration object to
     * use, instead of reading a resource and binding it as Configuration object.
     *
     * @since 0.9
     */
    public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  C configuration)","0","-","-","-","-"
"2982","DropwizardAppExtension","/**
     * Alternate constructor that allows specifying the command the Dropwizard application is started with.
     *
     * @since 1.1.0
     */
    public DropwizardAppExtension(Class<? extends Application<C>> applicationClass,
                                  C configuration, Function<Application<C>, Command> commandInstantiator)","0","-","-","-","-"
"2983","DropwizardAppExtension","public DropwizardAppExtension(DropwizardTestSupport<C> testSupport)","0","-","-","-","-"
"2984","addListener","public DropwizardAppExtension<C> addListener(final ServiceListener<C> listener)","0","-","-","-","-"
"2985","onRun","@Override
            public void onRun(C configuration, Environment environment, DropwizardTestSupport<C> rule) throws Exception","0","-","-","-","-"
"2986","onStop","@Override
            public void onStop(DropwizardTestSupport<C> rule) throws Exception","0","-","-","-","-"
"2987","manage","public DropwizardAppExtension<C> manage(final Managed managed)","0","-","-","-","-"
"2988","onRun","@Override
            public void onRun(C configuration, Environment environment, DropwizardAppExtension<C> rule) throws Exception","0","-","-","-","-"
"2989","beforeAll","@Override
    public void beforeAll(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"2990","afterAll","@Override
    public void afterAll(ExtensionContext extensionContext)","0","-","-","-","-"
"2991","before","@Override
    public void before() throws Exception","0","-","-","-","-"
"2992","after","@Override
    public void after()","0","-","-","-","-"
"2993","getConfiguration","public C getConfiguration()","0","-","-","-","-"
"2994","getLocalPort","public int getLocalPort()","0","-","-","-","-"
"2995","getPort","public int getPort(int connectorIndex)","0","-","-","-","-"
"2996","getAdminPort","public int getAdminPort()","0","-","-","-","-"
"2997","newApplication","public Application<C> newApplication()","0","-","-","-","-"
"2998","getApplication","@SuppressWarnings(","0","-","-","-","-"
"2999","getEnvironment","public Environment getEnvironment()","0","-","-","-","-"
"3000","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"3001","onRun","public void onRun(T configuration, Environment environment, DropwizardAppExtension<T> rule) throws Exception","0","-","-","-","-"
"3002","onStop","public void onStop(DropwizardAppExtension<T> rule) throws Exception","0","-","-","-","-"
"3003","getTestSupport","public DropwizardTestSupport<C> getTestSupport()","0","-","-","-","-"
"3004","client","/**
     * Returns a new HTTP Jersey","0","-","-","-","-"
"3005","clientBuilder","protected JerseyClientBuilder clientBuilder()","0","-","-","-","-"
"3006","process","@Override
        public void process(HttpResponse response, EntityDetails entity, HttpContext context) throws HttpException, IOException","0","-","-","-","-"
"3007","build","/**
         * Builds a","0","-","-","-","-"
"3008","builder","/**
     * Creates a new Jersey testing environment builder for","0","-","-","-","-"
"3009","ResourceExtension","private ResourceExtension(Resource resource)","0","-","-","-","-"
"3010","getValidator","public Validator getValidator()","0","-","-","-","-"
"3011","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"3012","getClientConfigurator","public Consumer<ClientConfig> getClientConfigurator()","0","-","-","-","-"
"3013","target","/**
     * Creates a web target to be sent to the resource under testing.
     *
     * @param path relative path (from tested application base URI) this web target should point to.
     * @return the created JAX-RS web target.
     */
    public WebTarget target(String path)","0","-","-","-","-"
"3014","client","/**
     * Returns the pre-configured","0","-","-","-","-"
"3015","getJerseyTest","/**
     * Returns the underlying","0","-","-","-","-"
"3016","before","@Override
    public void before() throws Throwable","0","-","-","-","-"
"3017","after","@Override
    public void after() throws Throwable","0","-","-","-","-"
"3018","findAnnotatedFields","private static Set<Field> findAnnotatedFields(Class<?> testClass, boolean isStaticMember)","0","-","-","-","-"
"3019","afterAll","@Override
    public void afterAll(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"3020","afterAll","private void afterAll(Class<?> cls) throws Throwable","0","-","-","-","-"
"3021","afterEach","@Override
    public void afterEach(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"3022","afterEach","private void afterEach(Object testInstance, Class<?> cls) throws Throwable","0","-","-","-","-"
"3023","beforeAll","@Override
    public void beforeAll(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"3024","beforeAll","private void beforeAll(Class<?> cls) throws Throwable","0","-","-","-","-"
"3025","beforeEach","@Override
    public void beforeEach(ExtensionContext extensionContext) throws Exception","0","-","-","-","-"
"3026","beforeEach","private void beforeEach(Object testInstance, Class<?> cls) throws Throwable","0","-","-","-","-"
"3027","getEnclosingInstance","@Nullable
    private Object getEnclosingInstance(Object o) throws IllegalAccessException","0","-","-","-","-"
"3028","getDropwizardExtension","private DropwizardExtension getDropwizardExtension(Field member, @Nullable Object o)","0","-","-","-","-"
"3029","before","/**
     * Executed before test method or class.
     */
    void before() throws Throwable;","0","-","-","-","-"
"3030","after","/**
     * Executed after test method or class.
     */
    void after() throws Throwable;","0","-","-","-","-"
"3031","setMapper","public B setMapper(ObjectMapper mapper)","0","-","-","-","-"
"3032","setMetricRegistry","public B setMetricRegistry(MetricRegistry metricRegistry)","0","-","-","-","-"
"3033","setValidator","public B setValidator(Validator validator)","0","-","-","-","-"
"3034","setClientConfigurator","public B setClientConfigurator(Consumer<ClientConfig> clientConfigurator)","0","-","-","-","-"
"3035","addResource","public B addResource(Object resource)","0","-","-","-","-"
"3036","addResource","public B addResource(Supplier<Object> resourceSupplier)","0","-","-","-","-"
"3037","addProvider","public B addProvider(Class<?> klass)","0","-","-","-","-"
"3038","addProvider","public B addProvider(Supplier<Object> providerSupplier)","0","-","-","-","-"
"3039","addProvider","public B addProvider(Object provider)","0","-","-","-","-"
"3040","addProperty","public B addProperty(String property, Object value)","0","-","-","-","-"
"3041","setTestContainerFactory","public B setTestContainerFactory(TestContainerFactory factory)","0","-","-","-","-"
"3042","setRegisterDefaultExceptionMappers","public B setRegisterDefaultExceptionMappers(boolean value)","0","-","-","-","-"
"3043","bootstrapLogging","public B bootstrapLogging(boolean value)","0","-","-","-","-"
"3044","buildResource","/**
         * Builds a","0","-","-","-","-"
"3045","builder","/**
     * Creates a new Jersey testing environment builder for","0","-","-","-","-"
"3046","Resource","private Resource(ResourceTestJerseyConfiguration configuration)","0","-","-","-","-"
"3047","getValidator","public Validator getValidator()","0","-","-","-","-"
"3048","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"3049","getClientConfigurator","public Consumer<ClientConfig> getClientConfigurator()","0","-","-","-","-"
"3050","target","/**
     * Creates a web target to be sent to the resource under testing.
     *
     * @param path relative path (from tested application base URI) this web target should point to.
     * @return the created JAX-RS web target.
     */
    public WebTarget target(String path)","0","-","-","-","-"
"3051","client","/**
     * Returns the pre-configured","0","-","-","-","-"
"3052","getJerseyTest","/**
     * Returns the underlying","0","-","-","-","-"
"3053","before","public void before() throws Throwable","0","-","-","-","-"
"3054","getBaseUri","@Override
            protected URI getBaseUri()","0","-","-","-","-"
"3055","configureDeployment","@Override
            protected DeploymentContext configureDeployment()","0","-","-","-","-"
"3056","configureClient","@Override
            protected void configureClient(ClientConfig clientConfig)","0","-","-","-","-"
"3057","after","public void after() throws Throwable","0","-","-","-","-"
"3058","setUrl","public B setUrl(String url)","0","-","-","-","-"
"3059","setUsername","public B setUsername(String username)","0","-","-","-","-"
"3060","setPassword","public B setPassword(String password)","0","-","-","-","-"
"3061","setDriver","public B setDriver(Class<? extends java.sql.Driver> driver)","0","-","-","-","-"
"3062","setDriver","public B setDriver(String driver)","0","-","-","-","-"
"3063","setHbm2DdlAuto","public B setHbm2DdlAuto(String hbm2ddlAuto)","0","-","-","-","-"
"3064","setShowSql","public B setShowSql(boolean showSql)","0","-","-","-","-"
"3065","useSqlComments","public B useSqlComments(boolean useSqlComments)","0","-","-","-","-"
"3066","bootstrapLogging","/**
         * @since 2.0
         */
        public B bootstrapLogging(boolean value)","0","-","-","-","-"
"3067","addEntityClass","public B addEntityClass(Class<?> entityClass)","0","-","-","-","-"
"3068","setProperty","public B setProperty(String key, String value)","0","-","-","-","-"
"3069","customizeConfiguration","public B customizeConfiguration(Consumer<Configuration> configurationCustomizer)","0","-","-","-","-"
"3070","buildDAOTest","protected DAOTest buildDAOTest()","0","-","-","-","-"
"3071","DAOTest","/**
     * Use","0","-","-","-","-"
"3072","before","public void before() throws Throwable","0","-","-","-","-"
"3073","after","public void after()","0","-","-","-","-"
"3074","getSessionFactory","/**
     * Returns the current active session factory for injecting to DAOs.
     *`
     * @return","0","-","-","-","-"
"3075","inTransaction","/**
     * Performs a call in a transaction
     *
     * @param call the call
     * @param <T>  the type of the returned result
     * @return the result of the call
     */
    public <T> T inTransaction(Callable<T> call)","0","-","-","-","-"
"3076","inTransaction","/**
     * Performs an action in a transaction
     *
     * @param action the action
     */
    public void inTransaction(Runnable action)","0","-","-","-","-"
"3077","DropwizardClient","public DropwizardClient(Object... resources)","0","-","-","-","-"
"3078","newApplication","@Override
            public Application<Configuration> newApplication()","0","-","-","-","-"
"3079","baseUri","public URI baseUri()","0","-","-","-","-"
"3080","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"3081","getEnvironment","public Environment getEnvironment()","0","-","-","-","-"
"3082","before","public void before() throws Throwable","0","-","-","-","-"
"3083","after","public void after()","0","-","-","-","-"
"3084","check","@Override
        protected Result check()","0","-","-","-","-"
"3085","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"3086","ResourceTestJerseyConfiguration","ResourceTestJerseyConfiguration(Set<Supplier<?>> singletons, Set<Class<?>> providers, Map<String, Object> properties,
                                    ObjectMapper mapper, MetricRegistry metricRegistry, Validator validator,
                                    Consumer<ClientConfig> clientConfigurator, TestContainerFactory testContainerFactory,
                                    boolean registerDefaultExceptionMappers)","0","-","-","-","-"
"3087","getId","String getId()","0","-","-","-","-"
"3088","DropwizardTestResourceConfig","DropwizardTestResourceConfig(ResourceTestJerseyConfiguration configuration)","0","-","-","-","-"
"3089","DropwizardTestResourceConfig","DropwizardTestResourceConfig(@Context ServletConfig servletConfig)","0","-","-","-","-"
"3090","getConfiguration","private static ResourceTestJerseyConfiguration getConfiguration(@Context ServletConfig servletConfig)","0","-","-","-","-"
"3091","POJOConfigurationFactory","@SuppressWarnings(""unchecked"")
    public POJOConfigurationFactory(C cfg)","0","-","-","-","-"
"3092","build","@Override
    public C build(ConfigurationSourceProvider provider, String path)","0","-","-","-","-"
"3093","build","@Override
    public C build(File file)","0","-","-","-","-"
"3094","build","@Override
    public C build()","0","-","-","-","-"
"3095","build","@Override
    protected C build(JsonNode node, String path)","0","-","-","-","-"
"3096","config","public static ConfigOverride config(String key, String value)","0","-","-","-","-"
"3097","config","public static ConfigOverride config(String propertyPrefix, String key, String value)","0","-","-","-","-"
"3098","config","public static ConfigOverride config(String key, Supplier<String> value)","0","-","-","-","-"
"3099","config","public static ConfigOverride config(String propertyPrefix, String key, Supplier<String> value)","0","-","-","-","-"
"3100","randomPorts","public static ConfigOverride randomPorts()","0","-","-","-","-"
"3101","randomPorts","public static ConfigOverride randomPorts(String propertyPrefix)","0","-","-","-","-"
"3102","addToSystemProperties","public abstract void addToSystemProperties();","0","-","-","-","-"
"3103","removeFromSystemProperties","public abstract void removeFromSystemProperties();","0","-","-","-","-"
"3104","ResourceHelpers","private ResourceHelpers()","0","-","-","-","-"
"3105","resourceFilePath","/**
     * Detects the absolute path of a class path resource.
     *
     * @param resourceClassPathLocation the filename of the class path resource
     * @return the absolute path to the denoted resource
     */
    public static String resourceFilePath(final String resourceClassPathLocation)","0","-","-","-","-"
"3106","DropwizardTestSupport","public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3107","DropwizardTestSupport","/**
     * @since 2.0
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 @Nullable ConfigurationSourceProvider configSourceProvider,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3108","DropwizardTestSupport","/**
     * @since 2.0
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 @Nullable ConfigurationSourceProvider configSourceProvider,
                                 @Nullable String customPropertyPrefix,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3109","DropwizardTestSupport","/**
     * @since 2.0
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 @Nullable String customPropertyPrefix,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3110","DropwizardTestSupport","/**
     * @since 2.0
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 @Nullable String customPropertyPrefix,
                                 Function<Application<C>, Command> commandInstantiator,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3111","DropwizardTestSupport","/**
     * @since 2.0
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 @Nullable String configPath,
                                 @Nullable ConfigurationSourceProvider configSourceProvider,
                                 @Nullable String customPropertyPrefix,
                                 Function<Application<C>, Command> commandInstantiator,
                                 ConfigOverride... configOverrides)","0","-","-","-","-"
"3112","DropwizardTestSupport","/**
     * Alternative constructor that may be used to directly provide Configuration
     * to use, instead of specifying resource path for locating data to create
     * Configuration.
     *
     * @since 0.9
     *
     * @param applicationClass Type of Application to create
     * @param configuration Pre-constructed configuration object caller provides; will not
     *   be manipulated in any way, no overriding
     */
    public DropwizardTestSupport(Class<? extends Application<C>> applicationClass,
                                 C configuration)","0","-","-","-","-"
"3113","DropwizardTestSupport","/**
     * Alternate constructor that allows specifying the command the Dropwizard application is started with.
     * @since 1.1.0
     * @param applicationClass Type of Application to create
     * @param configuration Pre-constructed configuration object caller provides; will not
     *   be manipulated in any way, no overriding
     * @param commandInstantiator The","0","-","-","-","-"
"3114","addListener","public DropwizardTestSupport<C> addListener(ServiceListener<C> listener)","0","-","-","-","-"
"3115","manage","public DropwizardTestSupport<C> manage(final Managed managed)","0","-","-","-","-"
"3116","onRun","@Override
            public void onRun(C configuration, Environment environment, DropwizardTestSupport<C> rule) throws Exception","0","-","-","-","-"
"3117","before","public void before() throws Exception","0","-","-","-","-"
"3118","after","public void after()","0","-","-","-","-"
"3119","stopIfRequired","private void stopIfRequired()","0","-","-","-","-"
"3120","applyConfigOverrides","private void applyConfigOverrides()","0","-","-","-","-"
"3121","resetConfigOverrides","private void resetConfigOverrides()","0","-","-","-","-"
"3122","startIfRequired","private void startIfRequired() throws Exception","0","-","-","-","-"
"3123","run","@Override
            public void run(C configuration, Environment environment) throws Exception","0","-","-","-","-"
"3124","getConfiguration","public C getConfiguration()","0","-","-","-","-"
"3125","getLocalPort","public int getLocalPort()","0","-","-","-","-"
"3126","getAdminPort","public int getAdminPort()","0","-","-","-","-"
"3127","getPort","public int getPort(int connectorIndex)","0","-","-","-","-"
"3128","newApplication","public Application<C> newApplication()","0","-","-","-","-"
"3129","getApplication","@SuppressWarnings(","0","-","-","-","-"
"3130","getEnvironment","public Environment getEnvironment()","0","-","-","-","-"
"3131","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"3132","onRun","public void onRun(T configuration, Environment environment, DropwizardTestSupport<T> rule) throws Exception","0","-","-","-","-"
"3133","onStop","public void onStop(DropwizardTestSupport<T> rule) throws Exception","0","-","-","-","-"
"3134","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3135","testHelpPage","@Test
    void testHelpPage() throws Exception","0","-","-","-","-"
"3136","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3137","testFastForwardFirst","@Test
    void testFastForwardFirst() throws Exception","0","-","-","-","-"
"3138","testFastForwardAll","@Test
    void testFastForwardAll() throws Exception","0","-","-","-","-"
"3139","testFastForwardFirstDryRun","@Test
    void testFastForwardFirstDryRun() throws Exception","0","-","-","-","-"
"3140","testFastForwardAllDryRun","@Test
    void testFastForwardAllDryRun() throws Exception","0","-","-","-","-"
"3141","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3142","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3143","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3144","testRunForFileFromFilesystem","@Test
    void testRunForFileFromFilesystem() throws Exception","0","-","-","-","-"
"3145","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3146","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3147","getDataSourceFactory","@Override
        public PooledDataSourceFactory getDataSourceFactory(TestMigrationConfiguration configuration)","0","-","-","-","-"
"3148","getDataSourceFactory","@Override
        public PooledDataSourceFactory getDataSourceFactory(TestMigrationConfiguration configuration)","0","-","-","-","-"
"3149","getScopedObjects","@Override
        public Map<String, Object> getScopedObjects()","0","-","-","-","-"
"3150","run","@Override
        public void run(TestMigrationConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"3151","testMigrationsBundle","@Test
    void testMigrationsBundle()","0","-","-","-","-"
"3152","testScopedObjects","@Test
    void testScopedObjects()","0","-","-","-","-"
"3153","createSubparser","static Subparser createSubparser(AbstractLiquibaseCommand<?> command)","0","-","-","-","-"
"3154","createConfiguration","static TestMigrationConfiguration createConfiguration()","0","-","-","-","-"
"3155","createConfiguration","static TestMigrationConfiguration createConfiguration(String databaseUrl)","0","-","-","-","-"
"3156","getDatabaseUrl","static String getDatabaseUrl()","0","-","-","-","-"
"3157","tableExists","static boolean tableExists(final Handle handle, final String tableName) throws SQLException","0","-","-","-","-"
"3158","columnExists","static boolean columnExists(final Handle handle, final String tableName, final String columnName) throws SQLException","0","-","-","-","-"
"3159","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3160","testHelpPage","@Test
    void testHelpPage() throws Exception","0","-","-","-","-"
"3161","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3162","testHelpPage","@Test
    void testHelpPage() throws Exception","0","-","-","-","-"
"3163","initXmlParser","@BeforeAll
    public static void initXmlParser() throws Exception","0","-","-","-","-"
"3164","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3165","testDumpSchema","@Test
    void testDumpSchema() throws Exception","0","-","-","-","-"
"3166","testDumpSchemaAndData","@Test
    void testDumpSchemaAndData() throws Exception","0","-","-","-","-"
"3167","testDumpOnlyData","@Test
    void testDumpOnlyData() throws Exception","0","-","-","-","-"
"3168","testWriteToFile","@Test
    void testWriteToFile() throws Exception","0","-","-","-","-"
"3169","testHelpPage","@Test
    void testHelpPage()","0","-","-","-","-"
"3170","toXmlDocument","private static Document toXmlDocument(ByteArrayOutputStream baos) throws SAXException, IOException","0","-","-","-","-"
"3171","assertCreateTable","/**
     * Assert correctness of a change set with creation of a table
     *
     * @param changeSet actual XML element
     */
    private static void assertCreateTable(Element changeSet)","0","-","-","-","-"
"3172","assertInsertData","/**
     * Assert a correctness of a change set with insertion data into a table
     *
     * @param changeSet actual XML element
     */
    private static void assertInsertData(Element changeSet)","0","-","-","-","-"
"3173","getFirstElement","private static Element getFirstElement(Element root, String tagName)","0","-","-","-","-"
"3174","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3175","testRunOnMigratedDb","@Test
    void testRunOnMigratedDb() throws Exception","0","-","-","-","-"
"3176","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3177","testVerbose","@Test
    void testVerbose() throws Exception","0","-","-","-","-"
"3178","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3179","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3180","testRunMigrationWithCustomSchema","@Test
    void testRunMigrationWithCustomSchema() throws Exception","0","-","-","-","-"
"3181","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3182","testRollbackNChanges","@Test
    void testRollbackNChanges() throws Exception","0","-","-","-","-"
"3183","testRollbackNChangesAsDryRun","@Test
    void testRollbackNChangesAsDryRun() throws Exception","0","-","-","-","-"
"3184","testRollbackToDate","@Test
    void testRollbackToDate() throws Exception","0","-","-","-","-"
"3185","testRollbackToDateAsDryRun","@Test
    void testRollbackToDateAsDryRun() throws Exception","0","-","-","-","-"
"3186","testRollbackToTag","@Test
    void testRollbackToTag() throws Exception","0","-","-","-","-"
"3187","testRollbackToTagAsDryRun","@Test
    void testRollbackToTagAsDryRun() throws Exception","0","-","-","-","-"
"3188","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3189","testRunSubCommand","@Test
    void testRunSubCommand() throws Exception","0","-","-","-","-"
"3190","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3191","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3192","testHelpPage","@Test
    void testHelpPage() throws Exception","0","-","-","-","-"
"3193","testRelease","@Test
    void testRelease() throws Exception","0","-","-","-","-"
"3194","testListLocks","@Test
    void testListLocks() throws Exception","0","-","-","-","-"
"3195","testFailsWhenNoListOrRelease","@Test
    void testFailsWhenNoListOrRelease()","0","-","-","-","-"
"3196","testFailsWhenBothListAndRelease","@Test
    void testFailsWhenBothListAndRelease()","0","-","-","-","-"
"3197","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3198","setUpTest","@BeforeEach
    void setUpTest()","0","-","-","-","-"
"3199","Person","public Person(String name)","0","-","-","-","-"
"3200","getName","public String getName()","0","-","-","-","-"
"3201","setName","public void setName(String name)","0","-","-","-","-"
"3202","testCustomChange","@Test
    void testCustomChange() throws Exception","0","-","-","-","-"
"3203","testFailingCustomChange","@Test
    void testFailingCustomChange()","0","-","-","-","-"
"3204","execute","@Override
    public void execute(Database database) throws CustomChangeException","0","-","-","-","-"
"3205","getConfirmationMessage","@Override
    public String getConfirmationMessage()","0","-","-","-","-"
"3206","setUp","@Override
    public void setUp()","0","-","-","-","-"
"3207","setFileOpener","@Override
    public void setFileOpener(ResourceAccessor resourceAccessor)","0","-","-","-","-"
"3208","validate","@Override
    @Nullable
    public ValidationErrors validate(Database database)","0","-","-","-","-"
"3209","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3210","testWhenClosingAllConnectionsInPoolIsReleased","@Test
    void testWhenClosingAllConnectionsInPoolIsReleased() throws Exception","0","-","-","-","-"
"3211","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3212","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3213","testRunFirstTwoMigration","@Test
    void testRunFirstTwoMigration() throws Exception","0","-","-","-","-"
"3214","testDryRun","@Test
    void testDryRun() throws Exception","0","-","-","-","-"
"3215","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3216","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3217","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3218","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3219","testRun","@Test
    void testRun() throws Exception","0","-","-","-","-"
"3220","testPrepareOnlyChange","@Test
    void testPrepareOnlyChange() throws Exception","0","-","-","-","-"
"3221","testPrintHelp","@Test
    void testPrintHelp() throws Exception","0","-","-","-","-"
"3222","TestMigrationConfiguration","public TestMigrationConfiguration(DataSourceFactory dataSource)","0","-","-","-","-"
"3223","getDataSource","public DataSourceFactory getDataSource()","0","-","-","-","-"
"3224","getDataSourceFactory","@Override
    public DataSourceFactory getDataSourceFactory(TestMigrationConfiguration configuration)","0","-","-","-","-"
"3225","DbPrepareRollbackCommand","public DbPrepareRollbackCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3226","setOutputStream","void setOutputStream(PrintStream outputStream)","0","-","-","-","-"
"3227","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3228","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3229","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3230","initialize","@Override
    @SuppressWarnings(""unchecked"")
    public final void initialize(Bootstrap<?> bootstrap)","0","-","-","-","-"
"3231","getMigrationsFileName","public String getMigrationsFileName()","0","-","-","-","-"
"3232","name","public String name()","0","-","-","-","-"
"3233","getScopedObjects","/**
     * If overridden, enters a new","0","-","-","-","-"
"3234","DbCalculateChecksumCommand","public DbCalculateChecksumCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3235","setCheckSumConsumer","void setCheckSumConsumer(Consumer<CheckSum> checkSumConsumer)","0","-","-","-","-"
"3236","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3237","run","@Override
    public void run(Namespace namespace,
                    Liquibase liquibase) throws Exception","0","-","-","-","-"
"3238","AbstractLiquibaseCommand","protected AbstractLiquibaseCommand(String name,
                                       String description,
                                       DatabaseConfiguration<T> strategy,
                                       Class<T> configurationClass,
                                       String migrationsFileName)","0","-","-","-","-"
"3239","getConfigurationClass","@Override
    protected Class<T> getConfigurationClass()","0","-","-","-","-"
"3240","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3241","run","@Override
    @SuppressWarnings(""UseOfSystemOutOrSystemErr"")
    protected void run(@Nullable Bootstrap<T> bootstrap, Namespace namespace, T configuration) throws Exception","0","-","-","-","-"
"3242","openLiquibase","CloseableLiquibase openLiquibase(final PooledDataSourceFactory dataSourceFactory, final Namespace namespace)
            throws SQLException, LiquibaseException","0","-","-","-","-"
"3243","createDatabase","private Database createDatabase(
        ManagedDataSource dataSource,
        Namespace namespace
    ) throws SQLException, LiquibaseException","0","-","-","-","-"
"3244","run","protected abstract void run(Namespace namespace, Liquibase liquibase) throws Exception;","0","-","-","-","-"
"3245","DbTagCommand","public DbTagCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3246","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3247","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3248","CloseableLiquibase","CloseableLiquibase(
        String changeLogFile,
        ResourceAccessor resourceAccessor,
        Database database,
        ManagedDataSource dataSource
    )","0","-","-","-","-"
"3249","CloseableLiquibase","protected CloseableLiquibase(String changeLogFile, ResourceAccessor resourceAccessor, DatabaseConnection conn, ManagedDataSource dataSource) throws LiquibaseException, SQLException","0","-","-","-","-"
"3250","close","@Override
    public void close() throws LiquibaseException","0","-","-","-","-"
"3251","CloseableLiquibaseWithClassPathMigrationsFile","CloseableLiquibaseWithClassPathMigrationsFile(
        ManagedDataSource dataSource,
        Database database,
        String file
    ) throws LiquibaseException, SQLException","0","-","-","-","-"
"3252","CloseableLiquibaseWithClassPathMigrationsFile","public CloseableLiquibaseWithClassPathMigrationsFile(
        ManagedDataSource dataSource,
        String file
    ) throws LiquibaseException, SQLException","0","-","-","-","-"
"3253","DbCommand","public DbCommand(String name, DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3254","DbCommand","public DbCommand(String name, DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName, @Nullable Map<String, Object> scopedObjects)","0","-","-","-","-"
"3255","addSubcommand","private void addSubcommand(AbstractLiquibaseCommand<T> subcommand)","0","-","-","-","-"
"3256","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3257","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3258","DbFastForwardCommand","protected DbFastForwardCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3259","setPrintStream","void setPrintStream(PrintStream printStream)","0","-","-","-","-"
"3260","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3261","run","@Override
    public void run(Namespace namespace,
                    Liquibase liquibase) throws Exception","0","-","-","-","-"
"3262","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3263","DbMigrateCommand","public DbMigrateCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3264","setOutputStream","void setOutputStream(PrintStream outputStream)","0","-","-","-","-"
"3265","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3266","run","@Override
    @SuppressWarnings(""UseOfSystemOutOrSystemErr"")
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3267","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3268","DbTestCommand","public DbTestCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3269","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3270","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3271","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3272","DbRollbackCommand","public DbRollbackCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3273","setOutputStream","void setOutputStream(PrintStream outputStream)","0","-","-","-","-"
"3274","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3275","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3276","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3277","DbDumpCommand","public DbDumpCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3278","setOutputStream","void setOutputStream(PrintStream outputStream)","0","-","-","-","-"
"3279","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3280","run","@Override
    @SuppressWarnings(""UseOfSystemOutOrSystemErr"")
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3281","generateChangeLog","private void generateChangeLog(final Database database, final CatalogAndSchema catalogAndSchema,
                                   final DiffToChangeLog changeLogWriter, PrintStream outputStream,
                                   final Set<Class<? extends DatabaseObject>> compareTypes)
            throws DatabaseException, IOException, ParserConfigurationException","0","-","-","-","-"
"3282","isTrue","private static boolean isTrue(Boolean nullableCondition)","0","-","-","-","-"
"3283","DbLocksCommand","public DbLocksCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3284","setPrintStream","void setPrintStream(PrintStream printStream)","0","-","-","-","-"
"3285","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3286","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3287","firstNonNull","private static <T> T firstNonNull(T first, T second)","0","-","-","-","-"
"3288","DbClearChecksumsCommand","public DbClearChecksumsCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3289","run","@Override
    public void run(Namespace namespace,
                    Liquibase liquibase) throws Exception","0","-","-","-","-"
"3290","DbStatusCommand","public DbStatusCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3291","setOutputStream","void setOutputStream(PrintStream outputStream)","0","-","-","-","-"
"3292","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3293","run","@Override
    @SuppressWarnings(""UseOfSystemOutOrSystemErr"")
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3294","getContext","private String getContext(Namespace namespace)","0","-","-","-","-"
"3295","CloseableLiquibaseWithFileSystemMigrationsFile","CloseableLiquibaseWithFileSystemMigrationsFile(
        ManagedDataSource dataSource,
        Database database,
        String file
    ) throws LiquibaseException, SQLException","0","-","-","-","-"
"3296","CloseableLiquibaseWithFileSystemMigrationsFile","CloseableLiquibaseWithFileSystemMigrationsFile(
        ManagedDataSource dataSource,
        Database database,
        String file,
        FileSystem fileSystem
    ) throws LiquibaseException, SQLException","0","-","-","-","-"
"3297","directoryResourceAccessors","private static Collection<ResourceAccessor> directoryResourceAccessors(FileSystem fileSystem)","0","-","-","-","-"
"3298","CloseableLiquibaseWithFileSystemMigrationsFile","public CloseableLiquibaseWithFileSystemMigrationsFile(
        ManagedDataSource dataSource,
        String file
    ) throws LiquibaseException, SQLException","0","-","-","-","-"
"3299","DbDropAllCommand","public DbDropAllCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3300","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3301","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3302","DbGenerateDocsCommand","public DbGenerateDocsCommand(DatabaseConfiguration<T> strategy, Class<T> configurationClass, String migrationsFileName)","0","-","-","-","-"
"3303","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"3304","run","@Override
    public void run(Namespace namespace, Liquibase liquibase) throws Exception","0","-","-","-","-"
"3305","testLogException","@Test
    void testLogException() throws Exception","0","-","-","-","-"
"3306","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3307","testSqlExceptionIsCause","@Test
    void testSqlExceptionIsCause() throws Exception","0","-","-","-","-"
"3308","testPlainJdbiException","@Test
    void testPlainJdbiException()","0","-","-","-","-"
"3309","findGameIds","@SqlQuery(""SELECT id FROM games ORDER BY id"")
    List<Integer> findGameIds();","0","-","-","-","-"
"3310","findAllUniqueHomeTeams","@SqlQuery(""SELECT distinct home_team FROM games"")
    Set<String> findAllUniqueHomeTeams();","0","-","-","-","-"
"3311","findIdByTeamsAndDate","@SqlQuery(""SELECT id FROM games "" +
        ""WHERE home_team = :home_team "" +
        ""AND   visitor_team = visitor_team "" +
        ""AND   played_at = :played_at"")
    Optional<Integer> findIdByTeamsAndDate(@Bind(""home_team"") String homeTeam,
                                           @Bind(""visitor_team"") String visitorTeam,
                                           @Bind(""played_at"") LocalDate date);","0","-","-","-","-"
"3312","getFirstPlayedSince","@SqlQuery(""SELECT   played_at FROM games "" +
        ""WHERE    played_at < :up "" +
        ""ORDER BY played_at desc"")
    LocalDate getFirstPlayedSince(@Bind(""up"") LocalDate up);","0","-","-","-","-"
"3313","getLastPlayedDateByTeams","@SqlQuery(""SELECT   played_at FROM games "" +
        ""WHERE    home_team = :home_team "" +
        ""AND      visitor_team = :visitor_team "" +
        ""ORDER BY played_at desc"")
    @Timed(name = ""last-played-date"")
    Optional<LocalDate> getLastPlayedDateByTeams(@Bind(""home_team"") String homeTeam,
                                                 @Bind(""visitor_team"") String visitorTeam);","0","-","-","-","-"
"3314","findHomeTeamByGameId","@SqlQuery(""SELECT home_team FROM games WHERE id = :id"")
    Optional<String> findHomeTeamByGameId(@Bind(""id"") Optional<Integer> id);","0","-","-","-","-"
"3315","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3316","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"3317","fluentQueryWorks","@Test
    void fluentQueryWorks()","0","-","-","-","-"
"3318","canAcceptOptionalParams","@Test
    void canAcceptOptionalParams()","0","-","-","-","-"
"3319","canAcceptEmptyOptionalParams","@Test
    void canAcceptEmptyOptionalParams()","0","-","-","-","-"
"3320","canReturnImmutableLists","@Test
    void canReturnImmutableLists()","0","-","-","-","-"
"3321","canReturnImmutableSets","@Test
    void canReturnImmutableSets()","0","-","-","-","-"
"3322","canReturnOptional","@Test
    void canReturnOptional()","0","-","-","-","-"
"3323","canReturnEmptyOptional","@Test
    void canReturnEmptyOptional()","0","-","-","-","-"
"3324","worksWithDates","@Test
    void worksWithDates()","0","-","-","-","-"
"3325","worksWithOptionalDates","@Test
    void worksWithOptionalDates()","0","-","-","-","-"
"3326","worksWithAbsentOptionalDates","@Test
    void worksWithAbsentOptionalDates()","0","-","-","-","-"
"3327","testQueriesWorkForLocalDateTimes","@Test
    void testQueriesWorkForLocalDateTimes()","0","-","-","-","-"
"3328","testBuild","@Test
    void testBuild()","0","-","-","-","-"
"3329","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"3330","teardown","@AfterEach
    void teardown()","0","-","-","-","-"
"3331","testNoTimeoutReturnsHealthy","@Test
    void testNoTimeoutReturnsHealthy() throws Exception","0","-","-","-","-"
"3332","tesHealthyAfterWhenMissingValidationQuery","@Test
    void tesHealthyAfterWhenMissingValidationQuery() throws Exception","0","-","-","-","-"
"3333","testItTimesOutProperly","@Test
    void testItTimesOutProperly() throws Exception","0","-","-","-","-"
"3334","testUnhealthyWhenMissingValidationQuery","@Test
    void testUnhealthyWhenMissingValidationQuery() throws Exception","0","-","-","-","-"
"3335","healthCheck","private JdbiHealthCheck healthCheck()","0","-","-","-","-"
"3336","healthCheck","private JdbiHealthCheck healthCheck(@Nullable String validationQuery)","0","-","-","-","-"
"3337","myDbCall","String myDbCall();","0","-","-","-","-"
"3338","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"3339","testNoExtensionMethodShouldReturnOriginal","@Test
    void testNoExtensionMethodShouldReturnOriginal()","0","-","-","-","-"
"3340","testPrependsCorrectName","@Test
    void testPrependsCorrectName() throws NoSuchMethodException","0","-","-","-","-"
"3341","test","@Test
    void test()","0","-","-","-","-"
"3342","JdbiFactory","public JdbiFactory()","0","-","-","-","-"
"3343","JdbiFactory","public JdbiFactory(StatementNameStrategy nameStrategy)","0","-","-","-","-"
"3344","build","/**
     * Build a fully configured","0","-","-","-","-"
"3345","build","/**
     * Build a fully configured","0","-","-","-","-"
"3346","buildSQLLogger","/**
     * This creates a default","0","-","-","-","-"
"3347","newInstance","/**
     * This creates a vanilla","0","-","-","-","-"
"3348","configure","/**
     * Overridable function to allow extra customization of the created","0","-","-","-","-"
"3349","LoggingJdbiExceptionMapper","/**
     * @since 2.0
     */
    public LoggingJdbiExceptionMapper()","0","-","-","-","-"
"3350","LoggingJdbiExceptionMapper","/**
     * @since 2.0
     */
    LoggingJdbiExceptionMapper(Logger logger)","0","-","-","-","-"
"3351","logException","@Override
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    protected void logException(long id, JdbiException exception)","0","-","-","-","-"
"3352","LoggingSQLExceptionMapper","/**
     * @since 2.0
     */
    LoggingSQLExceptionMapper(Logger logger)","0","-","-","-","-"
"3353","LoggingSQLExceptionMapper","/**
     * @since 2.0
     */
    public LoggingSQLExceptionMapper()","0","-","-","-","-"
"3354","logException","@Override
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    protected void logException(long id, SQLException exception)","0","-","-","-","-"
"3355","JdbiHealthCheck","public JdbiHealthCheck(ExecutorService executorService, Duration duration, Jdbi jdbi, Optional<String> validationQuery)","0","-","-","-","-"
"3356","JdbiHealthCheck","public JdbiHealthCheck(Jdbi jdbi, Optional<String> validationQuery)","0","-","-","-","-"
"3357","check","@Override
    protected Result check() throws Exception","0","-","-","-","-"
"3358","NamePrependingTemplateEngine","/**
     * @param originalEngine    The original","0","-","-","-","-"
"3359","render","@Override
    public String render(String template, StatementContext ctx)","0","-","-","-","-"
"3360","run","@Override
    public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"3361","writeToShouldUseValidRenderer","@Test
    void writeToShouldUseValidRenderer() throws IOException","0","-","-","-","-"
"3362","writeToShouldThrowWhenNoValidRendererFound","@Test
    void writeToShouldThrowWhenNoValidRendererFound()","0","-","-","-","-"
"3363","writeToShouldHandleViewRenderingExceptions","@Test
    void writeToShouldHandleViewRenderingExceptions() throws IOException","0","-","-","-","-"
"3364","detectLocaleShouldHandleBadlyFormedHeader","@Test
    void detectLocaleShouldHandleBadlyFormedHeader()","0","-","-","-","-"
"3365","detectLocaleShouldReturnDefaultLocaleWhenHeaderNotSpecified","@Test
    void detectLocaleShouldReturnDefaultLocaleWhenHeaderNotSpecified()","0","-","-","-","-"
"3366","detectLocaleShouldReturnCorrectLocale","@Test
    void detectLocaleShouldReturnCorrectLocale()","0","-","-","-","-"
"3367","hasATemplate","@Test
    void hasATemplate()","0","-","-","-","-"
"3368","getViewRendererConfiguration","@JsonProperty(""viewRendererConfiguration"")
        public Map<String, Map<String, String>> getViewRendererConfiguration()","0","-","-","-","-"
"3369","setViewRendererConfiguration","@JsonProperty(""viewRendererConfiguration"")
        public void setViewRendererConfiguration(Map<String, Map<String, String>> viewRendererConfiguration)","0","-","-","-","-"
"3370","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3371","addsTheViewMessageBodyWriterToTheEnvironment","@Test
    void addsTheViewMessageBodyWriterToTheEnvironment() throws Exception","0","-","-","-","-"
"3372","addsTheViewMessageBodyWriterWithSingleViewRendererToTheEnvironment","@Test
    void addsTheViewMessageBodyWriterWithSingleViewRendererToTheEnvironment() throws Exception","0","-","-","-","-"
"3373","isRenderable","@Override
            public boolean isRenderable(View view)","0","-","-","-","-"
"3374","render","@Override
            public void render(View view, Locale locale, OutputStream output) throws WebApplicationException","0","-","-","-","-"
"3375","configure","@Override
            public void configure(Map<String, String> options)","0","-","-","-","-"
"3376","getConfigurationKey","@Override
            public String getConfigurationKey()","0","-","-","-","-"
"3377","getViewConfiguration","@Override
            public Map<String, Map<String, String>> getViewConfiguration(MyConfiguration configuration)","0","-","-","-","-"
"3378","isRenderable","/**
     * Returns","0","-","-","-","-"
"3379","render","/**
     * Renders the given","0","-","-","-","-"
"3380","configure","/**
      * options for configuring the view renderer
      * @param options
     */
    void configure(Map<String, String> options);","0","-","-","-","-"
"3381","getConfigurationKey","/**
     * @return the key to use in the view configurations, i.e. 'freemarker' or 'mustache'.
     */
    String getConfigurationKey();","0","-","-","-","-"
"3382","getViewConfiguration","Map<String, Map<String, String>> getViewConfiguration(T configuration);","0","-","-","-","-"
"3383","toResponse","@Override
    public Response toResponse(WebApplicationException exception)","0","-","-","-","-"
"3384","isMappable","@Override
    public boolean isMappable(WebApplicationException e)","0","-","-","-","-"
"3385","View","/**
     * Creates a new view.
     *
     * @param templateName the name of the template resource
     */
    protected View(String templateName)","0","-","-","-","-"
"3386","View","/**
     * Creates a new view.
     *
     * @param templateName the name of the template resource
     * @param charset      the character set for","0","-","-","-","-"
"3387","getTemplateName","/**
     * Returns the template name.
     *
     * @return the template name
     */
    @JsonIgnore
    public String getTemplateName()","0","-","-","-","-"
"3388","getCharset","/**
     * Returns the character set of the template.
     *
     * @return the character set of the template
     */
    @JsonIgnore
    public Optional<Charset> getCharset()","0","-","-","-","-"
"3389","resolveName","private String resolveName(String templateName)","0","-","-","-","-"
"3390","setHeaders","void setHeaders(HttpHeaders headers)","0","-","-","-","-"
"3391","ViewMessageBodyWriter","public ViewMessageBodyWriter(MetricRegistry metricRegistry, Iterable<ViewRenderer> viewRenderers)","0","-","-","-","-"
"3392","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"3393","getSize","@Override
    public long getSize(View t,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType)","0","-","-","-","-"
"3394","writeTo","@Override
    public void writeTo(View t,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType,
                        MultivaluedMap<String, Object> httpHeaders,
                        OutputStream entityStream) throws IOException","0","-","-","-","-"
"3395","detectLocale","protected Locale detectLocale(HttpHeaders headers)","0","-","-","-","-"
"3396","getRenderers","Iterable<ViewRenderer> getRenderers()","0","-","-","-","-"
"3397","ViewBundle","public ViewBundle()","0","-","-","-","-"
"3398","ViewBundle","public ViewBundle(Iterable<ViewRenderer> viewRenderers)","0","-","-","-","-"
"3399","getViewConfiguration","@Override
    public Map<String, Map<String, String>> getViewConfiguration(T configuration)","0","-","-","-","-"
"3400","run","@Override
    public void run(T configuration, Environment environment) throws Exception","0","-","-","-","-"
"3401","ViewRenderException","/**
     * Constructs a","0","-","-","-","-"
"3402","ViewRenderException","/**
     * Constructs an","0","-","-","-","-"
"3403","ViewRenderException","/**
     * Constructs an","0","-","-","-","-"
"3404","main","public static void main(String args[])","0","-","-","-","-"
"3405","downloadFileFromURL","private static void downloadFileFromURL(String urlString, File destination) throws Exception","0","-","-","-","-"
"3406","getPasswordAuthentication","@Override
                protected PasswordAuthentication getPasswordAuthentication()","0","-","-","-","-"
"3407","createDefaultFactory","@Test
    void createDefaultFactory() throws Exception","0","-","-","-","-"
"3408","createDefaultFactoryFailsUnknownProperty","@Test
    void createDefaultFactoryFailsUnknownProperty()","0","-","-","-","-"
"3409","createFactoryAllowingUnknownProperties","@Test
    void createFactoryAllowingUnknownProperties() throws Exception","0","-","-","-","-"
"3410","configureObjectMapper","@Override
        protected ObjectMapper configureObjectMapper(ObjectMapper objectMapper)","0","-","-","-","-"
"3411","getPort","public int getPort()","0","-","-","-","-"
"3412","getExample","public ExampleInterface getExample()","0","-","-","-","-"
"3413","getExampleWithDefault","public ExampleInterfaceWithDefaultImpl getExampleWithDefault()","0","-","-","-","-"
"3414","getExampleWithDefaults","public List<ExampleInterfaceWithDefaultImpl> getExampleWithDefaults()","0","-","-","-","-"
"3415","getArray","public String[] getArray()","0","-","-","-","-"
"3416","getList","public List<String> getList()","0","-","-","-","-"
"3417","getSet","public Set<String> getSet()","0","-","-","-","-"
"3418","getMapper","@JsonProperty
        public ObjectMapper getMapper()","0","-","-","-","-"
"3419","getSelfReferencingConfiguration","@JsonProperty
        public SelfReferencingConfiguration getSelfReferencingConfiguration()","0","-","-","-","-"
"3420","getStr","@JsonProperty
        public String getStr()","0","-","-","-","-"
"3421","getSelfReferencingConfiguration","@JsonIgnore
        public SelfReferencingConfiguration getSelfReferencingConfiguration()","0","-","-","-","-"
"3422","getStr","@JsonProperty
        public String getStr()","0","-","-","-","-"
"3423","getNumber","public Long getNumber()","0","-","-","-","-"
"3424","getIgnored","public SelfReferencingConfiguration getIgnored()","0","-","-","-","-"
"3425","shouldDiscoverAllFields","@ParameterizedTest
    @MethodSource(""provideArgsForShouldDiscoverAllFields"")
    void shouldDiscoverAllFields(String name, boolean isPrimitive,
                                        boolean isCollectionOrArrayType,
                                        Class<?> klass)","0","-","-","-","-"
"3426","provideArgsForShouldDiscoverAllFields","private static Stream<Arguments> provideArgsForShouldDiscoverAllFields()","0","-","-","-","-"
"3427","isCollectionOfStringsShouldWork","@ParameterizedTest
    @MethodSource(""provideArgsForIsCollectionOfStringsShouldWork"")
    void isCollectionOfStringsShouldWork(String name, boolean isCollectionOfStrings)","0","-","-","-","-"
"3428","provideArgsForIsCollectionOfStringsShouldWork","private static Stream<Arguments> provideArgsForIsCollectionOfStringsShouldWork()","0","-","-","-","-"
"3429","issue3528ShouldNotProduceOutOfMemoryError","@Test
    void issue3528ShouldNotProduceOutOfMemoryError()","0","-","-","-","-"
"3430","fieldsAnnotatedWithJsonIgnoreShouldBeIgnored","@Test
    void fieldsAnnotatedWithJsonIgnoreShouldBeIgnored()","0","-","-","-","-"
"3431","selfReferencingConfigurationShouldNotLoop","@Test
    void selfReferencingConfigurationShouldNotLoop()","0","-","-","-","-"
"3432","readsFileContents","@ParameterizedTest
    @ValueSource(strings =","0","-","-","-","-"
"3433","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3434","formatsTheViolationsIntoAHumanReadableMessage","@Test
    void formatsTheViolationsIntoAHumanReadableMessage()","0","-","-","-","-"
"3435","retainsTheSetOfExceptions","@Test
    void retainsTheSetOfExceptions()","0","-","-","-","-"
"3436","isDefaultLocaleEnglish","private static boolean isDefaultLocaleEnglish()","0","-","-","-","-"
"3437","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3438","defaultJsonFactoryFailsOnComment","@Test
    void defaultJsonFactoryFailsOnComment()","0","-","-","-","-"
"3439","configuredMapperAllowsComment","@Test
    void configuredMapperAllowsComment() throws IOException, ConfigurationException","0","-","-","-","-"
"3440","readsFileContents","@Test
    void readsFileContents() throws Exception","0","-","-","-","-"
"3441","shouldSubstituteCorrectly","@Test
    void shouldSubstituteCorrectly() throws IOException","0","-","-","-","-"
"3442","shouldSubstituteOnlyExistingVariables","@Test
    void shouldSubstituteOnlyExistingVariables() throws IOException","0","-","-","-","-"
"3443","shouldSubstituteWithDefaultValue","@Test
    void shouldSubstituteWithDefaultValue() throws IOException","0","-","-","-","-"
"3444","shouldNotBeVulnerableToCVE_2022_42889","@Test
    void shouldNotBeVulnerableToCVE_2022_42889() throws IOException","0","-","-","-","-"
"3445","open","@Override
        public InputStream open(String s)","0","-","-","-","-"
"3446","defaultConstructorDisablesSubstitutionInVariables","@Test
    void defaultConstructorDisablesSubstitutionInVariables()","0","-","-","-","-"
"3447","defaultConstructorEnablesStrict","@Test
    @DisabledIfEnvironmentVariable(named = ""DOES_NOT_EXIST"", matches = "".*"")
    void defaultConstructorEnablesStrict()","0","-","-","-","-"
"3448","constructorEnablesSubstitutionInVariables","@Test
    void constructorEnablesSubstitutionInVariables()","0","-","-","-","-"
"3449","substitutorReplacesWithEnvironmentVariables","@Test
    void substitutorReplacesWithEnvironmentVariables()","0","-","-","-","-"
"3450","substitutorStrictWithDefaults","@Test
    void substitutorStrictWithDefaults()","0","-","-","-","-"
"3451","substitutorStrictRecurse","@Test
    @DisabledIfEnvironmentVariable(named = ""DOES_NOT_EXIST"", matches = "".*"")
    void substitutorStrictRecurse()","0","-","-","-","-"
"3452","substitutorThrowsExceptionInStrictMode","@Test
    @DisabledIfEnvironmentVariable(named = ""DOES_NOT_EXIST"", matches = "".*"")
    void substitutorThrowsExceptionInStrictMode()","0","-","-","-","-"
"3453","substitutorReplacesRecursively","@Test
    void substitutorReplacesRecursively()","0","-","-","-","-"
"3454","shouldNotBeVulnerableToCVE_2022_42889","@Test
    void shouldNotBeVulnerableToCVE_2022_42889()","0","-","-","-","-"
"3455","readsFileContents","@Test
    void readsFileContents() throws Exception","0","-","-","-","-"
"3456","configurationWithCustomDeserializerCanBeRead","@Test
    void configurationWithCustomDeserializerCanBeRead() throws IOException, ConfigurationException","0","-","-","-","-"
"3457","CustomProperty","CustomProperty(String customString)","0","-","-","-","-"
"3458","CustomDeserializer","public CustomDeserializer()","0","-","-","-","-"
"3459","deserialize","@Override
        public CustomProperty deserialize(JsonParser parser, DeserializationContext context) throws IOException","0","-","-","-","-"
"3460","getPort","public int getPort()","0","-","-","-","-"
"3461","create","public static ExampleServer create(int port)","0","-","-","-","-"
"3462","getName","public String getName()","0","-","-","-","-"
"3463","getType","public List<String> getType()","0","-","-","-","-"
"3464","getProperties","public Map<String, String> getProperties()","0","-","-","-","-"
"3465","getServers","public List<ExampleServer> getServers()","0","-","-","-","-"
"3466","isAdmin","public boolean isAdmin()","0","-","-","-","-"
"3467","setAdmin","public void setAdmin(boolean admin)","0","-","-","-","-"
"3468","getLogger","public Map<String, String> getLogger()","0","-","-","-","-"
"3469","NonInstantiableExample","NonInstantiableExample(@JsonProperty(""name"") String name)","0","-","-","-","-"
"3470","build","@Override
        public Example build(ConfigurationSourceProvider provider, String path)","0","-","-","-","-"
"3471","build","@Override
        public Example build()","0","-","-","-","-"
"3472","resetConfigOverrides","@AfterEach
    void resetConfigOverrides()","0","-","-","-","-"
"3473","usesDefaultedCacheBuilderSpec","@Test
    void usesDefaultedCacheBuilderSpec() throws Exception","0","-","-","-","-"
"3474","loadsValidConfigFiles","@Test
    void loadsValidConfigFiles() throws Exception","0","-","-","-","-"
"3475","handlesSimpleOverride","@Test
    void handlesSimpleOverride() throws Exception","0","-","-","-","-"
"3476","handlesExistingOverrideWithPeriod","@Test
    void handlesExistingOverrideWithPeriod() throws Exception","0","-","-","-","-"
"3477","handlesNewOverrideWithPeriod","@Test
    void handlesNewOverrideWithPeriod() throws Exception","0","-","-","-","-"
"3478","handlesArrayOverride","@Test
    void handlesArrayOverride() throws Exception","0","-","-","-","-"
"3479","handlesArrayOverrideEscaped","@Test
    void handlesArrayOverrideEscaped() throws Exception","0","-","-","-","-"
"3480","handlesSingleElementArrayOverride","@Test
    void handlesSingleElementArrayOverride() throws Exception","0","-","-","-","-"
"3481","handlesArrayOverrideIntoValidNoTypeFile","@Test
    void handlesArrayOverrideIntoValidNoTypeFile() throws Exception","0","-","-","-","-"
"3482","overridesArrayWithIndices","@Test
    void overridesArrayWithIndices() throws Exception","0","-","-","-","-"
"3483","overridesArrayWithIndicesReverse","@Test
    void overridesArrayWithIndicesReverse() throws Exception","0","-","-","-","-"
"3484","overridesArrayPropertiesWithIndices","@Test
    void overridesArrayPropertiesWithIndices() throws Exception","0","-","-","-","-"
"3485","overrideMapProperty","@Test
    void overrideMapProperty() throws Exception","0","-","-","-","-"
"3486","throwsAnExceptionOnUnexpectedArrayOverride","@Test
    void throwsAnExceptionOnUnexpectedArrayOverride()","0","-","-","-","-"
"3487","throwsAnExceptionOnArrayOverrideWithInvalidType","@Test
    void throwsAnExceptionOnArrayOverrideWithInvalidType()","0","-","-","-","-"
"3488","throwsAnExceptionOnOverrideArrayIndexOutOfBounds","@Test
    void throwsAnExceptionOnOverrideArrayIndexOutOfBounds()","0","-","-","-","-"
"3489","throwsAnExceptionOnOverrideArrayPropertyIndexOutOfBounds","@Test
    void throwsAnExceptionOnOverrideArrayPropertyIndexOutOfBounds()","0","-","-","-","-"
"3490","throwsAnExceptionOnMalformedFiles","@Test
    void throwsAnExceptionOnMalformedFiles()","0","-","-","-","-"
"3491","throwsAnExceptionOnEmptyFiles","@Test
    void throwsAnExceptionOnEmptyFiles()","0","-","-","-","-"
"3492","throwsAnExceptionOnInvalidFiles","@Test
    void throwsAnExceptionOnInvalidFiles()","0","-","-","-","-"
"3493","handleOverrideDefaultConfiguration","@Test
    void handleOverrideDefaultConfiguration() throws Exception","0","-","-","-","-"
"3494","handleDefaultConfigurationWithoutOverriding","@Test
    void handleDefaultConfigurationWithoutOverriding() throws Exception","0","-","-","-","-"
"3495","throwsAnExceptionIfDefaultConfigurationCantBeInstantiated","@Test
    void throwsAnExceptionIfDefaultConfigurationCantBeInstantiated()","0","-","-","-","-"
"3496","incorrectTypeIsFound","@Test
    void incorrectTypeIsFound()","0","-","-","-","-"
"3497","printsDetailedInformationOnMalformedContent","@Test
    void printsDetailedInformationOnMalformedContent()","0","-","-","-","-"
"3498","testLevenshteinComparatorSort","/**
     * An","0","-","-","-","-"
"3499","testLevenshteinCompare","@Test
    void testLevenshteinCompare()","0","-","-","-","-"
"3500","setUp","@BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"3501","YamlConfigurationFactory","/**
     * Creates a new configuration factory for the given class.
     *
     * @param klass          the configuration class
     * @param validator      the validator to use
     * @param objectMapper   the Jackson","0","-","-","-","-"
"3502","UndefinedEnvironmentVariableException","/**
     * Constructs a new exception with the given error message.
     *
     * @param errorMessage the error message
     */
    public UndefinedEnvironmentVariableException(String errorMessage)","0","-","-","-","-"
"3503","build","/**
     * Loads, parses, binds, and validates a configuration object.
     *
     * @param provider the provider to use for reading configuration files
     * @param path     the path of the configuration file
     * @return a validated configuration object
     * @throws IOException            if there is an error reading the file
     * @throws ConfigurationException if there is an error parsing or validating the file
     */
    T build(ConfigurationSourceProvider provider, String path) throws IOException, ConfigurationException;","0","-","-","-","-"
"3504","build","/**
     * Loads, parses, binds, and validates a configuration object from a file.
     *
     * @param file the path of the configuration file
     * @return a validated configuration object
     * @throws IOException            if there is an error reading the file
     * @throws ConfigurationException if there is an error parsing or validating the file
     */
    default T build(File file) throws IOException, ConfigurationException","0","-","-","-","-"
"3505","build","/**
     * Loads, parses, binds, and validates a configuration object from an empty document.
     *
     * @return a validated configuration object
     * @throws IOException            if there is an error reading the file
     * @throws ConfigurationException if there is an error parsing or validating the file
     */
    T build() throws IOException, ConfigurationException;","0","-","-","-","-"
"3506","ConfigurationMetadata","/**
     * Create a metadata instance and
     *
     * @param mapper the","0","-","-","-","-"
"3507","getTypeOfField","private Optional<JavaType> getTypeOfField(String fieldName)","0","-","-","-","-"
"3508","isCollectionOfStrings","/**
     * Check if a field is a collection of strings.
     *
     * @param fieldName the field name
     * @return true, if the field is a collection of strings
     */
    public boolean isCollectionOfStrings(String fieldName)","0","-","-","-","-"
"3509","expectObjectFormat","@Override
    public JsonObjectFormatVisitor expectObjectFormat(JavaType type) throws JsonMappingException","0","-","-","-","-"
"3510","optionalProperty","@Override
            public void optionalProperty(BeanProperty prop) throws JsonMappingException","0","-","-","-","-"
"3511","ConfigurationException","/**
     * Creates a new ConfigurationException for the given path with the given errors.
     *
     * @param path      the bad configuration path
     * @param errors    the errors in the path
     */
    protected ConfigurationException(String path, Collection<String> errors)","0","-","-","-","-"
"3512","ConfigurationException","/**
     * Creates a new ConfigurationException for the given path with the given errors and cause.
     *
     * @param path      the bad configuration path
     * @param errors    the errors in the path
     * @param cause     the cause of the error(s)
     */
    protected ConfigurationException(String path, Collection<String> errors, Throwable cause)","0","-","-","-","-"
"3513","getErrors","/**
     * Returns the configuration errors.
     *
     * @return a collection of strings representing the configuration errors
     */
    public Collection<String> getErrors()","0","-","-","-","-"
"3514","formatMessage","/**
     * Formats a message for the exception reporting the errors that occurred related to the configuration.
     *
     * @param file the configuration file
     * @param errors the configuration errors
     * @return the formatted message
     */
    protected static String formatMessage(String file, Collection<String> errors)","0","-","-","-","-"
"3515","JsonConfigurationFactory","/**
     * Creates a new configuration factory for the given class.
     *
     * @param klass          the configuration class
     * @param validator      the validator to use
     * @param objectMapper   the Jackson","0","-","-","-","-"
"3516","SubstitutingSourceProvider","/**
     * Create a new instance.
     *
     * @param delegate    The underlying","0","-","-","-","-"
"3517","open","/**
     *","0","-","-","-","-"
"3518","open","@Override
    public InputStream open(String path) throws IOException","0","-","-","-","-"
"3519","Builder","Builder(String summary)","0","-","-","-","-"
"3520","getSummary","/**
         * Returns a brief message summarizing the error.
         *
         * @return a brief message summarizing the error.
         */
        public String getSummary()","0","-","-","-","-"
"3521","getDetail","/**
         * Returns a detailed description of the error.
         *
         * @return a detailed description of the error or the empty String if there is none.
         */
        public String getDetail()","0","-","-","-","-"
"3522","hasDetail","/**
         * Determines if a detailed description of the error has been set.
         *
         * @return true if there is a detailed description of the error; false if there is not.
         */
        public boolean hasDetail()","0","-","-","-","-"
"3523","getFieldPath","/**
         * Returns the path to the problematic JSON field, if there is one.
         *
         * @return a","0","-","-","-","-"
"3524","hasFieldPath","/**
         * Determines if the path to a JSON field has been set.
         *
         * @return true if the path to a JSON field has been set for the error; false if no path has
         *         yet been set.
         */
        public boolean hasFieldPath()","0","-","-","-","-"
"3525","getLine","/**
         * Returns the line number of the source of the problem.
         * <p/>
         * Note: the line number is indexed from zero.
         *
         * @return the line number of the source of the problem, or -1 if unknown.
         */
        public int getLine()","0","-","-","-","-"
"3526","getColumn","/**
         * Returns the column number of the source of the problem.
         * <p/>
         * Note: the column number is indexed from zero.
         *
         * @return the column number of the source of the problem, or -1 if unknown.
         */
        public int getColumn()","0","-","-","-","-"
"3527","hasLocation","/**
         * Determines if a location (line and column numbers) have been set.
         *
         * @return true if both a line and column number has been set; false if only one or neither
         *         have been set.
         */
        public boolean hasLocation()","0","-","-","-","-"
"3528","getSuggestions","/**
         * Returns a list of suggestions.
         * <p/>
         * If a","0","-","-","-","-"
"3529","hasSuggestions","/**
         * Determines whether suggestions are available.
         *
         * @return true if suggestions are available; false if they are not.
         */
        public boolean hasSuggestions()","0","-","-","-","-"
"3530","getSuggestionBase","/**
         * Returns the base for ordering suggestions.
         * <p/>
         * Suggestions will be ordered such that suggestions closer to the base will appear first.
         *
         * @return the base for suggestions.
         */
        @Nullable
        public String getSuggestionBase()","0","-","-","-","-"
"3531","hasSuggestionBase","/**
         * Determines whether a suggestion base is available.
         * <p/>
         * If no base is available, suggestions will not be sorted.
         *
         * @return true if a base is available for suggestions; false if there is none.
         */
        public boolean hasSuggestionBase()","0","-","-","-","-"
"3532","getCause","/**
         * Returns the","0","-","-","-","-"
"3533","hasCause","/**
         * Determines whether a cause has been set.
         *
         * @return true if there is a cause; false if there is none.
         */
        public boolean hasCause()","0","-","-","-","-"
"3534","setCause","Builder setCause(Exception cause)","0","-","-","-","-"
"3535","setDetail","Builder setDetail(@Nullable String detail)","0","-","-","-","-"
"3536","setFieldPath","Builder setFieldPath(List<JsonMappingException.Reference> fieldPath)","0","-","-","-","-"
"3537","setLocation","Builder setLocation(JsonLocation location)","0","-","-","-","-"
"3538","setLocation","Builder setLocation(int line, int column)","0","-","-","-","-"
"3539","addSuggestion","Builder addSuggestion(String suggestion)","0","-","-","-","-"
"3540","addSuggestions","Builder addSuggestions(Collection<String> suggestions)","0","-","-","-","-"
"3541","setSuggestionBase","Builder setSuggestionBase(String base)","0","-","-","-","-"
"3542","build","ConfigurationParsingException build(String path)","0","-","-","-","-"
"3543","buildPath","private String buildPath(Iterable<JsonMappingException.Reference> path)","0","-","-","-","-"
"3544","LevenshteinComparator","public LevenshteinComparator(String base)","0","-","-","-","-"
"3545","compare","/**
             * Compares two Strings with respect to the base String, by Levenshtein distance.
             * <p/>
             * The input that is the closest match to the base String will sort before the other.
             *
             * @param a an input to compare relative to the base.
             * @param b an input to compare relative to the base.
             *
             * @return -1 if","0","-","-","-","-"
"3546","writeObject","/**
             * Serializes this comparator to the given","0","-","-","-","-"
"3547","readObject","/**
             * Deserializes this comparator from a given","0","-","-","-","-"
"3548","builder","/**
     * Create a mutable","0","-","-","-","-"
"3549","ConfigurationParsingException","/**
     * Creates a new ConfigurationParsingException for the given path with the given error.
     *
     * @param path   the bad configuration path
     * @param msg    the full error message
     */
    private ConfigurationParsingException(String path, String msg)","0","-","-","-","-"
"3550","ConfigurationParsingException","/**
     * Creates a new ConfigurationParsingException for the given path with the given error.
     *
     * @param path   the bad configuration path
     * @param msg    the full error message
     * @param cause  the cause of the parsing error.
     */
    private ConfigurationParsingException(String path, String msg, Throwable cause)","0","-","-","-","-"
"3551","create","/**
     * Creates a new configuration factory for the given class.
     *
     * @param klass          the configuration class
     * @param validator      the validator to use
     * @param objectMapper   the Jackson","0","-","-","-","-"
"3552","open","@Override
    public InputStream open(String path) throws IOException","0","-","-","-","-"
"3553","getResourceAsStream","private InputStream getResourceAsStream(String path)","0","-","-","-","-"
"3554","create","@Override
    public ConfigurationFactory<T> create(
            Class<T>     klass,
            Validator    validator,
            ObjectMapper objectMapper,
            String       propertyPrefix)","0","-","-","-","-"
"3555","configureObjectMapper","/**
     * Provides additional configuration for the","0","-","-","-","-"
"3556","BaseConfigurationFactory","/**
     * Creates a new configuration factory for the given class.
     *
     * @param parserFactory  the factory that creates the parser used
     * @param formatName     the name of the format parsed by this factory (used in exceptions)
     * @param klass          the configuration class
     * @param validator      the validator to use
     * @param objectMapper   the object mapper to use
     * @param propertyPrefix the system property name prefix used by overrides
     */
    protected BaseConfigurationFactory(JsonFactory parserFactory,
                                    String formatName,
                                    Class<T> klass,
                                    @Nullable Validator validator,
                                    ObjectMapper objectMapper,
                                    String propertyPrefix)","0","-","-","-","-"
"3557","build","@Override
    public T build(ConfigurationSourceProvider provider, String path) throws IOException, ConfigurationException","0","-","-","-","-"
"3558","createParser","/**
     * Constructs a","0","-","-","-","-"
"3559","build","@Override
    public T build() throws IOException, ConfigurationException","0","-","-","-","-"
"3560","build","/**
     * Loads, parses, binds, and validates a configuration object for a given","0","-","-","-","-"
"3561","addOverride","/**
     * Applies an override to a given","0","-","-","-","-"
"3562","validate","private void validate(String path, T config) throws ConfigurationValidationException","0","-","-","-","-"
"3563","open","@Override
    public InputStream open(String path) throws IOException","0","-","-","-","-"
"3564","EnvironmentVariableSubstitutor","/**
     * Constructs a new environment variable substitutor with strict checking and no substitution done in variables.
     */
    public EnvironmentVariableSubstitutor()","0","-","-","-","-"
"3565","EnvironmentVariableSubstitutor","/**
     * Constructs a new environment variable substitutor with no substitution done in variables.
     *
     * @param strict whether to use strict variable checking
     */
    public EnvironmentVariableSubstitutor(boolean strict)","0","-","-","-","-"
"3566","EnvironmentVariableSubstitutor","/**
     * Constructs a new environment variable substitutor.
     *
     * @param strict","0","-","-","-","-"
"3567","substitute","@Override
    protected boolean substitute(TextStringBuilder buf, int offset, int length)","0","-","-","-","-"
"3568","ConfigurationValidationException","/**
     * Creates a new ConfigurationException for the given path with the given errors.
     *
     * @param path      the bad configuration path
     * @param errors    the errors in the path
     * @param <T> the type of the root bean of a constraint violation
     */
    public <T> ConfigurationValidationException(String path, Set<ConstraintViolation<T>> errors)","0","-","-","-","-"
"3569","getConstraintViolations","/**
     * Returns the set of constraint violations in the configuration.
     *
     * @return the set of constraint violations
     */
    public Set<ConstraintViolation<?>> getConstraintViolations()","0","-","-","-","-"
"3570","open","/**
     * Returns an","0","-","-","-","-"
"3571","passesThroughNonHttpRequests","@Test
    void passesThroughNonHttpRequests() throws Exception","0","-","-","-","-"
"3572","setsACacheHeaderOnTheResponse","@Test
    void setsACacheHeaderOnTheResponse() throws Exception","0","-","-","-","-"
"3573","execute","@Override
        public void execute(Map<String, List<String>> parameters, String body, PrintWriter output)","0","-","-","-","-"
"3574","throwsExceptionWhenCallingExecuteWithoutThePostBody","@SuppressWarnings(""deprecation"")
    @Test
    void throwsExceptionWhenCallingExecuteWithoutThePostBody()","0","-","-","-","-"
"3575","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"3576","returnsA404WhenNotFound","@Test
    void returnsA404WhenNotFound() throws Exception","0","-","-","-","-"
"3577","runsATaskWhenFound","@Test
    void runsATaskWhenFound() throws Exception","0","-","-","-","-"
"3578","responseHasSpecifiedContentType","@Test
    void responseHasSpecifiedContentType() throws Exception","0","-","-","-","-"
"3579","responseHasDefaultContentTypeWhenNoneSpecified","@Test
    void responseHasDefaultContentTypeWhenNoneSpecified() throws Exception","0","-","-","-","-"
"3580","passesQueryStringParamsAlong","@Test
    void passesQueryStringParamsAlong() throws Exception","0","-","-","-","-"
"3581","passesPostBodyAlongToPostBodyTasks","@Test
    void passesPostBodyAlongToPostBodyTasks() throws Exception","0","-","-","-","-"
"3582","returnsA500OnExceptions","@Test
    @SuppressWarnings(""unchecked"")
    void returnsA500OnExceptions() throws Exception","0","-","-","-","-"
"3583","verifyTaskExecuteMethod","/**
     * Add a test to make sure the signature of the Task class does not change as the TaskServlet
     * depends on this to perform record metrics on Tasks
     */
    @Test
    void verifyTaskExecuteMethod() throws NoSuchMethodException","0","-","-","-","-"
"3584","verifyPostBodyTaskExecuteMethod","@Test
    void verifyPostBodyTaskExecuteMethod() throws NoSuchMethodException","0","-","-","-","-"
"3585","returnAllTaskNamesLexicallyOnGet","@Test
    void returnAllTaskNamesLexicallyOnGet() throws Exception","0","-","-","-","-"
"3586","returnsA404WhenGettingUnknownTask","@Test
    void returnsA404WhenGettingUnknownTask() throws Exception","0","-","-","-","-"
"3587","returnsA405WhenGettingTaskByName","@Test
    void returnsA405WhenGettingTaskByName() throws Exception","0","-","-","-","-"
"3588","testRunsTimedTask","@Test
    void testRunsTimedTask() throws Exception","0","-","-","-","-"
"3589","execute","@Override
            @Timed(name = ""vacuum-cleaning"")
            public void execute(Map<String, List<String>> parameters, PrintWriter output)","0","-","-","-","-"
"3590","testRunsMeteredTask","@Test
    void testRunsMeteredTask() throws Exception","0","-","-","-","-"
"3591","execute","@Override
            @Metered(name = ""vacuum-cleaning"")
            public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"3592","testRunsExceptionMeteredTask","@Test
    void testRunsExceptionMeteredTask() throws Exception","0","-","-","-","-"
"3593","execute","@Override
            @ExceptionMetered(name = ""vacuum-cleaning-exceptions"")
            public void execute(Map<String, List<String>> parameters, PrintWriter output)","0","-","-","-","-"
"3594","testReturnsA404ForTaskRoot","@Test
    void testReturnsA404ForTaskRoot() throws ServletException, IOException","0","-","-","-","-"
"3595","testPrintStackTrackWhenEnabled","@Test
    void testPrintStackTrackWhenEnabled() throws Exception","0","-","-","-","-"
"3596","testDoNotPrintStackTrackWhenDisabled","@Test
    void testDoNotPrintStackTrackWhenDisabled() throws Exception","0","-","-","-","-"
"3597","TestServletInputStream","public TestServletInputStream(InputStream delegate)","0","-","-","-","-"
"3598","isFinished","@Override
        public boolean isFinished()","0","-","-","-","-"
"3599","isReady","@Override
        public boolean isReady()","0","-","-","-","-"
"3600","setReadListener","@Override
        public void setReadListener(ReadListener readListener)","0","-","-","-","-"
"3601","read","@Override
        public int read() throws IOException","0","-","-","-","-"
"3602","configuresSpecificLevelForALogger","@Test
    void configuresSpecificLevelForALogger() throws Exception","0","-","-","-","-"
"3603","configuresSpecificLevelForALoggerForADuration","@Test
    void configuresSpecificLevelForALoggerForADuration() throws Exception","0","-","-","-","-"
"3604","configuresDefaultLevelForALogger","@Test
    void configuresDefaultLevelForALogger() throws Exception","0","-","-","-","-"
"3605","configuresLevelForMultipleLoggers","@Test
    void configuresLevelForMultipleLoggers() throws Exception","0","-","-","-","-"
"3606","runsOnceWithNoParameters","@Test
    void runsOnceWithNoParameters() throws Exception","0","-","-","-","-"
"3607","usesTheFirstRunsParameter","@Test
    void usesTheFirstRunsParameter() throws Exception","0","-","-","-","-"
"3608","defaultsToOneRunIfTheQueryParamDoesNotParse","@Test
    void defaultsToOneRunIfTheQueryParamDoesNotParse() throws Exception","0","-","-","-","-"
"3609","execute","@Override
        public void execute(Map<String, List<String>> parameters,
                            PrintWriter output)","0","-","-","-","-"
"3610","hasAName","@Test
    void hasAName() throws Exception","0","-","-","-","-"
"3611","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3612","formatsBasicURIs","@Test
    void formatsBasicURIs() throws Exception","0","-","-","-","-"
"3613","formatsFullURIs","@Test
    void formatsFullURIs() throws Exception","0","-","-","-","-"
"3614","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3615","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"3616","logsSlowRequests","@Test
    void logsSlowRequests() throws Exception","0","-","-","-","-"
"3617","doesNotLogFastRequests","@Test
    void doesNotLogFastRequests() throws Exception","0","-","-","-","-"
"3618","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3619","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"3620","setsThreadNameInChain","@Test
    void setsThreadNameInChain() throws Exception","0","-","-","-","-"
"3621","isDirectoryReturnsTrueForPlainDirectories","@Test
    void isDirectoryReturnsTrueForPlainDirectories(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"3622","isDirectoryReturnsFalseForPlainFiles","@Test
    void isDirectoryReturnsFalseForPlainFiles(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"3623","isDirectoryReturnsTrueForDirectoriesInJars","@Test
    void isDirectoryReturnsTrueForDirectoriesInJars() throws Exception","0","-","-","-","-"
"3624","isDirectoryReturnsTrueForDirectoriesWithSpacesInJars","@Test
    void isDirectoryReturnsTrueForDirectoriesWithSpacesInJars() throws Exception","0","-","-","-","-"
"3625","isDirectoryReturnsTrueForURLEncodedDirectoriesInJars","@Test
    void isDirectoryReturnsTrueForURLEncodedDirectoriesInJars() throws Exception","0","-","-","-","-"
"3626","isDirectoryReturnsFalseForFilesInJars","@Test
    void isDirectoryReturnsFalseForFilesInJars() throws Exception","0","-","-","-","-"
"3627","isDirectoryReturnsFalseForFilesWithSpacesInJars","@Test
    void isDirectoryReturnsFalseForFilesWithSpacesInJars() throws Exception","0","-","-","-","-"
"3628","isDirectoryReturnsFalseForURLEncodedFilesInJars","@Test
    void isDirectoryReturnsFalseForURLEncodedFilesInJars() throws Exception","0","-","-","-","-"
"3629","isDirectoryReturnsTrueForDirectoriesInJarsWithoutTrailingSlashes","@Test
    void isDirectoryReturnsTrueForDirectoriesInJarsWithoutTrailingSlashes() throws Exception","0","-","-","-","-"
"3630","isDirectoryReturnsTrueForDirectoriesWithSpacesInJarsWithoutTrailingSlashes","@Test
    void isDirectoryReturnsTrueForDirectoriesWithSpacesInJarsWithoutTrailingSlashes() throws Exception","0","-","-","-","-"
"3631","isDirectoryReturnsTrueForURLEncodedDirectoriesInJarsWithoutTrailingSlashes","@Test
    void isDirectoryReturnsTrueForURLEncodedDirectoriesInJarsWithoutTrailingSlashes() throws Exception","0","-","-","-","-"
"3632","isDirectoryThrowsResourceNotFoundExceptionForMissingDirectories","@Test
    void isDirectoryThrowsResourceNotFoundExceptionForMissingDirectories() throws Exception","0","-","-","-","-"
"3633","appendTrailingSlashAddsASlash","@Test
    void appendTrailingSlashAddsASlash()","0","-","-","-","-"
"3634","appendTrailingSlashDoesntASlashWhenOneIsAlreadyPresent","@Test
    void appendTrailingSlashDoesntASlashWhenOneIsAlreadyPresent()","0","-","-","-","-"
"3635","getLastModifiedReturnsTheLastModifiedTimeOfAFile","@Test
    void getLastModifiedReturnsTheLastModifiedTimeOfAFile(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"3636","getLastModifiedReturnsTheLastModifiedTimeOfAJarEntry","@Test
    void getLastModifiedReturnsTheLastModifiedTimeOfAJarEntry() throws Exception","0","-","-","-","-"
"3637","getLastModifiedReturnsZeroIfAnErrorOccurs","@Test
    void getLastModifiedReturnsZeroIfAnErrorOccurs() throws Exception","0","-","-","-","-"
"3638","firstBytes","@Test
    void firstBytes()","0","-","-","-","-"
"3639","secondBytes","@Test
    void secondBytes()","0","-","-","-","-"
"3640","finalBytes","@Test
    void finalBytes()","0","-","-","-","-"
"3641","noEndBytes","@Test
    void noEndBytes()","0","-","-","-","-"
"3642","startBytes","@Test
    void startBytes()","0","-","-","-","-"
"3643","tooManyBytes","@Test
    void tooManyBytes()","0","-","-","-","-"
"3644","nonASCIIDisallowed","@Test
    void nonASCIIDisallowed()","0","-","-","-","-"
"3645","DummyAssetServlet","public DummyAssetServlet()","0","-","-","-","-"
"3646","NoIndexAssetServlet","public NoIndexAssetServlet()","0","-","-","-","-"
"3647","RootAssetServlet","public RootAssetServlet()","0","-","-","-","-"
"3648","NoCharsetAssetServlet","public NoCharsetAssetServlet()","0","-","-","-","-"
"3649","NoDefaultMediaTypeAssetServlet","public NoDefaultMediaTypeAssetServlet()","0","-","-","-","-"
"3650","DefaultMediaTypeAssetServlet","public DefaultMediaTypeAssetServlet()","0","-","-","-","-"
"3651","startServletTester","@BeforeAll
    public static void startServletTester() throws Exception","0","-","-","-","-"
"3652","stopServletTester","@AfterAll
    public static void stopServletTester() throws Exception","0","-","-","-","-"
"3653","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"3654","servesFilesMappedToRoot","@Test
    void servesFilesMappedToRoot() throws Exception","0","-","-","-","-"
"3655","servesCharset","@Test
    void servesCharset() throws Exception","0","-","-","-","-"
"3656","servesFilesFromRootsWithSameName","@Test
    void servesFilesFromRootsWithSameName() throws Exception","0","-","-","-","-"
"3657","cacheIfModifiedSinceOverwrittenByIfNoneMatch","@Test
    void cacheIfModifiedSinceOverwrittenByIfNoneMatch() throws Exception","0","-","-","-","-"
"3658","servesFilesWithA200","@Test
    void servesFilesWithA200() throws Exception","0","-","-","-","-"
"3659","throws404IfTheAssetIsMissing","@Test
    void throws404IfTheAssetIsMissing() throws Exception","0","-","-","-","-"
"3660","consistentlyAssignsETags","@Test
    void consistentlyAssignsETags() throws Exception","0","-","-","-","-"
"3661","assignsDifferentETagsForDifferentFiles","@Test
    void assignsDifferentETagsForDifferentFiles() throws Exception","0","-","-","-","-"
"3662","supportsIfNoneMatchRequests","@Test
    void supportsIfNoneMatchRequests() throws Exception","0","-","-","-","-"
"3663","consistentlyAssignsLastModifiedTimes","@Test
    void consistentlyAssignsLastModifiedTimes() throws Exception","0","-","-","-","-"
"3664","supportsByteRangeForMedia","@Test
    void supportsByteRangeForMedia() throws Exception","0","-","-","-","-"
"3665","supportsFullByteRange","@Test
    void supportsFullByteRange() throws Exception","0","-","-","-","-"
"3666","supportsCentralByteRange","@Test
    void supportsCentralByteRange() throws Exception","0","-","-","-","-"
"3667","supportsFinalByteRange","@Test
    void supportsFinalByteRange() throws Exception","0","-","-","-","-"
"3668","rejectsInvalidByteRanges","@Test
    void rejectsInvalidByteRanges() throws Exception","0","-","-","-","-"
"3669","supportsMultipleByteRanges","@Test
    void supportsMultipleByteRanges() throws Exception","0","-","-","-","-"
"3670","supportsIfRangeMatchRequests","@Test
    void supportsIfRangeMatchRequests() throws Exception","0","-","-","-","-"
"3671","supportsIfModifiedSinceRequests","@Test
    void supportsIfModifiedSinceRequests() throws Exception","0","-","-","-","-"
"3672","guessesMimeTypes","@Test
    void guessesMimeTypes() throws Exception","0","-","-","-","-"
"3673","defaultsToHtml","@Test
    void defaultsToHtml() throws Exception","0","-","-","-","-"
"3674","defaultsToHtmlIfNotOverridden","@Test
    void defaultsToHtmlIfNotOverridden() throws Exception","0","-","-","-","-"
"3675","servesWithDefaultMediaType","@Test
    void servesWithDefaultMediaType() throws Exception","0","-","-","-","-"
"3676","servesIndexFilesByDefault","@Test
    void servesIndexFilesByDefault() throws Exception","0","-","-","-","-"
"3677","throwsA404IfNoIndexFileIsDefined","@Test
    void throwsA404IfNoIndexFileIsDefined() throws Exception","0","-","-","-","-"
"3678","doesNotAllowOverridingUrls","@Test
    void doesNotAllowOverridingUrls() throws Exception","0","-","-","-","-"
"3679","doesNotAllowOverridingPaths","@Test
    void doesNotAllowOverridingPaths() throws Exception","0","-","-","-","-"
"3680","allowsEncodedAssetNames","@Test
    void allowsEncodedAssetNames() throws Exception","0","-","-","-","-"
"3681","GarbageCollectionTask","/**
     * Creates a new GarbageCollectionTask.
     */
    public GarbageCollectionTask()","0","-","-","-","-"
"3682","GarbageCollectionTask","/**
     * Creates a new GarbageCollectionTask with the given","0","-","-","-","-"
"3683","execute","@Override
    @SuppressWarnings(""CallToSystemGC"")
    public void execute(Map<String, List<String>> parameters, PrintWriter output)","0","-","-","-","-"
"3684","parseRuns","private static int parseRuns(Map<String, List<String>> parameters)","0","-","-","-","-"
"3685","TaskServlet","/**
     * Creates a new TaskServlet.
     */
    public TaskServlet(MetricRegistry metricRegistry)","0","-","-","-","-"
"3686","TaskServlet","/**
     * Creates a new TaskServlet.
     *
     * @since 2.0
     */
    public TaskServlet(MetricRegistry metricRegistry, TaskConfiguration taskConfiguration)","0","-","-","-","-"
"3687","add","public void add(Task task)","0","-","-","-","-"
"3688","doGet","@Override
    protected void doGet(HttpServletRequest req,
                         HttpServletResponse resp) throws ServletException, IOException","0","-","-","-","-"
"3689","doPost","@Override
    protected void doPost(HttpServletRequest req,
                          HttpServletResponse resp) throws ServletException, IOException","0","-","-","-","-"
"3690","getParams","private static Map<String, List<String>> getParams(HttpServletRequest req)","0","-","-","-","-"
"3691","getBody","private String getBody(HttpServletRequest req) throws IOException","0","-","-","-","-"
"3692","getTasks","public Collection<Task> getTasks()","0","-","-","-","-"
"3693","chooseName","private String chooseName(String explicitName, boolean absolute, Task task, String... suffixes)","0","-","-","-","-"
"3694","TaskExecutor","private TaskExecutor(Task task)","0","-","-","-","-"
"3695","executeTask","public void executeTask(Map<String, List<String>> params, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"3696","TimedTask","private TimedTask(TaskExecutor underlying, Timer timer)","0","-","-","-","-"
"3697","executeTask","@Override
        public void executeTask(Map<String, List<String>> params, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"3698","MeteredTask","private MeteredTask(TaskExecutor underlying, Meter meter)","0","-","-","-","-"
"3699","executeTask","@Override
        public void executeTask(Map<String, List<String>> params, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"3700","ExceptionMeteredTask","private ExceptionMeteredTask(TaskExecutor underlying,
                                     Meter exceptionMeter, Class<? extends Throwable> exceptionClass)","0","-","-","-","-"
"3701","isReallyAssignableFrom","private boolean isReallyAssignableFrom(Exception e)","0","-","-","-","-"
"3702","executeTask","@Override
        public void executeTask(Map<String, List<String>> params, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"3703","LogConfigurationTask","/**
     * Creates a new LogConfigurationTask.
     */
    public LogConfigurationTask()","0","-","-","-","-"
"3704","LogConfigurationTask","/**
     * Creates a new LogConfigurationTask with the given","0","-","-","-","-"
"3705","LogConfigurationTask","/**
     * Creates a new LogConfigurationTask with the given","0","-","-","-","-"
"3706","execute","@Override
    public void execute(Map<String, List<String>> parameters, PrintWriter output) throws Exception","0","-","-","-","-"
"3707","run","@Override
                    public void run()","0","-","-","-","-"
"3708","getLoggerNames","private List<String> getLoggerNames(Map<String, List<String>> parameters)","0","-","-","-","-"
"3709","getLoggerLevel","@Nullable
    private Level getLoggerLevel(Map<String, List<String>> parameters)","0","-","-","-","-"
"3710","getDuration","@Nullable
    private Duration getDuration(Map<String, List<String>> parameters)","0","-","-","-","-"
"3711","getTimer","/**
     * Lazy create the timer to avoid unnecessary thread creation unless an expirable log configuration task is submitted
     */
    @NonNull
    private Timer getTimer()","0","-","-","-","-"
"3712","Task","/**
     * Create a new task with the given name.
     *
     * @param name the task's name
     */
    protected Task(String name)","0","-","-","-","-"
"3713","Task","/**
     * Create a new task with the given name and response content type
     *
     * @param name                the task's name
     * @param responseContentType the task's response content type
     * @since 2.0
     */
    protected Task(String name, @Nullable String responseContentType)","0","-","-","-","-"
"3714","getName","/**
     * Returns the task's name,
     *
     * @return the task's name
     */
    public String getName()","0","-","-","-","-"
"3715","getResponseContentType","/**
     * Returns the task's response content type.
     *
     * @return the task's response content type
     * @since 2.0
     */
    public Optional<String> getResponseContentType()","0","-","-","-","-"
"3716","execute","/**
     * Executes the task.
     *
     * @param parameters the query string parameters
     * @param output     a","0","-","-","-","-"
"3717","isPrintStackTraceOnError","@JsonProperty(""printStackTraceOnError"")
    public boolean isPrintStackTraceOnError()","0","-","-","-","-"
"3718","setPrintStackTraceOnError","@JsonProperty(""printStackTraceOnError"")
    public void setPrintStackTraceOnError(boolean printStackTraceOnError)","0","-","-","-","-"
"3719","toString","@Override
    public String toString()","0","-","-","-","-"
"3720","PostBodyTask","/**
     * Create a new task with the given name.
     *
     * @param name the task's name
     */
    protected PostBodyTask(String name)","0","-","-","-","-"
"3721","PostBodyTask","/**
     * Create a new task with the given name and response content type
     *
     * @param name                the task's name
     * @param responseContentType the task's response content type
     * @since 2.0
     */
    protected PostBodyTask(String name, String responseContentType)","0","-","-","-","-"
"3722","execute","/**
     * @param parameters the query string parameters
     * @param body       the plain text request body
     * @param output     a","0","-","-","-","-"
"3723","execute","/**
     * Deprecated, use","0","-","-","-","-"
"3724","SlowRequestFilter","/**
     * Creates a filter which logs requests which take longer than 1 second.
     */
    public SlowRequestFilter()","0","-","-","-","-"
"3725","SlowRequestFilter","/**
     * Creates a filter which logs requests which take longer than the given duration.
     *
     * @param threshold    the threshold for considering a request slow
     */
    public SlowRequestFilter(Duration threshold)","0","-","-","-","-"
"3726","setCurrentTimeProvider","void setCurrentTimeProvider(Supplier<Long> currentTimeProvider)","0","-","-","-","-"
"3727","setLogger","void setLogger(Logger logger)","0","-","-","-","-"
"3728","init","@Override
    public void init(FilterConfig filterConfig) throws ServletException","0","-","-","-","-"
"3729","destroy","@Override
    public void destroy()","0","-","-","-","-"
"3730","doFilter","@Override
    public void doFilter(ServletRequest request,
                         ServletResponse response,
                         FilterChain chain) throws IOException, ServletException","0","-","-","-","-"
"3731","Servlets","private Servlets()","0","-","-","-","-"
"3732","getFullUrl","/**
     * Returns the full URL of the given request.
     *
     * @param request    an HTTP servlet request
     * @return the full URL, including the query string
     */
    public static String getFullUrl(HttpServletRequest request)","0","-","-","-","-"
"3733","doFilter","@Override
    public void doFilter(ServletRequest request,
                         ServletResponse response,
                         FilterChain chain) throws IOException, ServletException","0","-","-","-","-"
"3734","destroy","@Override
    public void destroy()","0","-","-","-","-"
"3735","init","@Override
    public void init(FilterConfig filterConfig) throws ServletException","0","-","-","-","-"
"3736","init","@Override
    public void init(FilterConfig filterConfig) throws ServletException","0","-","-","-","-"
"3737","destroy","@Override
    public void destroy()","0","-","-","-","-"
"3738","doFilter","@Override
    public void doFilter(ServletRequest request,
                         ServletResponse response,
                         FilterChain chain) throws IOException, ServletException","0","-","-","-","-"
"3739","formatName","private static String formatName(HttpServletRequest req, String oldName)","0","-","-","-","-"
"3740","CachedAsset","private CachedAsset(byte[] resource, long lastModifiedTime)","0","-","-","-","-"
"3741","hash","private static String hash(byte[] resource)","0","-","-","-","-"
"3742","getResource","public byte[] getResource()","0","-","-","-","-"
"3743","getETag","public String getETag()","0","-","-","-","-"
"3744","getLastModifiedTime","public long getLastModifiedTime()","0","-","-","-","-"
"3745","AssetServlet","/**
     * Creates a new","0","-","-","-","-"
"3746","AssetServlet","/**
     * Creates a new","0","-","-","-","-"
"3747","trimSlashes","private static String trimSlashes(String s)","0","-","-","-","-"
"3748","trimTrailingSlashes","private static String trimTrailingSlashes(String s)","0","-","-","-","-"
"3749","getResourceURL","public URL getResourceURL()","0","-","-","-","-"
"3750","getUriPath","public String getUriPath()","0","-","-","-","-"
"3751","getIndexFile","@Nullable
    public String getIndexFile()","0","-","-","-","-"
"3752","getDefaultMediaType","/**
     * @since 2.0
     */
    public String getDefaultMediaType()","0","-","-","-","-"
"3753","getDefaultCharset","/**
     * @since 2.0
     */
    @Nullable
    public Charset getDefaultCharset()","0","-","-","-","-"
"3754","doGet","@Override
    protected void doGet(HttpServletRequest req,
                         HttpServletResponse resp) throws ServletException, IOException","0","-","-","-","-"
"3755","loadAsset","@Nullable
    private CachedAsset loadAsset(String key) throws URISyntaxException, IOException","0","-","-","-","-"
"3756","getResourceURL","protected URL getResourceURL(String absoluteRequestedResourcePath)","0","-","-","-","-"
"3757","readResource","protected byte[] readResource(URL requestedResourceURL) throws IOException","0","-","-","-","-"
"3758","isCachedClientSide","private boolean isCachedClientSide(HttpServletRequest req, CachedAsset cachedAsset)","0","-","-","-","-"
"3759","parseRangeHeader","/**
     * Parses a given Range header for one or more byte ranges.
     *
     * @param rangeHeader    Range header to parse
     * @param resourceLength Length of the resource in bytes
     * @return List of parsed ranges
     */
    private List<ByteRange> parseRangeHeader(final String rangeHeader, final int resourceLength)","0","-","-","-","-"
"3760","ResourceNotFoundException","public ResourceNotFoundException(Throwable cause)","0","-","-","-","-"
"3761","ResourceURL","private ResourceURL()","0","-","-","-","-"
"3762","isDirectory","/**
     * Returns true if the URL passed to it corresponds to a directory.  This is slightly tricky due to some quirks
     * of the","0","-","-","-","-"
"3763","appendTrailingSlash","/**
     * Appends a trailing '/' to a","0","-","-","-","-"
"3764","getLastModified","/**
     * Returns the last modified time for file:// and jar:// URLs.  This is slightly tricky for a couple of reasons:
     * 1) calling getConnection on a","0","-","-","-","-"
"3765","ByteRange","public ByteRange(final int start, final int end)","0","-","-","-","-"
"3766","getStart","public int getStart()","0","-","-","-","-"
"3767","getEnd","public int getEnd()","0","-","-","-","-"
"3768","parse","public static ByteRange parse(final String byteRange,
                                  final int resourceLength)","0","-","-","-","-"
"3769","equals","@Override
    public boolean equals(final Object obj)","0","-","-","-","-"
"3770","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"3771","toString","@Override
    public String toString()","0","-","-","-","-"
"3772","MyMessage","public MyMessage(final String message)","0","-","-","-","-"
"3773","getMessage","public String getMessage()","0","-","-","-","-"
"3774","foo","@GET
    public String foo()","0","-","-","-","-"
"3775","async","@GET
    @Path(""/async"")
    @ManagedAsync
    public void async(@Suspended final AsyncResponse ar)","0","-","-","-","-"
"3776","configure","@Override
        protected Application configure()","0","-","-","-","-"
"3777","teardown","@AfterEach
    void teardown() throws Exception","0","-","-","-","-"
"3778","runJersey","private void runJersey()","0","-","-","-","-"
"3779","findsResourceClassInPackage","@Test
    void findsResourceClassInPackage()","0","-","-","-","-"
"3780","findsResourceClassesInPackageAndSubpackage","@Test
    void findsResourceClassesInPackageAndSubpackage()","0","-","-","-","-"
"3781","combinesAlRegisteredClasses","@Test
    void combinesAlRegisteredClasses()","0","-","-","-","-"
"3782","combinesAlRegisteredClassesPathOnMethodLevel","@Test
    void combinesAlRegisteredClassesPathOnMethodLevel()","0","-","-","-","-"
"3783","logsNoInterfaces","@Test
    void logsNoInterfaces()","0","-","-","-","-"
"3784","logsNoEndpointsWhenNoResourcesAreRegistered","@Test
    void logsNoEndpointsWhenNoResourcesAreRegistered()","0","-","-","-","-"
"3785","logsEndpoints","@Test
    void logsEndpoints()","0","-","-","-","-"
"3786","logsEndpointsSorted","@Test
    void logsEndpointsSorted()","0","-","-","-","-"
"3787","logsNestedEndpoints","@Test
    void logsNestedEndpoints()","0","-","-","-","-"
"3788","logsProgrammaticalEndpoints","@Test
    void logsProgrammaticalEndpoints()","0","-","-","-","-"
"3789","testEndpointLoggerPathCleaning","@Test
    void testEndpointLoggerPathCleaning()","0","-","-","-","-"
"3790","duplicatePathsTest","@Test
    void duplicatePathsTest()","0","-","-","-","-"
"3791","logEndpointWithRootSubresource","@Test
    void logEndpointWithRootSubresource()","0","-","-","-","-"
"3792","logEndpointBinder","@Test
    void logEndpointBinder()","0","-","-","-","-"
"3793","configure","@Override
            protected void configure()","0","-","-","-","-"
"3794","logResourceWithHK2Binder","@Test
    void logResourceWithHK2Binder()","0","-","-","-","-"
"3795","configure","@Override
            protected void configure()","0","-","-","-","-"
"3796","logsEndpointsContextPathUrlPattern","@Test
    void logsEndpointsContextPathUrlPattern()","0","-","-","-","-"
"3797","testMixedClassAndInstanceRegistration","@Test
    void testMixedClassAndInstanceRegistration()","0","-","-","-","-"
"3798","logsEndpointsContextPath","@Test
    void logsEndpointsContextPath()","0","-","-","-","-"
"3799","logsEndpointsNoSlashContextPath","@Test
    void logsEndpointsNoSlashContextPath()","0","-","-","-","-"
"3800","logsEndpointsRelativePaths","@Test
    void logsEndpointsRelativePaths()","0","-","-","-","-"
"3801","foo","@GET
        public String foo()","0","-","-","-","-"
"3802","fooPost","@POST
        public String fooPost()","0","-","-","-","-"
"3803","fooDelete","@DELETE
        public String fooDelete()","0","-","-","-","-"
"3804","child1","@GET
        @Path(""child1"")
        public String child1()","0","-","-","-","-"
"3805","child2","@GET
        @Path(""child2"")
        public String child2()","0","-","-","-","-"
"3806","helloWorld","@GET
        public String helloWorld()","0","-","-","-","-"
"3807","fooGet","@GET
        @Path(""callme"")
        @Produces(MediaType.APPLICATION_JSON)
        public String fooGet()","0","-","-","-","-"
"3808","fooGet2","@GET
        @Path(""callme"")
        @Produces(MediaType.TEXT_HTML)
        public String fooGet2()","0","-","-","-","-"
"3809","fooGet3","@GET
        @Path(""callme"")
        @Produces(MediaType.APPLICATION_XML)
        public String fooGet3()","0","-","-","-","-"
"3810","fooGet4","@GET
        @Path(""anotherMe"")
        public String fooGet4()","0","-","-","-","-"
"3811","bar","@GET
        String bar();","0","-","-","-","-"
"3812","getNested","@Path(""wrapper"")
        public ResourcePathOnMethodLevel getNested()","0","-","-","-","-"
"3813","getNested2","@Path(""locator"")
        public Class<ResourcePathOnMethodLevel> getNested2()","0","-","-","-","-"
"3814","getNested3","@Path(""obj/","0","-","-","-","-"
"3815","bar","@GET @Path(""/bar"")
        public String bar()","0","-","-","-","-"
"3816","bar","@Override
        public String bar()","0","-","-","-","-"
"3817","getCustomer","@Path(""/customers/","0","-","-","-","-"
"3818","get","@GET
        public String get()","0","-","-","-","-"
"3819","getAddress","@Path(""/address"")
        public String getAddress()","0","-","-","-","-"
"3820","ResourceWithInjectedDependency","@Inject
        public ResourceWithInjectedDependency(Dependency dependency)","0","-","-","-","-"
"3821","bar","public String bar()","0","-","-","-","-"
"3822","get","public String get()","0","-","-","-","-"
"3823","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3824","presentOptionalsReturnTheirValue","@Test
    void presentOptionalsReturnTheirValue()","0","-","-","-","-"
"3825","absentOptionalsThrowANotFound","@Test
    void absentOptionalsThrowANotFound()","0","-","-","-","-"
"3826","showWithQueryParam","@GET
        public Optional<String> showWithQueryParam(@QueryParam(""id"") String id)","0","-","-","-","-"
"3827","showWithFormParam","@POST
        public Optional<String> showWithFormParam(@FormParam(""id"") String id)","0","-","-","-","-"
"3828","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3829","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3830","shouldReturnMessageWhenMessageIsBlank","@Test
    void shouldReturnMessageWhenMessageIsBlank()","0","-","-","-","-"
"3831","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3832","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3833","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3834","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3835","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3836","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3837","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@CookieParam(""message"") Optional<String> message)","0","-","-","-","-"
"3838","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@CookieParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3839","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@CookieParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3840","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3841","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3842","shouldReturnMessageWhenMessageIsBlank","@Test
    void shouldReturnMessageWhenMessageIsBlank()","0","-","-","-","-"
"3843","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3844","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3845","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3846","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3847","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3848","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3849","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@HeaderParam(""message"") Optional<String> message)","0","-","-","-","-"
"3850","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@HeaderParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3851","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@HeaderParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3852","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3853","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3854","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3855","shouldReturnMessageWhenMessageIsBlank","@Test
    void shouldReturnMessageWhenMessageIsBlank()","0","-","-","-","-"
"3856","shouldReturnDecodedMessageWhenEncodedMessageIsPresent","@Test
    void shouldReturnDecodedMessageWhenEncodedMessageIsPresent()","0","-","-","-","-"
"3857","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3858","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3859","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3860","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3861","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3862","shouldReturnDefaultValueWhenValueIsAbsent","@Test
    void shouldReturnDefaultValueWhenValueIsAbsent()","0","-","-","-","-"
"3863","shouldReturnDefaultValueWhenEmptyValueIsGiven","@Test
    void shouldReturnDefaultValueWhenEmptyValueIsGiven()","0","-","-","-","-"
"3864","shouldReturnValueWhenValueIsPresent","@Test
    void shouldReturnValueWhenValueIsPresent()","0","-","-","-","-"
"3865","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@QueryParam(""message"") Optional<String> message)","0","-","-","-","-"
"3866","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@QueryParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3867","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@QueryParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3868","getValue","@GET
        @Path(""/value"")
        public String getValue(@QueryParam(""value"") Optional<Integer> value)","0","-","-","-","-"
"3869","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3870","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3871","shouldReturnMessageWhenMessageBlank","@Test
    void shouldReturnMessageWhenMessageBlank()","0","-","-","-","-"
"3872","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3873","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3874","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3875","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3876","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3877","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3878","getMessage","@POST
        @Path(""/message"")
        public String getMessage(@FormParam(""message"") Optional<String> message)","0","-","-","-","-"
"3879","getMyMessage","@POST
        @Path(""/my-message"")
        public String getMyMessage(@FormParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3880","getUUID","@POST
        @Path(""/uuid"")
        public String getUUID(@FormParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3881","urlPatternEndsWithSlashStar","@Test
    void urlPatternEndsWithSlashStar()","0","-","-","-","-"
"3882","urlPatternEndsWithStar","@Test
    void urlPatternEndsWithStar()","0","-","-","-","-"
"3883","urlPatternSuffixNoop","@Test
    void urlPatternSuffixNoop()","0","-","-","-","-"
"3884","assertPatternEndsWithSlashStar","private void assertPatternEndsWithSlashStar(String jerseyRootPath)","0","-","-","-","-"
"3885","gzipParametersSpec","@Test
    void gzipParametersSpec() throws IOException","0","-","-","-","-"
"3886","aroundWriteToSpec","@Test
    void aroundWriteToSpec() throws IOException, WebApplicationException","0","-","-","-","-"
"3887","aroundWriteToSpecX_GZip","@Test
    void aroundWriteToSpecX_GZip() throws IOException, WebApplicationException","0","-","-","-","-"
"3888","otherEncodingWillNotAroundWrite","@Test
    void otherEncodingWillNotAroundWrite() throws IOException, WebApplicationException","0","-","-","-","-"
"3889","noEncodingwillNotAroundWrite","@Test
    void noEncodingwillNotAroundWrite() throws IOException, WebApplicationException","0","-","-","-","-"
"3890","write","@Override
            public void write(int i)","0","-","-","-","-"
"3891","WriterInterceptorContextMock","public WriterInterceptorContextMock(MultivaluedMap<String, Object> headers)","0","-","-","-","-"
"3892","proceed","@Override
        public void proceed() throws WebApplicationException","0","-","-","-","-"
"3893","getEntity","@Override
        @Nullable
        public Object getEntity()","0","-","-","-","-"
"3894","setEntity","@Override
        public void setEntity(Object entity)","0","-","-","-","-"
"3895","getOutputStream","@Override
        public OutputStream getOutputStream()","0","-","-","-","-"
"3896","setOutputStream","@Override
        public void setOutputStream(OutputStream os)","0","-","-","-","-"
"3897","getHeaders","@Override
        public MultivaluedMap<String, Object> getHeaders()","0","-","-","-","-"
"3898","getProperty","@Override
        @Nullable
        public Object getProperty(String name)","0","-","-","-","-"
"3899","getPropertyNames","@Override
        @Nullable
        public Collection<String> getPropertyNames()","0","-","-","-","-"
"3900","setProperty","@Override
        public void setProperty(String name, Object object)","0","-","-","-","-"
"3901","removeProperty","@Override
        public void removeProperty(String name)","0","-","-","-","-"
"3902","getAnnotations","@Override
        public Annotation[] getAnnotations()","0","-","-","-","-"
"3903","setAnnotations","@Override
        public void setAnnotations(Annotation[] annotations)","0","-","-","-","-"
"3904","getType","@Override
        @Nullable
        public Class<?> getType()","0","-","-","-","-"
"3905","setType","@Override
        public void setType(Class<?> type)","0","-","-","-","-"
"3906","getGenericType","@Override
        @Nullable
        public Type getGenericType()","0","-","-","-","-"
"3907","setGenericType","@Override
        public void setGenericType(Type genericType)","0","-","-","-","-"
"3908","getMediaType","@Override
        @Nullable
        public MediaType getMediaType()","0","-","-","-","-"
"3909","setMediaType","@Override
        public void setMediaType(MediaType mediaType)","0","-","-","-","-"
"3910","isProceedCalled","public boolean isProceedCalled()","0","-","-","-","-"
"3911","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3912","presentOptionalsReturnTheirValue","@Test
    void presentOptionalsReturnTheirValue()","0","-","-","-","-"
"3913","presentOptionalsReturnTheirValueWithResponse","@Test
    void presentOptionalsReturnTheirValueWithResponse()","0","-","-","-","-"
"3914","absentOptionalsThrowANotFound","@Test
    void absentOptionalsThrowANotFound()","0","-","-","-","-"
"3915","showWithQueryParam","@GET
        public Optional<String> showWithQueryParam(@QueryParam(""id"") String id)","0","-","-","-","-"
"3916","showWithFormParam","@POST
        public Optional<String> showWithFormParam(@FormParam(""id"") String id)","0","-","-","-","-"
"3917","showWithQueryParamResponse","@Path(""response-wrapped"")
        @GET
        public Response showWithQueryParamResponse(@QueryParam(""id"") String id)","0","-","-","-","-"
"3918","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3919","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3920","shouldReturnDefaultMessageWhenMessageIsBlank","@Test
    void shouldReturnDefaultMessageWhenMessageIsBlank()","0","-","-","-","-"
"3921","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3922","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3923","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3924","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3925","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3926","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3927","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@CookieParam(""message"") Optional<String> message)","0","-","-","-","-"
"3928","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@CookieParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3929","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@CookieParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3930","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3931","presentOptionalsReturnTheirValue","@Test
    void presentOptionalsReturnTheirValue()","0","-","-","-","-"
"3932","presentOptionalsReturnTheirValueWithResponse","@Test
    void presentOptionalsReturnTheirValueWithResponse()","0","-","-","-","-"
"3933","absentOptionalsThrowANotFound","@Test
    void absentOptionalsThrowANotFound()","0","-","-","-","-"
"3934","valueSetIgnoresDefault","@Test
    void valueSetIgnoresDefault()","0","-","-","-","-"
"3935","valueNotSetReturnsDefault","@Test
    void valueNotSetReturnsDefault()","0","-","-","-","-"
"3936","valueEmptyReturns404","@Test
    void valueEmptyReturns404()","0","-","-","-","-"
"3937","valueInvalidReturns404","@Test
    void valueInvalidReturns404()","0","-","-","-","-"
"3938","showWithQueryParam","@GET
        public OptionalDouble showWithQueryParam(@QueryParam(""id"") OptionalDouble id)","0","-","-","-","-"
"3939","showWithFormParam","@POST
        public OptionalDouble showWithFormParam(@FormParam(""id"") OptionalDouble id)","0","-","-","-","-"
"3940","showWithQueryParamResponse","@Path(""response-wrapped"")
        @GET
        public Response showWithQueryParamResponse(@QueryParam(""id"") OptionalDouble id)","0","-","-","-","-"
"3941","showWithQueryParamAndDefaultValue","@Path(""default"")
        @GET
        public OptionalDouble showWithQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") OptionalDouble id)","0","-","-","-","-"
"3942","showWithLongQueryParamAndDefaultValue","@Path(""double/default"")
        @GET
        public Double showWithLongQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") Double id)","0","-","-","-","-"
"3943","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3944","shouldReturnValuesIfProvidedAndValid","@Test
    void shouldReturnValuesIfProvidedAndValid()","0","-","-","-","-"
"3945","shouldReturnNotFoundIfValuesInvalid","@Test
    void shouldReturnNotFoundIfValuesInvalid()","0","-","-","-","-"
"3946","shouldReturnDefaultsIfValuesMissing","@Test
    void shouldReturnDefaultsIfValuesMissing()","0","-","-","-","-"
"3947","getMessage","@Path(""","0","-","-","-","-"
"3948","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3949","presentOptionalsReturnTheirValue","@Test
    void presentOptionalsReturnTheirValue()","0","-","-","-","-"
"3950","presentOptionalsReturnTheirValueWithResponse","@Test
    void presentOptionalsReturnTheirValueWithResponse()","0","-","-","-","-"
"3951","absentOptionalsThrowANotFound","@Test
    void absentOptionalsThrowANotFound()","0","-","-","-","-"
"3952","valueSetIgnoresDefault","@Test
    void valueSetIgnoresDefault()","0","-","-","-","-"
"3953","valueNotSetReturnsDefault","@Test
    void valueNotSetReturnsDefault()","0","-","-","-","-"
"3954","valueEmptyReturns404","@Test
    void valueEmptyReturns404()","0","-","-","-","-"
"3955","valueInvalidReturns404","@Test
    void valueInvalidReturns404()","0","-","-","-","-"
"3956","showWithQueryParam","@GET
        public OptionalInt showWithQueryParam(@QueryParam(""id"") OptionalInt id)","0","-","-","-","-"
"3957","showWithFormParam","@POST
        public OptionalInt showWithFormParam(@FormParam(""id"") OptionalInt id)","0","-","-","-","-"
"3958","showWithQueryParamResponse","@Path(""response-wrapped"")
        @GET
        public Response showWithQueryParamResponse(@QueryParam(""id"") OptionalInt id)","0","-","-","-","-"
"3959","showWithQueryParamAndDefaultValue","@Path(""default"")
        @GET
        public OptionalInt showWithQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") OptionalInt id)","0","-","-","-","-"
"3960","showWithLongQueryParamAndDefaultValue","@Path(""int/default"")
        @GET
        public Integer showWithLongQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") Integer id)","0","-","-","-","-"
"3961","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3962","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3963","shouldReturnDefaultMessageWhenMessageIsBlank","@Test
    void shouldReturnDefaultMessageWhenMessageIsBlank()","0","-","-","-","-"
"3964","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3965","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3966","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3967","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3968","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3969","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3970","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@HeaderParam(""message"") Optional<String> message)","0","-","-","-","-"
"3971","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@HeaderParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3972","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@HeaderParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3973","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3974","presentOptionalsReturnTheirValue","@Test
    void presentOptionalsReturnTheirValue()","0","-","-","-","-"
"3975","presentOptionalsReturnTheirValueWithResponse","@Test
    void presentOptionalsReturnTheirValueWithResponse()","0","-","-","-","-"
"3976","absentOptionalsThrowANotFound","@Test
    void absentOptionalsThrowANotFound()","0","-","-","-","-"
"3977","valueSetIgnoresDefault","@Test
    void valueSetIgnoresDefault()","0","-","-","-","-"
"3978","valueNotSetReturnsDefault","@Test
    void valueNotSetReturnsDefault()","0","-","-","-","-"
"3979","valueEmptyReturns404","@Test
    void valueEmptyReturns404()","0","-","-","-","-"
"3980","valueInvalidReturns404","@Test
    void valueInvalidReturns404()","0","-","-","-","-"
"3981","showWithQueryParam","@GET
        public OptionalLong showWithQueryParam(@QueryParam(""id"") OptionalLong id)","0","-","-","-","-"
"3982","showWithFormParam","@POST
        public OptionalLong showWithFormParam(@FormParam(""id"") OptionalLong id)","0","-","-","-","-"
"3983","showWithQueryParamResponse","@Path(""response-wrapped"")
        @GET
        public Response showWithQueryParamResponse(@QueryParam(""id"") OptionalLong id)","0","-","-","-","-"
"3984","showWithQueryParamAndDefaultValue","@Path(""default"")
        @GET
        public OptionalLong showWithQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") OptionalLong id)","0","-","-","-","-"
"3985","showWithLongQueryParamAndDefaultValue","@Path(""long/default"")
        @GET
        public Long showWithLongQueryParamAndDefaultValue(@QueryParam(""id"") @DefaultValue(""0"") Long id)","0","-","-","-","-"
"3986","configure","@Override
    protected Application configure()","0","-","-","-","-"
"3987","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"3988","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"3989","shouldReturnDefaultMessageWhenMessageIsBlank","@Test
    void shouldReturnDefaultMessageWhenMessageIsBlank()","0","-","-","-","-"
"3990","shouldReturnDecodedMessageWhenEncodedMessageIsPresent","@Test
    void shouldReturnDecodedMessageWhenEncodedMessageIsPresent()","0","-","-","-","-"
"3991","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"3992","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"3993","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"3994","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"3995","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"3996","getMessage","@GET
        @Path(""/message"")
        public String getMessage(@QueryParam(""message"") Optional<String> message)","0","-","-","-","-"
"3997","getMyMessage","@GET
        @Path(""/my-message"")
        public String getMyMessage(@QueryParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"3998","getUUID","@GET
        @Path(""/uuid"")
        public String getUUID(@QueryParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"3999","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4000","shouldReturnDefaultMessageWhenMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMessageIsNotPresent()","0","-","-","-","-"
"4001","shouldReturnDefaultMessageWhenMessageBlank","@Test
    void shouldReturnDefaultMessageWhenMessageBlank()","0","-","-","-","-"
"4002","shouldReturnMessageWhenMessageIsPresent","@Test
    void shouldReturnMessageWhenMessageIsPresent()","0","-","-","-","-"
"4003","shouldReturnDefaultMessageWhenMyMessageIsNotPresent","@Test
    void shouldReturnDefaultMessageWhenMyMessageIsNotPresent()","0","-","-","-","-"
"4004","shouldReturnMyMessageWhenMyMessageIsPresent","@Test
    void shouldReturnMyMessageWhenMyMessageIsPresent()","0","-","-","-","-"
"4005","shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent","@Test
    void shouldThrowBadRequestExceptionWhenInvalidUUIDIsPresent()","0","-","-","-","-"
"4006","shouldReturnDefaultUUIDWhenUUIDIsNotPresent","@Test
    void shouldReturnDefaultUUIDWhenUUIDIsNotPresent()","0","-","-","-","-"
"4007","shouldReturnUUIDWhenValidUUIDIsPresent","@Test
    void shouldReturnUUIDWhenValidUUIDIsPresent()","0","-","-","-","-"
"4008","getMessage","@POST
        @Path(""/message"")
        public String getMessage(@FormParam(""message"") Optional<String> message)","0","-","-","-","-"
"4009","getMyMessage","@POST
        @Path(""/my-message"")
        public String getMyMessage(@FormParam(""mymessage"") Optional<MyMessage> myMessage)","0","-","-","-","-"
"4010","getUUID","@POST
        @Path(""/uuid"")
        public String getUUID(@FormParam(""uuid"") Optional<UUIDParam> uuid)","0","-","-","-","-"
"4011","parsesInstants","@Test
    void parsesInstants() throws Exception","0","-","-","-","-"
"4012","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4013","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4014","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4015","parsesInstants","@Test
    void parsesInstants() throws Exception","0","-","-","-","-"
"4016","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4017","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4018","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4019","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4020","parsesDateTimes","@Test
    void parsesDateTimes() throws Exception","0","-","-","-","-"
"4021","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory()
            throws TestContainerException","0","-","-","-","-"
"4022","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"4023","passesInHttpSessions","@Test
    void passesInHttpSessions() throws Exception","0","-","-","-","-"
"4024","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory()
            throws TestContainerException","0","-","-","-","-"
"4025","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"4026","passesInHttpSessions","@Test
    void passesInHttpSessions() throws Exception","0","-","-","-","-"
"4027","getName","@GET
    public String getName(@Session HttpSession session)","0","-","-","-","-"
"4028","setName","@POST
    public void setName(@Session HttpSession session,
                        String name)","0","-","-","-","-"
"4029","setName","@POST
    public void setName(@Session Flash<String> flash,
                        String name)","0","-","-","-","-"
"4030","getName","@GET
    public String getName(@Session Flash<String> flash)","0","-","-","-","-"
"4031","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4032","testAsyncResponse","@Test
    void testAsyncResponse()","0","-","-","-","-"
"4033","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4034","testValidContentType","@Test
    void testValidContentType()","0","-","-","-","-"
"4035","testInvalidContentType","@Test
    void testInvalidContentType()","0","-","-","-","-"
"4036","aBlankStringIsAnAbsentString","@Test
    void aBlankStringIsAnAbsentString()","0","-","-","-","-"
"4037","aNullStringIsAnAbsentString","@Test
    void aNullStringIsAnAbsentString()","0","-","-","-","-"
"4038","aStringWithContentIsItself","@Test
    void aStringWithContentIsItself()","0","-","-","-","-"
"4039","aLongReturnsALong","@Test
    void aLongReturnsALong()","0","-","-","-","-"
"4040","nullThrowsAnException","@Test
    void nullThrowsAnException()","0","-","-","-","-"
"4041","emptyStringThrowsAnException","@Test
    void emptyStringThrowsAnException()","0","-","-","-","-"
"4042","aNonIntegerThrowsAnException","@Test
    void aNonIntegerThrowsAnException()","0","-","-","-","-"
"4043","aNonIntegerThrowsAnExceptionWithCustomName","@Test
    void aNonIntegerThrowsAnExceptionWithCustomName()","0","-","-","-","-"
"4044","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4045","shouldReturnDefaultMessageWhenNonExistent","@Test
    void shouldReturnDefaultMessageWhenNonExistent()","0","-","-","-","-"
"4046","shouldReturnDefaultMessageWhenEmptyString","@Test
    void shouldReturnDefaultMessageWhenEmptyString()","0","-","-","-","-"
"4047","shouldReturnDefaultMessageWhenNull","@Test
    void shouldReturnDefaultMessageWhenNull()","0","-","-","-","-"
"4048","shouldReturnMessageWhenSpecified","@Test
    void shouldReturnMessageWhenSpecified()","0","-","-","-","-"
"4049","getMessage","@GET
        @Path(""/string"")
        public String getMessage(@QueryParam(""message"") NonEmptyStringParam message)","0","-","-","-","-"
"4050","anIntegerReturnsAnInteger","@Test
    void anIntegerReturnsAnInteger()","0","-","-","-","-"
"4051","nullThrowsAnException","@Test
    void nullThrowsAnException()","0","-","-","-","-"
"4052","emptyStringThrowsAnException","@Test
    void emptyStringThrowsAnException()","0","-","-","-","-"
"4053","aNonIntegerThrowsAnException","@Test
    void aNonIntegerThrowsAnException()","0","-","-","-","-"
"4054","aNonIntegerThrowsAnExceptionWithCustomName","@Test
    void aNonIntegerThrowsAnExceptionWithCustomName()","0","-","-","-","-"
"4055","UuidParamNegativeTest","private void UuidParamNegativeTest(String input)","0","-","-","-","-"
"4056","aUUIDStringReturnsAUUIDObject","@Test
    void aUUIDStringReturnsAUUIDObject()","0","-","-","-","-"
"4057","noSpaceUUID","@Test
    void noSpaceUUID()","0","-","-","-","-"
"4058","tooLongUUID","@Test
    void tooLongUUID()","0","-","-","-","-"
"4059","aNonUUIDThrowsAnException","@Test
    void aNonUUIDThrowsAnException()","0","-","-","-","-"
"4060","getConverter","@Override
    @SuppressWarnings(""unchecked"")
    @Nullable
    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)","0","-","-","-","-"
"4061","fromString","@Override
        public MyMessage fromString(String value)","0","-","-","-","-"
"4062","toString","@Override
        public String toString(MyMessage value)","0","-","-","-","-"
"4063","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"4064","addsRandomRequestIdHeader","@Test
    void addsRandomRequestIdHeader() throws Exception","0","-","-","-","-"
"4065","doesNotAddRandomRequestIdHeaderIfItExists","@Test
    void doesNotAddRandomRequestIdHeaderIfItExists() throws Exception","0","-","-","-","-"
"4066","testSetsCurrentTimeProperty","@Test
    void testSetsCurrentTimeProperty() throws Exception","0","-","-","-","-"
"4067","testAddsXRuntimeHeader","@Test
    void testAddsXRuntimeHeader() throws Exception","0","-","-","-","-"
"4068","testSetsCharsetEncoding","@Test
    void testSetsCharsetEncoding() throws Exception","0","-","-","-","-"
"4069","setUpFilter","@BeforeEach
    void setUpFilter()","0","-","-","-","-"
"4070","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory()
            throws TestContainerException","0","-","-","-","-"
"4071","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"4072","getResponseStatusForRequestMethod","private int getResponseStatusForRequestMethod(String method, boolean includeEntity)","0","-","-","-","-"
"4073","testGetRequestAllowed","@Test
    void testGetRequestAllowed()","0","-","-","-","-"
"4074","testPostRequestAllowed","@Test
    void testPostRequestAllowed()","0","-","-","-","-"
"4075","testPutRequestBlocked","@Test
    void testPutRequestBlocked()","0","-","-","-","-"
"4076","testDeleteRequestBlocked","@Test
    void testDeleteRequestBlocked()","0","-","-","-","-"
"4077","testTraceRequestBlocked","@Test
    void testTraceRequestBlocked()","0","-","-","-","-"
"4078","allowsAllowedMethod","@Test
    void allowsAllowedMethod() throws Exception","0","-","-","-","-"
"4079","blocksDisallowedMethod","@Test
    void blocksDisallowedMethod() throws Exception","0","-","-","-","-"
"4080","disallowedMethodCausesMethodNotAllowedResponse","@Test
    void disallowedMethodCausesMethodNotAllowedResponse() throws IOException, ServletException","0","-","-","-","-"
"4081","get","@GET
    public Response get()","0","-","-","-","-"
"4082","post","@POST
    public Response post()","0","-","-","-","-"
"4083","patch","@PATCH
    public Response patch()","0","-","-","-","-"
"4084","put","@PUT
    public Response put()","0","-","-","-","-"
"4085","delete","@DELETE
    public Response delete()","0","-","-","-","-"
"4086","testToReponse","@Test
    void testToReponse()","0","-","-","-","-"
"4087","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4088","returnsAnErrorMessage","@Test
    void returnsAnErrorMessage()","0","-","-","-","-"
"4089","handlesJsonMappingException","@Test
    void handlesJsonMappingException()","0","-","-","-","-"
"4090","handlesMethodNotAllowedWithHeaders","@Test
    void handlesMethodNotAllowedWithHeaders()","0","-","-","-","-"
"4091","formatsWebApplicationException","@Test
    void formatsWebApplicationException()","0","-","-","-","-"
"4092","handlesRedirectInWebApplicationException","@Test
    void handlesRedirectInWebApplicationException()","0","-","-","-","-"
"4093","show","@GET
    public String show() throws IOException","0","-","-","-","-"
"4094","jsonMappingException","@GET
    @Path(""json-mapping-exception"")
    public void jsonMappingException() throws JsonMappingException","0","-","-","-","-"
"4095","webApplicationException","@GET
    @Path(""web-application-exception"")
    public void webApplicationException() throws WebApplicationException","0","-","-","-","-"
"4096","webApplicationExceptionWithRedirect","@GET
    @Path(""web-application-exception-with-redirect"")
    public void webApplicationExceptionWithRedirect() throws WebApplicationException","0","-","-","-","-"
"4097","redirectTarget","@GET
    @Path(""redirect-target"")
    public Response redirectTarget()","0","-","-","-","-"
"4098","htmlException","@GET
    @Path(""html-exception"")
    @Produces(MediaType.TEXT_HTML)
    public void htmlException() throws WebApplicationException","0","-","-","-","-"
"4099","DefaultJacksonMessageBodyProvider","public DefaultJacksonMessageBodyProvider()","0","-","-","-","-"
"4100","ErrorEntityWriterTestResourceConfig","public ErrorEntityWriterTestResourceConfig()","0","-","-","-","-"
"4101","getRepresentation","@Override
                protected String getRepresentation(ErrorMessage entity)","0","-","-","-","-"
"4102","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory() throws TestContainerException","0","-","-","-","-"
"4103","configureDeployment","@Override
    protected DeploymentContext configureDeployment()","0","-","-","-","-"
"4104","formatsErrorsAsHtml","@Test
    void formatsErrorsAsHtml()","0","-","-","-","-"
"4105","delegatesToParentClass","@Test
    void delegatesToParentClass()","0","-","-","-","-"
"4106","handlesFormParamContentTypeError","@Test
    void handlesFormParamContentTypeError()","0","-","-","-","-"
"4107","getTestContainerFactory","@Override
    protected TestContainerFactory getTestContainerFactory() throws TestContainerException","0","-","-","-","-"
"4108","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4109","shouldCountZeroEofExceptions","@Test
    void shouldCountZeroEofExceptions() throws IOException","0","-","-","-","-"
"4110","streamForever","@GET
        public Response streamForever()","0","-","-","-","-"
"4111","aroundWriteTo","@Override
        public void aroundWriteTo(WriterInterceptorContext context) throws IOException, WebApplicationException","0","-","-","-","-"
"4112","shouldSwallowEofException","@SuppressWarnings(""NullAway"")
    @Test
    void shouldSwallowEofException() throws IOException","0","-","-","-","-"
"4113","AbstractJerseyTest","protected AbstractJerseyTest()","0","-","-","-","-"
"4114","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"4115","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"4116","configureClient","@Override
    protected void configureClient(ClientConfig config)","0","-","-","-","-"
"4117","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4118","immutableResponsesHaveCacheControlHeaders","@Test
    void immutableResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4119","privateResponsesHaveCacheControlHeaders","@Test
    void privateResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4120","maxAgeResponsesHaveCacheControlHeaders","@Test
    void maxAgeResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4121","noCacheResponsesHaveCacheControlHeaders","@Test
    void noCacheResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4122","noStoreResponsesHaveCacheControlHeaders","@Test
    void noStoreResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4123","noTransformResponsesHaveCacheControlHeaders","@Test
    void noTransformResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4124","mustRevalidateResponsesHaveCacheControlHeaders","@Test
    void mustRevalidateResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4125","proxyRevalidateResponsesHaveCacheControlHeaders","@Test
    void proxyRevalidateResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4126","sharedMaxAgeResponsesHaveCacheControlHeaders","@Test
    void sharedMaxAgeResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4127","staleWhileRevalidateResponsesHaveCacheControlHeaders","@Test
    void staleWhileRevalidateResponsesHaveCacheControlHeaders() throws Exception","0","-","-","-","-"
"4128","showImmutable","@GET
    @Path(""/immutable"")
    @CacheControl(immutable = true)
    public String showImmutable()","0","-","-","-","-"
"4129","showPrivate","@GET
    @Path(""/private"")
    @CacheControl(isPrivate = true)
    public String showPrivate()","0","-","-","-","-"
"4130","showMaxAge","@GET
    @Path(""/max-age"")
    @CacheControl(maxAge = 13, maxAgeUnit = TimeUnit.DAYS)
    public String showMaxAge()","0","-","-","-","-"
"4131","showNoCache","@GET
    @Path(""/no-cache"")
    @CacheControl(noCache = true)
    public String showNoCache()","0","-","-","-","-"
"4132","showNoStore","@GET
    @Path(""/no-store"")
    @CacheControl(noStore = true)
    public String showNoStore()","0","-","-","-","-"
"4133","showNoTransform","@GET
    @Path(""/no-transform"")
    @CacheControl(noTransform = false)
    public String showNoTransform()","0","-","-","-","-"
"4134","showMustRevalidate","@GET
    @Path(""/must-revalidate"")
    @CacheControl(mustRevalidate = true)
    public String showMustRevalidate()","0","-","-","-","-"
"4135","showProxyRevalidate","@GET
    @Path(""/proxy-revalidate"")
    @CacheControl(proxyRevalidate = true)
    public String showProxyRevalidate()","0","-","-","-","-"
"4136","showSharedMaxAge","@GET
    @Path(""/shared-max-age"")
    @CacheControl(sharedMaxAge = 13, sharedMaxAgeUnit = TimeUnit.HOURS)
    public String showSharedMaxAge()","0","-","-","-","-"
"4137","showStaleWhileRevalidate","@GET
    @Path(""/stale-while-revalidate"")
    @CacheControl(staleWhileRevalidate = 13, staleWhileRevalidateUnit = TimeUnit.HOURS)
    public String showStaleWhileRevalidate()","0","-","-","-","-"
"4138","isFail","@ValidationMethod(message = ""must have a false thing"")
    public boolean isFail()","0","-","-","-","-"
"4139","testAccessors","@Test
    void testAccessors()","0","-","-","-","-"
"4140","getExample","@JsonProperty
    @Nullable
    public FailingExample getExample()","0","-","-","-","-"
"4141","setExample","@JsonProperty
    public void setExample(FailingExample example)","0","-","-","-","-"
"4142","repr","@Override
    public ValidRepresentation repr(ValidRepresentation representation, String xer)","0","-","-","-","-"
"4143","getRepresentation","@JsonProperty
    @Nullable
    public ValidRepresentation getRepresentation()","0","-","-","-","-"
"4144","setRepresentation","@JsonProperty
    public void setRepresentation(ValidRepresentation representation)","0","-","-","-","-"
"4145","DefaultJacksonMessageBodyProvider","public DefaultJacksonMessageBodyProvider()","0","-","-","-","-"
"4146","getName","public String getName()","0","-","-","-","-"
"4147","getChoice","public Choice getChoice()","0","-","-","-","-"
"4148","isCoda","@ValidationMethod(message = ""name must be Coda"")
    public boolean isCoda()","0","-","-","-","-"
"4149","toString","@Override
        public String toString()","0","-","-","-","-"
"4150","A","A(""1""),
        B(""2"");","0","-","-","-","-"
"4151","ExplicitFromString","ExplicitFromString(String code)","0","-","-","-","-"
"4152","fromString","@Nullable
        public static ExplicitFromString fromString(String str)","0","-","-","-","-"
"4153","A","A(""1""),
        B(""2"");","0","-","-","-","-"
"4154","ExplicitFromStringThrowsWebApplicationException","ExplicitFromStringThrowsWebApplicationException(String code)","0","-","-","-","-"
"4155","getCode","@SuppressWarnings(""unused"")
        public String getCode()","0","-","-","-","-"
"4156","fromString","@SuppressWarnings(""unused"")
        public static ExplicitFromStringThrowsWebApplicationException fromString(String str)","0","-","-","-","-"
"4157","getStatusCode","@Override
                public int getStatusCode()","0","-","-","-","-"
"4158","getFamily","@Override
                public Response.Status.Family getFamily()","0","-","-","-","-"
"4159","getReasonPhrase","@Override
                public String getReasonPhrase()","0","-","-","-","-"
"4160","A","A(""1""),
        B(""2"");","0","-","-","-","-"
"4161","ExplicitFromStringThrowsOtherException","ExplicitFromStringThrowsOtherException(String code)","0","-","-","-","-"
"4162","getCode","@SuppressWarnings(""unused"")
        public String getCode()","0","-","-","-","-"
"4163","fromString","@SuppressWarnings(""unused"")
        public static ExplicitFromStringThrowsOtherException fromString(String str)","0","-","-","-","-"
"4164","A","A(""1""),
        B(""2"");","0","-","-","-","-"
"4165","ExplicitFromStringNonStatic","ExplicitFromStringNonStatic(String code)","0","-","-","-","-"
"4166","fromString","@Nullable
        public ExplicitFromStringNonStatic fromString(String str)","0","-","-","-","-"
"4167","A","A(""1""),
        B(""2"");","0","-","-","-","-"
"4168","ExplicitFromStringPrivate","ExplicitFromStringPrivate(String code)","0","-","-","-","-"
"4169","fromString","@Nullable
        private static ExplicitFromStringPrivate fromString(String str)","0","-","-","-","-"
"4170","getConverter","private <T> ParamConverter<T> getConverter(Class<T> rawType)","0","-","-","-","-"
"4171","testFuzzyEnum","@Test
    void testFuzzyEnum()","0","-","-","-","-"
"4172","testToString","@Test
    void testToString()","0","-","-","-","-"
"4173","testNonEnum","@Test
    void testNonEnum()","0","-","-","-","-"
"4174","testEnumViaExplicitFromString","@Test
    void testEnumViaExplicitFromString()","0","-","-","-","-"
"4175","testEnumViaExplicitFromStringThatThrowsWebApplicationException","@Test
    void testEnumViaExplicitFromStringThatThrowsWebApplicationException()","0","-","-","-","-"
"4176","testEnumViaExplicitFromStringThatThrowsOtherException","@Test
    void testEnumViaExplicitFromStringThatThrowsOtherException()","0","-","-","-","-"
"4177","testEnumViaExplicitFromStringNonStatic","@Test
    void testEnumViaExplicitFromStringNonStatic()","0","-","-","-","-"
"4178","testEnumViaExplicitFromStringPrivate","@Test
    void testEnumViaExplicitFromStringPrivate()","0","-","-","-","-"
"4179","blah","@POST
    @Path(""foo"")
    @Valid
    public ValidRepresentation blah(@NotNull @Valid ValidRepresentation representation,
                                    @QueryParam(""somethingelse"") String xer)","0","-","-","-","-"
"4180","blahValidated","@POST
    @Path(""fooValidated"")
    @Validated
    @Valid
    public ValidRepresentation blahValidated(@Validated @Valid ValidRepresentation representation)","0","-","-","-","-"
"4181","simpleEntity","@POST
    @Path(""simpleEntity"")
    public String simpleEntity(@Length(min = 3, max = 5) String name)","0","-","-","-","-"
"4182","blaze","@GET
    @Path(""bar"")
    @Length(max = 3)
    public String blaze(@QueryParam(""name"") @Length(min = 3) String name)","0","-","-","-","-"
"4183","paramValidation","@GET
    @Path(""paramValidation"")
    public Long paramValidation(@NotNull(payload = Unwrapping.Skip.class)
                                @Min(2) @Max(5)
                                @QueryParam(""length"") LongParam length)","0","-","-","-","-"
"4184","messageValidation","@GET
    @Path(""messageValidation"")
    public Long messageValidation(@NotNull(payload = Unwrapping.Skip.class)
                                  @Min(value = 2, message = ""The value $","0","-","-","-","-"
"4185","isnt","@GET
    @Path(""barter"")
    @Nullable
    public String isnt(@QueryParam(""name"") @Length(min = 3) NonEmptyStringParam name)","0","-","-","-","-"
"4186","validatedPartialExampleBoth","@POST
    @Path(""validatedPartialExampleBoth"")
    public PartialExample validatedPartialExampleBoth(
            @NotNull
            @Valid
            @Validated(","0","-","-","-","-"
"4187","validExample","@POST
    @Path(""validExample"")
    public Example validExample(@NotNull @Valid Example obj)","0","-","-","-","-"
"4188","validExample","@POST
    @Path(""validExampleArray"")
    public Example[] validExample(@Valid Example[] obj)","0","-","-","-","-"
"4189","validExample","@POST
    @Path(""validExampleCollection"")
    public Collection<Example> validExample(@Valid Collection<Example> obj)","0","-","-","-","-"
"4190","validExample","@POST
    @Path(""validExampleMap"")
    public Map<String, Example> validExample(@Valid Map<String, Example> obj)","0","-","-","-","-"
"4191","validExample","@POST
    @Path(""validExampleSet"")
    public Set<Example> validExample(@Valid Set<Example> obj)","0","-","-","-","-"
"4192","validExample","@POST
    @Path(""validExampleList"")
    public List<Example> validExample(@Valid List<Example> obj)","0","-","-","-","-"
"4193","validatedPartialExample","@POST
    @Path(""validatedPartialExample"")
    public PartialExample validatedPartialExample(
            @NotNull(groups = Partial1.class)
            @Valid
            @Validated(","0","-","-","-","-"
"4194","validExampleEmbedded","@POST
    @Path(""validExampleEmbeddedList"")
    public List<ListExample> validExampleEmbedded(@Valid List<ListExample> obj)","0","-","-","-","-"
"4195","everybody","@GET
    @Path(""fhqwhgads"")
    public String everybody(@QueryParam(""num"") @Min(3L) @NotNull Long param)","0","-","-","-","-"
"4196","blazer","@GET
    @Path(""zoo"")
    public String blazer(@Valid @BeanParam BeanParameter params)","0","-","-","-","-"
"4197","subBlazer","@GET
    @Path(""sub-zoo"")
    public String subBlazer(@Valid @BeanParam SubBeanParameter params)","0","-","-","-","-"
"4198","subGroupBlazer","@GET
    @Path(""sub-group-zoo"")
    public String subGroupBlazer(@Valid @Validated(Partial1.class) @BeanParam SubBeanParameter params)","0","-","-","-","-"
"4199","subValidGroupBlazer","@POST
    @Path(""sub-valid-group-zoo"")
    public String subValidGroupBlazer(
            @Valid @Validated(Partial1.class) @BeanParam SubBeanParameter params,
            @Valid @Validated(Partial1.class) ValidRepresentation entity)","0","-","-","-","-"
"4200","blazerValidated","@GET
    @Path(""zoo2"")
    public String blazerValidated(@Validated @Valid @BeanParam BeanParameter params)","0","-","-","-","-"
"4201","heads","@GET
    @Path(""head"")
    public String heads(@HeaderParam(""cheese"") @NotEmpty String secretSauce)","0","-","-","-","-"
"4202","heads","@GET
    @Path(""headCopy"")
    public String heads(@QueryParam(""cheese"") @NotNull(payload = Unwrapping.Skip.class) IntParam secretSauce)","0","-","-","-","-"
"4203","nullableIntParam","@GET
    @Path(""nullable-int-param"")
    public String nullableIntParam(@QueryParam(""num"") @Max(3) IntParam secretSauce)","0","-","-","-","-"
"4204","cooks","@GET
    @Path(""cooks"")
    public String cooks(@CookieParam(""user_id"") @NotEmpty String secretSauce)","0","-","-","-","-"
"4205","pather","@GET
    @Path(""goods/","0","-","-","-","-"
"4206","form","@POST
    @Path(""form"")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public String form(@FormParam(""username"") @NotEmpty String secretSauce)","0","-","-","-","-"
"4207","nested","@GET
    @Path(""nested"")
    @Valid
    public WrappedValidRepresentation nested()","0","-","-","-","-"
"4208","nested2","@GET
    @Path(""nested2"")
    @Valid
    public WrappedFailingExample nested2()","0","-","-","-","-"
"4209","contextual","@GET
    @Path(""context"")
    public String contextual(@Valid @Context @NotNull ServletContext con)","0","-","-","-","-"
"4210","matrixParam","@GET
    @Path(""matrix"")
    public String matrixParam(@MatrixParam(""bob"") @NotEmpty String param)","0","-","-","-","-"
"4211","valmeth","@POST
    @Path(""nothing"")
    public FailingExample valmeth(@Valid FailingExample exam)","0","-","-","-","-"
"4212","enumParam","@GET
    @Path(""enumParam"")
    public String enumParam(@NotNull @QueryParam(""choice"") Choice choice)","0","-","-","-","-"
"4213","selfValidating","@GET
    @Path(""selfValidatingBeanParam"")
    public SelfValidatingClass selfValidating(@Valid @BeanParam SelfValidatingClass beanParameter)","0","-","-","-","-"
"4214","selfValidatingPayload","@POST
    @Path(""selfValidatingPayload"")
    public SelfValidatingClass selfValidatingPayload(@Valid SelfValidatingClass payload)","0","-","-","-","-"
"4215","longParam","@GET
    @Path(""longParam"")
    public Long longParam(@QueryParam(""num"") @Min(23) LongParam longParam)","0","-","-","-","-"
"4216","longParamNotNull","@GET
    @Path(""longParamNotNull"")
    public Long longParamNotNull(@QueryParam(""num"")
                                 @NotNull(payload = Unwrapping.Skip.class) @Min(23) LongParam longParam)","0","-","-","-","-"
"4217","longParamWithDefault","@GET
    @Path(""longParamWithDefault"")
    public Long longParamWithDefault(@QueryParam(""num"") @DefaultValue(""42"") @Min(23) LongParam longParam)","0","-","-","-","-"
"4218","intParam","@GET
    @Path(""intParam"")
    public Integer intParam(@QueryParam(""num"") @Min(23) IntParam intParam)","0","-","-","-","-"
"4219","intParamNotNull","@GET
    @Path(""intParamNotNull"")
    public Integer intParamNotNull(@QueryParam(""num"")
                                   @NotNull(payload = Unwrapping.Skip.class) @Min(23) IntParam intParam)","0","-","-","-","-"
"4220","intParamWithDefault","@GET
    @Path(""intParamWithDefault"")
    public Integer intParamWithDefault(@QueryParam(""num"") @DefaultValue(""42"") @Min(23) IntParam intParam)","0","-","-","-","-"
"4221","intParamWithOptionalInside","@GET
    @Path(""intParamWithOptionalInside"")
    public Integer intParamWithOptionalInside(@QueryParam(""num"") @Min(23) IntParam intParam)","0","-","-","-","-"
"4222","optionalInt","@GET
    @Path(""optionalInt"")
    public int optionalInt(@QueryParam(""num"") @Min(23) OptionalInt optionalInt)","0","-","-","-","-"
"4223","optionalIntWithDefault","@GET
    @Path(""optionalIntWithDefault"")
    public int optionalIntWithDefault(@QueryParam(""num"") @DefaultValue(""23"") @Min(23) OptionalInt optionalInt)","0","-","-","-","-"
"4224","optionalInteger","@GET
    @Path(""optionalInteger"")
    public int optionalInteger(@QueryParam(""num"")
                               @Min(value = 23, payload = Unwrapping.Unwrap.class) Optional<Integer> optionalInt)","0","-","-","-","-"
"4225","optionalIntegerWithDefault","@GET
    @Path(""optionalIntegerWithDefault"")
    public int optionalIntegerWithDefault(@QueryParam(""num"") @DefaultValue(""23"")
                                          @Min(value = 23, payload = Unwrapping.Unwrap.class) Optional<Integer> optionalInt)","0","-","-","-","-"
"4226","isAddressNotUppercase","@ValidationMethod(message = ""address must not be uppercase"",
        groups = JacksonMessageBodyProviderTest.Partial1.class)
    public boolean isAddressNotUppercase()","0","-","-","-","-"
"4227","getAddress","public String getAddress()","0","-","-","-","-"
"4228","getName","@JsonProperty
    public String getName()","0","-","-","-","-"
"4229","setName","@JsonProperty
    public void setName(String name)","0","-","-","-","-"
"4230","configure","protected void configure()","0","-","-","-","-"
"4231","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4232","init","@BeforeAll
    static void init()","0","-","-","-","-"
"4233","shutdown","@AfterAll
    static void shutdown()","0","-","-","-","-"
"4234","postInvalidEntityIs422","@Test
    void postInvalidEntityIs422()","0","-","-","-","-"
"4235","postNullEntityIs422","@Test
    void postNullEntityIs422()","0","-","-","-","-"
"4236","postInvalidatedEntityIs422","@Test
    void postInvalidatedEntityIs422()","0","-","-","-","-"
"4237","postInvalidInterfaceEntityIs422","@Test
    void postInvalidInterfaceEntityIs422()","0","-","-","-","-"
"4238","returnInvalidEntityIs500","@Test
    void returnInvalidEntityIs500()","0","-","-","-","-"
"4239","returnInvalidatedEntityIs500","@Test
    void returnInvalidatedEntityIs500()","0","-","-","-","-"
"4240","getInvalidReturnIs500","@Test
    void getInvalidReturnIs500()","0","-","-","-","-"
"4241","getInvalidQueryParamsIs400","@Test
    void getInvalidQueryParamsIs400()","0","-","-","-","-"
"4242","cacheIsForParamNamesOnly","@Test
    void cacheIsForParamNamesOnly()","0","-","-","-","-"
"4243","postInvalidPrimitiveIs422","@Test
    void postInvalidPrimitiveIs422()","0","-","-","-","-"
"4244","getInvalidCustomTypeIs400","@Test
    void getInvalidCustomTypeIs400()","0","-","-","-","-"
"4245","getInvalidBeanParamsIs400","@Test
    void getInvalidBeanParamsIs400()","0","-","-","-","-"
"4246","getInvalidSubBeanParamsIs400","@Test
    void getInvalidSubBeanParamsIs400()","0","-","-","-","-"
"4247","getGroupSubBeanParamsIs400","@Test
    void getGroupSubBeanParamsIs400()","0","-","-","-","-"
"4248","postValidGroupsIs400","@Test
    void postValidGroupsIs400()","0","-","-","-","-"
"4249","getInvalidatedBeanParamsIs400","@Test
    void getInvalidatedBeanParamsIs400()","0","-","-","-","-"
"4250","getInvalidHeaderParamsIs400","@Test
    void getInvalidHeaderParamsIs400()","0","-","-","-","-"
"4251","getInvalidCookieParamsIs400","@Test
    void getInvalidCookieParamsIs400()","0","-","-","-","-"
"4252","getInvalidPathParamsIs400","@Test
    void getInvalidPathParamsIs400()","0","-","-","-","-"
"4253","getInvalidFormParamsIs400","@Test
    void getInvalidFormParamsIs400()","0","-","-","-","-"
"4254","postInvalidMethodClassIs422","@Test
    void postInvalidMethodClassIs422()","0","-","-","-","-"
"4255","getInvalidNestedReturnIs500","@Test
    void getInvalidNestedReturnIs500()","0","-","-","-","-"
"4256","getInvalidNested2ReturnIs500","@Test
    void getInvalidNested2ReturnIs500()","0","-","-","-","-"
"4257","getInvalidContextIs400","@Test
    void getInvalidContextIs400()","0","-","-","-","-"
"4258","getInvalidMatrixParamIs400","@Test
    void getInvalidMatrixParamIs400()","0","-","-","-","-"
"4259","functionWithSameNameReturnDifferentErrors","@Test
    void functionWithSameNameReturnDifferentErrors()","0","-","-","-","-"
"4260","paramsCanBeUnwrappedAndValidated","@Test
    void paramsCanBeUnwrappedAndValidated()","0","-","-","-","-"
"4261","returnPartialValidatedRequestEntities","@Test
    void returnPartialValidatedRequestEntities()","0","-","-","-","-"
"4262","invalidNullPartialValidatedRequestEntities","@Test
    void invalidNullPartialValidatedRequestEntities()","0","-","-","-","-"
"4263","invalidEntityExceptionForPartialValidatedRequestEntities","@Test
    void invalidEntityExceptionForPartialValidatedRequestEntities()","0","-","-","-","-"
"4264","invalidNullPartialBothValidatedRequestEntities","@Test
    void invalidNullPartialBothValidatedRequestEntities()","0","-","-","-","-"
"4265","returnPartialBothValidatedRequestEntities","@Test
    void returnPartialBothValidatedRequestEntities()","0","-","-","-","-"
"4266","invalidEntityExceptionForInvalidRequestEntities","@Test
    void invalidEntityExceptionForInvalidRequestEntities()","0","-","-","-","-"
"4267","returnRequestEntities","@Test
    void returnRequestEntities()","0","-","-","-","-"
"4268","returnRequestArrayEntities","@Test
    void returnRequestArrayEntities()","0","-","-","-","-"
"4269","invalidRequestCollectionEntities","@Test
    void invalidRequestCollectionEntities()","0","-","-","-","-"
"4270","invalidRequestSingleCollectionEntities","@Test
    void invalidRequestSingleCollectionEntities()","0","-","-","-","-"
"4271","returnRequestCollectionEntities","@Test
    void returnRequestCollectionEntities()","0","-","-","-","-"
"4272","invalidRequestSetEntities","@Test
         void invalidRequestSetEntities()","0","-","-","-","-"
"4273","invalidRequestListEntities","@Test
    void invalidRequestListEntities()","0","-","-","-","-"
"4274","throwsAConstraintViolationExceptionForEmptyRequestEntities","@Test
    void throwsAConstraintViolationExceptionForEmptyRequestEntities()","0","-","-","-","-"
"4275","returnsValidatedMapRequestEntities","@Test
    void returnsValidatedMapRequestEntities()","0","-","-","-","-"
"4276","invalidMapRequestEntities","@Test
    void invalidMapRequestEntities()","0","-","-","-","-"
"4277","returnsValidatedEmbeddedListEntities","@Test
    void returnsValidatedEmbeddedListEntities()","0","-","-","-","-"
"4278","invalidEmbeddedListEntities","@Test
    void invalidEmbeddedListEntities()","0","-","-","-","-"
"4279","testInvalidFieldQueryParam","@Test
    void testInvalidFieldQueryParam()","0","-","-","-","-"
"4280","missingParameterMessageContainsParameterName","@Test
    void missingParameterMessageContainsParameterName()","0","-","-","-","-"
"4281","emptyParameterMessageContainsParameterName","@Test
    void emptyParameterMessageContainsParameterName()","0","-","-","-","-"
"4282","maxMessageContainsParameterName","@Test
    void maxMessageContainsParameterName()","0","-","-","-","-"
"4283","minMessageContainsParameterName","@Test
    void minMessageContainsParameterName()","0","-","-","-","-"
"4284","paramClassPassesValidation","@Test
    void paramClassPassesValidation()","0","-","-","-","-"
"4285","minCustomMessage","@Test
    void minCustomMessage()","0","-","-","-","-"
"4286","notPresentEnumParameter","@Test
    void notPresentEnumParameter()","0","-","-","-","-"
"4287","invalidEnumParameter","@Test
    void invalidEnumParameter()","0","-","-","-","-"
"4288","invalidBeanParamEnumParameter","@Test
    void invalidBeanParamEnumParameter()","0","-","-","-","-"
"4289","selfValidatingBeanParamInvalid","@Test
    void selfValidatingBeanParamInvalid()","0","-","-","-","-"
"4290","selfValidatingBeanParamSuccess","@Test
    void selfValidatingBeanParamSuccess()","0","-","-","-","-"
"4291","selfValidatingPayloadInvalid","@Test
    void selfValidatingPayloadInvalid()","0","-","-","-","-"
"4292","selfValidatingPayloadSuccess","@Test
    void selfValidatingPayloadSuccess()","0","-","-","-","-"
"4293","longParam_fails_with_null","@Test
    void longParam_fails_with_null()","0","-","-","-","-"
"4294","longParam_fails_with_emptyString","@Test
    void longParam_fails_with_emptyString()","0","-","-","-","-"
"4295","longParam_fails_with_constraint_violation","@Test
    void longParam_fails_with_constraint_violation()","0","-","-","-","-"
"4296","longParam_fails_with_string","@Test
    void longParam_fails_with_string()","0","-","-","-","-"
"4297","longParam_succeeds","@Test
    void longParam_succeeds()","0","-","-","-","-"
"4298","longParamNotNull_fails_with_null","@Test
    void longParamNotNull_fails_with_null()","0","-","-","-","-"
"4299","longParamNotNull_fails_with_empty_string","@Test
    void longParamNotNull_fails_with_empty_string()","0","-","-","-","-"
"4300","longParamNotNull_fails_with_constraint_violation","@Test
    void longParamNotNull_fails_with_constraint_violation()","0","-","-","-","-"
"4301","longParamNotNull_fails_with_string","@Test
    void longParamNotNull_fails_with_string()","0","-","-","-","-"
"4302","longParamNotNull_succeeds","@Test
    void longParamNotNull_succeeds()","0","-","-","-","-"
"4303","longParamWithDefault_succeeds_with_null","@Test
    void longParamWithDefault_succeeds_with_null()","0","-","-","-","-"
"4304","longParamWithDefault_fails_with_empty_string","@Test
    void longParamWithDefault_fails_with_empty_string()","0","-","-","-","-"
"4305","longParamWithDefault_fails_with_constraint_violation","@Test
    void longParamWithDefault_fails_with_constraint_violation()","0","-","-","-","-"
"4306","longParamWithDefault_fails_with_string","@Test
    void longParamWithDefault_fails_with_string()","0","-","-","-","-"
"4307","longParamWithDefault_succeeds","@Test
    void longParamWithDefault_succeeds()","0","-","-","-","-"
"4308","intParam_fails_with_null","@Test
    void intParam_fails_with_null()","0","-","-","-","-"
"4309","intParam_fails_with_emptyString","@Test
    void intParam_fails_with_emptyString()","0","-","-","-","-"
"4310","intParam_fails_with_constraint_violation","@Test
    void intParam_fails_with_constraint_violation()","0","-","-","-","-"
"4311","intParam_fails_with_string","@Test
    void intParam_fails_with_string()","0","-","-","-","-"
"4312","intParam_succeeds","@Test
    void intParam_succeeds()","0","-","-","-","-"
"4313","intParamNotNull_fails_with_null","@Test
    void intParamNotNull_fails_with_null()","0","-","-","-","-"
"4314","intParamNotNull_fails_with_empty_string","@Test
    void intParamNotNull_fails_with_empty_string()","0","-","-","-","-"
"4315","intParamNotNull_fails_with_constraint_violation","@Test
    void intParamNotNull_fails_with_constraint_violation()","0","-","-","-","-"
"4316","intParamNotNull_fails_with_string","@Test
    void intParamNotNull_fails_with_string()","0","-","-","-","-"
"4317","intParamNotNull_succeeds","@Test
    void intParamNotNull_succeeds()","0","-","-","-","-"
"4318","intParamWithDefault_succeeds_with_null","@Test
    void intParamWithDefault_succeeds_with_null()","0","-","-","-","-"
"4319","intParamWithDefault_fails_with_empty_string","@Test
    void intParamWithDefault_fails_with_empty_string()","0","-","-","-","-"
"4320","intParamWithDefault_fails_with_constraint_violation","@Test
    void intParamWithDefault_fails_with_constraint_violation()","0","-","-","-","-"
"4321","intParamWithDefault_fails_with_string","@Test
    void intParamWithDefault_fails_with_string()","0","-","-","-","-"
"4322","intParamWithDefault_succeeds","@Test
    void intParamWithDefault_succeeds()","0","-","-","-","-"
"4323","intParamWithOptionalInside_fails_with_missing","@Test
    void intParamWithOptionalInside_fails_with_missing()","0","-","-","-","-"
"4324","intParamWithOptionalInside_fails_with_empty_string","@Test
    void intParamWithOptionalInside_fails_with_empty_string()","0","-","-","-","-"
"4325","intParamWithOptionalInside_fails_with_constraint_violation","@Test
    void intParamWithOptionalInside_fails_with_constraint_violation()","0","-","-","-","-"
"4326","intParamWithOptionalInside_fails_with_string","@Test
    void intParamWithOptionalInside_fails_with_string()","0","-","-","-","-"
"4327","intParamWithOptionalInside_succeeds","@Test
    void intParamWithOptionalInside_succeeds()","0","-","-","-","-"
"4328","optionalInt_succeeds_with_missing","@Test
    void optionalInt_succeeds_with_missing()","0","-","-","-","-"
"4329","optionalInt_succeeds_with_empty_string","@Test
    void optionalInt_succeeds_with_empty_string()","0","-","-","-","-"
"4330","optionalInt_fails_with_constraint_violation","@Test
    void optionalInt_fails_with_constraint_violation()","0","-","-","-","-"
"4331","optionalInt_fails_with_string","@Test
    void optionalInt_fails_with_string()","0","-","-","-","-"
"4332","optionalInt_succeeds","@Test
    void optionalInt_succeeds()","0","-","-","-","-"
"4333","optionalIntWithDefault_succeeds_with_missing","@Test
    void optionalIntWithDefault_succeeds_with_missing()","0","-","-","-","-"
"4334","optionalIntWithDefault_succeeds_with_empty_string","@Test
    void optionalIntWithDefault_succeeds_with_empty_string()","0","-","-","-","-"
"4335","optionalIntWithDefault_fails_with_constraint_violation","@Test
    void optionalIntWithDefault_fails_with_constraint_violation()","0","-","-","-","-"
"4336","optionalIntWithDefault_fails_with_string","@Test
    void optionalIntWithDefault_fails_with_string()","0","-","-","-","-"
"4337","optionalIntWithDefault_succeeds","@Test
    void optionalIntWithDefault_succeeds()","0","-","-","-","-"
"4338","optionalInteger_succeeds_with_missing","@Test
    void optionalInteger_succeeds_with_missing()","0","-","-","-","-"
"4339","optionalInteger_succeeds_with_empty_string","@Test
    void optionalInteger_succeeds_with_empty_string()","0","-","-","-","-"
"4340","optionalInteger_fails_with_constraint_violation","@Test
    void optionalInteger_fails_with_constraint_violation()","0","-","-","-","-"
"4341","optionalInteger_fails_with_string","@Test
    void optionalInteger_fails_with_string()","0","-","-","-","-"
"4342","optionalInteger_succeeds","@Test
    void optionalInteger_succeeds()","0","-","-","-","-"
"4343","optionalIntegerWithDefault_succeeds_with_missing","@Test
    void optionalIntegerWithDefault_succeeds_with_missing()","0","-","-","-","-"
"4344","optionalIntegerWithDefault_succeeds_with_empty_string","@Test
    void optionalIntegerWithDefault_succeeds_with_empty_string()","0","-","-","-","-"
"4345","optionalIntegerWithDefault_fails_with_constraint_violation","@Test
    void optionalIntegerWithDefault_fails_with_constraint_violation()","0","-","-","-","-"
"4346","optionalIntegerWithDefault_fails_with_string","@Test
    void optionalIntegerWithDefault_fails_with_string()","0","-","-","-","-"
"4347","optionalIntegerWithDefault_succeeds","@Test
    void optionalIntegerWithDefault_succeeds()","0","-","-","-","-"
"4348","SelfValidatingClass","public SelfValidatingClass()","0","-","-","-","-"
"4349","SelfValidatingClass","public SelfValidatingClass(@NotNull @QueryParam(""answer"") Integer answer)","0","-","-","-","-"
"4350","validate","@SelfValidation
    public void validate(ViolationCollector collector)","0","-","-","-","-"
"4351","succeedsWithAllGoodData","@Test
    void succeedsWithAllGoodData()","0","-","-","-","-"
"4352","failsWithInvalidIntParam","@Test
    void failsWithInvalidIntParam()","0","-","-","-","-"
"4353","failsWithNullIntParam","@SuppressWarnings(""NullAway"")
    @Test
    void failsWithNullIntParam()","0","-","-","-","-"
"4354","failsWithNullNonEmptyStringParam","@SuppressWarnings(""NullAway"")
    @Test
    void failsWithNullNonEmptyStringParam()","0","-","-","-","-"
"4355","failsWithInvalidNonEmptyStringParam","@Test
    void failsWithInvalidNonEmptyStringParam()","0","-","-","-","-"
"4356","failsWithEmptyNonEmptyStringParam","@Test
    void failsWithEmptyNonEmptyStringParam()","0","-","-","-","-"
"4357","CustomDeserialization","public CustomDeserialization()","0","-","-","-","-"
"4358","deserialize","@Override
    public CustomRepresentation deserialize(
        JsonParser jsonParser,
        DeserializationContext deserializationContext
    ) throws IOException","0","-","-","-","-"
"4359","MyNastyException","public MyNastyException(JsonParser jp)","0","-","-","-","-"
"4360","getMessage","@Override
        @Nullable
        public String getMessage()","0","-","-","-","-"
"4361","broken","@POST
    @Path(""/broken"")
    public void broken(BrokenRepresentation rep)","0","-","-","-","-"
"4362","brokenOutbound","@GET
    @Path(""/brokenOutbound"")
    public NonBeanImplementation brokenOutbound()","0","-","-","-","-"
"4363","ok","@POST
    @Path(""/ok"")
    public List<Integer> ok(OkRepresentation rep)","0","-","-","-","-"
"4364","ok","@POST
    @Path(""/brokenList"")
    public List<Integer> ok(List<BrokenRepresentation> rep)","0","-","-","-","-"
"4365","custom","@POST
    @Path(""/custom"")
    public void custom(CustomRepresentation rep)","0","-","-","-","-"
"4366","url","@POST
    @Path(""/url"")
    public void url(URL url)","0","-","-","-","-"
"4367","urlList","@POST
    @Path(""/urlList"")
    public void urlList(List<URL> url)","0","-","-","-","-"
"4368","face","@POST
    @Path(""/interface"")
    public void face(IInterface inter)","0","-","-","-","-"
"4369","face","@POST
    @Path(""/interfaceList"")
    public void face(List<IInterface> inter)","0","-","-","-","-"
"4370","showDetails","@Override
    boolean showDetails()","0","-","-","-","-"
"4371","DefaultJacksonMessageBodyProvider","public DefaultJacksonMessageBodyProvider()","0","-","-","-","-"
"4372","BrokenRepresentation","public BrokenRepresentation(List<String> messages)","0","-","-","-","-"
"4373","getMessages","@JsonProperty
    public List<String> getMessages()","0","-","-","-","-"
"4374","setMessages","@JsonProperty
    public void setMessages(List<String> messages)","0","-","-","-","-"
"4375","showDetails","@Override
    boolean showDetails()","0","-","-","-","-"
"4376","hashCode","@Override
        public int hashCode()","0","-","-","-","-"
"4377","equals","@Override
        public boolean equals(Object obj)","0","-","-","-","-"
"4378","readsDeserializableTypes","@Test
    void readsDeserializableTypes()","0","-","-","-","-"
"4379","writesSerializableTypes","@Test
    void writesSerializableTypes()","0","-","-","-","-"
"4380","doesNotWriteIgnoredTypes","@Test
    void doesNotWriteIgnoredTypes()","0","-","-","-","-"
"4381","writesUnIgnoredTypes","@Test
    void writesUnIgnoredTypes()","0","-","-","-","-"
"4382","doesNotReadIgnoredTypes","@Test
    void doesNotReadIgnoredTypes()","0","-","-","-","-"
"4383","readsUnIgnoredTypes","@Test
    void readsUnIgnoredTypes()","0","-","-","-","-"
"4384","isChunked","@Test
    void isChunked()","0","-","-","-","-"
"4385","deserializesRequestEntities","@Test
    void deserializesRequestEntities() throws Exception","0","-","-","-","-"
"4386","returnsPartialValidatedRequestEntities","@Test
    void returnsPartialValidatedRequestEntities() throws Exception","0","-","-","-","-"
"4387","returnsPartialValidatedByGroupRequestEntities","@Test
    void returnsPartialValidatedByGroupRequestEntities() throws Exception","0","-","-","-","-"
"4388","throwsAJsonProcessingExceptionForMalformedRequestEntities","@Test
    void throwsAJsonProcessingExceptionForMalformedRequestEntities()","0","-","-","-","-"
"4389","serializesResponseEntities","@Test
    void serializesResponseEntities() throws Exception","0","-","-","-","-"
"4390","returnsValidatedCollectionRequestEntities","@Test
    void returnsValidatedCollectionRequestEntities() throws Exception","0","-","-","-","-"
"4391","returnsValidatedSetRequestEntities","@Test
    void returnsValidatedSetRequestEntities() throws Exception","0","-","-","-","-"
"4392","returnsValidatedListRequestEntities","@Test
    void returnsValidatedListRequestEntities() throws Exception","0","-","-","-","-"
"4393","testValidatedCollectionType","private void testValidatedCollectionType(Class<?> klass, Type type) throws IOException","0","-","-","-","-"
"4394","isDefaultLocaleEnglish","static boolean isDefaultLocaleEnglish()","0","-","-","-","-"
"4395","getMessage","@JsonProperty
    public Integer getMessage()","0","-","-","-","-"
"4396","getDate","@JsonProperty
    @Nullable
    public LocalDate getDate()","0","-","-","-","-"
"4397","setMessage","@JsonProperty
    public void setMessage(Integer message)","0","-","-","-","-"
"4398","setDate","@JsonProperty
    public void setDate(LocalDate date)","0","-","-","-","-"
"4399","val","public Integer val()","0","-","-","-","-"
"4400","showDetails","abstract boolean showDetails();","0","-","-","-","-"
"4401","configure","@Override
    protected Application configure()","0","-","-","-","-"
"4402","configureClient","@Override
    protected void configureClient(ClientConfig config)","0","-","-","-","-"
"4403","returnsA500ForNonDeserializableRepresentationClasses","@Test
    void returnsA500ForNonDeserializableRepresentationClasses() throws Exception","0","-","-","-","-"
"4404","returnsA500ForListNonDeserializableRepresentationClasses","@Test
    void returnsA500ForListNonDeserializableRepresentationClasses() throws Exception","0","-","-","-","-"
"4405","returnsA500ForNonSerializableRepresentationClassesOutbound","@Test
    void returnsA500ForNonSerializableRepresentationClassesOutbound() throws Exception","0","-","-","-","-"
"4406","returnsA500ForAbstractEntity","@Test
    void returnsA500ForAbstractEntity() throws Exception","0","-","-","-","-"
"4407","returnsA500ForAbstractEntities","@Test
    void returnsA500ForAbstractEntities() throws Exception","0","-","-","-","-"
"4408","returnsA400ForCustomDeserializer","@Test
    void returnsA400ForCustomDeserializer() throws Exception","0","-","-","-","-"
"4409","returnsA500ForCustomDeserializerUnexpected","@Test
    void returnsA500ForCustomDeserializerUnexpected() throws Exception","0","-","-","-","-"
"4410","returnsA400ForMalformedInputCausingIoException","@Test
    void returnsA400ForMalformedInputCausingIoException() throws Exception","0","-","-","-","-"
"4411","returnsA400ForListWrongInputType","@Test
    void returnsA400ForListWrongInputType() throws Exception","0","-","-","-","-"
"4412","returnsA400ForMalformedListInputCausingIoException","@Test
    void returnsA400ForMalformedListInputCausingIoException() throws Exception","0","-","-","-","-"
"4413","returnsA400ForWrongInputType","@Test
    void returnsA400ForWrongInputType() throws Exception","0","-","-","-","-"
"4414","returnsA400ForInvalidFormatRequestEntities","@Test
    void returnsA400ForInvalidFormatRequestEntities() throws Exception","0","-","-","-","-"
"4415","returnsA400ForInvalidFormatRequestEntitiesWrapped","@Test
    void returnsA400ForInvalidFormatRequestEntitiesWrapped() throws Exception","0","-","-","-","-"
"4416","returnsA400ForInvalidFormatRequestEntitiesArray","@Test
    void returnsA400ForInvalidFormatRequestEntitiesArray() throws Exception","0","-","-","-","-"
"4417","returnsA400ForSemanticInvalidDate","@Test
    void returnsA400ForSemanticInvalidDate() throws Exception","0","-","-","-","-"
"4418","assertEndpointReturns400WithoutDetails","private <T> void assertEndpointReturns400WithoutDetails(String endpoint, T entity)","0","-","-","-","-"
"4419","assertEndpointReturns400","private <T> void assertEndpointReturns400(String endpoint, T entity)","0","-","-","-","-"
"4420","assertEndpointReturns500","private <T> void assertEndpointReturns500(String endpoint, T entity)","0","-","-","-","-"
"4421","repr","@POST
    @Path(""repr"")
    @Valid
    ValidRepresentation repr(@NotNull @Valid ValidRepresentation representation,
                             @NotNull @QueryParam(""interfaceVariable"") String xer);","0","-","-","-","-"
"4422","OptionalParamConverterProvider","@Inject
    public OptionalParamConverterProvider(final InjectionManager manager)","0","-","-","-","-"
"4423","getConverter","/**
     *","0","-","-","-","-"
"4424","fromString","@Override
                    public T fromString(final String value)","0","-","-","-","-"
"4425","toString","@Override
                    public String toString(final T value)","0","-","-","-","-"
"4426","fromString","@Override
                        public T fromString(final String value)","0","-","-","-","-"
"4427","toString","@Override
                        public String toString(final T value)","0","-","-","-","-"
"4428","configure","@Override
    protected void configure()","0","-","-","-","-"
"4429","getSize","@Override
    public long getSize(Optional<?> entity, Class<?> type, Type genericType,
                        Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4430","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType,
                               Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4431","writeTo","@SuppressWarnings(","0","-","-","-","-"
"4432","JerseyEnvironment","public JerseyEnvironment(JerseyContainerHolder holder,
                             DropwizardResourceConfig config)","0","-","-","-","-"
"4433","disable","public void disable()","0","-","-","-","-"
"4434","replace","public void replace(Function<ResourceConfig, Servlet> replace)","0","-","-","-","-"
"4435","register","/**
     * Adds the given object as a Jersey singleton component.
     *
     * @param component a Jersey singleton component
     */
    public void register(Object component)","0","-","-","-","-"
"4436","register","/**
     * Adds the given class as a Jersey component. <p/><b>N.B.:</b> This class must either have a
     * no-args constructor or use Jersey's built-in dependency injection.
     *
     * @param componentClass a Jersey component class
     */
    public void register(Class<?> componentClass)","0","-","-","-","-"
"4437","packages","/**
     * Adds array of package names which will be used to scan for components. Packages will be
     * scanned recursively, including all nested packages.
     *
     * @param packages array of package names
     */
    public void packages(String... packages)","0","-","-","-","-"
"4438","enable","/**
     * Enables the Jersey feature with the given name.
     *
     * @param featureName the name of the feature to be enabled
     * @see org.glassfish.jersey.server.ResourceConfig
     */
    public void enable(String featureName)","0","-","-","-","-"
"4439","disable","/**
     * Disables the Jersey feature with the given name.
     *
     * @param featureName the name of the feature to be disabled
     * @see org.glassfish.jersey.server.ResourceConfig
     */
    public void disable(String featureName)","0","-","-","-","-"
"4440","property","/**
     * Sets the given Jersey property.
     *
     * @param name  the name of the Jersey property
     * @param value the value of the Jersey property
     * @see org.glassfish.jersey.server.ResourceConfig
     */
    public void property(String name, @Nullable Object value)","0","-","-","-","-"
"4441","getProperty","/**
     * Gets the given Jersey property.
     *
     * @param name the name of the Jersey property
     * @see org.glassfish.jersey.server.ResourceConfig
     */
    @SuppressWarnings(","0","-","-","-","-"
"4442","getUrlPattern","public String getUrlPattern()","0","-","-","-","-"
"4443","setUrlPattern","public void setUrlPattern(String urlPattern)","0","-","-","-","-"
"4444","getResourceConfig","public DropwizardResourceConfig getResourceConfig()","0","-","-","-","-"
"4445","JerseyServletContainer","/**
     * Create Jersey Servlet container.
     */
    public JerseyServletContainer()","0","-","-","-","-"
"4446","JerseyServletContainer","/**
     * Create Jersey Servlet container.
     * @param resourceConfig container configuration.
     */
    public JerseyServletContainer(DropwizardResourceConfig resourceConfig)","0","-","-","-","-"
"4447","JerseyContainerHolder","public JerseyContainerHolder(@Nullable Servlet container)","0","-","-","-","-"
"4448","getContainer","@Nullable
    public Servlet getContainer()","0","-","-","-","-"
"4449","setContainer","public void setContainer(@Nullable Servlet container)","0","-","-","-","-"
"4450","ConfiguredGZipEncoder","public ConfiguredGZipEncoder(boolean forceEncoding)","0","-","-","-","-"
"4451","filter","@Override
    public void filter(ClientRequestContext context) throws IOException","0","-","-","-","-"
"4452","aroundWriteTo","@Override
    public final void aroundWriteTo(WriterInterceptorContext context) throws IOException","0","-","-","-","-"
"4453","aroundReadFrom","@Override
    public Object aroundReadFrom(ReaderInterceptorContext context) throws IOException","0","-","-","-","-"
"4454","DropwizardResourceConfig","public DropwizardResourceConfig()","0","-","-","-","-"
"4455","DropwizardResourceConfig","public DropwizardResourceConfig(@Nullable MetricRegistry metricRegistry)","0","-","-","-","-"
"4456","forTesting","/**
     * Build a","0","-","-","-","-"
"4457","forTesting","/**
     * Build a","0","-","-","-","-"
"4458","getUrlPattern","public String getUrlPattern()","0","-","-","-","-"
"4459","setUrlPattern","public void setUrlPattern(String urlPattern)","0","-","-","-","-"
"4460","getContextPath","/**
     * @since 2.0
     */
    public String getContextPath()","0","-","-","-","-"
"4461","setContextPath","public void setContextPath(String contextPath)","0","-","-","-","-"
"4462","getEndpointsInfo","/**
     * @since 2.0
     */
    public String getEndpointsInfo()","0","-","-","-","-"
"4463","allClasses","/**
     * Combines types of getClasses() and getSingletons in one Set.
     *
     * @return all registered types
     */
    Set<Class<?>> allClasses()","0","-","-","-","-"
"4464","register","@Override
    public ResourceConfig register(final Object component)","0","-","-","-","-"
"4465","cleanUpPath","static String cleanUpPath(String path)","0","-","-","-","-"
"4466","SpecificBinder","public SpecificBinder(Object object, Class<?> clazz)","0","-","-","-","-"
"4467","configure","@Override
        public void configure()","0","-","-","-","-"
"4468","EndpointLogLine","EndpointLogLine(String httpMethod, String basePath, Class<?> klass)","0","-","-","-","-"
"4469","toString","@Override
        public String toString()","0","-","-","-","-"
"4470","compare","@Override
        public int compare(EndpointLogLine endpointA, EndpointLogLine endpointB)","0","-","-","-","-"
"4471","ComponentLoggingListener","ComponentLoggingListener(DropwizardResourceConfig config)","0","-","-","-","-"
"4472","onEvent","@Override
        @SuppressWarnings(""Slf4jFormatShouldBeConst"")
        public void onEvent(ApplicationEvent event)","0","-","-","-","-"
"4473","logMethodLines","private List<EndpointLogLine> logMethodLines(Resource resource, String contextPath)","0","-","-","-","-"
"4474","mergePaths","private static String mergePaths(@NotNull String context, String subPath)","0","-","-","-","-"
"4475","logResourceLines","private List<EndpointLogLine> logResourceLines(Resource resource, String contextPath)","0","-","-","-","-"
"4476","getEndpointsInfo","String getEndpointsInfo()","0","-","-","-","-"
"4477","onRequest","@Override
        @Nullable
        public RequestEventListener onRequest(RequestEvent requestEvent)","0","-","-","-","-"
"4478","MetricRegistryBinder","public MetricRegistryBinder(MetricRegistry metricRegistry)","0","-","-","-","-"
"4479","configure","@Override
        protected void configure()","0","-","-","-","-"
"4480","toResponse","@Override
    public Response toResponse(EmptyOptionalException exception)","0","-","-","-","-"
"4481","getSize","@Override
    public long getSize(OptionalLong entity, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4482","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4483","writeTo","@Override
    public void writeTo(OptionalLong entity,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType,
                        MultivaluedMap<String, Object> httpHeaders,
                        OutputStream entityStream) throws IOException","0","-","-","-","-"
"4484","EmptyOptionalException","private EmptyOptionalException()","0","-","-","-","-"
"4485","getSize","@Override
    public long getSize(OptionalDouble entity, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4486","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4487","writeTo","@Override
    public void writeTo(OptionalDouble entity,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType,
                        MultivaluedMap<String, Object> httpHeaders,
                        OutputStream entityStream) throws IOException","0","-","-","-","-"
"4488","getSize","@Override
    public long getSize(OptionalInt entity, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4489","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4490","writeTo","@Override
    public void writeTo(OptionalInt entity,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType,
                        MultivaluedMap<String, Object> httpHeaders,
                        OutputStream entityStream) throws IOException","0","-","-","-","-"
"4491","toResponse","@Override
    public Response toResponse(EmptyOptionalException exception)","0","-","-","-","-"
"4492","getSize","@Override
    public long getSize(Optional<?> entity, Class<?> type, Type genericType,
                        Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4493","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType,
                               Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4494","writeTo","@SuppressWarnings(","0","-","-","-","-"
"4495","LocalDateParam","public LocalDateParam(@Nullable final String input)","0","-","-","-","-"
"4496","parse","@Override
    protected LocalDate parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4497","ZonedDateTimeParam","public ZonedDateTimeParam(@Nullable final String input)","0","-","-","-","-"
"4498","parse","@Override
    protected ZonedDateTime parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4499","OffsetDateTimeParam","public OffsetDateTimeParam(@Nullable final String input)","0","-","-","-","-"
"4500","parse","@Override
    protected OffsetDateTime parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4501","YearMonthParam","public YearMonthParam(@Nullable final String input)","0","-","-","-","-"
"4502","parse","@Override
    protected YearMonth parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4503","InstantSecondParam","public InstantSecondParam(@Nullable final String input)","0","-","-","-","-"
"4504","parse","@Override
    protected Instant parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4505","LocalTimeParam","public LocalTimeParam(@Nullable final String input)","0","-","-","-","-"
"4506","parse","@Override
    protected LocalTime parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4507","YearParam","public YearParam(@Nullable final String input)","0","-","-","-","-"
"4508","parse","@Override
    protected Year parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4509","ZoneIdParam","public ZoneIdParam(@Nullable final String input)","0","-","-","-","-"
"4510","parse","@Override
    protected ZoneId parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4511","InstantParam","public InstantParam(@Nullable final String input)","0","-","-","-","-"
"4512","parse","@Override
    protected Instant parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4513","LocalDateTimeParam","public LocalDateTimeParam(@Nullable final String input)","0","-","-","-","-"
"4514","parse","@Override
    protected LocalDateTime parse(@Nullable final String input) throws Exception","0","-","-","-","-"
"4515","HttpSessionFactory","@Inject
    public HttpSessionFactory(HttpServletRequest request)","0","-","-","-","-"
"4516","provide","@Nullable
    public HttpSession provide(boolean doNotCreate)","0","-","-","-","-"
"4517","SessionFactoryProvider","@Inject
    public SessionFactoryProvider(final Provider<MultivaluedParameterExtractorProvider> extractorProvider, InjectionManager im)","0","-","-","-","-"
"4518","createValueProvider","@Nullable
    @Override
    protected Function<ContainerRequest, ?> createValueProvider(Parameter parameter)","0","-","-","-","-"
"4519","configure","@Override
        protected void configure()","0","-","-","-","-"
"4520","Flash","@SuppressWarnings(""unchecked"")
    Flash(HttpSession session)","0","-","-","-","-"
"4521","get","public Optional<T> get()","0","-","-","-","-"
"4522","set","public void set(T value)","0","-","-","-","-"
"4523","FlashFactory","@Inject
    public FlashFactory(HttpServletRequest request)","0","-","-","-","-"
"4524","provide","@SuppressWarnings(""rawtypes"")
    @Nullable
    public Flash<?> provide(boolean doNotCreate)","0","-","-","-","-"
"4525","DefaultValueUtils","private DefaultValueUtils()","0","-","-","-","-"
"4526","getDefaultValue","/**
     * Returns the value of the","0","-","-","-","-"
"4527","LongParam","public LongParam(@Nullable String input)","0","-","-","-","-"
"4528","LongParam","public LongParam(@Nullable String input, String parameterName)","0","-","-","-","-"
"4529","errorMessage","@Override
    protected String errorMessage(Exception e)","0","-","-","-","-"
"4530","parse","@Override
    protected Long parse(@Nullable String input)","0","-","-","-","-"
"4531","AbstractParamConverter","public AbstractParamConverter(Constructor<T> constructor, String parameterName, @Nullable String defaultValue)","0","-","-","-","-"
"4532","fromString","/**
     *","0","-","-","-","-"
"4533","toString","/**
     *","0","-","-","-","-"
"4534","AbstractParam","/**
     * Given an input value from a client, creates a parameter wrapping its parsed value.
     *
     * @param input an input value from a client request, might be","0","-","-","-","-"
"4535","AbstractParam","/**
     * Given an input value from a client, creates a parameter wrapping its parsed value.
     *
     * @param input         an input value from a client request, might be","0","-","-","-","-"
"4536","generateErrorMessage","/**
     * Generates an","0","-","-","-","-"
"4537","error","/**
     * Deprecated - instead of throwing a","0","-","-","-","-"
"4538","mediaType","/**
     * Deprecated - the media type should be set by the exception mapper instead. This method is no longer called
     * by AbstractParam.
     *
     * @return not used
     * @deprecated the media type should be set by the exception mapper instead
     */
    @Deprecated
    protected MediaType mediaType()","0","-","-","-","-"
"4539","errorMessage","/**
     * Given a string representation which was unable to be parsed and the exception thrown, produce
     * an error message to be sent to the client.
     *
     * @param e the exception thrown while parsing","0","-","-","-","-"
"4540","getErrorStatus","/**
     * Given a string representation which was unable to be parsed, produce a","0","-","-","-","-"
"4541","parse","/**
    * Given a string representation, parse it and return an instance of the parameter type.
    *
    * @param input the raw input
    * @return","0","-","-","-","-"
"4542","get","/**
     * Returns the underlying value.
     *
     * @return the underlying value
     */
    public T get()","0","-","-","-","-"
"4543","equals","@Override
    public boolean equals(Object obj)","0","-","-","-","-"
"4544","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"4545","toString","@Override
    public String toString()","0","-","-","-","-"
"4546","NonEmptyStringParam","public NonEmptyStringParam(@Nullable String input)","0","-","-","-","-"
"4547","NonEmptyStringParam","public NonEmptyStringParam(@Nullable String input, String parameterName)","0","-","-","-","-"
"4548","parse","@Override
    protected Optional<String> parse(@Nullable String input)","0","-","-","-","-"
"4549","getConverter","@Override
    @Nullable
    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType, Annotation[] annotations)","0","-","-","-","-"
"4550","UUIDParam","public UUIDParam(@Nullable String input)","0","-","-","-","-"
"4551","UUIDParam","public UUIDParam(@Nullable String input, String parameterName)","0","-","-","-","-"
"4552","errorMessage","@Override
    protected String errorMessage(Exception e)","0","-","-","-","-"
"4553","parse","@Override
    protected UUID parse(@Nullable String input) throws Exception","0","-","-","-","-"
"4554","IntParam","public IntParam(@Nullable String input)","0","-","-","-","-"
"4555","IntParam","public IntParam(@Nullable String input, String parameterName)","0","-","-","-","-"
"4556","errorMessage","@Override
    protected String errorMessage(Exception e)","0","-","-","-","-"
"4557","parse","@Override
    protected Integer parse(@Nullable String input)","0","-","-","-","-"
"4558","filter","@Override
    public void filter(final ContainerRequestContext request,
            final ContainerResponseContext response) throws IOException","0","-","-","-","-"
"4559","setCurrentTimeProvider","void setCurrentTimeProvider(Supplier<Long> currentTimeProvider)","0","-","-","-","-"
"4560","filter","@Override
    public void filter(final ContainerRequestContext request) throws IOException","0","-","-","-","-"
"4561","filter","@Override
    public void filter(final ContainerRequestContext request,
            final ContainerResponseContext response) throws IOException","0","-","-","-","-"
"4562","setLogger","void setLogger(Logger logger)","0","-","-","-","-"
"4563","filter","@Override
    public void filter(final ContainerRequestContext request,
            final ContainerResponseContext response) throws IOException","0","-","-","-","-"
"4564","generateRandomUuid","/**
     * Generate a random UUID v4 that will perform reasonably when used by
     * multiple threads under load.
     *
     * @see <a href=""https://github.com/Netflix/netflix-commons/blob/v0.3.0/netflix-commons-util/src/main/java/com/netflix/util/concurrent/ConcurrentUUIDFactory.java"">ConcurrentUUIDFactory</a>
     * @return random UUID
     */
    private static UUID generateRandomUuid()","0","-","-","-","-"
"4565","init","@Override
    public void init(FilterConfig config)","0","-","-","-","-"
"4566","doFilter","@Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException","0","-","-","-","-"
"4567","handle","private void handle(HttpServletRequest request, HttpServletResponse response, FilterChain chain)
            throws IOException, ServletException","0","-","-","-","-"
"4568","toResponse","@Override
    public Response toResponse(EofException e)","0","-","-","-","-"
"4569","IllegalStateExceptionMapper","public IllegalStateExceptionMapper()","0","-","-","-","-"
"4570","toResponse","@Override
    public Response toResponse(final IllegalStateException exception)","0","-","-","-","-"
"4571","createResponse","private Response createResponse(final WebApplicationException exception)","0","-","-","-","-"
"4572","ErrorEntityWriter","/**
     * @param contentType Content type the writer will produce
     * @param representation Response type the writer will produce
     */
    protected ErrorEntityWriter(MediaType contentType, Class<U> representation)","0","-","-","-","-"
"4573","isWriteable","@Override
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4574","getSize","@Override
    public long getSize(T entity, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4575","writeTo","@Override
    public void writeTo(T entity,
                        Class<?> type,
                        Type genericType,
                        Annotation[] annotations,
                        MediaType mediaType,
                        MultivaluedMap<String, Object> responseHeaders,
                        OutputStream entityStream)
        throws IOException, WebApplicationException","0","-","-","-","-"
"4576","getRepresentation","protected abstract U getRepresentation(T entity);","0","-","-","-","-"
"4577","LoggingExceptionMapper","/**
     * @since 2.0
     */
    protected LoggingExceptionMapper(Logger logger)","0","-","-","-","-"
"4578","LoggingExceptionMapper","/**
     * @since 2.0
     */
    protected LoggingExceptionMapper()","0","-","-","-","-"
"4579","toResponse","@Override
    public Response toResponse(E exception)","0","-","-","-","-"
"4580","formatErrorMessage","@SuppressWarnings(""UnusedParameters"")
    protected String formatErrorMessage(long id, E exception)","0","-","-","-","-"
"4581","logException","protected long logException(E exception)","0","-","-","-","-"
"4582","logException","@SuppressWarnings(""Slf4jFormatShouldBeConst"")
    protected void logException(long id, E exception)","0","-","-","-","-"
"4583","formatLogMessage","@SuppressWarnings(""UnusedParameters"")
    protected String formatLogMessage(long id, Throwable exception)","0","-","-","-","-"
"4584","ErrorMessage","public ErrorMessage(@Nullable String message)","0","-","-","-","-"
"4585","ErrorMessage","public ErrorMessage(int code, @Nullable String message)","0","-","-","-","-"
"4586","ErrorMessage","@JsonCreator
    public ErrorMessage(@JsonProperty(""code"") int code,
                        @Nullable @JsonProperty(""message"") String message,
                        @Nullable @JsonProperty(""details"") String details)","0","-","-","-","-"
"4587","getCode","@JsonProperty(""code"")
    public Integer getCode()","0","-","-","-","-"
"4588","getMessage","@JsonProperty(""message"")
    @Nullable
    public String getMessage()","0","-","-","-","-"
"4589","getDetails","@JsonProperty(""details"")
    @Nullable
    public String getDetails()","0","-","-","-","-"
"4590","equals","@Override
    public boolean equals(final Object obj)","0","-","-","-","-"
"4591","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"4592","toString","@Override
    public String toString()","0","-","-","-","-"
"4593","EofExceptionWriterInterceptor","@Inject
    public EofExceptionWriterInterceptor(MetricRegistry metricRegistry)","0","-","-","-","-"
"4594","aroundWriteTo","@Override
    public void aroundWriteTo(WriterInterceptorContext context) throws IOException, WebApplicationException","0","-","-","-","-"
"4595","configure","@Override
    public void configure(final ResourceInfo resourceInfo, final FeatureContext configuration)","0","-","-","-","-"
"4596","CacheControlledResponseFilter","CacheControlledResponseFilter(CacheControl control)","0","-","-","-","-"
"4597","filter","@Override
        public void filter(ContainerRequestContext requestContext,
                           ContainerResponseContext responseContext) throws IOException","0","-","-","-","-"
"4598","FuzzyEnumParamConverter","FuzzyEnumParamConverter(Class<T> rawType,
                            Method fromStringMethod,
                            Enum<?>[] constants,
                            String parameterName)","0","-","-","-","-"
"4599","fromString","@Override
    @Nullable
    public T fromString(String value)","0","-","-","-","-"
"4600","toString","@Override
    public String toString(T value)","0","-","-","-","-"
"4601","ParamValueExtractor","private ParamValueExtractor()","0","-","-","-","-"
"4602","extractValues","@Override
    public void extractValues(AbstractParam<?> originalValue, ValueExtractor.ValueReceiver receiver)","0","-","-","-","-"
"4603","NonEmptyStringParamValueExtractor","private NonEmptyStringParamValueExtractor()","0","-","-","-","-"
"4604","extractValues","@Override
    public void extractValues(NonEmptyStringParam originalValue, ValueExtractor.ValueReceiver receiver)","0","-","-","-","-"
"4605","getParameterNames","@Override
    public List<String> getParameterNames(Method method)","0","-","-","-","-"
"4606","getParameterNameFromAnnotations","/**
     * Derives member name and type from its annotations
     */
    public static Optional<String> getParameterNameFromAnnotations(Annotation[] memberAnnotations)","0","-","-","-","-"
"4607","HibernateValidationBinder","public HibernateValidationBinder(Validator validator)","0","-","-","-","-"
"4608","configure","@Override
    protected void configure()","0","-","-","-","-"
"4609","getConverter","@Override
    @Nullable
    public <T> ParamConverter<T> getConverter(Class<T> rawType, @Nullable Type genericType, Annotation[] annotations)","0","-","-","-","-"
"4610","Validators","private Validators()","0","-","-","-","-"
"4611","newValidator","/**
     * Creates a new","0","-","-","-","-"
"4612","newValidatorFactory","/**
     * Creates a new","0","-","-","-","-"
"4613","newConfiguration","/**
     * Creates a new","0","-","-","-","-"
"4614","ValidationErrorMessage","@JsonCreator
    public ValidationErrorMessage(@JsonProperty(""errors"") List<String> errors)","0","-","-","-","-"
"4615","getErrors","@JsonProperty
    public List<String> getErrors()","0","-","-","-","-"
"4616","DropwizardConfiguredValidator","public DropwizardConfiguredValidator(Validator validator)","0","-","-","-","-"
"4617","validateResourceAndInputParams","@Override
    public void validateResourceAndInputParams(Object resource, final Invocable invocable, Object[] objects)
            throws ConstraintViolationException","0","-","-","-","-"
"4618","getGroup","/**
     * If the request entity is annotated with","0","-","-","-","-"
"4619","validateResult","@Override
    public void validateResult(Object resource, Invocable invocable, Object returnValue)
            throws ConstraintViolationException","0","-","-","-","-"
"4620","validate","@Override
    public <T> Set<ConstraintViolation<T>> validate(T t, Class<?>... classes)","0","-","-","-","-"
"4621","validateProperty","@Override
    public <T> Set<ConstraintViolation<T>> validateProperty(T t, String s, Class<?>... classes)","0","-","-","-","-"
"4622","validateValue","@Override
    public <T> Set<ConstraintViolation<T>> validateValue(Class<T> aClass, String s, Object o, Class<?>... classes)","0","-","-","-","-"
"4623","getConstraintsForClass","@Override
    public BeanDescriptor getConstraintsForClass(Class<?> aClass)","0","-","-","-","-"
"4624","unwrap","@Override
    public <T> T unwrap(Class<T> aClass)","0","-","-","-","-"
"4625","forExecutables","@Override
    public ExecutableValidator forExecutables()","0","-","-","-","-"
"4626","toResponse","@Override
    public Response toResponse(final JerseyViolationException exception)","0","-","-","-","-"
"4627","getInstance","@Override
    public final <T extends ConstraintValidator<?, ?>> T getInstance(Class<T> key)","0","-","-","-","-"
"4628","releaseInstance","@Override
    public void releaseInstance(ConstraintValidator<?, ?> instance)","0","-","-","-","-"
"4629","setValidatorFactory","public void setValidatorFactory(ConstraintValidatorFactory validatorFactory)","0","-","-","-","-"
"4630","JerseyViolationException","public JerseyViolationException(Set<? extends ConstraintViolation<?>> constraintViolations, Invocable invocable)","0","-","-","-","-"
"4631","getInvocable","public Invocable getInvocable()","0","-","-","-","-"
"4632","ConstraintMessage","private ConstraintMessage()","0","-","-","-","-"
"4633","getMessage","/**
     * Gets the human friendly location of where the violation was raised.
     */
    public static String getMessage(ConstraintViolation<?> v, Invocable invocable)","0","-","-","-","-"
"4634","stripLastComponent","private static String stripLastComponent(String str)","0","-","-","-","-"
"4635","calculatePrefix","private static String calculatePrefix(ConstraintViolation<?> v, Invocable invocable)","0","-","-","-","-"
"4636","isRequestEntity","/**
     * Determines if constraint violation occurred in the request entity. If it did, return a client
     * friendly string representation of where the error occurred (e.g. ""patient.name"")
     */
    public static Optional<String> isRequestEntity(ConstraintViolation<?> violation, Invocable invocable)","0","-","-","-","-"
"4637","getMemberName","/**
     * Gets a method parameter (or a parameter field) name, if the violation raised in it.
     */
    private static Optional<String> getMemberName(ConstraintViolation<?> violation, Invocable invocable)","0","-","-","-","-"
"4638","getMethodReturnValueName","/**
     * Gets the method return value name, if the violation is raised in it
     */
    private static Optional<String> getMethodReturnValueName(ConstraintViolation<?> violation)","0","-","-","-","-"
"4639","isValidationMethod","private static boolean isValidationMethod(ConstraintViolation<?> v)","0","-","-","-","-"
"4640","isSelfValidating","private static boolean isSelfValidating(ConstraintViolation<?> v)","0","-","-","-","-"
"4641","determineStatus","/**
     * Given a set of constraint violations and a Jersey","0","-","-","-","-"
"4642","getFieldAnnotations","private static Optional<Annotation[]> getFieldAnnotations(Class klass, String name)","0","-","-","-","-"
"4643","JacksonMessageBodyProvider","public JacksonMessageBodyProvider(ObjectMapper mapper)","0","-","-","-","-"
"4644","isReadable","@Override
    public boolean isReadable(Class<?> type,
                              @Nullable Type genericType,
                              @Nullable Annotation @Nullable [] annotations,
                              @Nullable MediaType mediaType)","0","-","-","-","-"
"4645","isWriteable","@Override
    public boolean isWriteable(Class<?> type,
                               @Nullable Type genericType,
                               @Nullable Annotation @Nullable [] annotations,
                               @Nullable MediaType mediaType)","0","-","-","-","-"
"4646","isProvidable","private boolean isProvidable(Class<?> type)","0","-","-","-","-"
"4647","getObjectMapper","public ObjectMapper getObjectMapper()","0","-","-","-","-"
"4648","JsonProcessingExceptionMapper","public JsonProcessingExceptionMapper()","0","-","-","-","-"
"4649","JsonProcessingExceptionMapper","public JsonProcessingExceptionMapper(boolean showDetails)","0","-","-","-","-"
"4650","isShowDetails","public boolean isShowDetails()","0","-","-","-","-"
"4651","toResponse","@Override
    public Response toResponse(JsonProcessingException exception)","0","-","-","-","-"
"4652","JacksonFeature","public JacksonFeature(ObjectMapper mapper)","0","-","-","-","-"
"4653","configure","@Override
    public boolean configure(FeatureContext context)","0","-","-","-","-"
"4654","testInjectedSessionsIsNotNull","@Test
    void testInjectedSessionsIsNotNull()","0","-","-","-","-"
"4655","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4656","canSubmitFormAndReceiveResponse","@Test
    void canSubmitFormAndReceiveResponse() throws IOException","0","-","-","-","-"
"4657","failOnNoChunkedEncoding","/**
     * Test confirms that chunked encoding has to be disabled in order for
     * sending forms to work. Maybe someday this requirement will be relaxed and
     * this test can be updated for the new behavior. For more info, see issues
     * #1013 and #1094
     */
    @Test
    void failOnNoChunkedEncoding() throws IOException","0","-","-","-","-"
"4658","setup","@BeforeEach
    void setup()","0","-","-","-","-"
"4659","teardown","@AfterAll
    static void teardown()","0","-","-","-","-"
"4660","thatLoggingIsNotBrokenOnCleanup","@Test
    void thatLoggingIsNotBrokenOnCleanup() throws Exception","0","-","-","-","-"
"4661","testSupportShouldResetLogging","@Test
    void testSupportShouldResetLogging(@TempDir Path tempDir) throws Exception","0","-","-","-","-"
"4662","setUp","@BeforeEach
    public void setUp()","0","-","-","-","-"
"4663","tearDown","@AfterEach
    public void tearDown()","0","-","-","-","-"
"4664","healthCheckShouldReportUnhealthyOnInitialStart","@Test
    void healthCheckShouldReportUnhealthyOnInitialStart()","0","-","-","-","-"
"4665","healthCheckShouldReportHealthyWhenInitialStateFalseCriticalCheckGoesHealthy","@Test
    void healthCheckShouldReportHealthyWhenInitialStateFalseCriticalCheckGoesHealthy()","0","-","-","-","-"
"4666","healthCheckShouldReportHealthyWhenAllHealthChecksHealthy","@Test
    void healthCheckShouldReportHealthyWhenAllHealthChecksHealthy()","0","-","-","-","-"
"4667","nonCriticalHealthCheckFailureShouldNotResultInUnhealthyApp","@Test
    void nonCriticalHealthCheckFailureShouldNotResultInUnhealthyApp()","0","-","-","-","-"
"4668","criticalHealthCheckFailureShouldResultInUnhealthyApp","@Test
    void criticalHealthCheckFailureShouldResultInUnhealthyApp()","0","-","-","-","-"
"4669","appShouldRecoverOnceCriticalCheckReturnsToHealthyStatus","@Test
    void appShouldRecoverOnceCriticalCheckReturnsToHealthyStatus()","0","-","-","-","-"
"4670","isAppHealthy","private boolean isAppHealthy()","0","-","-","-","-"
"4671","isHealthCheckResponding","private boolean isHealthCheckResponding()","0","-","-","-","-"
"4672","checkClientTrusted","@Override
        public void checkClientTrusted(X509Certificate[] x509Certificates, String s)","0","-","-","-","-"
"4673","checkServerTrusted","@Override
        public void checkServerTrusted(X509Certificate[] x509Certificates, String s)","0","-","-","-","-"
"4674","getAcceptedIssuers","@Override
        public X509Certificate[] getAcceptedIssuers()","0","-","-","-","-"
"4675","setupClass","@BeforeAll
    public static void setupClass(@TempDir Path tempDir) throws IOException","0","-","-","-","-"
"4676","after","@AfterEach
    void after() throws IOException","0","-","-","-","-"
"4677","reloadCertificateChangesTheServerCertificate","@Test
    void reloadCertificateChangesTheServerCertificate() throws Exception","0","-","-","-","-"
"4678","badReloadDoesNotChangeTheServerCertificate","@Test
    void badReloadDoesNotChangeTheServerCertificate() throws Exception","0","-","-","-","-"
"4679","certBytes","/** Issues a POST against the reload ssl admin task, asserts that the code and content
     *  are as expected, and finally returns the server certificate */
    private byte[] certBytes(int code, String content) throws Exception","0","-","-","-","-"
"4680","postIt","/** Configure SSL and POST request parameters */
    private void postIt(HttpsURLConnection conn) throws Exception","0","-","-","-","-"
"4681","writeKeystore","private void writeKeystore(String source) throws IOException","0","-","-","-","-"
"4682","testDefaultPattern","@Test
    void testDefaultPattern() throws Exception","0","-","-","-","-"
"4683","testRemoteUserIsSetCorrectly","@Test
    void testRemoteUserIsSetCorrectly()","0","-","-","-","-"
"4684","configOverrides","@Override
    protected List<ConfigOverride> configOverrides()","0","-","-","-","-"
"4685","testDefaultPattern","@Test
    void testDefaultPattern() throws Exception","0","-","-","-","-"
"4686","configOverrides","@Override
    protected List<ConfigOverride> configOverrides()","0","-","-","-","-"
"4687","testCustomPattern","@Test
    void testCustomPattern() throws Exception","0","-","-","-","-"
"4688","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"4689","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"4690","check","@Override
                protected Result check()","0","-","-","-","-"
"4691","get","@GET
        public String get(@QueryParam(""name"") String name, @Context HttpServletRequest httpRequest)","0","-","-","-","-"
"4692","getAuthenticatedUser","@GET
        @Path(""/authenticated"")
        public String getAuthenticatedUser(@Auth PrincipalImpl principal, @Context HttpServletRequest httpServletRequest)","0","-","-","-","-"
"4693","configOverrides","protected List<ConfigOverride> configOverrides()","0","-","-","-","-"
"4694","setUp","@BeforeEach
    public void setUp()","0","-","-","-","-"
"4695","tearDown","@AfterEach
    public void tearDown()","0","-","-","-","-"
"4696","setup","@BeforeAll
    public static void setup()","0","-","-","-","-"
"4697","custom204OnEmptyOptional","@Test
    void custom204OnEmptyOptional()","0","-","-","-","-"
"4698","custom404OnViewRenderMissingMustacheTemplate","@Test
    void custom404OnViewRenderMissingMustacheTemplate()","0","-","-","-","-"
"4699","earlyEofTest","@Test
    void earlyEofTest() throws IOException","0","-","-","-","-"
"4700","customJsonProvider","@Test
    void customJsonProvider()","0","-","-","-","-"
"4701","customJsonProviderMissingHeader","@Test
    void customJsonProviderMissingHeader()","0","-","-","-","-"
"4702","customJsonProviderClient","@Test
    void customJsonProviderClient()","0","-","-","-","-"
"4703","customJsonProviderRoundtrip","@Test
    void customJsonProviderRoundtrip()","0","-","-","-","-"
"4704","customBodyWriterTest","@Test
    void customBodyWriterTest()","0","-","-","-","-"
"4705","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4706","shouldValidateNormally","@Test
    void shouldValidateNormally()","0","-","-","-","-"
"4707","shouldFailWithNullRequestBody","@Test
    void shouldFailWithNullRequestBody() throws IOException","0","-","-","-","-"
"4708","shouldFailWithNullString","@Test
    void shouldFailWithNullString() throws IOException","0","-","-","-","-"
"4709","shouldFailWithNegativeNumber","@Test
    void shouldFailWithNegativeNumber() throws IOException","0","-","-","-","-"
"4710","shouldFailWithEmptyList","@Test
    void shouldFailWithEmptyList() throws IOException","0","-","-","-","-"
"4711","shouldFailWithTooLongList","@Test
    void shouldFailWithTooLongList() throws IOException","0","-","-","-","-"
"4712","shouldFailWithBlankStringInList","@Test
    void shouldFailWithBlankStringInList() throws IOException","0","-","-","-","-"
"4713","shouldFailWithAllInvalid","@Test
    void shouldFailWithAllInvalid() throws IOException","0","-","-","-","-"
"4714","requestBody","@NotNull
    private Entity<Map<String, Object>> requestBody(String string, long number, List<String> list)","0","-","-","-","-"
"4715","assertThatResponseBody","private AbstractListAssert<?, List<? extends String>, String, ObjectAssert<String>> assertThatResponseBody(Response response) throws IOException","0","-","-","-","-"
"4716","responseBody","private JsonNode responseBody(Response response) throws IOException","0","-","-","-","-"
"4717","shouldValidateNormally","@Test
    void shouldValidateNormally()","0","-","-","-","-"
"4718","shouldInjectValidator","@Test
    void shouldInjectValidator()","0","-","-","-","-"
"4719","isSessionInjected","@GET
    @Path(""session"")
    public Response isSessionInjected(@Session HttpSession httpSession)","0","-","-","-","-"
"4720","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"4721","uploadFile","@POST
    @Path(""uploadFile"")
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    @Produces(MediaType.TEXT_PLAIN)
    public StreamingOutput uploadFile(@FormDataParam(""file"") InputStream file,
                                      @FormDataParam(""file"") FormDataContentDisposition fileDisposition)","0","-","-","-","-"
"4722","initialize","@Override
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"4723","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"4724","onFatalError","@Override
    protected void onFatalError(Throwable t)","0","-","-","-","-"
"4725","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"4726","run","@Override
    public void run(final Configuration configuration, final Environment environment) throws Exception","0","-","-","-","-"
"4727","check","@Override
            protected Result check()","0","-","-","-","-"
"4728","check","@Override
            protected Result check()","0","-","-","-","-"
"4729","check","@Override
            protected Result check()","0","-","-","-","-"
"4730","onHealthyCheck","@Override
            public void onHealthyCheck(String healthCheckName)","0","-","-","-","-"
"4731","onUnhealthyCheck","@Override
            public void onUnhealthyCheck(String healthCheckName)","0","-","-","-","-"
"4732","onStateChanged","@Override
            public void onStateChanged(String healthCheckName, boolean healthy)","0","-","-","-","-"
"4733","getCriticalCheckHealthy1","AtomicBoolean getCriticalCheckHealthy1()","0","-","-","-","-"
"4734","getCriticalCheckHealthy2","AtomicBoolean getCriticalCheckHealthy2()","0","-","-","-","-"
"4735","getNonCriticalCheckHealthy","AtomicBoolean getNonCriticalCheckHealthy()","0","-","-","-","-"
"4736","getHealthyCheckCounter","AtomicInteger getHealthyCheckCounter()","0","-","-","-","-"
"4737","getUnhealthyCheckCounter","AtomicInteger getUnhealthyCheckCounter()","0","-","-","-","-"
"4738","getStateChangeCounter","AtomicInteger getStateChangeCounter()","0","-","-","-","-"
"4739","initialize","@Override
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"4740","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"4741","initialize","@Override
    public void initialize(Bootstrap<Configuration> bootstrap)","0","-","-","-","-"
"4742","run","@Override
    public void run(Configuration config, Environment env) throws Exception","0","-","-","-","-"
"4743","toResponse","@Override
            public Response toResponse(EofException exception)","0","-","-","-","-"
"4744","toResponse","@Override
            public Response toResponse(WebApplicationException exception)","0","-","-","-","-"
"4745","isMappable","@Override
            public boolean isMappable(WebApplicationException e)","0","-","-","-","-"
"4746","emptyOptional","@GET
    @Path(""empty-optional"")
    public OptionalInt emptyOptional()","0","-","-","-","-"
"4747","getMissingTemplateView","@GET
    @Path(""view-with-missing-tpl"")
    @Produces(MediaType.TEXT_HTML)
    public View getMissingTemplateView()","0","-","-","-","-"
"4748","postMapper","@POST
    @Path(""mapper"")
    public Map<String, String> postMapper(Map<String, String> map)","0","-","-","-","-"
"4749","newCustomClass","@GET
    @Path(""custom-class"")
    public CustomClass newCustomClass()","0","-","-","-","-"
"4750","CustomJsonProvider","public CustomJsonProvider(ObjectMapper mapper)","0","-","-","-","-"
"4751","writeTo","@Override
    public void writeTo(
        Object value,
        Class<?> type,
        Type genericType,
        Annotation[] annotations,
        MediaType mediaType,
        MultivaluedMap<String, Object> httpHeaders,
        OutputStream entityStream
    ) throws IOException","0","-","-","-","-"
"4752","readFrom","@Override
    public Object readFrom(
        Class<Object> type,
        Type genericType,
        Annotation[] annotations,
        MediaType mediaType,
        MultivaluedMap<String, String> httpHeaders,
        InputStream entityStream
    ) throws IOException","0","-","-","-","-"
"4753","isWriteable","@Override
    public boolean isWriteable(Class<?> aClass, Type type, Annotation[] annotations, MediaType mediaType)","0","-","-","-","-"
"4754","getSize","@Override
    public long getSize(
        CustomClass customClass,
        Class<?> aClass,
        Type type,
        Annotation[] annotations,
        MediaType mediaType
    )","0","-","-","-","-"
"4755","writeTo","@Override
    public void writeTo(
        CustomClass customClass,
        Class<?> aClass,
        Type type,
        Annotation[] annotations,
        MediaType mediaType,
        MultivaluedMap<String, Object> multivaluedMap,
        OutputStream outputStream
    ) throws IOException, WebApplicationException","0","-","-","-","-"
"4756","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"4757","injectableValidation","@GET
    @Path(""/injectable"")
    public void injectableValidation(@QueryParam(""value"") @OneOf(""right"") @WasInjected String value)","0","-","-","-","-"
"4758","defaultValidation","@GET
    @Path(""/default"")
    public void defaultValidation(@QueryParam(""value"") @OneOf(""right"") String value)","0","-","-","-","-"
"4759","beanValidation","@POST
    @Path(""/bean-validation"")
    public void beanValidation(@Valid @NotNull ValidatedBean bean)","0","-","-","-","-"
"4760","isValid","@Override
    public boolean isValid(String value, ConstraintValidatorContext context)","0","-","-","-","-"
"4761","ValidatedBean","@JsonCreator
    public ValidatedBean(@JsonProperty(""string"") String string,
                         @JsonProperty(""number"") Long number,
                         @JsonProperty(""list"") Collection<String> list)","0","-","-","-","-"
"4762","getString","public String getString()","0","-","-","-","-"
"4763","getNumber","public Long getNumber()","0","-","-","-","-"
"4764","getList","public Collection<String> getList()","0","-","-","-","-"
"4765","serializesToJSON","@Test
    void serializesToJSON() throws Exception","0","-","-","-","-"
"4766","deserializesFromJSON","@Test
    public void deserializesFromJSON() throws Exception","0","-","-","-","-"
"4767","testUser","@Test
    void testUser()","0","-","-","-","-"
"4768","migrateDb","@BeforeAll
    public static void migrateDb() throws Exception","0","-","-","-","-"
"4769","testHelloWorld","@Test
    void testHelloWorld()","0","-","-","-","-"
"4770","validDateParameter","@Test
        void validDateParameter()","0","-","-","-","-"
"4771","invalidDateParameter","@ParameterizedTest
        @ValueSource(strings =","0","-","-","-","-"
"4772","noDateParameter","@Test
        void noDateParameter()","0","-","-","-","-"
"4773","testPostPerson","@Test
    void testPostPerson()","0","-","-","-","-"
"4774","testRenderingPerson","@ParameterizedTest
    @ValueSource(strings=","0","-","-","-","-"
"4775","postPerson","private Person postPerson(Person person)","0","-","-","-","-"
"4776","testLogFileWritten","@Test
    void testLogFileWritten()","0","-","-","-","-"
"4777","healthCheckShouldSucceed","@Test
    void healthCheckShouldSucceed()","0","-","-","-","-"
"4778","testProtectedEndpoint","@Test
    void testProtectedEndpoint()","0","-","-","-","-"
"4779","testProtectedEndpointNoCredentials401","@Test
    void testProtectedEndpointNoCredentials401()","0","-","-","-","-"
"4780","testProtectedEndpointBadCredentials401","@Test
    void testProtectedEndpointBadCredentials401()","0","-","-","-","-"
"4781","testProtectedAdminEndpoint","@Test
    void testProtectedAdminEndpoint()","0","-","-","-","-"
"4782","testProtectedAdminEndpointPrincipalIsNotAuthorized403","@Test
    void testProtectedAdminEndpointPrincipalIsNotAuthorized403()","0","-","-","-","-"
"4783","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"4784","getPersonSuccess","@Test
    void getPersonSuccess()","0","-","-","-","-"
"4785","getPersonNotFound","@Test
    void getPersonNotFound()","0","-","-","-","-"
"4786","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4787","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"4788","createPerson","@Test
    void createPerson()","0","-","-","-","-"
"4789","createPersonFailureMinYearBorn","@Test
    void createPersonFailureMinYearBorn()","0","-","-","-","-"
"4790","createPersonFailureMaxYearBorn","@Test
    void createPersonFailureMaxYearBorn()","0","-","-","-","-"
"4791","listPeople","@Test
    void listPeople()","0","-","-","-","-"
"4792","testProtectedAdminEndpoint","@Test
    void testProtectedAdminEndpoint()","0","-","-","-","-"
"4793","testProtectedBasicUserEndpoint","@Test
    void testProtectedBasicUserEndpoint()","0","-","-","-","-"
"4794","testProtectedBasicUserEndpointAsAdmin","@Test
    void testProtectedBasicUserEndpointAsAdmin()","0","-","-","-","-"
"4795","testProtectedGuestEndpoint","@Test
    void testProtectedGuestEndpoint()","0","-","-","-","-"
"4796","testProtectedBasicUserEndpointPrincipalIsNotAuthorized403","@Test
    void testProtectedBasicUserEndpointPrincipalIsNotAuthorized403()","0","-","-","-","-"
"4797","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4798","createPerson","@Test
    void createPerson()","0","-","-","-","-"
"4799","findAll","@Test
    void findAll()","0","-","-","-","-"
"4800","handlesNullFullName","@Test
    void handlesNullFullName()","0","-","-","-","-"
"4801","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4802","createPerson","@Test
    void createPerson()","0","-","-","-","-"
"4803","findAll","@Test
    void findAll()","0","-","-","-","-"
"4804","handlesNullFullName","@Test
    void handlesNullFullName()","0","-","-","-","-"
"4805","migrateDb","@BeforeAll
    public static void migrateDb() throws Exception","0","-","-","-","-"
"4806","testHelloWorld","@Test
    void testHelloWorld()","0","-","-","-","-"
"4807","validDateParameter","@Test
        void validDateParameter()","0","-","-","-","-"
"4808","invalidDateParameter","@ParameterizedTest
        @ValueSource(strings =","0","-","-","-","-"
"4809","noDateParameter","@Test
        void noDateParameter()","0","-","-","-","-"
"4810","testPostPerson","@Test
    void testPostPerson()","0","-","-","-","-"
"4811","testRenderingPerson","@ParameterizedTest
    @ValueSource(strings=","0","-","-","-","-"
"4812","postPerson","private Person postPerson(Person person)","0","-","-","-","-"
"4813","testLogFileWritten","@Test
    void testLogFileWritten()","0","-","-","-","-"
"4814","healthCheckShouldSucceed","@Test
    void healthCheckShouldSucceed()","0","-","-","-","-"
"4815","EchoTask","public EchoTask()","0","-","-","-","-"
"4816","execute","@Override
    public void execute(Map<String, List<String>> parameters, String body, PrintWriter output) throws Exception","0","-","-","-","-"
"4817","User","public User(String name)","0","-","-","-","-"
"4818","User","public User(String name, Set<String> roles)","0","-","-","-","-"
"4819","getName","public String getName()","0","-","-","-","-"
"4820","getId","public int getId()","0","-","-","-","-"
"4821","getRoles","public Set<String> getRoles()","0","-","-","-","-"
"4822","Person","public Person()","0","-","-","-","-"
"4823","Person","public Person(String fullName, String jobTitle, int yearBorn)","0","-","-","-","-"
"4824","getId","public long getId()","0","-","-","-","-"
"4825","setId","public void setId(long id)","0","-","-","-","-"
"4826","getFullName","public String getFullName()","0","-","-","-","-"
"4827","setFullName","public void setFullName(String fullName)","0","-","-","-","-"
"4828","getJobTitle","public String getJobTitle()","0","-","-","-","-"
"4829","setJobTitle","public void setJobTitle(String jobTitle)","0","-","-","-","-"
"4830","getYearBorn","public int getYearBorn()","0","-","-","-","-"
"4831","setYearBorn","public void setYearBorn(int yearBorn)","0","-","-","-","-"
"4832","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"4833","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"4834","Template","public Template(String content, String defaultName)","0","-","-","-","-"
"4835","render","public String render(Optional<String> name)","0","-","-","-","-"
"4836","getTemplate","@JsonProperty
    public String getTemplate()","0","-","-","-","-"
"4837","setTemplate","@JsonProperty
    public void setTemplate(String template)","0","-","-","-","-"
"4838","getDefaultName","@JsonProperty
    public String getDefaultName()","0","-","-","-","-"
"4839","setDefaultName","@JsonProperty
    public void setDefaultName(String defaultName)","0","-","-","-","-"
"4840","buildTemplate","public Template buildTemplate()","0","-","-","-","-"
"4841","getDataSourceFactory","@JsonProperty(""database"")
    public DataSourceFactory getDataSourceFactory()","0","-","-","-","-"
"4842","setDataSourceFactory","@JsonProperty(""database"")
    public void setDataSourceFactory(DataSourceFactory dataSourceFactory)","0","-","-","-","-"
"4843","getViewRendererConfiguration","@JsonProperty(""viewRendererConfiguration"")
    public Map<String, Map<String, String>> getViewRendererConfiguration()","0","-","-","-","-"
"4844","setViewRendererConfiguration","@JsonProperty(""viewRendererConfiguration"")
    public void setViewRendererConfiguration(Map<String, Map<String, String>> viewRendererConfiguration)","0","-","-","-","-"
"4845","authorize","@Override
    public boolean authorize(User user, String role, @Nullable ContainerRequestContext ctx)","0","-","-","-","-"
"4846","authenticate","@Override
    public Optional<User> authenticate(BasicCredentials credentials) throws AuthenticationException","0","-","-","-","-"
"4847","main","public static void main(String[] args) throws Exception","0","-","-","-","-"
"4848","getDataSourceFactory","@Override
            public DataSourceFactory getDataSourceFactory(HelloWorldConfiguration configuration)","0","-","-","-","-"
"4849","getName","@Override
    public String getName()","0","-","-","-","-"
"4850","initialize","@Override
    public void initialize(Bootstrap<HelloWorldConfiguration> bootstrap)","0","-","-","-","-"
"4851","getDataSourceFactory","@Override
            public DataSourceFactory getDataSourceFactory(HelloWorldConfiguration configuration)","0","-","-","-","-"
"4852","getViewConfiguration","@Override
            public Map<String, Map<String, String>> getViewConfiguration(HelloWorldConfiguration configuration)","0","-","-","-","-"
"4853","run","@Override
    public void run(HelloWorldConfiguration configuration, Environment environment)","0","-","-","-","-"
"4854","TemplateHealthCheck","public TemplateHealthCheck(Template template)","0","-","-","-","-"
"4855","check","@Override
    protected Result check() throws Exception","0","-","-","-","-"
"4856","sayHello","@GET
    @DateRequired
    @Path(""hello"")
    public String sayHello()","0","-","-","-","-"
"4857","HelloWorldResource","public HelloWorldResource(Template template)","0","-","-","-","-"
"4858","sayHello","@GET
    @Timed(name = ""get-requests-timed"")
    @Metered(name = ""get-requests-metered"")
    @CacheControl(maxAge = 1, maxAgeUnit = TimeUnit.DAYS)
    public Saying sayHello(@QueryParam(""name"") Optional<String> name)","0","-","-","-","-"
"4859","receiveHello","@POST
    public void receiveHello(Saying saying)","0","-","-","-","-"
"4860","receiveDate","@GET
    @Path(""/date"")
    @Produces(MediaType.TEXT_PLAIN)
    public String receiveDate(@QueryParam(""date"") LocalDateParam date)","0","-","-","-","-"
"4861","showSecret","@PermitAll
    @GET
    public String showSecret(@Auth User user)","0","-","-","-","-"
"4862","showAdminSecret","@RolesAllowed(""ADMIN"")
    @GET
    @Path(""admin"")
    public String showAdminSecret(@Auth User user)","0","-","-","-","-"
"4863","PeopleResource","public PeopleResource(PersonDAO peopleDAO)","0","-","-","-","-"
"4864","createPerson","@POST
    @UnitOfWork
    public Person createPerson(@Valid Person person)","0","-","-","-","-"
"4865","listPeople","@GET
    @UnitOfWork
    public List<Person> listPeople()","0","-","-","-","-"
"4866","PersonResource","public PersonResource(PersonDAO peopleDAO)","0","-","-","-","-"
"4867","getPerson","@GET
    @UnitOfWork
    public Person getPerson(@PathParam(""personId"") OptionalLong personId)","0","-","-","-","-"
"4868","getPersonViewFreemarker","@GET
    @Path(""/view_freemarker"")
    @UnitOfWork
    @Produces(MediaType.TEXT_HTML)
    public PersonView getPersonViewFreemarker(@PathParam(""personId"") OptionalLong personId)","0","-","-","-","-"
"4869","getPersonViewMustache","@GET
    @Path(""/view_mustache"")
    @UnitOfWork
    @Produces(MediaType.TEXT_HTML)
    public PersonView getPersonViewMustache(@PathParam(""personId"") OptionalLong personId)","0","-","-","-","-"
"4870","findSafely","private Person findSafely(long personId)","0","-","-","-","-"
"4871","showSecret","@GET
    @PermitAll
    @Path(""guest"")
    public String showSecret(@Auth User user)","0","-","-","-","-"
"4872","showBasicUserSecret","@GET
    public String showBasicUserSecret(@Context SecurityContext context)","0","-","-","-","-"
"4873","showAdminSecret","@GET
    @RolesAllowed(""ADMIN"")
    @Path(""admin"")
    public String showAdminSecret(@Auth User user)","0","-","-","-","-"
"4874","freemarkerUTF8","@GET
    @Produces(""text/html;charset=UTF-8"")
    @Path(""/utf8.ftl"")
    public View freemarkerUTF8()","0","-","-","-","-"
"4875","freemarkerISO88591","@GET
    @Produces(""text/html;charset=ISO-8859-1"")
    @Path(""/iso88591.ftl"")
    public View freemarkerISO88591()","0","-","-","-","-"
"4876","mustacheUTF8","@GET
    @Produces(""text/html;charset=UTF-8"")
    @Path(""/utf8.mustache"")
    public View mustacheUTF8()","0","-","-","-","-"
"4877","mustacheISO88591","@GET
    @Produces(""text/html;charset=ISO-8859-1"")
    @Path(""/iso88591.mustache"")
    public View mustacheISO88591()","0","-","-","-","-"
"4878","RenderCommand","public RenderCommand()","0","-","-","-","-"
"4879","configure","@Override
    public void configure(Subparser subparser)","0","-","-","-","-"
"4880","run","@Override
    protected void run(Bootstrap<HelloWorldConfiguration> bootstrap,
                       Namespace namespace,
                       HelloWorldConfiguration configuration) throws Exception","0","-","-","-","-"
"4881","PersonDAO","public PersonDAO(SessionFactory factory)","0","-","-","-","-"
"4882","findById","public Optional<Person> findById(Long id)","0","-","-","-","-"
"4883","create","public Person create(Person person)","0","-","-","-","-"
"4884","findAll","public List<Person> findAll()","0","-","-","-","-"
"4885","Saying","@SuppressWarnings(""unused"")
    public Saying()","0","-","-","-","-"
"4886","Saying","public Saying(long id, String content)","0","-","-","-","-"
"4887","getId","@JsonProperty
    public long getId()","0","-","-","-","-"
"4888","getContent","@JsonProperty
    public String getContent()","0","-","-","-","-"
"4889","toString","@Override
    public String toString()","0","-","-","-","-"
"4890","configure","@Override
    public void configure(ResourceInfo resourceInfo, FeatureContext context)","0","-","-","-","-"
"4891","filter","@Override
    public void filter(ContainerRequestContext requestContext) throws IOException","0","-","-","-","-"
"4892","Template","Template(String templateName)","0","-","-","-","-"
"4893","getTemplateName","public String getTemplateName()","0","-","-","-","-"
"4894","PersonView","public PersonView(PersonView.Template template, Person person)","0","-","-","-","-"
"4895","getPerson","public Person getPerson()","0","-","-","-","-"
"4896","startsAndStops","@Test
    void startsAndStops() throws Exception","0","-","-","-","-"
"4897","getLocalPort","@Test
    void getLocalPort()","0","-","-","-","-"
"4898","getAdminPort","@Test
    void getAdminPort()","0","-","-","-","-"
"4899","configureAndGetSingleConnectorServer","private Server configureAndGetSingleConnectorServer(int applicationPort, int adminPort)","0","-","-","-","-"
"4900","getPortDescriptorList","@Test
    void getPortDescriptorList()","0","-","-","-","-"
"4901","buildCompletePortDescriptorsArray","private PortDescriptor[] buildCompletePortDescriptorsArray()","0","-","-","-","-"
"4902","getPortDescriptors","private PortDescriptor[] getPortDescriptors(int port, String type, String[] protocols, String host)","0","-","-","-","-"
"4903","getPortDescriptor","private PortDescriptor getPortDescriptor(String protocol, int port, String type, String host)","0","-","-","-","-"
"4904","configureMultiProtocolServer","private Server configureMultiProtocolServer()","0","-","-","-","-"
"4905","configuredServerConnector","private void configuredServerConnector(ServerConnector connectorMock1, int localPort, List<String> protocols, String portType, String host)","0","-","-","-","-"
"4906","startsAndStops","@Test
    void startsAndStops() throws Exception","0","-","-","-","-"
"4907","managesLifeCycleObjects","@Test
    void managesLifeCycleObjects()","0","-","-","-","-"
"4908","managesManagedObjects","@Test
    void managesManagedObjects()","0","-","-","-","-"
"4909","scheduledExecutorServiceBuildsDaemonThreads","@Test
    void scheduledExecutorServiceBuildsDaemonThreads()","0","-","-","-","-"
"4910","scheduledExecutorServiceBuildsUserThreadsByDefault","@Test
    void scheduledExecutorServiceBuildsUserThreadsByDefault()","0","-","-","-","-"
"4911","scheduledExecutorServiceThreadFactory","@Test
    void scheduledExecutorServiceThreadFactory()","0","-","-","-","-"
"4912","virtualExecutorService","@Test
    @EnabledForJreRange(min = JRE.JAVA_21)
    void virtualExecutorService() throws Exception","0","-","-","-","-"
"4913","virtualExecutorServiceShutdownTime","@Test
    @EnabledForJreRange(min = JRE.JAVA_21)
    void virtualExecutorServiceShutdownTime()","0","-","-","-","-"
"4914","executorServiceThreadFactory","@Test
    void executorServiceThreadFactory()","0","-","-","-","-"
"4915","buildThreadFactory","private ThreadFactory buildThreadFactory(String expectedNamePattern)","0","-","-","-","-"
"4916","newThread","@Override
            public Thread newThread(Runnable r)","0","-","-","-","-"
"4917","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"4918","testGiveAWarningAboutMaximumPoolSizeAndUnboundedQueue","@Test
    void testGiveAWarningAboutMaximumPoolSizeAndUnboundedQueue()","0","-","-","-","-"
"4919","testGiveNoWarningAboutMaximumPoolSizeAndBoundedQueue","@Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void testGiveNoWarningAboutMaximumPoolSizeAndBoundedQueue()","0","-","-","-","-"
"4920","shouldNotWarnWhenSettingUpSingleThreadedPool","/**
     * There should be no warning about using an Executors.newSingleThreadExecutor() equivalent
     * @see java.util.concurrent.Executors#newSingleThreadExecutor()
     */
    @Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void shouldNotWarnWhenSettingUpSingleThreadedPool()","0","-","-","-","-"
"4921","shouldNotWarnWhenSettingUpCachedThreadPool","/**
     * There should be no warning about using an Executors.newCachedThreadPool() equivalent
     * @see java.util.concurrent.Executors#newCachedThreadPool()
     */
    @Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void shouldNotWarnWhenSettingUpCachedThreadPool()","0","-","-","-","-"
"4922","shouldNotWarnWhenUsingTheDefaultConfiguration","@Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void shouldNotWarnWhenUsingTheDefaultConfiguration()","0","-","-","-","-"
"4923","shouldBeAbleToExecute2TasksAtOnceWithLargeMaxThreadsOrBeWarnedOtherwise","/**
     * Setting large max threads without large min threads is misleading on the default queue implementation
     * It should warn or work
     */
    @Test
    @SuppressWarnings(""Slf4jFormatShouldBeConst"")
    void shouldBeAbleToExecute2TasksAtOnceWithLargeMaxThreadsOrBeWarnedOtherwise()","0","-","-","-","-"
"4924","shouldUseInstrumentedThreadFactory","@Test
    void shouldUseInstrumentedThreadFactory()","0","-","-","-","-"
"4925","nameWithoutFormat","@CsvSource(value =","0","-","-","-","-"
"4926","assertCanExecuteAtLeast2ConcurrentTasks","/**
     * Tries to run 2 tasks that on the executor that rely on each others side effect to complete. If they fail to
     * complete within a short time then we can assume they are not running concurrently
     * @param exe an executor to try to run 2 tasks on
     */
    private void assertCanExecuteAtLeast2ConcurrentTasks(Executor exe)","0","-","-","-","-"
"4927","ScheduledExecutorServiceBuilderTest","public ScheduledExecutorServiceBuilderTest()","0","-","-","-","-"
"4928","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"4929","testBasicInvocation","@Test
    void testBasicInvocation()","0","-","-","-","-"
"4930","testRemoveOnCancelTrue","@Test
    void testRemoveOnCancelTrue()","0","-","-","-","-"
"4931","testRemoveOnCancelFalse","@Test
    void testRemoveOnCancelFalse()","0","-","-","-","-"
"4932","testPredefinedThreadFactory","@Test
    void testPredefinedThreadFactory()","0","-","-","-","-"
"4933","testAccessors","@Test
    void testAccessors()","0","-","-","-","-"
"4934","testManaged","@Test
    void testManaged() throws Exception","0","-","-","-","-"
"4935","testManagedTimeout","@Test
    void testManagedTimeout() throws Exception","0","-","-","-","-"
"4936","JettyManaged","/**
     * Creates a new JettyManaged wrapping","0","-","-","-","-"
"4937","getManaged","public Managed getManaged()","0","-","-","-","-"
"4938","doStart","@Override
    protected void doStart() throws Exception","0","-","-","-","-"
"4939","doStop","@Override
    protected void doStop() throws Exception","0","-","-","-","-"
"4940","toString","@Override
    public String toString()","0","-","-","-","-"
"4941","serverStarted","void serverStarted(Server server);","0","-","-","-","-"
"4942","getLocalPort","/**
     * Return the local port of the first","0","-","-","-","-"
"4943","getAdminPort","/**
     * Return the local port of the last","0","-","-","-","-"
"4944","getPortDescriptorList","/**
     * Return the ports mapped to the protocols each the","0","-","-","-","-"
"4945","LifecycleEnvironment","public LifecycleEnvironment(MetricRegistry metricRegistry)","0","-","-","-","-"
"4946","getManagedObjects","public List<LifeCycle> getManagedObjects()","0","-","-","-","-"
"4947","manage","/**
     * Adds the given","0","-","-","-","-"
"4948","manage","/**
     * Adds the given Jetty","0","-","-","-","-"
"4949","executorService","public ExecutorServiceBuilder executorService(String nameFormat)","0","-","-","-","-"
"4950","executorService","public ExecutorServiceBuilder executorService(String nameFormat, ThreadFactory factory)","0","-","-","-","-"
"4951","virtualExecutorService","public ExecutorService virtualExecutorService(String nameFormat)","0","-","-","-","-"
"4952","virtualExecutorService","public ExecutorService virtualExecutorService(String nameFormat, Duration shutdownTime)","0","-","-","-","-"
"4953","scheduledExecutorService","public ScheduledExecutorServiceBuilder scheduledExecutorService(String nameFormat)","0","-","-","-","-"
"4954","scheduledExecutorService","public ScheduledExecutorServiceBuilder scheduledExecutorService(String nameFormat, ThreadFactory factory)","0","-","-","-","-"
"4955","scheduledExecutorService","public ScheduledExecutorServiceBuilder scheduledExecutorService(String nameFormat, boolean useDaemonThreads)","0","-","-","-","-"
"4956","addServerLifecycleListener","public void addServerLifecycleListener(ServerLifecycleListener listener)","0","-","-","-","-"
"4957","addEventListener","public void addEventListener(LifeCycle.Listener listener)","0","-","-","-","-"
"4958","attach","public void attach(ContainerLifeCycle container)","0","-","-","-","-"
"4959","lifeCycleStarting","@Override
            public void lifeCycleStarting(LifeCycle event)","0","-","-","-","-"
"4960","getMetricRegistry","/**
     * @since 2.0
     */
    public MetricRegistry getMetricRegistry()","0","-","-","-","-"
"4961","ServerListener","private ServerListener(ServerLifecycleListener listener)","0","-","-","-","-"
"4962","lifeCycleStarted","@Override
        public void lifeCycleStarted(LifeCycle event)","0","-","-","-","-"
"4963","ScheduledExecutorServiceBuilder","public ScheduledExecutorServiceBuilder(LifecycleEnvironment environment, String nameFormat, ThreadFactory factory)","0","-","-","-","-"
"4964","ScheduledExecutorServiceBuilder","public ScheduledExecutorServiceBuilder(LifecycleEnvironment environment, String nameFormat, boolean useDaemonThreads)","0","-","-","-","-"
"4965","buildThreadFactory","private static ThreadFactory buildThreadFactory(String nameFormat, boolean daemon)","0","-","-","-","-"
"4966","threads","public ScheduledExecutorServiceBuilder threads(int threads)","0","-","-","-","-"
"4967","shutdownTime","public ScheduledExecutorServiceBuilder shutdownTime(Duration time)","0","-","-","-","-"
"4968","rejectedExecutionHandler","public ScheduledExecutorServiceBuilder rejectedExecutionHandler(RejectedExecutionHandler handler)","0","-","-","-","-"
"4969","threadFactory","public ScheduledExecutorServiceBuilder threadFactory(ThreadFactory threadFactory)","0","-","-","-","-"
"4970","removeOnCancelPolicy","public ScheduledExecutorServiceBuilder removeOnCancelPolicy(boolean removeOnCancel)","0","-","-","-","-"
"4971","build","public ScheduledExecutorService build()","0","-","-","-","-"
"4972","ExecutorServiceBuilder","public ExecutorServiceBuilder(LifecycleEnvironment environment, String nameFormat, ThreadFactory factory)","0","-","-","-","-"
"4973","ExecutorServiceBuilder","public ExecutorServiceBuilder(LifecycleEnvironment environment, String nameFormat)","0","-","-","-","-"
"4974","buildThreadFactory","private static ThreadFactory buildThreadFactory(String nameFormat)","0","-","-","-","-"
"4975","minThreads","public ExecutorServiceBuilder minThreads(int threads)","0","-","-","-","-"
"4976","maxThreads","public ExecutorServiceBuilder maxThreads(int threads)","0","-","-","-","-"
"4977","allowCoreThreadTimeOut","public ExecutorServiceBuilder allowCoreThreadTimeOut(boolean allowCoreThreadTimeOut)","0","-","-","-","-"
"4978","keepAliveTime","public ExecutorServiceBuilder keepAliveTime(Duration time)","0","-","-","-","-"
"4979","shutdownTime","public ExecutorServiceBuilder shutdownTime(Duration time)","0","-","-","-","-"
"4980","workQueue","public ExecutorServiceBuilder workQueue(BlockingQueue<Runnable> workQueue)","0","-","-","-","-"
"4981","rejectedExecutionHandler","public ExecutorServiceBuilder rejectedExecutionHandler(RejectedExecutionHandler handler)","0","-","-","-","-"
"4982","threadFactory","public ExecutorServiceBuilder threadFactory(ThreadFactory threadFactory)","0","-","-","-","-"
"4983","build","public ExecutorService build()","0","-","-","-","-"
"4984","getNameWithoutFormat","static String getNameWithoutFormat(String nameFormat)","0","-","-","-","-"
"4985","commonPrefixWithoutHyphen","static String commonPrefixWithoutHyphen(String name, String nameFormat)","0","-","-","-","-"
"4986","commonSuffix","static String commonSuffix(String name, String nameFormat)","0","-","-","-","-"
"4987","isBoundedQueue","private boolean isBoundedQueue()","0","-","-","-","-"
"4988","setLog","static synchronized void setLog(Logger newLog)","0","-","-","-","-"
"4989","PortDescriptor","public PortDescriptor()","0","-","-","-","-"
"4990","PortDescriptor","public PortDescriptor(String protocol, int port, String connectorType, String host)","0","-","-","-","-"
"4991","getProtocol","public String getProtocol()","0","-","-","-","-"
"4992","getPort","public int getPort()","0","-","-","-","-"
"4993","getConnectorType","public String getConnectorType()","0","-","-","-","-"
"4994","getHost","public String getHost()","0","-","-","-","-"
"4995","toString","@Override
    public String toString()","0","-","-","-","-"
"4996","ExecutorServiceManager","public ExecutorServiceManager(ExecutorService executor, Duration shutdownPeriod, String poolName)","0","-","-","-","-"
"4997","stop","/**
     *","0","-","-","-","-"
"4998","toString","@Override
    public String toString()","0","-","-","-","-"
"4999","getExecutor","public ExecutorService getExecutor()","0","-","-","-","-"
"5000","getShutdownPeriod","public Duration getShutdownPeriod()","0","-","-","-","-"
"5001","getPoolName","public String getPoolName()","0","-","-","-","-"
"5002","AutoCloseableManager","/**
     * @param autoCloseable instance to close when the HTTP server stops.
     */
    public AutoCloseableManager(final AutoCloseable autoCloseable)","0","-","-","-","-"
"5003","stop","/**
     * Calls","0","-","-","-","-"
"5004","start","/**
     * Starts the object. Called <i>before</i> the application becomes available. The default implementation is a no-op.
     *
     * @throws Exception if something goes wrong; this will halt the application startup.
     */
    default void start() throws Exception","0","-","-","-","-"
"5005","stop","/**
     * Stops the object. Called <i>after</i> the application is no longer accepting requests. The default implementation
     * is a no-op
     *
     * @throws Exception if something goes wrong.
     */
    default void stop() throws Exception","0","-","-","-","-"
"5006","serialisesLazyObjectWhenEnabled","@Test
    void serialisesLazyObjectWhenEnabled()","0","-","-","-","-"
"5007","returnsErrorsWhenEnabled","@Test
    void returnsErrorsWhenEnabled()","0","-","-","-","-"
"5008","sendsNullWhenDisabled","@Test
        void sendsNullWhenDisabled()","0","-","-","-","-"
"5009","TestConfiguration","TestConfiguration(@JsonProperty(""dataSource"") DataSourceFactory dataSource)","0","-","-","-","-"
"5010","getDataSourceFactory","@Override
            public PooledDataSourceFactory getDataSourceFactory(TestConfiguration configuration)","0","-","-","-","-"
"5011","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"5012","run","@Override
        public void run(TestConfiguration configuration, Environment environment)","0","-","-","-","-"
"5013","initDatabase","private void initDatabase(SessionFactory sessionFactory)","0","-","-","-","-"
"5014","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"5015","DogDAO","DogDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5016","findByName","Optional<Dog> findByName(String name)","0","-","-","-","-"
"5017","create","void create(Dog dog) throws HibernateException","0","-","-","-","-"
"5018","DogResource","DogResource(DogDAO dao)","0","-","-","-","-"
"5019","find","@GET
        @UnitOfWork(readOnly = true)
        public Optional<Dog> find(@PathParam(""name"") String name)","0","-","-","-","-"
"5020","create","@PUT
        @UnitOfWork
        public void create(Dog dog)","0","-","-","-","-"
"5021","toResponse","@Override
        public Response toResponse(ConstraintViolationException e)","0","-","-","-","-"
"5022","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5023","opensAndClosesASession","@Test
    void opensAndClosesASession() throws Exception","0","-","-","-","-"
"5024","bindsAndUnbindsTheSessionToTheManagedContext","@Test
    void bindsAndUnbindsTheSessionToTheManagedContext() throws Exception","0","-","-","-","-"
"5025","configuresTheSessionsReadOnlyDefault","@Test
    void configuresTheSessionsReadOnlyDefault() throws Exception","0","-","-","-","-"
"5026","configuresTheSessionsCacheMode","@Test
    void configuresTheSessionsCacheMode() throws Exception","0","-","-","-","-"
"5027","configuresTheSessionsFlushMode","@Test
    void configuresTheSessionsFlushMode() throws Exception","0","-","-","-","-"
"5028","doesNotBeginATransactionIfNotTransactional","@Test
    void doesNotBeginATransactionIfNotTransactional() throws Exception","0","-","-","-","-"
"5029","detectsAnnotationOnHandlingMethod","@Test
    void detectsAnnotationOnHandlingMethod() throws NoSuchMethodException","0","-","-","-","-"
"5030","detectsAnnotationOnDefinitionMethod","@Test
    void detectsAnnotationOnDefinitionMethod() throws NoSuchMethodException","0","-","-","-","-"
"5031","annotationOnDefinitionMethodOverridesHandlingMethod","@Test
    void annotationOnDefinitionMethodOverridesHandlingMethod() throws NoSuchMethodException","0","-","-","-","-"
"5032","beginsAndCommitsATransactionIfTransactional","@Test
    void beginsAndCommitsATransactionIfTransactional() throws Exception","0","-","-","-","-"
"5033","rollsBackTheTransactionOnException","@Test
    void rollsBackTheTransactionOnException() throws Exception","0","-","-","-","-"
"5034","doesNotCommitAnInactiveTransaction","@Test
    void doesNotCommitAnInactiveTransaction() throws Exception","0","-","-","-","-"
"5035","doesNotCommitANullTransaction","@Test
    void doesNotCommitANullTransaction() throws Exception","0","-","-","-","-"
"5036","doesNotRollbackAnInactiveTransaction","@Test
    void doesNotRollbackAnInactiveTransaction() throws Exception","0","-","-","-","-"
"5037","doesNotRollbackANullTransaction","@Test
    void doesNotRollbackANullTransaction() throws Exception","0","-","-","-","-"
"5038","beginsAndCommitsATransactionForAnalytics","@Test
    void beginsAndCommitsATransactionForAnalytics() throws Exception","0","-","-","-","-"
"5039","throwsExceptionOnNotRegisteredDatabase","@Test
    void throwsExceptionOnNotRegisteredDatabase() throws Exception","0","-","-","-","-"
"5040","throwsMappableExceptionOnFailureDuringBeforeStart","@Test
    void throwsMappableExceptionOnFailureDuringBeforeStart() throws Exception","0","-","-","-","-"
"5041","prepareResourceMethod","private void prepareResourceMethod(String resourceMethodName) throws NoSuchMethodException","0","-","-","-","-"
"5042","methodDefinedOnInterface","private static boolean methodDefinedOnInterface(String methodName, Method[] methods)","0","-","-","-","-"
"5043","execute","private void execute()","0","-","-","-","-"
"5044","executeWithException","private void executeWithException()","0","-","-","-","-"
"5045","methodWithDefaultAnnotation","@UnitOfWork(readOnly = false, cacheMode = CacheMode.NORMAL, transactional = true, flushMode = FlushMode.AUTO)
        public void methodWithDefaultAnnotation()","0","-","-","-","-"
"5046","methodWithReadOnlyAnnotation","@UnitOfWork(readOnly = true, cacheMode = CacheMode.NORMAL, transactional = true, flushMode = FlushMode.AUTO)
        public void methodWithReadOnlyAnnotation()","0","-","-","-","-"
"5047","methodWithCacheModeIgnoreAnnotation","@UnitOfWork(readOnly = false, cacheMode = CacheMode.IGNORE, transactional = true, flushMode = FlushMode.AUTO)
        public void methodWithCacheModeIgnoreAnnotation()","0","-","-","-","-"
"5048","methodWithFlushModeAlwaysAnnotation","@UnitOfWork(readOnly = false, cacheMode = CacheMode.NORMAL, transactional = true, flushMode = FlushMode.ALWAYS)
        public void methodWithFlushModeAlwaysAnnotation()","0","-","-","-","-"
"5049","methodWithTransactionalFalseAnnotation","@UnitOfWork(readOnly = false, cacheMode = CacheMode.NORMAL, transactional = false, flushMode = FlushMode.AUTO)
        public void methodWithTransactionalFalseAnnotation()","0","-","-","-","-"
"5050","handlingMethodAnnotated","@UnitOfWork(readOnly = true)
        @Override
        public void handlingMethodAnnotated()","0","-","-","-","-"
"5051","definitionMethodAnnotated","@Override
        public void definitionMethodAnnotated()","0","-","-","-","-"
"5052","bothMethodsAnnotated","@UnitOfWork(readOnly = false)
        @Override
        public void bothMethodsAnnotated()","0","-","-","-","-"
"5053","methodWithUnitOfWorkOnAnalyticsDatabase","@UnitOfWork(""analytics"")
        public void methodWithUnitOfWorkOnAnalyticsDatabase()","0","-","-","-","-"
"5054","methodWithUnitOfWorkOnNotRegisteredDatabase","@UnitOfWork(""warehouse"")
        public void methodWithUnitOfWorkOnNotRegisteredDatabase()","0","-","-","-","-"
"5055","handlingMethodAnnotated","void handlingMethodAnnotated();","0","-","-","-","-"
"5056","definitionMethodAnnotated","@UnitOfWork(readOnly = true)
        void definitionMethodAnnotated();","0","-","-","-","-"
"5057","bothMethodsAnnotated","@UnitOfWork(readOnly = true)
        void bothMethodsAnnotated();","0","-","-","-","-"
"5058","PersonDAO","public PersonDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5059","findByName","public Optional<Person> findByName(String name)","0","-","-","-","-"
"5060","persist","@Override
        public Person persist(Person entity)","0","-","-","-","-"
"5061","PersonResource","public PersonResource(PersonDAO dao)","0","-","-","-","-"
"5062","find","@GET
        @UnitOfWork(readOnly = true)
        public Optional<Person> find(@PathParam(""name"") String name)","0","-","-","-","-"
"5063","save","@PUT
        @UnitOfWork
        public void save(Person person)","0","-","-","-","-"
"5064","setUp","@Override
    @BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"5065","tearDown","@Override
    @AfterEach
    public void tearDown() throws Exception","0","-","-","-","-"
"5066","configure","@Override
    protected Application configure()","0","-","-","-","-"
"5067","configureClient","@Override
    protected void configureClient(ClientConfig config)","0","-","-","-","-"
"5068","findsExistingData","@Test
    void findsExistingData()","0","-","-","-","-"
"5069","doesNotFindMissingData","@Test
    void doesNotFindMissingData()","0","-","-","-","-"
"5070","createsNewData","@Test
    void createsNewData()","0","-","-","-","-"
"5071","testSqlExceptionIsHandled","@Test
    void testSqlExceptionIsHandled()","0","-","-","-","-"
"5072","testBeforeStartExceptionIsMapped","@Test
    void testBeforeStartExceptionIsMapped()","0","-","-","-","-"
"5073","hasASessionFactory","@Test
    void hasASessionFactory() throws Exception","0","-","-","-","-"
"5074","hasAValidationQuery","@Test
    void hasAValidationQuery() throws Exception","0","-","-","-","-"
"5075","isHealthyIfNoExceptionIsThrown","@Test
    void isHealthyIfNoExceptionIsThrown() throws Exception","0","-","-","-","-"
"5076","isHealthyIfIsValid","@Test
    void isHealthyIfIsValid()","0","-","-","-","-"
"5077","isUnhealthyIfAnExceptionIsThrown","@Test
    void isUnhealthyIfAnExceptionIsThrown() throws Exception","0","-","-","-","-"
"5078","isUnhealthyIfIsNotValid","@Test
    void isUnhealthyIfIsNotValid()","0","-","-","-","-"
"5079","healthCheck","private SessionFactoryHealthCheck healthCheck()","0","-","-","-","-"
"5080","healthCheck","private SessionFactoryHealthCheck healthCheck(@Nullable String validationQuery)","0","-","-","-","-"
"5081","MockDAO","MockDAO(SessionFactory factory)","0","-","-","-","-"
"5082","currentSession","@Override
        public Session currentSession()","0","-","-","-","-"
"5083","namedQuery","@Override
        public Query<?> namedQuery(String queryName) throws HibernateException","0","-","-","-","-"
"5084","namedTypedQuery","@Override
        protected Query<String> namedTypedQuery(String queryName) throws HibernateException","0","-","-","-","-"
"5085","getEntityClass","@Override
        public Class<String> getEntityClass()","0","-","-","-","-"
"5086","uniqueResult","@Override
        public String uniqueResult(Query<String> query) throws HibernateException","0","-","-","-","-"
"5087","list","@Override
        public List<String> list(Query<String> query) throws HibernateException","0","-","-","-","-"
"5088","get","@Override
        public String get(Object id)","0","-","-","-","-"
"5089","persist","@Override
        public String persist(String entity) throws HibernateException","0","-","-","-","-"
"5090","initialize","@Override
        public <T> T initialize(T proxy)","0","-","-","-","-"
"5091","setup","@BeforeEach
    void setup() throws Exception","0","-","-","-","-"
"5092","getsASessionFromTheSessionFactory","@Test
    void getsASessionFromTheSessionFactory()","0","-","-","-","-"
"5093","hasAnEntityClass","@Test
    void hasAnEntityClass()","0","-","-","-","-"
"5094","getsNamedQueries","@Test
    void getsNamedQueries()","0","-","-","-","-"
"5095","getsNamedTypedQueries","@Test
    void getsNamedTypedQueries()","0","-","-","-","-"
"5096","getsTypedQueries","@Test
    void getsTypedQueries()","0","-","-","-","-"
"5097","createsNewCriteriaQueries","@Test
    void createsNewCriteriaQueries()","0","-","-","-","-"
"5098","returnsUniqueResultsFromJpaCriteriaQueries","@Test
    void returnsUniqueResultsFromJpaCriteriaQueries()","0","-","-","-","-"
"5099","throwsOnNonUniqueResultsFromJpaCriteriaQueries","@Test
    void throwsOnNonUniqueResultsFromJpaCriteriaQueries()","0","-","-","-","-"
"5100","returnsUniqueResultsFromQueries","@Test
    void returnsUniqueResultsFromQueries()","0","-","-","-","-"
"5101","returnsUniqueListsFromJpaCriteriaQueries","@Test
    void returnsUniqueListsFromJpaCriteriaQueries()","0","-","-","-","-"
"5102","returnsUniqueListsFromQueries","@Test
    void returnsUniqueListsFromQueries()","0","-","-","-","-"
"5103","getsEntitiesById","@Test
    void getsEntitiesById()","0","-","-","-","-"
"5104","persistsEntities","@Test
    void persistsEntities()","0","-","-","-","-"
"5105","initializesProxies","@Test
    void initializesProxies() throws Exception","0","-","-","-","-"
"5106","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5107","tearDown","@AfterEach
    void tearDown()","0","-","-","-","-"
"5108","managesTheSessionFactory","@Test
    void managesTheSessionFactory()","0","-","-","-","-"
"5109","callsBundleToConfigure","@Test
    void callsBundleToConfigure()","0","-","-","-","-"
"5110","setsPoolName","@Test
    void setsPoolName()","0","-","-","-","-"
"5111","setsACustomPoolName","@Test
    void setsACustomPoolName()","0","-","-","-","-"
"5112","buildsAWorkingSessionFactory","@Test
    void buildsAWorkingSessionFactory()","0","-","-","-","-"
"5113","configureRunsBeforeSessionFactoryCreation","@Test
    void configureRunsBeforeSessionFactoryCreation()","0","-","-","-","-"
"5114","configure","@Override
            protected void configure(Configuration configuration, ServiceRegistry registry)","0","-","-","-","-"
"5115","buildBootstrapServiceRegistryRunsBeforeSessionFactoryCreation","@Test
    void buildBootstrapServiceRegistryRunsBeforeSessionFactoryCreation()","0","-","-","-","-"
"5116","configureBootstrapServiceRegistryBuilder","@Override
            protected BootstrapServiceRegistryBuilder configureBootstrapServiceRegistryBuilder(BootstrapServiceRegistryBuilder builder)","0","-","-","-","-"
"5117","build","private void build()","0","-","-","-","-"
"5118","toResponse","@Override
    public Response toResponse(DataException e)","0","-","-","-","-"
"5119","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5120","testProxyWorks","@Test
    void testProxyWorks() throws Exception","0","-","-","-","-"
"5121","testProxyWorksWithoutUnitOfWork","@Test
    void testProxyWorksWithoutUnitOfWork()","0","-","-","-","-"
"5122","testProxyHandlesErrors","@Test
    void testProxyHandlesErrors()","0","-","-","-","-"
"5123","testNewAspect","@Test
    void testNewAspect()","0","-","-","-","-"
"5124","testCanBeConfiguredWithACustomAspect","@Test
    void testCanBeConfiguredWithACustomAspect()","0","-","-","-","-"
"5125","newAspect","@Override
                public UnitOfWorkAspect newAspect(Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5126","testNestedCall","@Test
    void testNestedCall()","0","-","-","-","-"
"5127","testInvalidNestedCall","@Test
    void testInvalidNestedCall()","0","-","-","-","-"
"5128","SessionDao","public SessionDao(SessionFactory sessionFactory)","0","-","-","-","-"
"5129","isExist","public boolean isExist(String token)","0","-","-","-","-"
"5130","OAuthAuthenticator","public OAuthAuthenticator(SessionDao sessionDao)","0","-","-","-","-"
"5131","authenticate","@UnitOfWork
        public boolean authenticate(String token)","0","-","-","-","-"
"5132","authenticate","public boolean authenticate(String token)","0","-","-","-","-"
"5133","authenticate","@UnitOfWork
        public boolean authenticate(String token)","0","-","-","-","-"
"5134","CustomAspect","public CustomAspect(Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5135","configureSession","@Override
        protected void configureSession()","0","-","-","-","-"
"5136","NestedCall","public NestedCall(SessionFactory sessionFactory)","0","-","-","-","-"
"5137","normalCall","@UnitOfWork
        public void normalCall()","0","-","-","-","-"
"5138","nestedCall","@UnitOfWork
        public void nestedCall()","0","-","-","-","-"
"5139","invalidNestedCall","@UnitOfWork(cacheMode = CacheMode.IGNORE)
        public void invalidNestedCall()","0","-","-","-","-"
"5140","transactionActive","private boolean transactionActive()","0","-","-","-","-"
"5141","baseUri","private String baseUri()","0","-","-","-","-"
"5142","request","public Boolean request(String path)","0","-","-","-","-"
"5143","testDog","@Test
    void testDog()","0","-","-","-","-"
"5144","testPerson","@Test
    void testPerson()","0","-","-","-","-"
"5145","testFailingDog","@Test
    void testFailingDog()","0","-","-","-","-"
"5146","testDogMultiple","@Test
    void testDogMultiple()","0","-","-","-","-"
"5147","testFailingPerson","@Test
    void testFailingPerson()","0","-","-","-","-"
"5148","testDogAndPerson","@Test
    void testDogAndPerson()","0","-","-","-","-"
"5149","testDeclaredAndHandlingUnitOfWork","@Test
    void testDeclaredAndHandlingUnitOfWork()","0","-","-","-","-"
"5150","TestConfiguration","TestConfiguration(@JsonProperty(""dataSource"") DataSourceFactory dataSource,
                          @JsonProperty(""personDataSource"") DataSourceFactory personDataSource)","0","-","-","-","-"
"5151","getDataSourceFactory","@Override
            public PooledDataSourceFactory getDataSourceFactory(TestConfiguration configuration)","0","-","-","-","-"
"5152","name","@Override
            public String name()","0","-","-","-","-"
"5153","getDataSourceFactory","@Override
            public PooledDataSourceFactory getDataSourceFactory(TestConfiguration configuration)","0","-","-","-","-"
"5154","name","@Override
            public String name()","0","-","-","-","-"
"5155","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"5156","run","@Override
        public void run(TestConfiguration configuration, Environment environment) throws Exception","0","-","-","-","-"
"5157","initDatabase","private void initDatabase(SessionFactory dogSessionFactory, SessionFactory personSessionFactory)","0","-","-","-","-"
"5158","getDefinitionAndHandlingUnitOfWork","@GET
        @Path(""/definitionAndHandlingUnitOfWork"")
        @UnitOfWork(value = ""hibernate.dog"")
        public abstract boolean getDefinitionAndHandlingUnitOfWork();","0","-","-","-","-"
"5159","TestResource","public TestResource(SessionFactory dogSessionFactory, SessionFactory personSessionFactory)","0","-","-","-","-"
"5160","getDog","@GET
        @Path(""/dog"")
        @UnitOfWork(value = ""hibernate.dog"")
        public boolean getDog()","0","-","-","-","-"
"5161","getPerson","@GET
        @Path(""/person"")
        @UnitOfWork(value = ""hibernate.person"")
        public boolean getPerson()","0","-","-","-","-"
"5162","getFailingDog","@GET
        @Path(""/failingDog"")
        @UnitOfWork(value = ""hibernate.person"")
        public boolean getFailingDog()","0","-","-","-","-"
"5163","getDogMultiple","@GET
        @Path(""/dogMultiple"")
        @UnitOfWork(value = ""hibernate.dog"")
        @UnitOfWork(value = ""hibernate.dog"", readOnly = true)
        public boolean getDogMultiple()","0","-","-","-","-"
"5164","getFailingPerson","@GET
        @Path(""/failingPerson"")
        @UnitOfWork(value = ""hibernate.dog"")
        public boolean getFailingPerson()","0","-","-","-","-"
"5165","getDogAndPerson","@GET
        @Path(""/dogAndPerson"")
        @UnitOfWork(value = ""hibernate.dog"")
        @UnitOfWork(value = ""hibernate.person"")
        public boolean getDogAndPerson()","0","-","-","-","-"
"5166","getDefinitionAndHandlingUnitOfWork","@UnitOfWork(value = ""hibernate.person"")
        @Override
        public boolean getDefinitionAndHandlingUnitOfWork()","0","-","-","-","-"
"5167","example","@UnitOfWork
        public void example()","0","-","-","-","-"
"5168","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5169","defaultsToReadWrite","@Test
    void defaultsToReadWrite() throws Exception","0","-","-","-","-"
"5170","defaultsToTransactional","@Test
    void defaultsToTransactional() throws Exception","0","-","-","-","-"
"5171","defaultsToNormalCaching","@Test
    void defaultsToNormalCaching() throws Exception","0","-","-","-","-"
"5172","defaultsToAutomaticFlushing","@Test
    void defaultsToAutomaticFlushing() throws Exception","0","-","-","-","-"
"5173","getUrlPrefix","private String getUrlPrefix()","0","-","-","-","-"
"5174","unitOfWorkSupportedNested","@Test
    void unitOfWorkSupportedNested()","0","-","-","-","-"
"5175","unitOfWorkSupportedSerialized","@Test
    void unitOfWorkSupportedSerialized()","0","-","-","-","-"
"5176","TestConfiguration","TestConfiguration(@JsonProperty(""dataSource"") DataSourceFactory dataSource)","0","-","-","-","-"
"5177","getDataSourceFactory","@Override
            public PooledDataSourceFactory getDataSourceFactory(TestConfiguration configuration)","0","-","-","-","-"
"5178","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"5179","run","@Override
        public void run(TestConfiguration configuration, Environment environment)","0","-","-","-","-"
"5180","initDatabase","private void initDatabase(SessionFactory sessionFactory)","0","-","-","-","-"
"5181","DogDAO","DogDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5182","findByName","@UnitOfWork
        Optional<Dog> findByName(String name)","0","-","-","-","-"
"5183","create","@UnitOfWork
        void create(Dog dog) throws HibernateException","0","-","-","-","-"
"5184","getDog","public Optional<Dog> getDog()","0","-","-","-","-"
"5185","setDog","public void setDog(@Nullable Dog dog)","0","-","-","-","-"
"5186","DogResource","DogResource(DogDAO dao)","0","-","-","-","-"
"5187","findSerialized","@GET
        @Path(""serialized"")
        @UnitOfWork(transactional = false)
        public DogResult findSerialized(@PathParam(""name"") String name)","0","-","-","-","-"
"5188","setDog","@Override
                public void setDog(@Nullable Dog dog)","0","-","-","-","-"
"5189","getDog","@Override
                public Optional<Dog> getDog()","0","-","-","-","-"
"5190","findNested","@GET
        @Path(""nested"")
        @UnitOfWork(transactional = false)
        public Optional<Dog> findNested(@PathParam(""name"") String name)","0","-","-","-","-"
"5191","create","@PUT
        @UnitOfWork
        public void create(Dog dog)","0","-","-","-","-"
"5192","closesTheFactoryOnStopping","@Test
    void closesTheFactoryOnStopping() throws Exception","0","-","-","-","-"
"5193","stopsTheDataSourceOnStopping","@Test
    void stopsTheDataSourceOnStopping() throws Exception","0","-","-","-","-"
"5194","startsTheDataSourceOnStarting","@Test
    void startsTheDataSourceOnStarting() throws Exception","0","-","-","-","-"
"5195","getName","@JsonProperty
    @Nullable
    public String getName()","0","-","-","-","-"
"5196","setName","@JsonProperty
    public void setName(String name)","0","-","-","-","-"
"5197","getEmail","@JsonProperty
    public String getEmail()","0","-","-","-","-"
"5198","setEmail","@JsonProperty
    public void setEmail(String email)","0","-","-","-","-"
"5199","getBirthday","@JsonProperty
    @Nullable
    public ZonedDateTime getBirthday()","0","-","-","-","-"
"5200","setBirthday","@JsonProperty
    public void setBirthday(@Nullable ZonedDateTime birthday)","0","-","-","-","-"
"5201","getDataSourceFactory","@Override
        public DataSourceFactory getDataSourceFactory(Configuration configuration)","0","-","-","-","-"
"5202","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5203","addsHibernateSupportToJackson","@Test
    void addsHibernateSupportToJackson() throws Exception","0","-","-","-","-"
"5204","buildsASessionFactory","@Test
    void buildsASessionFactory() throws Exception","0","-","-","-","-"
"5205","registersATransactionalListener","@Test
    void registersATransactionalListener() throws Exception","0","-","-","-","-"
"5206","registersASessionFactoryHealthCheck","@Test
    void registersASessionFactoryHealthCheck() throws Exception","0","-","-","-","-"
"5207","registersACustomNameOfHealthCheckAndDBPoolMetrics","@Test
    void registersACustomNameOfHealthCheckAndDBPoolMetrics() throws Exception","0","-","-","-","-"
"5208","getDataSourceFactory","@Override
            public DataSourceFactory getDataSourceFactory(Configuration configuration)","0","-","-","-","-"
"5209","name","@Override
            protected String name()","0","-","-","-","-"
"5210","hasASessionFactory","@Test
    void hasASessionFactory() throws Exception","0","-","-","-","-"
"5211","baseUri","private String baseUri()","0","-","-","-","-"
"5212","canReadFromTopResource","@Test
    void canReadFromTopResource()","0","-","-","-","-"
"5213","canWriteTopResource","@Test
    void canWriteTopResource()","0","-","-","-","-"
"5214","canReadFromSubResources","@Test
    void canReadFromSubResources()","0","-","-","-","-"
"5215","canWriteSubResource","@Test
    void canWriteSubResource()","0","-","-","-","-"
"5216","errorsAreHandled","@Test
    void errorsAreHandled()","0","-","-","-","-"
"5217","noSessionErrorIsRaised","@Test
    void noSessionErrorIsRaised()","0","-","-","-","-"
"5218","TestConfiguration","TestConfiguration(@JsonProperty(""dataSource"") DataSourceFactory dataSource)","0","-","-","-","-"
"5219","getDataSourceFactory","@Override
            public PooledDataSourceFactory getDataSourceFactory(TestConfiguration configuration)","0","-","-","-","-"
"5220","initialize","@Override
        public void initialize(Bootstrap<TestConfiguration> bootstrap)","0","-","-","-","-"
"5221","run","@Override
        public void run(TestConfiguration configuration, Environment environment)","0","-","-","-","-"
"5222","initDatabase","private void initDatabase(SessionFactory sessionFactory)","0","-","-","-","-"
"5223","PersonResource","PersonResource(PersonDAO dao, DogDAO dogDao)","0","-","-","-","-"
"5224","find","@GET
        @Path(""","0","-","-","-","-"
"5225","save","@POST
        @UnitOfWork
        public Person save(Person person)","0","-","-","-","-"
"5226","dogResource","@Path(""/","0","-","-","-","-"
"5227","DogResource","DogResource(DogDAO dogDAO, PersonDAO personDAO)","0","-","-","-","-"
"5228","findAll","@GET
        // Intentionally no `@UnitOfWork`
        public List<Dog> findAll(@PathParam(""ownerName"") String ownerName)","0","-","-","-","-"
"5229","find","@GET
        @Path(""","0","-","-","-","-"
"5230","create","@POST
        @UnitOfWork
        public Dog create(@PathParam(""ownerName"") String ownerName, Dog dog)","0","-","-","-","-"
"5231","PersonDAO","PersonDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5232","findByName","Optional<Person> findByName(String name)","0","-","-","-","-"
"5233","DogDAO","DogDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5234","findByOwnerAndName","Optional<Dog> findByOwnerAndName(String ownerName, String dogName)","0","-","-","-","-"
"5235","findByOwner","List<Dog> findByOwner(String ownerName)","0","-","-","-","-"
"5236","beforeAll","@BeforeAll
    public static void beforeAll() throws Exception","0","-","-","-","-"
"5237","current","public static Stream<Arguments> current()","0","-","-","-","-"
"5238","current","@ParameterizedTest
    @MethodSource
    public void current(final boolean readOnly, final SessionFactory expected)","0","-","-","-","-"
"5239","getCurrentSession","public static Stream<Arguments> getCurrentSession()","0","-","-","-","-"
"5240","getCurrentSession","@ParameterizedTest
    @MethodSource
    public void getCurrentSession(final boolean readOnly, final Session expected)","0","-","-","-","-"
"5241","prepare","public static Stream<Arguments> prepare()","0","-","-","-","-"
"5242","prepare","@ParameterizedTest
    @MethodSource
    public void prepare(final boolean readOnly, final SessionFactory expected)","0","-","-","-","-"
"5243","getDataSourceFactory","@Override
        public DataSourceFactory getDataSourceFactory(Configuration configuration)","0","-","-","-","-"
"5244","getReadSourceFactory","@Override
        public DataSourceFactory getReadSourceFactory(Configuration configuration)","0","-","-","-","-"
"5245","setUp","@BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"5246","addsHibernateSupportToJackson","@Test
    public void addsHibernateSupportToJackson() throws Exception","0","-","-","-","-"
"5247","buildsASessionFactory","@Test
    public void buildsASessionFactory() throws Exception","0","-","-","-","-"
"5248","registersATransactionalListener","@Test
    public void registersATransactionalListener() throws Exception","0","-","-","-","-"
"5249","registersASessionFactoryHealthCheck","@Test
    public void registersASessionFactoryHealthCheck() throws Exception","0","-","-","-","-"
"5250","registersACustomNameOfHealthCheckAndDBPoolMetrics","@Test
    public void registersACustomNameOfHealthCheckAndDBPoolMetrics() throws Exception","0","-","-","-","-"
"5251","getDataSourceFactory","@Override
            public DataSourceFactory getDataSourceFactory(Configuration configuration)","0","-","-","-","-"
"5252","getReadSourceFactory","@Override
            public DataSourceFactory getReadSourceFactory(Configuration configuration)","0","-","-","-","-"
"5253","name","@Override
            protected String name()","0","-","-","-","-"
"5254","hasASessionFactory","@Test
    public void hasASessionFactory() throws Exception","0","-","-","-","-"
"5255","getName","@JsonProperty
    @Nullable
    public String getName()","0","-","-","-","-"
"5256","setName","@JsonProperty
    public void setName(String name)","0","-","-","-","-"
"5257","getOwner","@JsonProperty
    @Nullable
    public Person getOwner()","0","-","-","-","-"
"5258","setOwner","@JsonProperty
    public void setOwner(Person owner)","0","-","-","-","-"
"5259","toResponse","@Override
    public Response toResponse(PersistenceException e)","0","-","-","-","-"
"5260","isMappable","@Override
    public boolean isMappable(PersistenceException e)","0","-","-","-","-"
"5261","testFindEntityClassesFromDirectory","@Test
    void testFindEntityClassesFromDirectory()","0","-","-","-","-"
"5262","testFindEntityClassesFromMultipleDirectories","@Test
    void testFindEntityClassesFromMultipleDirectories()","0","-","-","-","-"
"5263","toResponse","@Override
    public Response toResponse(JdbcSQLNonTransientConnectionException throwables)","0","-","-","-","-"
"5264","UnitOfWorkAspect","public UnitOfWorkAspect(Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5265","beforeStart","public void beforeStart(@Nullable UnitOfWork unitOfWork)","0","-","-","-","-"
"5266","afterEnd","public void afterEnd()","0","-","-","-","-"
"5267","onError","public void onError()","0","-","-","-","-"
"5268","onFinish","public void onFinish()","0","-","-","-","-"
"5269","configureSession","protected void configureSession()","0","-","-","-","-"
"5270","validateSession","protected void validateSession()","0","-","-","-","-"
"5271","beginTransaction","private void beginTransaction(UnitOfWork unitOfWork, Session session)","0","-","-","-","-"
"5272","rollbackTransaction","private void rollbackTransaction(UnitOfWork unitOfWork, Session session)","0","-","-","-","-"
"5273","commitTransaction","private void commitTransaction(UnitOfWork unitOfWork, Session session)","0","-","-","-","-"
"5274","getSession","protected Session getSession()","0","-","-","-","-"
"5275","getSessionFactory","protected SessionFactory getSessionFactory()","0","-","-","-","-"
"5276","UnitOfWorkApplicationListener","public UnitOfWorkApplicationListener()","0","-","-","-","-"
"5277","UnitOfWorkApplicationListener","/**
     * Construct an application event listener using the given name and session factory.
     *
     * <p/>
     * When using this constructor, the","0","-","-","-","-"
"5278","registerSessionFactory","/**
     * Register a session factory with the given name.
     *
     * @param name a name of a Hibernate bundle
     * @param sessionFactory a","0","-","-","-","-"
"5279","UnitOfWorkEventListener","UnitOfWorkEventListener(ConcurrentMap<ResourceMethod, Collection<UnitOfWork>> methodMap,
                                Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5280","onEvent","@Override
        public void onEvent(RequestEvent event)","0","-","-","-","-"
"5281","registerUnitOfWorkAnnotations","private static Collection<UnitOfWork> registerUnitOfWorkAnnotations(ResourceMethod method)","0","-","-","-","-"
"5282","onEvent","@Override
    public void onEvent(ApplicationEvent event)","0","-","-","-","-"
"5283","onRequest","@Override
    public RequestEventListener onRequest(RequestEvent event)","0","-","-","-","-"
"5284","AbstractDAO","/**
     * Creates a new DAO with a given session provider.
     *
     * @param sessionFactory    a session provider
     */
    public AbstractDAO(SessionFactory sessionFactory)","0","-","-","-","-"
"5285","currentSession","/**
     * Returns the current","0","-","-","-","-"
"5286","criteriaQuery","/**
     * Creates a new","0","-","-","-","-"
"5287","namedQuery","/**
     * Returns a named","0","-","-","-","-"
"5288","namedTypedQuery","/**
     * Returns a named and type-safe","0","-","-","-","-"
"5289","query","/**
     * Returns a typed","0","-","-","-","-"
"5290","getEntityClass","/**
     * Returns the entity class managed by this DAO.
     *
     * @return the entity class managed by this DAO
     */
    @SuppressWarnings(""unchecked"")
    public Class<E> getEntityClass()","0","-","-","-","-"
"5291","uniqueResult","/**
     * Convenience method to return a single instance that matches the criteria query,
     * or null if the criteria returns no results.
     *
     * @param criteriaQuery the","0","-","-","-","-"
"5292","uniqueElement","private static <T> @Nullable T uniqueElement(List<T> list) throws NonUniqueResultException","0","-","-","-","-"
"5293","uniqueResult","/**
     * Convenience method to return a single instance that matches the query, or null if the query
     * returns no results.
     *
     * @param query the query to run
     * @return the single result or","0","-","-","-","-"
"5294","list","/**
     * Get the results of a","0","-","-","-","-"
"5295","list","/**
     * Get the results of a query.
     *
     * @param query the query to run
     * @return the list of matched query results
     * @see Query#list()
     */
    protected List<E> list(Query<E> query) throws HibernateException","0","-","-","-","-"
"5296","get","/**
     * Return the persistent instance of","0","-","-","-","-"
"5297","persist","/**
     * Either save or update the given instance, depending upon resolution of the unsaved-value
     * checks (see the manual for discussion of unsaved-value checking).
     * <p/>
     * This operation cascades to associated instances if the association is mapped with
     * <tt>cascade=""save-update""</tt>.
     *
     * @param entity a transient or detached instance containing new or updated state
     * @throws HibernateException
     * @see Session#saveOrUpdate(Object)
     */
    protected E persist(E entity) throws HibernateException","0","-","-","-","-"
"5298","initialize","/**
     * Force initialization of a proxy or persistent collection.
     * <p/>
     * Note: This only ensures initialization of a proxy object or collection;
     * it is not guaranteed that the elements INSIDE the collection will be initialized/materialized.
     *
     * @param proxy a persistable object, proxy, persistent collection or","0","-","-","-","-"
"5299","SessionFactoryManager","public SessionFactoryManager(SessionFactory factory, ManagedDataSource dataSource)","0","-","-","-","-"
"5300","getDataSource","public ManagedDataSource getDataSource()","0","-","-","-","-"
"5301","start","@Override
    public void start() throws Exception","0","-","-","-","-"
"5302","stop","@Override
    public void stop() throws Exception","0","-","-","-","-"
"5303","DualSessionFactory","public DualSessionFactory(final SessionFactory primary, final SessionFactory reader)","0","-","-","-","-"
"5304","prepare","/** Activates either the primary or the reader session factory depending on the readOnly parameter.
     *
     * @param readOnly
     * @return the session factory in use
     */
    public SessionFactory prepare(final boolean readOnly)","0","-","-","-","-"
"5305","current","public SessionFactory current()","0","-","-","-","-"
"5306","createEntityManager","@Override
    public EntityManager createEntityManager()","0","-","-","-","-"
"5307","createEntityManager","@Override
    public EntityManager createEntityManager(final Map map)","0","-","-","-","-"
"5308","createEntityManager","@Override
    public EntityManager createEntityManager(final SynchronizationType synchronizationType)","0","-","-","-","-"
"5309","createEntityManager","@Override
    public EntityManager createEntityManager(final SynchronizationType synchronizationType, final Map map)","0","-","-","-","-"
"5310","getCriteriaBuilder","@Override
    public CriteriaBuilder getCriteriaBuilder()","0","-","-","-","-"
"5311","getMetamodel","@Override
    public Metamodel getMetamodel()","0","-","-","-","-"
"5312","isOpen","@Override
    public boolean isOpen()","0","-","-","-","-"
"5313","getProperties","@Override
    public Map<String, Object> getProperties()","0","-","-","-","-"
"5314","getPersistenceUnitUtil","@Override
    public PersistenceUnitUtil getPersistenceUnitUtil()","0","-","-","-","-"
"5315","addNamedQuery","@Override
    public void addNamedQuery(String name, Query query)","0","-","-","-","-"
"5316","unwrap","@Override
    public <T> T unwrap(Class<T> cls)","0","-","-","-","-"
"5317","addNamedEntityGraph","@Override
    public <T> void addNamedEntityGraph(String graphName, EntityGraph<T> entityGraph)","0","-","-","-","-"
"5318","findEntityGraphsByType","@Override
    public <T> List<EntityGraph<? super T>> findEntityGraphsByType(Class<T> entityClass)","0","-","-","-","-"
"5319","getReference","@Override
    public Reference getReference() throws NamingException","0","-","-","-","-"
"5320","getSessionFactoryOptions","@Override
    public SessionFactoryOptions getSessionFactoryOptions()","0","-","-","-","-"
"5321","withOptions","@Override
    public SessionBuilder withOptions()","0","-","-","-","-"
"5322","openSession","@Override
    public Session openSession() throws HibernateException","0","-","-","-","-"
"5323","getCurrentSession","@Override
    public Session getCurrentSession() throws HibernateException","0","-","-","-","-"
"5324","withStatelessOptions","@Override
    public StatelessSessionBuilder withStatelessOptions()","0","-","-","-","-"
"5325","openStatelessSession","@Override
    public StatelessSession openStatelessSession()","0","-","-","-","-"
"5326","openStatelessSession","@Override
    public StatelessSession openStatelessSession(Connection connection)","0","-","-","-","-"
"5327","inSession","@Override
    public void inSession(Consumer<Session> action)","0","-","-","-","-"
"5328","inTransaction","@Override
    public void inTransaction(Consumer<Session> action)","0","-","-","-","-"
"5329","fromSession","@Override
    public <R> R fromSession(Function<Session, R> action)","0","-","-","-","-"
"5330","fromTransaction","@Override
    public <R> R fromTransaction(Function<Session, R> action)","0","-","-","-","-"
"5331","getStatistics","@Override
    public Statistics getStatistics()","0","-","-","-","-"
"5332","close","@Override
    public void close() throws HibernateException","0","-","-","-","-"
"5333","isClosed","@Override
    public boolean isClosed()","0","-","-","-","-"
"5334","getCache","@Override
    public Cache getCache()","0","-","-","-","-"
"5335","getDefinedFilterNames","@Override
    public Set getDefinedFilterNames()","0","-","-","-","-"
"5336","getFilterDefinition","@Override
    public FilterDefinition getFilterDefinition(String filterName) throws HibernateException","0","-","-","-","-"
"5337","containsFetchProfileDefinition","@Override
    public boolean containsFetchProfileDefinition(String name)","0","-","-","-","-"
"5338","HibernateBundle","protected HibernateBundle(Class<?> entity, Class<?>... entities)","0","-","-","-","-"
"5339","HibernateBundle","protected HibernateBundle(List<Class<?>> entities,
                              SessionFactoryFactory sessionFactoryFactory)","0","-","-","-","-"
"5340","getReadSourceFactory","abstract public PooledDataSourceFactory getReadSourceFactory(T configuration);","0","-","-","-","-"
"5341","run","@Override
    public void run(T configuration, Environment environment) throws Exception","0","-","-","-","-"
"5342","ScanningHibernateBundle","/**
     * @param pckg string with package containing Hibernate entities (classes annotated with Hibernate","0","-","-","-","-"
"5343","ScanningHibernateBundle","protected ScanningHibernateBundle(String pckg, SessionFactoryFactory sessionFactoryFactory)","0","-","-","-","-"
"5344","ScanningHibernateBundle","protected ScanningHibernateBundle(String[] pckgs, SessionFactoryFactory sessionFactoryFactory)","0","-","-","-","-"
"5345","findEntityClassesFromDirectory","/**
     * Method scanning given directory for classes containing Hibernate @Entity annotation
     *
     * @param pckgs string array with packages containing Hibernate entities (classes annotated with @Entity annotation)
     *             e.g. com.codahale.fake.db.directory.entities
     * @return ImmutableList with classes from given directory annotated with Hibernate @Entity annotation
     */
    public static List<Class<?>> findEntityClassesFromDirectory(String[] pckgs)","0","-","-","-","-"
"5346","HibernateBundle","protected HibernateBundle(Class<?> entity, Class<?>... entities)","0","-","-","-","-"
"5347","HibernateBundle","protected HibernateBundle(List<Class<?>> entities,
                              SessionFactoryFactory sessionFactoryFactory)","0","-","-","-","-"
"5348","initialize","@Override
    public final void initialize(Bootstrap<?> bootstrap)","0","-","-","-","-"
"5349","createHibernate5Module","/**
     * Override to configure the","0","-","-","-","-"
"5350","name","/**
     * Override to configure the name of the bundle
     * (It's used for the bundle health check and database pool metrics)
     */
    protected String name()","0","-","-","-","-"
"5351","run","@Override
    public void run(T configuration, Environment environment) throws Exception","0","-","-","-","-"
"5352","registerUnitOfWorkListenerIfAbsent","protected UnitOfWorkApplicationListener registerUnitOfWorkListenerIfAbsent(Environment environment)","0","-","-","-","-"
"5353","isLazyLoadingEnabled","public boolean isLazyLoadingEnabled()","0","-","-","-","-"
"5354","setLazyLoadingEnabled","public void setLazyLoadingEnabled(boolean lazyLoadingEnabled)","0","-","-","-","-"
"5355","getSessionFactory","public SessionFactory getSessionFactory()","0","-","-","-","-"
"5356","configure","protected void configure(org.hibernate.cfg.Configuration configuration)","0","-","-","-","-"
"5357","SessionFactoryHealthCheck","public SessionFactoryHealthCheck(SessionFactory sessionFactory,
                                     Optional<String> validationQuery)","0","-","-","-","-"
"5358","SessionFactoryHealthCheck","public SessionFactoryHealthCheck(ExecutorService executorService,
                                     Duration duration,
                                     SessionFactory sessionFactory,
                                     Optional<String> validationQuery)","0","-","-","-","-"
"5359","getSessionFactory","public SessionFactory getSessionFactory()","0","-","-","-","-"
"5360","getValidationQuery","public Optional<String> getValidationQuery()","0","-","-","-","-"
"5361","check","@Override
    protected Result check() throws Exception","0","-","-","-","-"
"5362","isValidConnection","private boolean isValidConnection(Session session)","0","-","-","-","-"
"5363","build","public SessionFactory build(HibernateBundle<?> bundle,
                                Environment environment,
                                PooledDataSourceFactory dbConfig,
                                List<Class<?>> entities)","0","-","-","-","-"
"5364","build","public SessionFactory build(HibernateBundle<?> bundle,
                                Environment environment,
                                PooledDataSourceFactory dbConfig,
                                List<Class<?>> entities,
                                String name)","0","-","-","-","-"
"5365","build","public SessionFactory build(HibernateBundle<?> bundle,
                                Environment environment,
                                PooledDataSourceFactory dbConfig,
                                ManagedDataSource dataSource,
                                List<Class<?>> entities)","0","-","-","-","-"
"5366","buildConnectionProvider","private ConnectionProvider buildConnectionProvider(DataSource dataSource,
                                                       Map<String, String> properties)","0","-","-","-","-"
"5367","buildSessionFactory","private SessionFactory buildSessionFactory(HibernateBundle<?> bundle,
                                               PooledDataSourceFactory dbConfig,
                                               ConnectionProvider connectionProvider,
                                               Map<String, String> properties,
                                               List<Class<?>> entities)","0","-","-","-","-"
"5368","configure","protected void configure(Configuration configuration, ServiceRegistry registry)","0","-","-","-","-"
"5369","configureBootstrapServiceRegistryBuilder","protected BootstrapServiceRegistryBuilder configureBootstrapServiceRegistryBuilder(BootstrapServiceRegistryBuilder builder)","0","-","-","-","-"
"5370","addAnnotatedClasses","private void addAnnotatedClasses(Configuration configuration,
                                     Iterable<Class<?>> entities)","0","-","-","-","-"
"5371","UnitOfWorkAwareProxyFactory","public UnitOfWorkAwareProxyFactory(String name, SessionFactory sessionFactory)","0","-","-","-","-"
"5372","UnitOfWorkAwareProxyFactory","public UnitOfWorkAwareProxyFactory(Caffeine<Object, Object> proxyCacheBuilder, String name, SessionFactory sessionFactory)","0","-","-","-","-"
"5373","UnitOfWorkAwareProxyFactory","public UnitOfWorkAwareProxyFactory(HibernateBundle<?>... bundles)","0","-","-","-","-"
"5374","UnitOfWorkAwareProxyFactory","public UnitOfWorkAwareProxyFactory(Caffeine<Object, Object> proxyCacheBuilder, HibernateBundle<?>... bundles)","0","-","-","-","-"
"5375","buildCache","private LoadingCache<Class<?>, Class<?>> buildCache(Caffeine<Object, Object> proxyCacheBuilder)","0","-","-","-","-"
"5376","load","@Override
            public Class<?> load(@NonNull Class<?> key)","0","-","-","-","-"
"5377","create","/**
     * Creates a new <b>@UnitOfWork</b> aware proxy of a class with the default constructor.
     *
     * @param clazz the specified class definition
     * @param <T>   the type of the class
     * @return a new proxy
     */
    public <T> T create(Class<T> clazz)","0","-","-","-","-"
"5378","create","/**
     * Creates a new <b>@UnitOfWork</b> aware proxy of a class with a one-parameter constructor.
     *
     * @param clazz                the specified class definition
     * @param constructorParamType the type of the constructor parameter
     * @param constructorArguments the argument passed to the constructor
     * @param <T>                  the type of the class
     * @return a new proxy
     */
    public <T> T create(Class<T> clazz, Class<?> constructorParamType, Object constructorArguments)","0","-","-","-","-"
"5379","create","/**
     * Creates a new <b>@UnitOfWork</b> aware proxy of a class with a complex constructor.
     *
     * @param clazz                 the specified class definition
     * @param constructorParamTypes the types of the constructor parameters
     * @param constructorArguments  the arguments passed to the constructor
     * @param <T>                   the type of the class
     * @return a new proxy
     */
    @SuppressWarnings(""unchecked"")
    public <T> T create(Class<T> clazz, Class<?>[] constructorParamTypes, Object[] constructorArguments)","0","-","-","-","-"
"5380","createProxyClass","protected <T> Class<? extends T> createProxyClass(Class<T> classToProxy)","0","-","-","-","-"
"5381","newAspect","/**
     * @return a new aspect
     */
    public UnitOfWorkAspect newAspect()","0","-","-","-","-"
"5382","newAspect","/**
     * @return a new aspect
     * @param sessionFactories
     */
    public UnitOfWorkAspect newAspect(Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5383","MethodInterceptor","public MethodInterceptor(Map<String, SessionFactory> sessionFactories)","0","-","-","-","-"
"5384","invoke","@RuntimeType
        public Object invoke(@Origin Method overridden, @SuperCall Callable<Object> proxy) throws Throwable","0","-","-","-","-"
"5385","setUp","@BeforeEach
    public void setUp() throws Exception","0","-","-","-","-"
"5386","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5387","shouldReturnHealthyWithCacheControlDisabled","@Test
    void shouldReturnHealthyWithCacheControlDisabled() throws Exception","0","-","-","-","-"
"5388","shouldReturnHealthyWithNoParametersProvided","@Test
    void shouldReturnHealthyWithNoParametersProvided() throws Exception","0","-","-","-","-"
"5389","shouldReturnUnhealthyWithNoParametersProvided","@Test
    void shouldReturnUnhealthyWithNoParametersProvided() throws Exception","0","-","-","-","-"
"5390","shouldReturnHealthResultsWhenMultipleParametersProvided","@Test
    void shouldReturnHealthResultsWhenMultipleParametersProvided() throws Exception","0","-","-","-","-"
"5391","executeRequest","private HttpTester.Response executeRequest(HttpTester.Request request) throws Exception","0","-","-","-","-"
"5392","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5393","shouldHandleSingleHealthStateViewCorrectly","@Test
    void shouldHandleSingleHealthStateViewCorrectly() throws IOException","0","-","-","-","-"
"5394","shouldHandleMultipleHealthStateViewsCorrectly","@Test
    void shouldHandleMultipleHealthStateViewsCorrectly() throws IOException","0","-","-","-","-"
"5395","shouldHandleZeroHealthStateViewsCorrectly","@Test
    void shouldHandleZeroHealthStateViewsCorrectly()","0","-","-","-","-"
"5396","shouldThrowExceptionWhenJsonProcessorExceptionOccurs","@Test
    void shouldThrowExceptionWhenJsonProcessorExceptionOccurs() throws IOException","0","-","-","-","-"
"5397","fixture","private String fixture(final String filename) throws IOException","0","-","-","-","-"
"5398","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5399","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5400","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"5401","testBuildHealthServlet","@Test
    void testBuildHealthServlet() throws Exception","0","-","-","-","-"
"5402","testBuildHealthServletWithCacheControlDisabled","@Test
    void testBuildHealthServletWithCacheControlDisabled() throws Exception","0","-","-","-","-"
"5403","executeRequest","private HttpTester.Response executeRequest(HttpTester.Request request) throws Exception","0","-","-","-","-"
"5404","setupServletStubbing","private void setupServletStubbing()","0","-","-","-","-"
"5405","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"5406","testBuildJsonHealthResponseProvider","@Test
    void testBuildJsonHealthResponseProvider() throws Exception","0","-","-","-","-"
"5407","shouldBuildHealthFactoryFromYaml","@Test
    void shouldBuildHealthFactoryFromYaml() throws Exception","0","-","-","-","-"
"5408","configure","@Test
    void configure() throws Exception","0","-","-","-","-"
"5409","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5410","shouldScheduleCheckForNotAlreadyScheduledHealthyDependency","@Test
    void shouldScheduleCheckForNotAlreadyScheduledHealthyDependency()","0","-","-","-","-"
"5411","shouldScheduleCheckForNotAlreadyScheduledUnhealthyDependency","@Test
    void shouldScheduleCheckForNotAlreadyScheduledUnhealthyDependency()","0","-","-","-","-"
"5412","shouldRescheduleCheckForHealthyDependency","@Test
    void shouldRescheduleCheckForHealthyDependency()","0","-","-","-","-"
"5413","shouldRescheduleCheckForUnhealthyDependency","@Test
    void shouldRescheduleCheckForUnhealthyDependency()","0","-","-","-","-"
"5414","shouldUnscheduleExistingCheck","@Test
    void shouldUnscheduleExistingCheck()","0","-","-","-","-"
"5415","unscheduleShouldDoNothingIfNoCheckScheduled","@Test
    void unscheduleShouldDoNothingIfNoCheckScheduled()","0","-","-","-","-"
"5416","shouldIgnoreUnconfiguredAddedHealthChecks","@Test
    void shouldIgnoreUnconfiguredAddedHealthChecks()","0","-","-","-","-"
"5417","shouldScheduleHealthCheckWhenConfiguredHealthCheckAdded","@Test
    void shouldScheduleHealthCheckWhenConfiguredHealthCheckAdded()","0","-","-","-","-"
"5418","shouldUnscheduleTaskWhenHealthCheckRemoved","@Test
    void shouldUnscheduleTaskWhenHealthCheckRemoved()","0","-","-","-","-"
"5419","shouldDoNothingWhenStateChangesForUnconfiguredHealthCheck","@Test
    void shouldDoNothingWhenStateChangesForUnconfiguredHealthCheck()","0","-","-","-","-"
"5420","shouldReportUnhealthyWhenInitialOverallStateIsFalse","@Test
    void shouldReportUnhealthyWhenInitialOverallStateIsFalse()","0","-","-","-","-"
"5421","shouldReportHealthyWhenInitialOverallStateIsFalseAndReadyCheckIsHealthy","@Test
    void shouldReportHealthyWhenInitialOverallStateIsFalseAndReadyCheckIsHealthy()","0","-","-","-","-"
"5422","shouldMarkServerUnhealthyWhenCriticalHealthCheckFails","@Test
    void shouldMarkServerUnhealthyWhenCriticalHealthCheckFails()","0","-","-","-","-"
"5423","shouldMarkServerNotAliveAndUnhealthyWhenCriticalAliveCheckFails","@Test
    void shouldMarkServerNotAliveAndUnhealthyWhenCriticalAliveCheckFails()","0","-","-","-","-"
"5424","shouldMarkServerHealthyWhenCriticalHealthCheckRecovers","@Test
    void shouldMarkServerHealthyWhenCriticalHealthCheckRecovers()","0","-","-","-","-"
"5425","shouldNotChangeServerStateWhenNonCriticalHealthCheckFails","@Test
    void shouldNotChangeServerStateWhenNonCriticalHealthCheckFails()","0","-","-","-","-"
"5426","shouldNotChangeServerStateWhenNonCriticalHealthCheckRecovers","@Test
    void shouldNotChangeServerStateWhenNonCriticalHealthCheckRecovers()","0","-","-","-","-"
"5427","shouldRecordNumberOfHealthyAndUnhealthyHealthChecks","@Test
    void shouldRecordNumberOfHealthyAndUnhealthyHealthChecks()","0","-","-","-","-"
"5428","onHealthyCheck","@Override
            public void onHealthyCheck(String healthCheckName)","0","-","-","-","-"
"5429","onUnhealthyCheck","@Override
            public void onUnhealthyCheck(String healthCheckName)","0","-","-","-","-"
"5430","onStateChanged","@Override
            public void onStateChanged(String healthCheckName, boolean healthy)","0","-","-","-","-"
"5431","shouldContinueScheduledCheckingWhileDelayingShutdown","@Test
    @DisabledOnOs(OS.WINDOWS)
    void shouldContinueScheduledCheckingWhileDelayingShutdown() throws Exception","0","-","-","-","-"
"5432","verifyCheckWasScheduled","private void verifyCheckWasScheduled(HealthCheckScheduler scheduler, boolean critical)","0","-","-","-","-"
"5433","getCount","public long getCount()","0","-","-","-","-"
"5434","check","@Override
        protected Result check()","0","-","-","-","-"
"5435","shouldBuildAScheduleFromYaml","@Test
    void shouldBuildAScheduleFromYaml() throws Exception","0","-","-","-","-"
"5436","shouldBuildHealthCheckConfigurationFromYaml","@Test
    void shouldBuildHealthCheckConfigurationFromYaml() throws Exception","0","-","-","-","-"
"5437","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5438","gettingHealthStateAggregatorBeforeSetShouldResultInException","@Test
    void gettingHealthStateAggregatorBeforeSetShouldResultInException()","0","-","-","-","-"
"5439","shouldRegisterAListener","@Test
    void shouldRegisterAListener()","0","-","-","-","-"
"5440","testHealthStatusChecker","@Test
    void testHealthStatusChecker()","0","-","-","-","-"
"5441","testMethods","@Test
    void testMethods() throws Exception","0","-","-","-","-"
"5442","onHealthyCheck","@Override
        public void onHealthyCheck(String healthCheckName)","0","-","-","-","-"
"5443","onUnhealthyCheck","@Override
        public void onUnhealthyCheck(String healthCheckName)","0","-","-","-","-"
"5444","onStateChanged","@Override
        public void onStateChanged(String healthCheckName, boolean healthy)","0","-","-","-","-"
"5445","healthyCheckShouldResultInSuccess","@Test
    void healthyCheckShouldResultInSuccess()","0","-","-","-","-"
"5446","unhealthyCheckShouldResultInFail","@Test
    void unhealthyCheckShouldResultInFail()","0","-","-","-","-"
"5447","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5448","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5449","startValidationsShouldSucceedWhenNoHealthChecksConfigured","@Test
    void startValidationsShouldSucceedWhenNoHealthChecksConfigured() throws Exception","0","-","-","-","-"
"5450","startValidationsShouldSucceedForConfiguredAndRegisteredHealthCheck","@Test
    void startValidationsShouldSucceedForConfiguredAndRegisteredHealthCheck() throws Exception","0","-","-","-","-"
"5451","startValidationsShouldSucceedButLogWhenNotAllHealthChecksAreConfigured","@Test
    void startValidationsShouldSucceedButLogWhenNotAllHealthChecksAreConfigured() throws Exception","0","-","-","-","-"
"5452","startValidationsShouldFailIfAHealthCheckConfiguredButNotRegistered","@Test
    void startValidationsShouldFailIfAHealthCheckConfiguredButNotRegistered()","0","-","-","-","-"
"5453","onHealthyCheck","@Override
        public void onHealthyCheck(String healthCheckName)","0","-","-","-","-"
"5454","onUnhealthyCheck","@Override
        public void onUnhealthyCheck(String healthCheckName)","0","-","-","-","-"
"5455","onStateChanged","@Override
        public void onStateChanged(String healthCheckName, boolean healthy)","0","-","-","-","-"
"5456","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5457","singleFailureShouldNotChangeStateIfThresholdNotExceeded","@Test
    void singleFailureShouldNotChangeStateIfThresholdNotExceeded()","0","-","-","-","-"
"5458","singleFailureShouldChangeStateIfThresholdExceeded","@Test
    void singleFailureShouldChangeStateIfThresholdExceeded()","0","-","-","-","-"
"5459","singleSuccessShouldNotChangeStateIfThresholdNotExceeded","@Test
    void singleSuccessShouldNotChangeStateIfThresholdNotExceeded()","0","-","-","-","-"
"5460","singleSuccessShouldChangeStateIfThresholdExceeded","@Test
    void singleSuccessShouldChangeStateIfThresholdExceeded()","0","-","-","-","-"
"5461","failureFollowedByRecoveryShouldAllowAStateChangeToUnhealthyAfterAnotherFailureOccurs","@Test
    void failureFollowedByRecoveryShouldAllowAStateChangeToUnhealthyAfterAnotherFailureOccurs()","0","-","-","-","-"
"5462","successFollowedByFailureShouldAllowAStateChangeToHealthyAfterAnotherSuccessOccurs","@Test
    void successFollowedByFailureShouldAllowAStateChangeToHealthyAfterAnotherSuccessOccurs()","0","-","-","-","-"
"5463","dependencyFailingThenRecoveringTriggersStateChangeEventsCorrectly","@Test
    void dependencyFailingThenRecoveringTriggersStateChangeEventsCorrectly()","0","-","-","-","-"
"5464","setUp","@BeforeEach
    void setUp() throws IOException","0","-","-","-","-"
"5465","tearDown","@AfterEach
    void tearDown() throws IOException","0","-","-","-","-"
"5466","tcpHealthCheckShouldReturnHealthyIfCanConnect","@Test
    void tcpHealthCheckShouldReturnHealthyIfCanConnect() throws IOException","0","-","-","-","-"
"5467","tcpHealthCheckShouldReturnUnhealthyIfCannotConnect","@Test
    void tcpHealthCheckShouldReturnUnhealthyIfCannotConnect() throws IOException","0","-","-","-","-"
"5468","tcpHealthCheckShouldReturnUnhealthyIfCannotConnectWithinConfiguredTimeout","@Test
    void tcpHealthCheckShouldReturnUnhealthyIfCannotConnectWithinConfiguredTimeout() throws IOException","0","-","-","-","-"
"5469","setup","@BeforeEach
    void setup() throws Exception","0","-","-","-","-"
"5470","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5471","httpHealthCheckShouldConsiderA200ResponseHealthy","@Test
    void httpHealthCheckShouldConsiderA200ResponseHealthy()","0","-","-","-","-"
"5472","httpHealthCheckShouldConsiderA500ResponseUnhealthy","@Test
    void httpHealthCheckShouldConsiderA500ResponseUnhealthy()","0","-","-","-","-"
"5473","httpHealthCheckShouldConsiderATimeoutUnhealthy","@Test
    void httpHealthCheckShouldConsiderATimeoutUnhealthy()","0","-","-","-","-"
"5474","getName","public String getName()","0","-","-","-","-"
"5475","setName","public void setName(final String name)","0","-","-","-","-"
"5476","getType","public HealthCheckType getType()","0","-","-","-","-"
"5477","setType","public void setType(HealthCheckType type)","0","-","-","-","-"
"5478","isCritical","public boolean isCritical()","0","-","-","-","-"
"5479","setCritical","public void setCritical(final boolean critical)","0","-","-","-","-"
"5480","isInitialState","public boolean isInitialState()","0","-","-","-","-"
"5481","setInitialState","public void setInitialState(boolean initialState)","0","-","-","-","-"
"5482","getSchedule","public Schedule getSchedule()","0","-","-","-","-"
"5483","setSchedule","public void setSchedule(final Schedule schedule)","0","-","-","-","-"
"5484","isHealthy","default boolean isHealthy()","0","-","-","-","-"
"5485","isHealthy","boolean isHealthy(@Nullable final String type);","0","-","-","-","-"
"5486","build","/**
     * Configures a health responder for responding to health check requests (e.g. from load balancer).
     *
     * @param healthStatusChecker   an interface that exposes the ability to check current status of health.
     * @param healthStateAggregator an interface that exposes the ability to check an aggregate view of all health
     *                              states.
     * @param mapper                A Jackson object mapper to allow writing JSON responses (if needed).
     */
    HealthResponseProvider build(HealthStatusChecker healthStatusChecker, HealthStateAggregator healthStateAggregator,
                                 ObjectMapper mapper);","0","-","-","-","-"
"5487","ServletHealthResponder","public ServletHealthResponder(final HealthResponseProvider healthResponseProvider,
                                  final boolean cacheControlEnabled, final String cacheControlValue)","0","-","-","-","-"
"5488","doGet","@Override
    protected void doGet(final HttpServletRequest request, final HttpServletResponse response) throws IOException","0","-","-","-","-"
"5489","healthResponse","@NonNull
    HealthResponse healthResponse(Map<String, Collection<String>> queryParams);","0","-","-","-","-"
"5490","JsonHealthResponseProvider","public JsonHealthResponseProvider(@NonNull final HealthStatusChecker healthStatusChecker,
                                      @NonNull final HealthStateAggregator healthStateAggregator,
                                      @NonNull final ObjectMapper mapper)","0","-","-","-","-"
"5491","healthResponse","@NonNull
    @Override
    public HealthResponse healthResponse(final Map<String, Collection<String>> queryParams)","0","-","-","-","-"
"5492","getNamesFromQueryParams","private Set<String> getNamesFromQueryParams(final Map<String, Collection<String>> queryParams)","0","-","-","-","-"
"5493","getViews","private Collection<HealthStateView> getViews(final Map<String, Collection<String>> queryParams)","0","-","-","-","-"
"5494","shouldReturnAllViews","private boolean shouldReturnAllViews(final Set<String> names)","0","-","-","-","-"
"5495","HealthResponse","public HealthResponse(boolean healthy, @NonNull final String message, @NonNull final String contentType,
                          int status)","0","-","-","-","-"
"5496","isHealthy","public boolean isHealthy()","0","-","-","-","-"
"5497","getMessage","@NonNull
    public String getMessage()","0","-","-","-","-"
"5498","getContentType","@NonNull
    public String getContentType()","0","-","-","-","-"
"5499","getStatus","public int getStatus()","0","-","-","-","-"
"5500","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"5501","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5502","toString","@Override
    public String toString()","0","-","-","-","-"
"5503","build","@Override
    public HealthResponseProvider build(final HealthStatusChecker healthStatusChecker,
                                        final HealthStateAggregator healthStateAggregator,
                                        final ObjectMapper mapper)","0","-","-","-","-"
"5504","isCacheControlEnabled","public boolean isCacheControlEnabled()","0","-","-","-","-"
"5505","setCacheControlEnabled","public void setCacheControlEnabled(boolean cacheControlEnabled)","0","-","-","-","-"
"5506","getCacheControlValue","public String getCacheControlValue()","0","-","-","-","-"
"5507","setCacheControlValue","public void setCacheControlValue(String cacheControlValue)","0","-","-","-","-"
"5508","configure","@Override
    public void configure(final String name, final Collection<String> healthCheckUrlPaths,
                          final HealthResponseProvider healthResponseProvider,
                          final HealthEnvironment health, final JerseyEnvironment jersey,
                          final ServletEnvironment servlets, final ObjectMapper mapper)","0","-","-","-","-"
"5509","configure","/**
     * Configures a health responder for responding to health check requests (e.g. from load balancer).
     *
     * @param name                   The name of the application.
     * @param healthCheckUrlPaths    The paths to expose a health check on.
     * @param healthResponseProvider A provider of responses to respond to requests with.
     * @param health                 The health environment.
     * @param jersey                 The Jersey environment.
     * @param servlets               The servlet environment.
     * @param mapper                 A Jackson object mapper to allow writing JSON responses (if needed).
     */
    void configure(final String name, final Collection<String> healthCheckUrlPaths,
                   final HealthResponseProvider healthResponseProvider, final HealthEnvironment health,
                   final JerseyEnvironment jersey, final ServletEnvironment servlets, final ObjectMapper mapper);","0","-","-","-","-"
"5510","HealthCheckManager","public HealthCheckManager(final List<HealthCheckConfiguration> configs,
                              final HealthCheckScheduler scheduler,
                              final MetricRegistry metrics,
                              final Duration shutdownWaitPeriod,
                              final boolean initialOverallState,
                              final Collection<HealthStateListener> healthStateListeners)","0","-","-","-","-"
"5511","setChecks","void setChecks(final Map<String, ScheduledHealthCheck> checks)","0","-","-","-","-"
"5512","onHealthCheckAdded","@Override
    public void onHealthCheckAdded(final String name, final HealthCheck healthCheck)","0","-","-","-","-"
"5513","onHealthCheckRemoved","@Override
    public void onHealthCheckRemoved(final String name, final HealthCheck healthCheck)","0","-","-","-","-"
"5514","onStateChanged","@Override
    public void onStateChanged(final String name, final boolean isNowHealthy)","0","-","-","-","-"
"5515","initializeAppHealth","protected void initializeAppHealth()","0","-","-","-","-"
"5516","calculateNumberOfHealthyChecks","private long calculateNumberOfHealthyChecks()","0","-","-","-","-"
"5517","calculateNumberOfUnhealthyChecks","private long calculateNumberOfUnhealthyChecks()","0","-","-","-","-"
"5518","handleCriticalHealthChange","private void handleCriticalHealthChange(final ScheduledHealthCheck healthCheck, final boolean isNowHealthy)","0","-","-","-","-"
"5519","updateCriticalStatus","private void updateCriticalStatus(final AtomicBoolean status, final int count)","0","-","-","-","-"
"5520","handleNonCriticalHealthChange","private void handleNonCriticalHealthChange(final ScheduledHealthCheck healthCheck, final boolean isNowHealthy)","0","-","-","-","-"
"5521","getAggregateHealthyName","String getAggregateHealthyName()","0","-","-","-","-"
"5522","getAggregateUnhealthyName","String getAggregateUnhealthyName()","0","-","-","-","-"
"5523","isHealthy","@Override
    public boolean isHealthy()","0","-","-","-","-"
"5524","isHealthy","@Override
    public boolean isHealthy(@Nullable String type)","0","-","-","-","-"
"5525","notifyShutdownStarted","@Override
    public void notifyShutdownStarted() throws Exception","0","-","-","-","-"
"5526","onHealthyCheck","@Override
    public void onHealthyCheck(final String healthCheckName)","0","-","-","-","-"
"5527","onUnhealthyCheck","@Override
    public void onUnhealthyCheck(final String healthCheckName)","0","-","-","-","-"
"5528","healthStateViews","@NonNull
    @Override
    public Collection<HealthStateView> healthStateViews()","0","-","-","-","-"
"5529","healthStateView","@NonNull
    @Override
    public Optional<HealthStateView> healthStateView(@NonNull final String name)","0","-","-","-","-"
"5530","HealthStateView","public HealthStateView(@NotNull final String name, boolean healthy, @NotNull final HealthCheckType type,
                           boolean critical)","0","-","-","-","-"
"5531","getName","public String getName()","0","-","-","-","-"
"5532","setName","public void setName(String name)","0","-","-","-","-"
"5533","isHealthy","public boolean isHealthy()","0","-","-","-","-"
"5534","setHealthy","public void setHealthy(boolean healthy)","0","-","-","-","-"
"5535","getType","public HealthCheckType getType()","0","-","-","-","-"
"5536","setType","public void setType(HealthCheckType type)","0","-","-","-","-"
"5537","isCritical","public boolean isCritical()","0","-","-","-","-"
"5538","setCritical","public void setCritical(boolean critical)","0","-","-","-","-"
"5539","equals","@Override
    public boolean equals(Object o)","0","-","-","-","-"
"5540","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5541","toString","@Override
    public String toString()","0","-","-","-","-"
"5542","compareTo","@Override
    public int compareTo(final HealthStateView other)","0","-","-","-","-"
"5543","getInitialDelay","public Duration getInitialDelay()","0","-","-","-","-"
"5544","setInitialDelay","public void setInitialDelay(Duration initialDelay)","0","-","-","-","-"
"5545","getCheckInterval","public Duration getCheckInterval()","0","-","-","-","-"
"5546","setCheckInterval","public void setCheckInterval(final Duration checkInterval)","0","-","-","-","-"
"5547","getDowntimeInterval","public Duration getDowntimeInterval()","0","-","-","-","-"
"5548","setDowntimeInterval","public void setDowntimeInterval(final Duration downtimeInterval)","0","-","-","-","-"
"5549","getFailureAttempts","public int getFailureAttempts()","0","-","-","-","-"
"5550","setFailureAttempts","public void setFailureAttempts(final int failureAttempts)","0","-","-","-","-"
"5551","getSuccessAttempts","public int getSuccessAttempts()","0","-","-","-","-"
"5552","setSuccessAttempts","public void setSuccessAttempts(final int successAttempts)","0","-","-","-","-"
"5553","equals","@Override
    public boolean equals(final Object o)","0","-","-","-","-"
"5554","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5555","HealthCheckScheduler","public HealthCheckScheduler(final ScheduledExecutorService executorService)","0","-","-","-","-"
"5556","scheduleInitial","void scheduleInitial(final ScheduledHealthCheck check)","0","-","-","-","-"
"5557","schedule","public void schedule(final ScheduledHealthCheck check, final boolean healthy)","0","-","-","-","-"
"5558","schedule","private void schedule(final ScheduledHealthCheck check, final Duration initialDelay, final Duration delay)","0","-","-","-","-"
"5559","unschedule","public void unschedule(final String name)","0","-","-","-","-"
"5560","configure","void configure(LifecycleEnvironment lifecycle, ServletEnvironment servlets, JerseyEnvironment jersey,
                   HealthEnvironment health, ObjectMapper mapper, String name);","0","-","-","-","-"
"5561","healthStateViews","@NonNull
    Collection<HealthStateView> healthStateViews();","0","-","-","-","-"
"5562","healthStateView","@NonNull
    Optional<HealthStateView> healthStateView(@NonNull String name);","0","-","-","-","-"
"5563","notifyShutdownStarted","void notifyShutdownStarted() throws Exception;","0","-","-","-","-"
"5564","isEnabled","public boolean isEnabled()","0","-","-","-","-"
"5565","setEnabled","public void setEnabled(boolean enabled)","0","-","-","-","-"
"5566","getHealthCheckConfigurations","@JsonProperty(""healthChecks"")
    public List<HealthCheckConfiguration> getHealthCheckConfigurations()","0","-","-","-","-"
"5567","setHealthCheckConfigurations","@JsonProperty(""healthChecks"")
    public void setHealthCheckConfigurations(final List<HealthCheckConfiguration> healthChecks)","0","-","-","-","-"
"5568","isInitialOverallState","public boolean isInitialOverallState()","0","-","-","-","-"
"5569","setInitialOverallState","public void setInitialOverallState(boolean initialOverallState)","0","-","-","-","-"
"5570","isDelayedShutdownHandlerEnabled","public boolean isDelayedShutdownHandlerEnabled()","0","-","-","-","-"
"5571","setDelayedShutdownHandlerEnabled","public void setDelayedShutdownHandlerEnabled(final boolean delayedShutdownHandlerEnabled)","0","-","-","-","-"
"5572","getShutdownWaitPeriod","public Duration getShutdownWaitPeriod()","0","-","-","-","-"
"5573","setShutdownWaitPeriod","public void setShutdownWaitPeriod(final Duration shutdownWaitPeriod)","0","-","-","-","-"
"5574","getHealthCheckUrlPaths","public List<String> getHealthCheckUrlPaths()","0","-","-","-","-"
"5575","setHealthCheckUrlPaths","public void setHealthCheckUrlPaths(final List<String> healthCheckUrlPaths)","0","-","-","-","-"
"5576","getHealthResponseProviderFactory","public HealthResponseProviderFactory getHealthResponseProviderFactory()","0","-","-","-","-"
"5577","setHealthResponseProviderFactory","public void setHealthResponseProviderFactory(HealthResponseProviderFactory healthResponseProviderFactory)","0","-","-","-","-"
"5578","getHealthResponderFactory","public HealthResponderFactory getHealthResponderFactory()","0","-","-","-","-"
"5579","setHealthResponderFactory","public void setHealthResponderFactory(HealthResponderFactory healthResponderFactory)","0","-","-","-","-"
"5580","configure","@Override
    public void configure(final LifecycleEnvironment lifecycle, final ServletEnvironment servlets,
                          final JerseyEnvironment jersey, final HealthEnvironment health, final ObjectMapper mapper,
                          final String name)","0","-","-","-","-"
"5581","createScheduledExecutorForHealthChecks","private ScheduledExecutorService createScheduledExecutorForHealthChecks(
            final int numberOfScheduledHealthChecks,
            final MetricRegistry metrics,
            final LifecycleEnvironment lifecycle,
            final String fullName)","0","-","-","-","-"
"5582","DelayedShutdownHandler","public DelayedShutdownHandler(final ShutdownNotifier shutdownNotifier)","0","-","-","-","-"
"5583","register","public void register()","0","-","-","-","-"
"5584","doStop","@Override
    protected void doStop() throws Exception","0","-","-","-","-"
"5585","onHealthyCheck","void onHealthyCheck(String healthCheckName);","0","-","-","-","-"
"5586","onUnhealthyCheck","void onUnhealthyCheck(String healthCheckName);","0","-","-","-","-"
"5587","onStateChanged","void onStateChanged(String healthCheckName, boolean healthy);","0","-","-","-","-"
"5588","ScheduledHealthCheck","ScheduledHealthCheck(final String name,
                         final HealthCheckType type,
                         final boolean critical,
                         final HealthCheck healthCheck,
                         final Schedule schedule,
                         final State state,
                         final Counter healthyCheckCounter,
                         final Counter unhealthyCheckCounter)","0","-","-","-","-"
"5589","getName","public String getName()","0","-","-","-","-"
"5590","getType","public HealthCheckType getType()","0","-","-","-","-"
"5591","isCritical","public boolean isCritical()","0","-","-","-","-"
"5592","getSchedule","public Schedule getSchedule()","0","-","-","-","-"
"5593","isHealthy","public boolean isHealthy()","0","-","-","-","-"
"5594","isPreviouslyRecovered","public boolean isPreviouslyRecovered()","0","-","-","-","-"
"5595","run","@Override
    public void run()","0","-","-","-","-"
"5596","view","public HealthStateView view()","0","-","-","-","-"
"5597","equals","@Override
    public boolean equals(final Object o)","0","-","-","-","-"
"5598","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5599","toString","@Override
    public String toString()","0","-","-","-","-"
"5600","getCounterString","private String getCounterString(Counter counter)","0","-","-","-","-"
"5601","State","/**
     * Creates instance that is used to track state of a health check.
     *
     * @param name                    name of health check
     * @param failureAttempts         the threshold of consecutive failed attempts needed to mark a dependency as unhealthy
     *                                (from a healthy state)
     * @param successAttempts         the threshold of consecutive successful attempts needed to mark a dependency as healthy
     *                                (from an unhealthy state)
     * @param initialState            initial state (","0","-","-","-","-"
"5602","success","void success()","0","-","-","-","-"
"5603","failure","void failure()","0","-","-","-","-"
"5604","handleEvent","private void handleEvent(final int numAttempts, final boolean result)","0","-","-","-","-"
"5605","resetCount","private void resetCount()","0","-","-","-","-"
"5606","getHealthy","AtomicBoolean getHealthy()","0","-","-","-","-"
"5607","equals","@Override
    public boolean equals(final Object o)","0","-","-","-","-"
"5608","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5609","toString","@Override
    public String toString()","0","-","-","-","-"
"5610","TcpHealthCheck","public TcpHealthCheck(@NonNull final String host,
                          final int port)","0","-","-","-","-"
"5611","TcpHealthCheck","public TcpHealthCheck(@NonNull final String host,
                          final int port,
                          final Duration connectionTimeout)","0","-","-","-","-"
"5612","check","@Override
    protected Result check() throws IOException","0","-","-","-","-"
"5613","tcpCheck","/**
     * Performs a health check via TCP against an external dependency.
     * By default, uses the Java","0","-","-","-","-"
"5614","getConnectionTimeout","Duration getConnectionTimeout()","0","-","-","-","-"
"5615","HttpHealthResponse","public HttpHealthResponse(final int status, @NonNull final String body)","0","-","-","-","-"
"5616","getStatus","public int getStatus()","0","-","-","-","-"
"5617","getBody","@NonNull
    public String getBody()","0","-","-","-","-"
"5618","equals","@Override
    public boolean equals(final Object other)","0","-","-","-","-"
"5619","hashCode","@Override
    public int hashCode()","0","-","-","-","-"
"5620","toString","@Override
    public String toString()","0","-","-","-","-"
"5621","HttpHealthCheck","public HttpHealthCheck(@NonNull final String url)","0","-","-","-","-"
"5622","HttpHealthCheck","public HttpHealthCheck(@NonNull final String url,
                           final Duration readTimeout,
                           final Duration connectionTimeout)","0","-","-","-","-"
"5623","HttpHealthCheck","public HttpHealthCheck(@NonNull final String url,
                           @NonNull final Client client)","0","-","-","-","-"
"5624","check","@Override
    protected Result check()","0","-","-","-","-"
"5625","httpCheck","/**
     * Performs a health check via HTTP against an external dependency.
     * By default uses the Jersey 2 HTTP client, but can be overridden to allow for different behavior.
     *
     * @param url the URL to check.
     * @return response from the health check.
     */
    protected HttpHealthResponse httpCheck(final String url)","0","-","-","-","-"
"5626","isHealthResponseValid","/**
     * Validates the response from the health check.
     * By default checks if the response status is 2xx.
     *
     * @param httpHealthResponse The response resulting from the http health check.
     * @return healthiness flag.
     */
    protected boolean isHealthResponseValid(final HttpHealthResponse httpHealthResponse)","0","-","-","-","-"
"5627","HealthEnvironment","public HealthEnvironment(final HealthCheckRegistry healthCheckRegistry)","0","-","-","-","-"
"5628","addHealthStateListener","public void addHealthStateListener(final HealthStateListener listener)","0","-","-","-","-"
"5629","healthChecks","@NonNull
    public HealthCheckRegistry healthChecks()","0","-","-","-","-"
"5630","healthStateListeners","@NonNull
    public Collection<HealthStateListener> healthStateListeners()","0","-","-","-","-"
"5631","healthStateAggregator","@NonNull
    public HealthStateAggregator healthStateAggregator()","0","-","-","-","-"
"5632","setHealthStateAggregator","void setHealthStateAggregator(@NonNull final HealthStateAggregator healthStateAggregator)","0","-","-","-","-"
"5633","HealthCheckConfigValidator","public HealthCheckConfigValidator(List<HealthCheckConfiguration> configs, HealthCheckRegistry registry)","0","-","-","-","-"
"5634","start","@Override
    public void start() throws Exception","0","-","-","-","-"
"5635","validateConfiguration","private void validateConfiguration(final List<HealthCheckConfiguration> healthCheckConfigs,
                                       final Set<String> registeredHealthCheckNames)","0","-","-","-","-"
"5636","builder","@Override
        protected GraphiteReporter.Builder builder(MetricRegistry registry)","0","-","-","-","-"
"5637","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"5638","createDefaultFactory","@Test
    void createDefaultFactory() throws Exception","0","-","-","-","-"
"5639","testNoAddressResolutionForGraphite","@Test
    void testNoAddressResolutionForGraphite()","0","-","-","-","-"
"5640","testCorrectTransportForGraphiteUDP","@Test
    void testCorrectTransportForGraphiteUDP()","0","-","-","-","-"
"5641","getHost","@JsonProperty
    public String getHost()","0","-","-","-","-"
"5642","setHost","@JsonProperty
    public void setHost(String host)","0","-","-","-","-"
"5643","getPort","@JsonProperty
    public int getPort()","0","-","-","-","-"
"5644","setPort","@JsonProperty
    public void setPort(int port)","0","-","-","-","-"
"5645","getPrefix","@JsonProperty
    public String getPrefix()","0","-","-","-","-"
"5646","setPrefix","@JsonProperty
    public void setPrefix(String prefix)","0","-","-","-","-"
"5647","getTransport","@JsonProperty
    public String getTransport()","0","-","-","-","-"
"5648","setTransport","@JsonProperty
    public void setTransport(String transport)","0","-","-","-","-"
"5649","build","@Override
    public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
"5650","builder","protected GraphiteReporter.Builder builder(MetricRegistry registry)","0","-","-","-","-"
"5651","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5652","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5653","testClient","@Test
    void testClient() throws Exception","0","-","-","-","-"
"5654","testManyCalls","@Test
    void testManyCalls() throws Exception","0","-","-","-","-"
"5655","run","@Override
        public void run(Configuration configuration, Environment environment)","0","-","-","-","-"
"5656","get","@GET
            public String get()","0","-","-","-","-"
"5657","getPath","@JsonProperty
    public String getPath()","0","-","-","-","-"
"5658","setPath","@JsonProperty
    public void setPath(String path)","0","-","-","-","-"
"5659","build","@Override
    public Connector build(Server server,
                           MetricRegistry metrics,
                           String name,
                           @Nullable ThreadPool threadPool)","0","-","-","-","-"
"5660","httpConnections","@Override
    protected String httpConnections()","0","-","-","-","-"
"5661","testSetDefaultHttp2Cipher","@Test
    void testSetDefaultHttp2Cipher()","0","-","-","-","-"
"5662","testCustomCiphersAreSupported","@Test
    void testCustomCiphersAreSupported()","0","-","-","-","-"
"5663","testThrowExceptionIfDefaultCipherIsNotSet","@Test
    void testThrowExceptionIfDefaultCipherIsNotSet()","0","-","-","-","-"
"5664","run","@Override
    public void run(Configuration configuration, Environment environment) throws Exception","0","-","-","-","-"
"5665","check","@Override
            protected Result check() throws Exception","0","-","-","-","-"
"5666","get","@GET
        public String get() throws Exception","0","-","-","-","-"
"5667","testHttp1WithCustomCipher","@Test
    void testHttp1WithCustomCipher() throws Exception","0","-","-","-","-"
"5668","testHttp2WithCustomCipher","@Test
    void testHttp2WithCustomCipher() throws Exception","0","-","-","-","-"
"5669","testHttp1","@Test
    void testHttp1() throws Exception","0","-","-","-","-"
"5670","testHttp2","@Test
    void testHttp2() throws Exception","0","-","-","-","-"
"5671","testHttp2ManyRequests","@Test
    void testHttp2ManyRequests() throws Exception","0","-","-","-","-"
"5672","testHttp1WithCustomCipher","@Test
    void testHttp1WithCustomCipher() throws Exception","0","-","-","-","-"
"5673","testHttp2WithCustomCipher","@Test
    void testHttp2WithCustomCipher() throws Exception","0","-","-","-","-"
"5674","setUp","@BeforeEach
    @Override
    void setUp() throws Exception","0","-","-","-","-"
"5675","tearDown","@AfterEach
    @Override
    void tearDown() throws Exception","0","-","-","-","-"
"5676","testHttp1","@Test
    void testHttp1() throws Exception","0","-","-","-","-"
"5677","testHttp2c","@Test
    void testHttp2c() throws Exception","0","-","-","-","-"
"5678","testHttp2cManyRequests","@Test
    void testHttp2cManyRequests() throws Exception","0","-","-","-","-"
"5679","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5680","tearDown","@AfterEach
    void tearDown() throws Exception","0","-","-","-","-"
"5681","assertResponse","static void assertResponse(ContentResponse response, HttpVersion httpVersion)","0","-","-","-","-"
"5682","performManyAsyncRequests","static boolean performManyAsyncRequests(HttpClient client, String url) throws InterruptedException","0","-","-","-","-"
"5683","onComplete","@Override
                        public void onComplete(Result result)","0","-","-","-","-"
"5684","getMaxConcurrentStreams","@JsonProperty
    public int getMaxConcurrentStreams()","0","-","-","-","-"
"5685","setMaxConcurrentStreams","@JsonProperty
    public void setMaxConcurrentStreams(int maxConcurrentStreams)","0","-","-","-","-"
"5686","getInitialStreamRecvWindow","@JsonProperty
    public int getInitialStreamRecvWindow()","0","-","-","-","-"
"5687","setInitialStreamRecvWindow","@JsonProperty
    public void setInitialStreamRecvWindow(int initialStreamRecvWindow)","0","-","-","-","-"
"5688","build","@Override
    public Connector build(Server server, MetricRegistry metrics, String name, @Nullable ThreadPool threadPool)","0","-","-","-","-"
"5689","checkSupportedCipherSuites","void checkSupportedCipherSuites()","0","-","-","-","-"
"5690","getMaxConcurrentStreams","@JsonProperty
    public int getMaxConcurrentStreams()","0","-","-","-","-"
"5691","setMaxConcurrentStreams","@JsonProperty
    public void setMaxConcurrentStreams(int maxConcurrentStreams)","0","-","-","-","-"
"5692","getInitialStreamRecvWindow","@JsonProperty
    public int getInitialStreamRecvWindow()","0","-","-","-","-"
"5693","setInitialStreamRecvWindow","@JsonProperty
    public void setInitialStreamRecvWindow(int initialStreamRecvWindow)","0","-","-","-","-"
"5694","build","@Override
    public Connector build(Server server, MetricRegistry metrics, String name, @Nullable ThreadPool threadPool)","0","-","-","-","-"
"5695","data","static Stream<Arguments> data()","0","-","-","-","-"
"5696","build","@Override
        public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
"5697","testDefaultMatching","@ParameterizedTest
    @MethodSource(""data"")
    void testDefaultMatching(Set<String> includes, Set<String> excludes, String name,
                                    boolean expectedDefaultResult, boolean expectedRegexResult,
                                    boolean expectedSubstringResult, String msg)","0","-","-","-","-"
"5698","testRegexMatching","@ParameterizedTest
    @MethodSource(""data"")
    void testRegexMatching(Set<String> includes, Set<String> excludes, String name,
                                  boolean expectedDefaultResult, boolean expectedRegexResult,
                                  boolean expectedSubstringResult, String msg)","0","-","-","-","-"
"5699","tesSubstringMatching","@ParameterizedTest
    @MethodSource(""data"")
    void tesSubstringMatching(Set<String> includes, Set<String> excludes, String name,
                                     boolean expectedDefaultResult, boolean expectedRegexResult,
                                     boolean expectedSubstringResult, String msg)","0","-","-","-","-"
"5700","isDiscoverable","@Test
    void isDiscoverable() throws Exception","0","-","-","-","-"
"5701","testStopWithoutReporting","@Test
    void testStopWithoutReporting() throws Exception","0","-","-","-","-"
"5702","testStopWithReporting","@Test
    void testStopWithReporting() throws Exception","0","-","-","-","-"
"5703","isDiscoverable","@Test
    void isDiscoverable() throws Exception","0","-","-","-","-"
"5704","setUp","@BeforeEach
    void setUp()","0","-","-","-","-"
"5705","isDiscoverable","@Test
    void isDiscoverable()","0","-","-","-","-"
"5706","directoryCreatedOnStartup","@Test
    void directoryCreatedOnStartup() throws Exception","0","-","-","-","-"
"5707","data","public static Stream<Arguments> data()","0","-","-","-","-"
"5708","build","@Override
        public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
"5709","testGetDisabledAttributes","@ParameterizedTest
    @MethodSource(""data"")
    void testGetDisabledAttributes(EnumSet<MetricAttribute> includes, EnumSet<MetricAttribute> excludes,
                                          EnumSet<MetricAttribute> expectedResult)","0","-","-","-","-"
"5710","setUp","@BeforeEach
    void setUp() throws Exception","0","-","-","-","-"
"5711","hasADefaultFrequency","@Test
    void hasADefaultFrequency()","0","-","-","-","-"
"5712","hasReporters","@Test
    void hasReporters()","0","-","-","-","-"
"5713","canReadExcludedAndIncludedAttributes","@Test
    void canReadExcludedAndIncludedAttributes()","0","-","-","-","-"
"5714","canReadDefaultExcludedAndIncludedAttributes","@Test
    void canReadDefaultExcludedAndIncludedAttributes()","0","-","-","-","-"
"5715","reportOnStopFalseByDefault","@Test
    void reportOnStopFalseByDefault()","0","-","-","-","-"
"5716","reportOnStopCanBeTrue","@Test
    void reportOnStopCanBeTrue() throws Exception","0","-","-","-","-"
"5717","getLoggerName","@JsonProperty(""logger"")
    public String getLoggerName()","0","-","-","-","-"
"5718","setLoggerName","@JsonProperty(""logger"")
    public void setLoggerName(String loggerName)","0","-","-","-","-"
"5719","getLogger","public Logger getLogger()","0","-","-","-","-"
"5720","getMarkerName","@JsonProperty
    @Nullable
    public String getMarkerName()","0","-","-","-","-"
"5721","setMarkerName","@JsonProperty
    public void setMarkerName(@Nullable String markerName)","0","-","-","-","-"
"5722","build","@Override
    public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
"5723","containsMatch","@Override
    public boolean containsMatch(Set<String> matchExpressions, String metricName)","0","-","-","-","-"
"5724","containsMatch","boolean containsMatch(Set<String> matchExpressions, String metricName);","0","-","-","-","-"
"5725","getDurationUnit","public TimeUnit getDurationUnit()","0","-","-","-","-"
"5726","setDurationUnit","@JsonProperty
    public void setDurationUnit(TimeUnit durationUnit)","0","-","-","-","-"
"5727","getRateUnit","@JsonProperty
    public TimeUnit getRateUnit()","0","-","-","-","-"
"5728","setRateUnit","@JsonProperty
    public void setRateUnit(final TimeUnit rateUnit)","0","-","-","-","-"
"5729","getIncludes","@JsonProperty
    public Set<String> getIncludes()","0","-","-","-","-"
"5730","setIncludes","@JsonProperty
    public void setIncludes(Set<String> includes)","0","-","-","-","-"
"5731","getExcludes","@JsonProperty
    public Set<String> getExcludes()","0","-","-","-","-"
"5732","setExcludes","@JsonProperty
    public void setExcludes(Set<String> excludes)","0","-","-","-","-"
"5733","getFrequency","@Override
    @JsonProperty
    public Optional<Duration> getFrequency()","0","-","-","-","-"
"5734","setFrequency","@JsonProperty
    public void setFrequency(Optional<Duration> frequency)","0","-","-","-","-"
"5735","getUseRegexFilters","@JsonProperty
    public boolean getUseRegexFilters()","0","-","-","-","-"
"5736","setUseRegexFilters","@JsonProperty
    public void setUseRegexFilters(boolean useRegexFilters)","0","-","-","-","-"
"5737","getUseSubstringMatching","@JsonProperty
    public boolean getUseSubstringMatching()","0","-","-","-","-"
"5738","setUseSubstringMatching","@JsonProperty
    public void setUseSubstringMatching(boolean useSubstringMatching)","0","-","-","-","-"
"5739","getExcludesAttributes","@JsonProperty
    public EnumSet<MetricAttribute> getExcludesAttributes()","0","-","-","-","-"
"5740","setExcludesAttributes","@JsonProperty
    public void setExcludesAttributes(EnumSet<MetricAttribute> excludesAttributes)","0","-","-","-","-"
"5741","getIncludesAttributes","@JsonProperty
    public EnumSet<MetricAttribute> getIncludesAttributes()","0","-","-","-","-"
"5742","setIncludesAttributes","@JsonProperty
    public void setIncludesAttributes(EnumSet<MetricAttribute> includesAttributes)","0","-","-","-","-"
"5743","getFilter","/**
     * Gets a","0","-","-","-","-"
"5744","getDisabledAttributes","protected Set<MetricAttribute> getDisabledAttributes()","0","-","-","-","-"
"5745","getReporters","@JsonProperty
    public List<ReporterFactory> getReporters()","0","-","-","-","-"
"5746","setReporters","@JsonProperty
    public void setReporters(List<ReporterFactory> reporters)","0","-","-","-","-"
"5747","getFrequency","@JsonProperty
    public Duration getFrequency()","0","-","-","-","-"
"5748","setFrequency","@JsonProperty
    public void setFrequency(Duration frequency)","0","-","-","-","-"
"5749","isReportOnStop","/**
     * @since 2.0
     */
    @JsonProperty
    public boolean isReportOnStop()","0","-","-","-","-"
"5750","setReportOnStop","/**
     * @since 2.0
     */
    @JsonProperty
    public void setReportOnStop(boolean reportOnStop)","0","-","-","-","-"
"5751","configure","/**
     * Configures the given lifecycle with the","0","-","-","-","-"
"5752","toString","@Override
    public String toString()","0","-","-","-","-"
"5753","getFrequency","/**
     * Returns the frequency for reporting metrics.
     *
     * @return the frequency for reporting metrics.
     */
    Optional<Duration> getFrequency();","0","-","-","-","-"
"5754","build","/**
     * Configures and builds a","0","-","-","-","-"
"5755","getFile","@JsonProperty
    @Nullable
    public File getFile()","0","-","-","-","-"
"5756","setFile","@JsonProperty
    public void setFile(@Nullable File file)","0","-","-","-","-"
"5757","build","@Override
    public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
"5758","containsMatch","@Override
    public boolean containsMatch(Set<String> matchExpressions, String metricName)","0","-","-","-","-"
"5759","ScheduledReporterManager","/**
     * Manages the given","0","-","-","-","-"
"5760","ScheduledReporterManager","/**
     * Manages the given","0","-","-","-","-"
"5761","start","/**
     * Begins reporting metrics using the configured","0","-","-","-","-"
"5762","stop","/**
     * Stops the configured","0","-","-","-","-"
"5763","RegexStringMatchingStrategy","RegexStringMatchingStrategy()","0","-","-","-","-"
"5764","containsMatch","@Override
    public boolean containsMatch(Set<String> matchExpressions, String metricName)","0","-","-","-","-"
"5765","getLocale","@JsonProperty
    public Locale getLocale()","0","-","-","-","-"
"5766","setLocale","@JsonProperty
    public void setLocale(Locale locale)","0","-","-","-","-"
"5767","get","public PrintStream get()","0","-","-","-","-"
"5768","getTimeZone","@JsonProperty
    public TimeZone getTimeZone()","0","-","-","-","-"
"5769","setTimeZone","@JsonProperty
    public void setTimeZone(TimeZone timeZone)","0","-","-","-","-"
"5770","getOutput","@JsonProperty
    public ConsoleStream getOutput()","0","-","-","-","-"
"5771","setOutput","@JsonProperty
    public void setOutput(ConsoleStream stream)","0","-","-","-","-"
"5772","build","@Override
    public ScheduledReporter build(MetricRegistry registry)","0","-","-","-","-"
