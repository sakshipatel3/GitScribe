"Index","Method Name","Method Signature","Commit Count","Change Types","Commit Message","Commit ID","Commit Author"
"1","testBlank","testBlank","1","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2","testTextBean","testTextBean","2","Body Change","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"3","testTextBean","testTextBean","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"4","testSplitText","testSplitText","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"5","testSplitText","testSplitText","2","Body Change, Introduced, MultiChange","Implemented TextNode.splitText
","c114eb0589d947dfe6f047c546380c3cfe413453","Jonathan Hedley"
"6","testSplitAnEmbolden","testSplitAnEmbolden","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"7","testSplitAnEmbolden","testSplitAnEmbolden","2","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"8","testSplitTextValidation","testSplitTextValidation","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"9","testSplitTextValidation","testSplitTextValidation","2","Body Change, Exceptions Change, Introduced, MultiChange","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"10","testWithSupplementaryCharacter","testWithSupplementaryCharacter","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"11","testWithSupplementaryCharacter","testWithSupplementaryCharacter","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/mingfai/jsoup into mingfai-master
","aa812e42a784bb551e3cda70078c2c1ed6147b20","Jonathan Hedley"
"12","testLeadNodesHaveNoChildren","testLeadNodesHaveNoChildren","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"13","testLeadNodesHaveNoChildren","testLeadNodesHaveNoChildren","2","Body Change, Introduced, MultiChange","Leaf nodes should return an empty list on .childNodes(), not except

Fixes #1032
","1028b37a1dfbc5dda7b18cbe692ab168c54fb505","Jonathan Hedley"
"14","testSpaceNormalise","testSpaceNormalise","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"15","testSpaceNormalise","testSpaceNormalise","2","Body Change, Introduced, MultiChange","Fix TextNode.outerHtml normalization for orhpans

Fixes #1309
","128008e29c33cf6b3b20fde8f2bbd13ead98509c","Jonathan Hedley"
"16","testClone","testClone","3","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"17","testClone","testClone","3","Body Change, Introduced, MultiChange","Implemented TextNode.splitText
","c114eb0589d947dfe6f047c546380c3cfe413453","Jonathan Hedley"
"18","testClone","testClone","3","Body Change","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"19","testCloneAfterAttributesHit","testCloneAfterAttributesHit","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"20","testHasTextWhenIterating","testHasTextWhenIterating","1","Body Change, Introduced, MultiChange","Test for #1170 text node content

No repro.
","50fae5bf22955a0b34f512cac9bf77c71257c889","Jonathan Hedley"
"21","createFromEncoded","createFromEncoded","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"22","createFromEncoded","createFromEncoded","2","Body Change, Introduced, MultiChange","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"23","normaliseWhitespace","normaliseWhitespace","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"24","normaliseWhitespace","normaliseWhitespace","2","Body Change, Introduced, MultiChange","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"25","stripLeadingWhitespace","stripLeadingWhitespace","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"26","stripLeadingWhitespace","stripLeadingWhitespace","2","Body Change, Introduced, MultiChange","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"27","leafNodeAttributes","leafNodeAttributes","2","File Renamed","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"28","leafNodeAttributes","leafNodeAttributes","2","Body Change, Introduced, MultiChange","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"29","doesNotGetAttributesTooEasily","doesNotGetAttributesTooEasily","1","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"30","main","main","3","Exceptions Change","Moved entity data from resource to .class

Fixes #959 and other issues impacting Android (like crashing on first run after install)
","f3035cafbbd8830de75f641920f8e5dbf0070f7c","Jonathan Hedley"
"31","main","main","3","Exceptions Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"32","main","main","3","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"33","persist","persist","1","Body Change","Moved entity data from resource to .class

Fixes #959 and other issues impacting Android (like crashing on first run after install)
","f3035cafbbd8830de75f641920f8e5dbf0070f7c","Jonathan Hedley"
"34","compare","compare","1","Body Change","Use Comparator factory methods
","00f831840d845d5e221d44ba5d0dfac1a41fdbca","Isira Seneviratne"
"35","html","html","2","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"36","html","html","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"37","testIteratorRemovable","testIteratorRemovable","2","Body Change, Introduced, MultiChange","Changelog and tweak for #755
","a79d5e287a40634f0e41ee8371a742f57245d4bd","Jonathan Hedley"
"38","testIteratorRemovable","testIteratorRemovable","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"39","testIteratorUpdateable","testIteratorUpdateable","1","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"40","testIteratorHasNext","testIteratorHasNext","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"41","testIteratorHasNext","testIteratorHasNext","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"42","testIterator","testIterator","2","Body Change, Introduced, MultiChange","Merge branch 'attributes-iterator-optim' of https://github.com/benbenw/jsoup
","01779db81c28933f4bffbfb2d530937a96a23b84","Jonathan Hedley"
"43","testIterator","testIterator","2","Body Change","Remove attributes using iterator to avoid CMEs.

Fixes #759
","2c58e975ab00eb369ee3dfbba07a4a78a1ef9e19","Jonathan Hedley"
"44","testIteratorSkipsInternal","testIteratorSkipsInternal","1","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"45","iteratorThrows","iteratorThrows","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"46","iteratorThrows","iteratorThrows","2","Body Change, Exceptions Change, Introduced, MultiChange","Make Attributes iterator throw NoSuchElementException

Once drained
","4669e14039a976644e8fcd53bed422b11d32dfeb","Jonathan Hedley"
"47","testListSkipsInternal","testListSkipsInternal","1","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"48","htmlSkipsInternals","htmlSkipsInternals","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"49","htmlSkipsInternals","htmlSkipsInternals","2","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"50","testIteratorEmpty","testIteratorEmpty","2","Body Change, Introduced, MultiChange","Merge branch 'attributes-iterator-optim' of https://github.com/benbenw/jsoup
","01779db81c28933f4bffbfb2d530937a96a23b84","Jonathan Hedley"
"51","testIteratorEmpty","testIteratorEmpty","2","Body Change","Remove attributes using iterator to avoid CMEs.

Fixes #759
","2c58e975ab00eb369ee3dfbba07a4a78a1ef9e19","Jonathan Hedley"
"52","testIteratorRemove","testIteratorRemove","1","Body Change, Introduced, MultiChange","Check for concurrent modifications outside of the Attribute Iterator

Fails fast if an attribute is removed outside of Iterator#remove() while iterating.

Closes #2002
","91b630f86b5ca0f3540ed0347029cb52c3228ad9","Jonathan Hedley"
"53","testIteratorRemoveConcurrentException","testIteratorRemoveConcurrentException","1","Body Change, Introduced, MultiChange","Check for concurrent modifications outside of the Attribute Iterator

Fails fast if an attribute is removed outside of Iterator#remove() while iterating.

Closes #2002
","91b630f86b5ca0f3540ed0347029cb52c3228ad9","Jonathan Hedley"
"54","removeCaseSensitive","removeCaseSensitive","1","Body Change, Introduced, MultiChange","Remove attributes using iterator to avoid CMEs.

Fixes #759
","2c58e975ab00eb369ee3dfbba07a4a78a1ef9e19","Jonathan Hedley"
"55","testSetKeyConsistency","testSetKeyConsistency","1","Body Change, Introduced, MultiChange","Add unit test (but no fix) for 883 (#893)

","32af6ba9f1b15f89660645a7a27f89517a0890c6","Erich Schubert"
"56","testBoolean","testBoolean","3","Body Change, Introduced, MultiChange","Added Attribute#hasValue, Attributes#hasValue(key)
","2080cbb75a2746123eb89db2bd9f923e7c109e15","Jonathan Hedley"
"57","testBoolean","testBoolean","3","Body Change","Renamed hasKey to hasKeyWithDefinedValue

For clarity -- it's checking the value of the specified key -- it's not scanning for an attribute with that value.
","6f2fd07c9a0035e796e7b549598f13563a1a7d7d","Jonathan Hedley"
"58","testBoolean","testBoolean","3","Body Change","Updated to Attributes#hasDeclaredValueForKey
","528ba552b19ab2ae949feecb373ef85a0b126566","jhy"
"59","testSizeWhenHasInternal","testSizeWhenHasInternal","3","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"60","testSizeWhenHasInternal","testSizeWhenHasInternal","3","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"61","testSizeWhenHasInternal","testSizeWhenHasInternal","3","Body Change","Update Attributes.size() to be O(1) vs O(n)

We were excluding internalKeys from the size, but that meant scanning through the keys array on every invocation.

Updated to reflect the total size instead - can use asList.size() for the non-internal count if ever actually required. Internal keys are seldom used (base URL on document is only current use) so low impact change.

Preferred this than adding another int to track and other methods - keeps object size to 24 bytes.
","ab34da41de20717b3e556d5562143c918cc02fbc","Jonathan Hedley"
"62","testBooleans","testBooleans","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"63","testBooleans","testBooleans","2","Body Change, Introduced, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"64","booleanNullAttributesConsistent","booleanNullAttributesConsistent","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"65","booleanNullAttributesConsistent","booleanNullAttributesConsistent","2","Body Change, Introduced, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"66","booleanEmptyString","booleanEmptyString","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"67","booleanEmptyString","booleanEmptyString","2","Body Change, Introduced, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"68","booleanCaseInsensitive","booleanCaseInsensitive","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"69","booleanCaseInsensitive","booleanCaseInsensitive","2","Body Change, Introduced, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"70","equalsIsOrderInsensitive","equalsIsOrderInsensitive","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"71","equalsIsOrderInsensitive","equalsIsOrderInsensitive","2","Body Change, Introduced, MultiChange","Attribute::equals should not be order sensitive

Fixes #1492
","c5bab9175c628558eb0abbdb205e0b9903bec9e1","jhy"
"72","cloneAttributes","cloneAttributes","2","File Renamed","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"73","cloneAttributes","cloneAttributes","2","Body Change, Introduced, MultiChange","Perf tweaks for #1695
","d0df41957bb9f1530c9cb6678e2b59fa8926ae81","Jonathan Hedley"
"74","handlesBaseUri","handlesBaseUri","2","Body Change","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"75","handlesBaseUri","handlesBaseUri","2","Body Change","Removed StartTag
","3205f0ef9409bb622f66315983830aa89d9313cf","Jonathan Hedley"
"76","setBaseUriIsRecursive","setBaseUriIsRecursive","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"77","setBaseUriIsRecursive","setBaseUriIsRecursive","3","Body Change, Introduced, MultiChange","Act on only the first base href in parse.

And make node.setBaseUri() recurse down to descendants.
","1e84edbe208aab0c9330eadc50f9773d81d70cd6","Jonathan Hedley"
"78","setBaseUriIsRecursive","setBaseUriIsRecursive","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"79","handlesAbsPrefix","handlesAbsPrefix","1","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"80","handlesAbsOnImage","handlesAbsOnImage","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"81","handlesAbsOnImage","handlesAbsOnImage","3","Body Change, Introduced, MultiChange","Test to confirm that abs URL method works on img src attributes.
","c8807e900cb66f83a5d1f28d02e55528ff6d67ba","Jonathan Hedley"
"82","handlesAbsOnImage","handlesAbsOnImage","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"83","handlesAbsPrefixOnHasAttr","handlesAbsPrefixOnHasAttr","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"84","handlesAbsPrefixOnHasAttr","handlesAbsPrefixOnHasAttr","3","Body Change, Introduced, MultiChange","Improved ""abs:"" absolute URL handling in Elements.attr(""abs:href"") and Node.hasAttr(""abs:href"").

Fixes #97
","411c01ff53f56f0b84bee210ad75c8c2114efa55","Jonathan Hedley"
"85","handlesAbsPrefixOnHasAttr","handlesAbsPrefixOnHasAttr","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"86","literalAbsPrefix","literalAbsPrefix","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"87","literalAbsPrefix","literalAbsPrefix","2","Body Change, Introduced, MultiChange","Improved ""abs:"" absolute URL handling in Elements.attr(""abs:href"") and Node.hasAttr(""abs:href"").

Fixes #97
","411c01ff53f56f0b84bee210ad75c8c2114efa55","Jonathan Hedley"
"88","handleAbsOnFileUris","handleAbsOnFileUris","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"89","handleAbsOnFileUris","handleAbsOnFileUris","2","Body Change, Introduced, MultiChange","Added test to verify absolute URLs for file:// URIs

Fixes #255
","fd12d272397fc04da34beac8c8f6e3faae81583f","Jonathan Hedley"
"90","handleAbsOnLocalhostFileUris","handleAbsOnLocalhostFileUris","1","Body Change, Introduced, MultiChange","Added test to verify absolute URLs for file:// URIs

Fixes #255
","fd12d272397fc04da34beac8c8f6e3faae81583f","Jonathan Hedley"
"91","handlesAbsOnProtocolessAbsoluteUris","handlesAbsOnProtocolessAbsoluteUris","1","Body Change, Introduced, MultiChange","Test that hostless URIs resolve to absolute URLs correctly.
","73f0278e5b5e938ffaef897a565a94db95df70b6","Jonathan Hedley"
"92","absHandlesRelativeQuery","absHandlesRelativeQuery","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"93","absHandlesRelativeQuery","absHandlesRelativeQuery","3","Body Change, Introduced, MultiChange","Fixed absolute URL generation from relative URLs which are only query strings.

Fixes #49
","adce18ec3d06b849886d203fe932205f312cc37f","Jonathan Hedley"
"94","absHandlesRelativeQuery","absHandlesRelativeQuery","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"95","absHandlesDotFromIndex","absHandlesDotFromIndex","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"96","absHandlesDotFromIndex","absHandlesDotFromIndex","2","Body Change, Introduced, MultiChange","Fix a relative redirect issue, and clean up URL resolving.

Fixes #585
","1e09df66f0302958d547037e7258913b3069f2b6","Jonathan Hedley"
"97","handlesAbsOnUnknownProtocols","handlesAbsOnUnknownProtocols","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"98","handlesAbsOnUnknownProtocols","handlesAbsOnUnknownProtocols","2","Body Change, Introduced, MultiChange","absUrl now supports already abs URLs, even when there's no defined stream handler

Fixes #1610
","50ff7100ccf1c3c6e4b3d2de0e7771aff33ecc59","Jonathan Hedley"
"99","testRemove","testRemove","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"100","testRemove","testRemove","2","Body Change, Introduced, MultiChange","Added Node#remove and Node#replaceWith.

Closes #19
","982e4f96560dadd33e627a1ecea7557f08745d98","Jonathan Hedley"
"101","removeOnOrphanIsNoop","removeOnOrphanIsNoop","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"102","removeOnOrphanIsNoop","removeOnOrphanIsNoop","2","Body Change, Introduced, MultiChange","No-op remove() on orphan nodes

As suggested in #1898
","da5e9778e4e28bcf12086e7a5e057b39a16f2618","Jonathan Hedley"
"103","testReplace","testReplace","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"104","testReplace","testReplace","2","Body Change, Introduced, MultiChange","Added Node#remove and Node#replaceWith.

Closes #19
","982e4f96560dadd33e627a1ecea7557f08745d98","Jonathan Hedley"
"105","testReplaceTwice","testReplaceTwice","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"106","testReplaceTwice","testReplaceTwice","3","Body Change, Introduced, MultiChange","test case for Issue #2212
","df404cf5ac12fb295e8abd9e05de1dcbcea30657","MicyToy"
"107","testReplaceTwice","testReplaceTwice","3","Body Change","Use the incoming node's parent if outgoing has already been removed

Fixes #2212

This won't work for all scenarios - when an element is removed it is de-parented, and so if the order of calls had lead to both elements already being detached, there won't be a parent to re-attach to.
","1a91aac56176edcb2327569feb5aff5282f8cacb","Jonathan Hedley"
"108","ownerDocument","ownerDocument","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"109","ownerDocument","ownerDocument","2","Body Change, Introduced, MultiChange","Implemented Node.ownerDocument DOM API method.
","2ca58b79dd165a6eec7ce990cf53ceaf9445e5f0","Jonathan Hedley"
"110","root","root","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"111","root","root","3","Body Change, Introduced, MultiChange","Node.root()
","f78df946f00cdc9ed2159716b50a785b12b57aca","Jonathan Hedley"
"112","root","root","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"113","before","before","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"114","before","before","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"115","beforeShuffle","beforeShuffle","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"116","beforeShuffle","beforeShuffle","2","Body Change, Introduced, MultiChange","Remove incoming sibling prior to add in before() and after()

This ensures that the siblingIndex is correct before calling the absolute addChildren(index) to re-position.

Otherwise, if the incoming node was already before the context node (in before()), or after (in after()), the relative order would be incorrect due to being removed and re-indexed prior to re-add. For after(), that could lead to an IndexOutOfBounds exception.

Fixes #1898.
","62de0a18c7702ab5b0d1b4add3b8b3bd4f0dc93c","Jonathan Hedley"
"117","after","after","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"118","after","after","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"119","afterShuffle","afterShuffle","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"120","afterShuffle","afterShuffle","2","Body Change, Introduced, MultiChange","Remove incoming sibling prior to add in before() and after()

This ensures that the siblingIndex is correct before calling the absolute addChildren(index) to re-position.

Otherwise, if the incoming node was already before the context node (in before()), or after (in after()), the relative order would be incorrect due to being removed and re-indexed prior to re-add. For after(), that could lead to an IndexOutOfBounds exception.

Fixes #1898.
","62de0a18c7702ab5b0d1b4add3b8b3bd4f0dc93c","Jonathan Hedley"
"121","unwrap","unwrap","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"122","unwrap","unwrap","2","Body Change, Introduced, MultiChange","Added Node.unwrap() and Elements.unwrap(), to remove a node but keep its contents.

Fixes #100
","444b5cea6a4c02cecfd50e5d1ecaaaa389d05781","Jonathan Hedley"
"123","unwrapNoChildren","unwrapNoChildren","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"124","unwrapNoChildren","unwrapNoChildren","2","Body Change, Introduced, MultiChange","Added Node.unwrap() and Elements.unwrap(), to remove a node but keep its contents.

Fixes #100
","444b5cea6a4c02cecfd50e5d1ecaaaa389d05781","Jonathan Hedley"
"125","traverse","traverse","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"126","traverse","traverse","3","Body Change, Introduced, MultiChange","Added Node.traverse() and Elements.traverse() methods, to iterate through a node's descendants.
","f45de034880877582fb6414c4d09f40c5999ac70","Jonathan Hedley"
"127","traverse","traverse","3","Body Change","Code improvements (#1216)

* Code simplified.

* Code improvements:

 - String concatenation avoided
 - Size checks replaced by isEmpty()
 - Initialization fixed
 - Missing Overrides added
","a4b5e826f2440b19ee2a98fdece7211433cfdaed","offa"
"128","forEachNode","forEachNode","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"129","forEachNode","forEachNode","2","Body Change, Introduced, MultiChange","Added Node.forEachNode and Element.forEach consumer methods

Fixes #1700
","b236d07ee7893c39e45421f79e220fdee0d90e32","Jonathan Hedley"
"130","orphanNodeReturnsNullForSiblingElements","orphanNodeReturnsNullForSiblingElements","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"131","orphanNodeReturnsNullForSiblingElements","orphanNodeReturnsNullForSiblingElements","2","Body Change, Introduced, MultiChange","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"132","nodeIsNotASiblingOfItself","nodeIsNotASiblingOfItself","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"133","nodeIsNotASiblingOfItself","nodeIsNotASiblingOfItself","2","Body Change, Introduced, MultiChange","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"134","childNodesCopy","childNodesCopy","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"135","childNodesCopy","childNodesCopy","2","Body Change, Introduced, MultiChange","Added Node.childNodesCopy()
","fa87a8fe2838e80ae0eeba6e2978815ef5533e91","Jonathan Hedley"
"136","supportsClone","supportsClone","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"137","supportsClone","supportsClone","3","Body Change, Introduced, MultiChange","Added test case for clone

Trying to repro #519. Seems OK though.
","0c10dbffb475febe05ebaf074278e5d5aa81e32c","Jonathan Hedley"
"138","supportsClone","supportsClone","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"139","changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive","changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"140","changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive","changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive","2","Body Change, Introduced, MultiChange","Case-insensitive attribute setter (#903)

* Add failing test for updating attribute using differently-cased key

* Do case-insensitive key comparison when replacing attributes
","416ad294fb97f594c05dda7da53733cea59ab0ce","cketti"
"141","getAttributesCaseInsensitive","getAttributesCaseInsensitive","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"142","getAttributesCaseInsensitive","getAttributesCaseInsensitive","2","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"143","singletonAttributes","singletonAttributes","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"144","singletonAttributes","singletonAttributes","2","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"145","clonedNodesHaveOwnerDocsAndIndependentSettings","clonedNodesHaveOwnerDocsAndIndependentSettings","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"146","clonedNodesHaveOwnerDocsAndIndependentSettings","clonedNodesHaveOwnerDocsAndIndependentSettings","2","Body Change, Introduced, MultiChange","When cloning, shallow clone the OwnerDocument

This keeps the element's output settings preserved

Fixes #763
","2b6041f3ed7a0bbef64d33f53ba1b44043de2d74","Jonathan Hedley"
"147","firstAndLastChild","firstAndLastChild","1","Body Change, Introduced, MultiChange","Added {first|last}[Element]Child accessors

Improvement: added Element.firstElementChild(), Element.lastElementChild(), Node.firstChild(), Node.lastChild(), as convenient accessors to those child nodes and elements.
","372ef90d8753690f23b1967aed42a106ce2b8ae2","Jonathan Hedley"
"148","nodeName","nodeName","3","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"149","nodeName","nodeName","3","Body Change, Introduced, MultiChange","Added Node#normalName()

And simplified some accesses
","df747421a79521e668a0b21a645a169fe91d8ccd","Jonathan Hedley"
"150","nodeName","nodeName","3","Body Change","Move nameIs to Node
","b5761608fc8862a58403b88f4582b5f883ad31ea","Jonathan Hedley"
"151","elementIs","elementIs","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"152","elementIs","elementIs","2","Body Change, Introduced, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"153","svgElementIs","svgElementIs","2","File Renamed","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"154","svgElementIs","svgElementIs","2","Body Change, Introduced, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"155","testFastReparent","testFastReparent","1","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"156","testFastReparentExistingContent","testFastReparentExistingContent","1","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"157","hasTextNoOverflow","hasTextNoOverflow","2","File Renamed","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"158","hasTextNoOverflow","hasTextNoOverflow","2","Body Change, Introduced, MultiChange","Tests methods don't overflow

Testcase for #1864 and related -- hasText, data, parents could all overflow.
","998f429089c234ce685a078a78f03947f2b21fbc","Jonathan Hedley"
"159","dataNoOverflow","dataNoOverflow","2","File Renamed","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"160","dataNoOverflow","dataNoOverflow","2","Body Change, Introduced, MultiChange","Tests methods don't overflow

Testcase for #1864 and related -- hasText, data, parents could all overflow.
","998f429089c234ce685a078a78f03947f2b21fbc","Jonathan Hedley"
"161","parentsNoOverflow","parentsNoOverflow","2","File Renamed","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"162","parentsNoOverflow","parentsNoOverflow","2","Body Change, Introduced, MultiChange","Tests methods don't overflow

Testcase for #1864 and related -- hasText, data, parents could all overflow.
","998f429089c234ce685a078a78f03947f2b21fbc","Jonathan Hedley"
"163","wrapNoOverflow","wrapNoOverflow","2","File Renamed","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"164","wrapNoOverflow","wrapNoOverflow","2","Body Change, Introduced, MultiChange","Test that wrap() can't overflow

Related to #1864
","9d104b7ea2a715c62553559a9869356913eb87c1","Jonathan Hedley"
"165","testConcurrentMerge","testConcurrentMerge","1","Body Change, Exceptions Change, Introduced, MultiChange","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"166","stableIndentInBlock","stableIndentInBlock","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"167","stableIndentInBlock","stableIndentInBlock","2","Body Change, Introduced, MultiChange","Wrap Comment if it's 'effectively first'

As in, the first node that is not blank space.

Also refactored impl in Element, which I just fixed for the same issue.

Fixes #1906
","a90bae7928f9b038d1c142773b4a5011335bf8e8","Jonathan Hedley"
"168","constructorValidationOkWithBlankName","constructorValidationOkWithBlankName","1","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"169","constructorValidationThrowsExceptionOnNulls","constructorValidationThrowsExceptionOnNulls","3","Exceptions Change","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"170","constructorValidationThrowsExceptionOnNulls","constructorValidationThrowsExceptionOnNulls","3","Exceptions Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"171","constructorValidationThrowsExceptionOnNulls","constructorValidationThrowsExceptionOnNulls","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"172","constructorValidationOkWithBlankPublicAndSystemIds","constructorValidationOkWithBlankPublicAndSystemIds","1","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"173","outerHtmlGeneration","outerHtmlGeneration","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"174","outerHtmlGeneration","outerHtmlGeneration","2","Body Change","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"175","testRoundTrip","testRoundTrip","2","File Renamed","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"176","testRoundTrip","testRoundTrip","2","Body Change, Introduced, MultiChange","Fixed handling of public/system flag in doctypes

Fixes #408
","c28e5bf53a9ce9e32ab84ce2e6eba87ec747d1a0","Jonathan Hedley"
"177","htmlOutput","htmlOutput","2","File Renamed","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"178","htmlOutput","htmlOutput","2","Body Change, Introduced, MultiChange","Fixed handling of public/system flag in doctypes

Fixes #408
","c28e5bf53a9ce9e32ab84ce2e6eba87ec747d1a0","Jonathan Hedley"
"179","xmlOutput","xmlOutput","2","File Renamed","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"180","xmlOutput","xmlOutput","2","Body Change, Introduced, MultiChange","Fixed handling of public/system flag in doctypes

Fixes #408
","c28e5bf53a9ce9e32ab84ce2e6eba87ec747d1a0","Jonathan Hedley"
"181","attributes","attributes","2","File Renamed","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"182","attributes","attributes","2","Body Change, Introduced, MultiChange","Revert to using ""name"" for internal doctype name attribute

Fixes #2241
","ed23a9a458bb0674a83f6c63e2bd5b7492fead09","Jonathan Hedley"
"183","testTitles","testTitles","2","Body Change","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"184","testTitles","testTitles","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"185","testOutputEncoding","testOutputEncoding","4","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"186","testOutputEncoding","testOutputEncoding","4","Body Change, Introduced, MultiChange","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"187","testOutputEncoding","testOutputEncoding","4","Body Change","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"188","testOutputEncoding","testOutputEncoding","4","Body Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"189","testXhtmlReferences","testXhtmlReferences","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"190","testXhtmlReferences","testXhtmlReferences","2","Body Change, Introduced, MultiChange","Added restricted XHTML output entity option
","528b793d86be485f7b4fff51f97e67708eb632da","Jonathan Hedley"
"191","testNormalisesStructure","testNormalisesStructure","3","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"192","testNormalisesStructure","testNormalisesStructure","3","Body Change, Introduced, MultiChange","Document normalisation now more correctly enforces document structure.
 - ensure only one head and one body element, both under html el
 - allow html/head/noscript/img for some site's analytic pattern

Fixes #43
","82855b07f5336d30c70dc20548ab7ab8adeac05e","Jonathan Hedley"
"193","testNormalisesStructure","testNormalisesStructure","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"194","accessorsWillNormalizeStructure","accessorsWillNormalizeStructure","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"195","accessorsWillNormalizeStructure","accessorsWillNormalizeStructure","2","Body Change, Introduced, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"196","accessorsAreCaseInsensitive","accessorsAreCaseInsensitive","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"197","accessorsAreCaseInsensitive","accessorsAreCaseInsensitive","2","Body Change, Introduced, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"198","testClone","testClone","4","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"199","testClone","testClone","4","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"200","testClone","testClone","4","Body Change","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"201","testClone","testClone","4","Body Change","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"202","testBasicIndent","testBasicIndent","3","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"203","testBasicIndent","testBasicIndent","3","Body Change, Introduced, MultiChange","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"204","testBasicIndent","testBasicIndent","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"205","testClonesDeclarations","testClonesDeclarations","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"206","testClonesDeclarations","testClonesDeclarations","2","Body Change, Introduced, MultiChange","Testcase to confirm doctypes get cloned
","9dcc488f3c6afb691e49af42755cfd61b0a69d04","Jonathan Hedley"
"207","testLocation","testLocation","5","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"208","testLocation","testLocation","5","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'pr/306'
","d9ec262369138ca840d4a34473427e401c4cc4a4","Jonathan Hedley"
"209","testLocation","testLocation","5","Body Change, Exceptions Change, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"210","testLocation","testLocation","5","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"211","testLocation","testLocation","5","Body Change, Exceptions Change, MultiChange","Removed externally sourced files from integration tests

As jsoup has evolved, we now have specific unit test coverage for anything previously caught by these integration tests, and so they are no longer required.
","00fc2da5e47e0150ec9a7b4ac87623abb5ae3982","Jonathan Hedley"
"212","testLocationFromString","testLocationFromString","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"213","testLocationFromString","testLocationFromString","2","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"214","testHtmlAndXmlSyntax","testHtmlAndXmlSyntax","4","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"215","testHtmlAndXmlSyntax","testHtmlAndXmlSyntax","4","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"216","testHtmlAndXmlSyntax","testHtmlAndXmlSyntax","4","Body Change","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"217","testHtmlAndXmlSyntax","testHtmlAndXmlSyntax","4","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"218","htmlParseDefaultsToHtmlOutputSyntax","htmlParseDefaultsToHtmlOutputSyntax","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"219","htmlParseDefaultsToHtmlOutputSyntax","htmlParseDefaultsToHtmlOutputSyntax","2","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"220","testHtmlAppendable","testHtmlAppendable","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"221","testHtmlAppendable","testHtmlAppendable","2","Body Change, Introduced, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"222","testOverflowClone","testOverflowClone","4","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"223","testOverflowClone","testOverflowClone","4","Body Change, Introduced, MultiChange","Merge branch 'pr/292'
","11185c4fc1a0bcfa15d59b23fe039bf5908a2a77","Jonathan Hedley"
"224","testOverflowClone","testOverflowClone","4","Modifier Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"225","testOverflowClone","testOverflowClone","4","Modifier Change, Body Change, MultiChange","Performance improvement for clone

The setBaseUri call was redundant now that the base URI is lazy loaded by an element, by walking up the parent stack to find it. But because of that walk, the performance of setBaseUri during clone was ~ O(n^2) or worse.

Also, updated StringUtil to limit padding to 30 wide, otherwise the outerHtml string format made in hasSameValue was blowing the heap for very deep nodes.
","afd73606a90909444e1c443b555dae7b71e6a5a0","Jonathan Hedley"
"226","DocumentsWithSameContentAreEqual","DocumentsWithSameContentAreEqual","4","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"227","DocumentsWithSameContentAreEqual","DocumentsWithSameContentAreEqual","4","Body Change, Exceptions Change, Introduced, MultiChange","Test case for #455

Works OK since previous fix for equals
","0961b24e30a244ee26a568541c44840584642d5e","Jonathan Hedley"
"228","DocumentsWithSameContentAreEqual","DocumentsWithSameContentAreEqual","4","Body Change, Exceptions Change, MultiChange","Reverted Node.equals() and Node.hashCode()

Back to identity (object) comparisons, as deep content inspection had
negative performance impacts and hashkey stability problems.
Functionality replaced with Node.hasSameContent().

Fixes #688
","cc19d3029ab0db137da0e95cc55c20b131241cf1","Jonathan Hedley"
"229","DocumentsWithSameContentAreEqual","DocumentsWithSameContentAreEqual","4","Body Change, Exceptions Change, MultiChange","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"230","DocumentsWithSameContentAreVerifiable","DocumentsWithSameContentAreVerifiable","3","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"231","DocumentsWithSameContentAreVerifiable","DocumentsWithSameContentAreVerifiable","3","Body Change, Exceptions Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"232","DocumentsWithSameContentAreVerifiable","DocumentsWithSameContentAreVerifiable","3","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"233","testMetaCharsetUpdateUtf8","testMetaCharsetUpdateUtf8","3","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"234","testMetaCharsetUpdateUtf8","testMetaCharsetUpdateUtf8","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"235","testMetaCharsetUpdateUtf8","testMetaCharsetUpdateUtf8","3","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"236","testMetaCharsetUpdateIso8859","testMetaCharsetUpdateIso8859","3","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"237","testMetaCharsetUpdateIso8859","testMetaCharsetUpdateIso8859","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"238","testMetaCharsetUpdateIso8859","testMetaCharsetUpdateIso8859","3","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"239","testMetaCharsetUpdateNoCharset","testMetaCharsetUpdateNoCharset","3","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"240","testMetaCharsetUpdateNoCharset","testMetaCharsetUpdateNoCharset","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"241","testMetaCharsetUpdateNoCharset","testMetaCharsetUpdateNoCharset","3","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"242","testMetaCharsetUpdateDisabled","testMetaCharsetUpdateDisabled","1","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"243","testMetaCharsetUpdateDisabledNoChanges","testMetaCharsetUpdateDisabledNoChanges","2","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"244","testMetaCharsetUpdateDisabledNoChanges","testMetaCharsetUpdateDisabledNoChanges","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"245","testMetaCharsetUpdateEnabledAfterCharsetChange","testMetaCharsetUpdateEnabledAfterCharsetChange","1","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"246","testMetaCharsetUpdateCleanup","testMetaCharsetUpdateCleanup","2","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"247","testMetaCharsetUpdateCleanup","testMetaCharsetUpdateCleanup","2","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"248","testMetaCharsetUpdateXmlUtf8","testMetaCharsetUpdateXmlUtf8","4","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"249","testMetaCharsetUpdateXmlUtf8","testMetaCharsetUpdateXmlUtf8","4","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"250","testMetaCharsetUpdateXmlUtf8","testMetaCharsetUpdateXmlUtf8","4","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"251","testMetaCharsetUpdateXmlUtf8","testMetaCharsetUpdateXmlUtf8","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"252","testMetaCharsetUpdateXmlIso8859","testMetaCharsetUpdateXmlIso8859","4","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"253","testMetaCharsetUpdateXmlIso8859","testMetaCharsetUpdateXmlIso8859","4","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"254","testMetaCharsetUpdateXmlIso8859","testMetaCharsetUpdateXmlIso8859","4","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"255","testMetaCharsetUpdateXmlIso8859","testMetaCharsetUpdateXmlIso8859","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"256","testMetaCharsetUpdateXmlNoCharset","testMetaCharsetUpdateXmlNoCharset","4","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"257","testMetaCharsetUpdateXmlNoCharset","testMetaCharsetUpdateXmlNoCharset","4","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"258","testMetaCharsetUpdateXmlNoCharset","testMetaCharsetUpdateXmlNoCharset","4","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"259","testMetaCharsetUpdateXmlNoCharset","testMetaCharsetUpdateXmlNoCharset","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"260","testMetaCharsetUpdateXmlDisabled","testMetaCharsetUpdateXmlDisabled","2","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"261","testMetaCharsetUpdateXmlDisabled","testMetaCharsetUpdateXmlDisabled","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"262","testMetaCharsetUpdateXmlDisabledNoChanges","testMetaCharsetUpdateXmlDisabledNoChanges","3","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"263","testMetaCharsetUpdateXmlDisabledNoChanges","testMetaCharsetUpdateXmlDisabledNoChanges","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"264","testMetaCharsetUpdateXmlDisabledNoChanges","testMetaCharsetUpdateXmlDisabledNoChanges","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"265","createHtmlDocument","createHtmlDocument","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"266","createHtmlDocument","createHtmlDocument","2","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"267","createXmlDocument","createXmlDocument","3","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"268","createXmlDocument","createXmlDocument","3","Body Change","Small code cleanup
","22a17d24279450e7e214b57beb4c0bda5f3698e5","Jonathan Hedley"
"269","createXmlDocument","createXmlDocument","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"270","charsetOnEmptyDoc","charsetOnEmptyDoc","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"271","charsetOnEmptyDoc","charsetOnEmptyDoc","2","Body Change, Introduced, MultiChange","Don't try to get child nodes if there aren't any yet

Fixes #2266
","5d31cac5888b872daa54e09238feeaa8e4e435e7","Jonathan Hedley"
"272","testShiftJisRoundtrip","testShiftJisRoundtrip","2","Body Change, Exceptions Change, Introduced, MultiChange","Fixed &nbsp; for XHTML in Shift_JS

Fixes #523
","3ba88d8c2ab500c07f9e2ddbc07a4bd01fadbd78","Jonathan Hedley"
"273","testShiftJisRoundtrip","testShiftJisRoundtrip","2","Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"274","parseAndHtmlOnDifferentThreads","parseAndHtmlOnDifferentThreads","3","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"275","parseAndHtmlOnDifferentThreads","parseAndHtmlOnDifferentThreads","3","Body Change, Exceptions Change, Introduced, MultiChange","Make sure encoder works across threads
","7c8df4ca183550cd1d818b718cd1336a97447775","Jonathan Hedley"
"276","parseAndHtmlOnDifferentThreads","parseAndHtmlOnDifferentThreads","3","Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"277","testDocumentTypeGet","testDocumentTypeGet","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"278","testDocumentTypeGet","testDocumentTypeGet","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"279","framesetSupportsBodyMethod","framesetSupportsBodyMethod","3","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"280","framesetSupportsBodyMethod","framesetSupportsBodyMethod","3","Body Change, Introduced, MultiChange","Test for body() not null on frameset

Was implemented with commit 415f625565edde917945beedb201285d744365d3

Closes #1453
","690d601950bf44fc84dcc711b2ef265f9542df62","Jonathan Hedley"
"281","framesetSupportsBodyMethod","framesetSupportsBodyMethod","3","Body Change","Document#body should return the framset el for frameset docs
","af763d07c41085fcf518e547857d419ffb455d52","Jonathan Hedley"
"282","forms","forms","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"283","forms","forms","2","Body Change, Introduced, MultiChange","Added Document#forms()
","4208ae30e0172ae06e6d64a4e52e1eaa15b4446e","Jonathan Hedley"
"284","expectForm","expectForm","2","File Renamed","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"285","expectForm","expectForm","2","Body Change, Introduced, MultiChange","Added Document#expectForm
","bc320aa0e93c45fbb27e2d6ac5596f6afd9d371a","Jonathan Hedley"
"286","escape","escape","9","Body Change","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"287","escape","escape","9","Body Change","Added restricted XHTML output entity option
","528b793d86be485f7b4fff51f97e67708eb632da","Jonathan Hedley"
"288","escape","escape","9","Body Change","Fixed support for HTML entities with numbers in name (e.g. &frac34, &sup1)

Fixes #46
","2e4969497c5734d90d394103728bb517644f9157","Jonathan Hedley"
"289","escape","escape","9","Body Change","Fixed GAE support: load HTML entities from a file on startup, instead of embedding in the class.
","472c7e55ee9d5cc7e7771696092c6eeca5a91b4d","Jonathan Hedley"
"290","escape","escape","9","Body Change","Output escape codes in hex instead of decimal.

For characters that need to be escaped, this produces a smaller more
legible escape code, and Unicode chars are generally described in hex,
not dec.
","ae51709b8c07098fa688ec6be0b5a7dec7654178","Jonathan Hedley"
"291","escape","escape","9","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"292","escape","escape","9","Body Change","Verify &raquo;
","9e1ca808ee75ec5269bfab9c3e583792cee494c1","Jonathan Hedley"
"293","escape","escape","9","Body Change","Escape < in XML attributes

Fixes #528
","a025d87deb9cc4cda49ae1b77feb0f29805dd7c5","Jonathan Hedley"
"294","escape","escape","9","Body Change","Make Entities.escape(string) suitable for both text and attributes

Fixes #1278
","9ba6dc7a955ed23884e8e25f8d503c4fe144c27a","Jonathan Hedley"
"295","escapeDefaults","escapeDefaults","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"296","escapeDefaults","escapeDefaults","2","Body Change, Introduced, MultiChange","Make Entities.escape(string) suitable for both text and attributes

Fixes #1278
","9ba6dc7a955ed23884e8e25f8d503c4fe144c27a","Jonathan Hedley"
"297","escapedSupplementary","escapedSupplementary","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"298","escapedSupplementary","escapedSupplementary","2","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"299","unescapeMultiChars","unescapeMultiChars","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"300","unescapeMultiChars","unescapeMultiChars","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"301","xhtml","xhtml","3","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"302","xhtml","xhtml","3","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"303","xhtml","xhtml","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"304","getByName","getByName","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"305","getByName","getByName","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"306","escapeSupplementaryCharacter","escapeSupplementaryCharacter","3","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"307","escapeSupplementaryCharacter","escapeSupplementaryCharacter","3","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/mingfai/jsoup into mingfai-master
","aa812e42a784bb551e3cda70078c2c1ed6147b20","Jonathan Hedley"
"308","escapeSupplementaryCharacter","escapeSupplementaryCharacter","3","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"309","notMissingMultis","notMissingMultis","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"310","notMissingMultis","notMissingMultis","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"311","notMissingSupplementals","notMissingSupplementals","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"312","notMissingSupplementals","notMissingSupplementals","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"313","unescape","unescape","5","Body Change","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"314","unescape","unescape","5","Body Change","Fixed support for HTML entities with numbers in name (e.g. &frac34, &sup1)

Fixes #46
","2e4969497c5734d90d394103728bb517644f9157","Jonathan Hedley"
"315","unescape","unescape","5","Body Change","Fixed GAE support: load HTML entities from a file on startup, instead of embedding in the class.
","472c7e55ee9d5cc7e7771696092c6eeca5a91b4d","Jonathan Hedley"
"316","unescape","unescape","5","Body Change","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"317","unescape","unescape","5","Body Change","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"318","strictUnescape","strictUnescape","3","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"319","strictUnescape","strictUnescape","3","Body Change, Introduced, MultiChange","Force strict entity matching (must be &xxx; and not &xxx) in element attributes.

Fixes #71
","f317c04acf821d61601f5d986252db40505153bc","Jonathan Hedley"
"320","strictUnescape","strictUnescape","3","Body Change","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"321","prefixMatch","prefixMatch","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"322","prefixMatch","prefixMatch","2","Body Change, Introduced, MultiChange","Entity decoding supports prefix matches

When parsing named HTML entities, base entities should resolve if they are a prefix of the input token (and not in an  attribute). Finds the longest prefix.

Validated matches browser behavior and extended entities *don't* match (like `&clubsuite;`)

Fixes #2207
","5ee376bc5bbe6a4f66eb24e2180552b547b8a4bf","Jonathan Hedley"
"323","caseSensitive","caseSensitive","2","Body Change","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"324","caseSensitive","caseSensitive","2","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"325","quoteReplacements","quoteReplacements","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"326","quoteReplacements","quoteReplacements","2","Body Change, Introduced, MultiChange","Fixed issue in Entities when unescaping &#36; (""$"")

Fixes #34
","20ed24cefb5df53c48021459af98bef83c55f241","Jonathan Hedley"
"327","letterDigitEntities","letterDigitEntities","3","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"328","letterDigitEntities","letterDigitEntities","3","Body Change, Introduced, MultiChange","Fixed HTML entity parser to correctly parse entities like frac14 (letter + number combo).

Fixes #145
","1d37cef1d8367af963fee4dc99164708f5d3c6f8","Jonathan Hedley"
"329","letterDigitEntities","letterDigitEntities","3","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"330","noSpuriousDecodes","noSpuriousDecodes","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"331","noSpuriousDecodes","noSpuriousDecodes","2","Body Change, Introduced, MultiChange","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"332","escapesGtInXmlAttributesButNotInHtml","escapesGtInXmlAttributesButNotInHtml","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"333","escapesGtInXmlAttributesButNotInHtml","escapesGtInXmlAttributesButNotInHtml","2","Body Change, Introduced, MultiChange","Escape < in XML attributes

Fixes #528
","a025d87deb9cc4cda49ae1b77feb0f29805dd7c5","Jonathan Hedley"
"334","controlCharactersAreEscaped","controlCharactersAreEscaped","3","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"335","controlCharactersAreEscaped","controlCharactersAreEscaped","3","Body Change, Introduced, MultiChange","Escape ascii control codes in both XML and HTML

Required for XML and easier to read for HTML

Fixes #1556.
","2a4c9decd617e7892fe767a535803b68d2268dca","Jonathan Hedley"
"336","controlCharactersAreEscaped","controlCharactersAreEscaped","3","Body Change","Invalid XML characters should be dropped, not encoded

Fixes #1743
","001752f1a0b73ae17668dc9fd4c5942424a6c1e2","Jonathan Hedley"
"337","escapeByClonedOutputSettings","escapeByClonedOutputSettings","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"338","escapeByClonedOutputSettings","escapeByClonedOutputSettings","2","Body Change, Introduced, MultiChange","Fix NPE in escaping if output settings cloned twice (#1964)

* Fix NPE in escaping if output settings cloned twice

* Refactored coreCharset to be set in charset()

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8e8970650951cef63bae78dd41ba45c98a7d75a5","Talgat"
"339","parseHtmlEncodedEmojiMultipoint","parseHtmlEncodedEmojiMultipoint","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"340","parseHtmlEncodedEmojiMultipoint","parseHtmlEncodedEmojiMultipoint","2","Body Change, Introduced, MultiChange","Removed character range check (>= 0xD800 &&  <= 0xDFFF)

That was preventing the valid decode of &#55357;&#56495; to 💯.

This rule must have been in the spec when initially implemented but I can't find a reference to it now. I'm assuming that the range had since been added, but can't immediately identify why it was explicitly excluded originally.

Fixes #2047
","954c46a92a1a0c5052ed241d4398db8b0331e1f3","Jonathan Hedley"
"341","parseHtmlEncodedEmoji","parseHtmlEncodedEmoji","2","File Renamed","Fixed support for case-sensitive HTML escape entities.

Fixes #31
","5e52f1b266173593fab32fe9d8a4963066b2f2fe","Jonathan Hedley"
"342","parseHtmlEncodedEmoji","parseHtmlEncodedEmoji","2","Body Change, Introduced, MultiChange","Removed character range check (>= 0xD800 &&  <= 0xDFFF)

That was preventing the valid decode of &#55357;&#56495; to 💯.

This rule must have been in the spec when initially implemented but I can't find a reference to it now. I'm assuming that the range had since been added, but can't immediately identify why it was explicitly excluded originally.

Fixes #2047
","954c46a92a1a0c5052ed241d4398db8b0331e1f3","Jonathan Hedley"
"343","setUp","setUp","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"344","createsFormData","createsFormData","3","Body Change","Form data submission fix

Don’t submit disabled elements
Set checkbox and radio to default val ‘on’ if unset

Fixes #489
","c01fcd338d73dc039e6a3a6cd2c449d9c9d41304","Jonathan Hedley"
"345","createsFormData","createsFormData","3","Body Change","Don't submit button values

Fixes #1231
","a9439f0c503ac8e0f009a0ec39f8bff1a6271d51","Jonathan Hedley"
"346","createsFormData","createsFormData","3","Body Change","formData retrieves ""input type=image"" incorrectly (#2010)

Remove input type=image in formData()","144835d98e8fd6c5f825d90fc39e30a575c5b48b","Erickson Lima"
"347","formDataUsesFirstAttribute","formDataUsesFirstAttribute","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"348","formDataUsesFirstAttribute","formDataUsesFirstAttribute","2","Body Change, Introduced, MultiChange","Testcase for #1234

Fixes #1234
","e9e613706443fd1cd3458d1e5116c0498afd8b09","Jonathan Hedley"
"349","actionWithNoBaseUri","actionWithNoBaseUri","1","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"350","usesOnForCheckboxValueIfNoValueSet","usesOnForCheckboxValueIfNoValueSet","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"351","usesOnForCheckboxValueIfNoValueSet","usesOnForCheckboxValueIfNoValueSet","2","Body Change, Introduced, MultiChange","Form data submission fix

Don’t submit disabled elements
Set checkbox and radio to default val ‘on’ if unset

Fixes #489
","c01fcd338d73dc039e6a3a6cd2c449d9c9d41304","Jonathan Hedley"
"352","adoptedFormsRetainInputs","adoptedFormsRetainInputs","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"353","adoptedFormsRetainInputs","adoptedFormsRetainInputs","2","Body Change, Introduced, MultiChange","Test to validate #249 works correctly
","ddf4c1bcae69ad48c01eea207e3f3c24d2eda208","Jonathan Hedley"
"354","removeFormElement","removeFormElement","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"355","removeFormElement","removeFormElement","2","Body Change, Introduced, MultiChange","Merge pull request #969 from lukasschlueter/master

Fix #429","9cb4bf068e6e76836b5fa740d7bcc2bb058a14e5","Jonathan Hedley"
"356","formSubmissionCarriesCookiesFromSession","formSubmissionCarriesCookiesFromSession","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"357","formSubmissionCarriesCookiesFromSession","formSubmissionCarriesCookiesFromSession","2","Body Change, Exceptions Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"358","formElementsAreLive","formElementsAreLive","2","File Renamed","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"359","formElementsAreLive","formElementsAreLive","2","Body Change, Introduced, MultiChange","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"360","validatesKeysNotEmpty","validatesKeysNotEmpty","2","Body Change, Exceptions Change, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"361","validatesKeysNotEmpty","validatesKeysNotEmpty","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"362","validatesKeysNotEmptyViaSet","validatesKeysNotEmptyViaSet","2","Body Change, Exceptions Change, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"363","validatesKeysNotEmptyViaSet","validatesKeysNotEmptyViaSet","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"364","booleanAttributesAreEmptyStringValues","booleanAttributesAreEmptyStringValues","2","File Renamed","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"365","booleanAttributesAreEmptyStringValues","booleanAttributesAreEmptyStringValues","2","Body Change, Introduced, MultiChange","Return null attribute values as empty string

Previous / defined behaviour.

Fixes #1065
","8b837a43cbe2c12624ab2088dc4ff9a725af5f4d","Jonathan Hedley"
"366","settersOnOrphanAttribute","settersOnOrphanAttribute","2","File Renamed","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"367","settersOnOrphanAttribute","settersOnOrphanAttribute","2","Body Change, Introduced, MultiChange","Don't NPE in setValue for an orphan Attribute

Fixes #1107
","1d663eeb1c0d1c08bcfe5d30f05170768bb0438e","Jonathan Hedley"
"368","hasValue","hasValue","2","File Renamed","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"369","hasValue","hasValue","2","Body Change, Introduced, MultiChange","Added Attribute#hasValue, Attributes#hasValue(key)
","2080cbb75a2746123eb89db2bd9f923e7c109e15","Jonathan Hedley"
"370","canSetValueToNull","canSetValueToNull","2","File Renamed","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"371","canSetValueToNull","canSetValueToNull","2","Body Change, Introduced, MultiChange","Clarify doc that it's OK to set attribute value to null

Also added testcase, and return the value from the parent only if it was there.

Closes #1025
","7ec238bd7c42e9381ac744e97c5fa9a49d54de1b","Jonathan Hedley"
"372","booleanAttributesAreNotCaseSensitive","booleanAttributesAreNotCaseSensitive","2","File Renamed","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"373","booleanAttributesAreNotCaseSensitive","booleanAttributesAreNotCaseSensitive","2","Body Change, Introduced, MultiChange","Normalize attribute names when testing if a boolean attribute

Fixes #1656
","7eb5a745bd44b26777d99e429bd5036597aa6273","Jonathan Hedley"
"374","validateScriptContents","validateScriptContents","1","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"375","validateXmlScriptContents","validateXmlScriptContents","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"376","validateXmlScriptContents","validateXmlScriptContents","2","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"377","testId","testId","1","Body Change, Introduced, MultiChange","Added Element#id(String) setter

Symmetrical to Element#id() getter
","5727d18a04df73982ce8e6d77e965cb768cfee7d","Jonathan Hedley"
"378","testSetId","testSetId","1","Body Change, Introduced, MultiChange","Added Element#id(String) setter

Symmetrical to Element#id() getter
","5727d18a04df73982ce8e6d77e965cb768cfee7d","Jonathan Hedley"
"379","getElementsByTagName","getElementsByTagName","2","Body Change","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"380","getElementsByTagName","getElementsByTagName","2","Body Change","Renamed JSoup -> Jsoup
","9d3ab85127dff8f684d18243425f543b204aabef","Jonathan Hedley"
"381","getNamespacedElementsByTag","getNamespacedElementsByTag","1","Body Change, Introduced, MultiChange","Added support for namespaced elements (<fb:name>) and selectors (fb|name)
","e5f6e084f755969196ca9a87c6b334f7125359aa","Jonathan Hedley"
"382","testGetElementById","testGetElementById","2","Body Change","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"383","testGetElementById","testGetElementById","2","Body Change","Renamed JSoup -> Jsoup
","9d3ab85127dff8f684d18243425f543b204aabef","Jonathan Hedley"
"384","testGetText","testGetText","2","Body Change, Introduced, MultiChange","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"385","testGetText","testGetText","2","Body Change","Renamed JSoup -> Jsoup
","9d3ab85127dff8f684d18243425f543b204aabef","Jonathan Hedley"
"386","testGetChildText","testGetChildText","1","Body Change, Introduced, MultiChange","Implemented Element#ownText()
","e4917452778b4e1b19b2fcbe9f258e9e4061a97f","Jonathan Hedley"
"387","testNormalisesText","testNormalisesText","2","Body Change, Introduced, MultiChange","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"388","testNormalisesText","testNormalisesText","2","Body Change","Whitespace tests
","62ea04e4d5cbf91b1b1a225c90b8077e6db27e58","Jonathan Hedley"
"389","testKeepsPreText","testKeepsPreText","1","Body Change, Introduced, MultiChange","Whitespace tests
","62ea04e4d5cbf91b1b1a225c90b8077e6db27e58","Jonathan Hedley"
"390","testKeepsPreTextInCode","testKeepsPreTextInCode","1","Body Change, Introduced, MultiChange","Preserve whitespace in children of <pre>
","496e6a1e56c3af11c8071820c74565bc55f1850d","Jonathan Hedley"
"391","testKeepsPreTextAtDepth","testKeepsPreTextAtDepth","1","Body Change, Introduced, MultiChange","Search further up the stack for <pre>

Fixes #722
","aeaf3c1a03fe4d5bfda4d63824a1f97dcec42e74","Jonathan Hedley"
"392","doesNotWrapBlocksInPre","doesNotWrapBlocksInPre","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"393","doesNotWrapBlocksInPre","doesNotWrapBlocksInPre","2","Body Change, Introduced, MultiChange","Don't indent elements when in a <pre>

Fixes #1891
","2f48a617fe48262c0c688188345f73a0fbfe6e59","Jonathan Hedley"
"394","testBrHasSpace","testBrHasSpace","2","Body Change, Introduced, MultiChange","Updated Element.text() method to ensure <br> tags output as whitespace.
","29c9d48278aafb4a4390e3ee923cd68e6086a17f","Jonathan Hedley"
"395","testBrHasSpace","testBrHasSpace","2","Body Change","Have <br> output as "" "" for Element.ownText()
","db9efbd54c6ff876768eb874f7e9fe84a6632729","Jonathan Hedley"
"396","testBrHasSpaceCaseSensitive","testBrHasSpaceCaseSensitive","1","Body Change, Introduced, MultiChange","Use normalName to check br tags, for case insensitivity
","8fc3264c67db902cebe1f2185c11805c31eb34d3","Jonathan Hedley"
"397","textHasSpacesAfterBlock","textHasSpacesAfterBlock","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"398","textHasSpacesAfterBlock","textHasSpacesAfterBlock","2","Body Change, Introduced, MultiChange","In text(), insert a space between block and inline elements.

Fixes #1877
","db5375eb5b9b153816fb09e884f5700230d19120","Jonathan Hedley"
"399","testWholeText","testWholeText","1","Body Change, Introduced, MultiChange","Renamed and changelog for wholeText
","b001b304826d33f8f2b34fc7f14a931d9a97cf8a","Jonathan Hedley"
"400","wholeTextRuns","wholeTextRuns","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"401","wholeTextRuns","wholeTextRuns","2","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"402","buttonTextHasSpace","buttonTextHasSpace","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"403","buttonTextHasSpace","buttonTextHasSpace","2","Body Change, Introduced, MultiChange","Make `button` a block + format-as-inline tag

Fixes #2105
","c7db66ea66c0558395b6cf2ef5ad3f59da36c88d","Jonathan Hedley"
"404","testGetSiblings","testGetSiblings","1","Body Change, Introduced, MultiChange","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"405","nextElementSibling","nextElementSibling","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"406","nextElementSibling","nextElementSibling","2","Body Change, Introduced, MultiChange","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"407","prevElementSibling","prevElementSibling","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"408","prevElementSibling","prevElementSibling","2","Body Change, Introduced, MultiChange","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"409","testGetSiblingsWithDuplicateContent","testGetSiblingsWithDuplicateContent","1","Body Change, Introduced, MultiChange","Search for element siblings by identity not content

Fixes #554, #561
","11f7c1bd7a2d12f0b1150aa246c61afefd11991f","Jonathan Hedley"
"410","testFirstElementSiblingOnOrphan","testFirstElementSiblingOnOrphan","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"411","testFirstAndLastSiblings","testFirstAndLastSiblings","2","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"412","testFirstAndLastSiblings","testFirstAndLastSiblings","2","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"413","testGetParents","testGetParents","1","Body Change, Introduced, MultiChange","Added :has(selector) pseudo-selector.
Added Element#parents() and Elements#parents() methods.

Fixes #20
","aec561f3328980182f299e61eaae45420245141b","Jonathan Hedley"
"414","testElementSiblingIndex","testElementSiblingIndex","1","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"415","testElementSiblingIndexSameContent","testElementSiblingIndexSameContent","1","Body Change, Introduced, MultiChange","Search for element siblings by identity not content

Fixes #554, #561
","11f7c1bd7a2d12f0b1150aa246c61afefd11991f","Jonathan Hedley"
"416","testGetElementsWithClass","testGetElementsWithClass","2","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"417","testGetElementsWithClass","testGetElementsWithClass","2","Body Change","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"418","testGetElementsWithAttribute","testGetElementsWithAttribute","3","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"419","testGetElementsWithAttribute","testGetElementsWithAttribute","3","Body Change","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"420","testGetElementsWithAttribute","testGetElementsWithAttribute","3","Body Change","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"421","testGetElementsWithAttributeDash","testGetElementsWithAttributeDash","1","Body Change, Introduced, MultiChange","Fixed issue with selector parser where some boolean AND + OR combined queries (e.g. ""meta[http-equiv], meta[content]"") were being parsed incorrectly as OR only queries (e.g. former as ""meta, [http-equiv], meta[content]"")

Fixed issue where a content-tye specified in a meta tag may not be reliably detected, due to the above issue.
","a14fb16d6430d8de4bf31c898d119ab713840c2d","Jonathan Hedley"
"422","testGetElementsWithAttributeValue","testGetElementsWithAttributeValue","2","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"423","testGetElementsWithAttributeValue","testGetElementsWithAttributeValue","2","Body Change","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"424","testClassDomMethods","testClassDomMethods","3","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"425","testClassDomMethods","testClassDomMethods","3","Body Change","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"426","testClassDomMethods","testClassDomMethods","3","Body Change","Merge branch 'pr/469'
","527a2f449f5250f8dd7863c55fe772c64e5f3eee","Jonathan Hedley"
"427","testHasClassDomMethods","testHasClassDomMethods","2","Body Change, Introduced, MultiChange","Merge branch 'benbenw-hasclass-optim'
","6e295d4428e4f04baf65c704f00f3142b46f34ff","Jonathan Hedley"
"428","testHasClassDomMethods","testHasClassDomMethods","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"429","testClassUpdates","testClassUpdates","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"430","testOuterHtml","testOuterHtml","1","Body Change, Introduced, MultiChange","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"431","testInnerHtml","testInnerHtml","1","Body Change, Introduced, MultiChange","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"432","formatNoTrailingSpace","formatNoTrailingSpace","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"433","formatNoTrailingSpace","formatNoTrailingSpace","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"434","testFormatHtml","testFormatHtml","3","Body Change, Introduced, MultiChange","Whitespace tests
","62ea04e4d5cbf91b1b1a225c90b8077e6db27e58","Jonathan Hedley"
"435","testFormatHtml","testFormatHtml","3","Body Change","Use a Visitor instead of recursion for HTML and selectors.
","10cfa0465c9d48f6a3ce3f5996259e77b43fa858","Jonathan Hedley"
"436","testFormatHtml","testFormatHtml","3","Body Change","Output format tweak
","13c2af3f24fceda5b44776a5257112ac7218d038","Jonathan Hedley"
"437","testFormatOutline","testFormatOutline","1","Body Change, Introduced, MultiChange","Tweaked koz's changes in merge prep.

Adds outline mode to Document.OutputSettings.

Fixes #274
","3982ea1198b8d780b42587e16ace3407bf7621e1","Jonathan Hedley"
"438","testSetIndent","testSetIndent","1","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"439","testIndentLevel","testIndentLevel","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"440","testIndentLevel","testIndentLevel","3","Body Change, Introduced, MultiChange","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"441","testIndentLevel","testIndentLevel","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"442","testNotPretty","testNotPretty","2","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"443","testNotPretty","testNotPretty","2","Body Change","If pretty-print is disabled, don't trim outer whitespace in Element.html()

Fixes #368
","c07ba8a34b6a6d6665928e106fea67bd9144e4e0","Jonathan Hedley"
"444","testNotPrettyWithEnDashBody","testNotPrettyWithEnDashBody","1","Body Change, Introduced, MultiChange","Not add line break when pretty printing inline tags

This is a fix for issue #1305.
","3a9bf46eeb36196d841c3fa05597e40a13f51f43","Tamas Kovacs"
"445","testPrettyWithEnDashBody","testPrettyWithEnDashBody","1","Body Change, Introduced, MultiChange","Not add line break when pretty printing inline tags

This is a fix for issue #1305.
","3a9bf46eeb36196d841c3fa05597e40a13f51f43","Tamas Kovacs"
"446","testPrettyAndOutlineWithEnDashBody","testPrettyAndOutlineWithEnDashBody","1","Body Change, Introduced, MultiChange","Not add line break when pretty printing inline tags

This is a fix for issue #1305.
","3a9bf46eeb36196d841c3fa05597e40a13f51f43","Tamas Kovacs"
"447","testBasicFormats","testBasicFormats","2","Body Change, Introduced, MultiChange","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"448","testBasicFormats","testBasicFormats","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"449","testEmptyElementFormatHtml","testEmptyElementFormatHtml","1","Body Change, Introduced, MultiChange","Improved HTML output format for empty elements and auto-detected self closing tags.

Closes #27
","9824d000c7b73f52a277dcc83b55602225154fb2","Jonathan Hedley"
"450","testNoIndentOnScriptAndStyle","testNoIndentOnScriptAndStyle","1","Body Change, Introduced, MultiChange","Tweaked HTML output of closing script and style tags to not add an extraneous newline when pretty-printing.
","ae80e51cf54971b6322b9b571734ffa5507c4947","Jonathan Hedley"
"451","testContainerOutput","testContainerOutput","1","Body Change, Introduced, MultiChange","Tweaked Element.outerHtml() method to not generate initial newline on first output element.
","694efa8bac3d66717efe7e202e47347355e07c0b","Jonathan Hedley"
"452","testSetText","testSetText","2","Body Change, Introduced, MultiChange","Implemented Element.text(string) method, to set the text of an element, and clear out existing html.
","6fe6c34a888486b417a913deaca517305b76cc71","Jonathan Hedley"
"453","testSetText","testSetText","2","Body Change","Whitespace tests
","62ea04e4d5cbf91b1b1a225c90b8077e6db27e58","Jonathan Hedley"
"454","testAddNewElement","testAddNewElement","4","Body Change, Introduced, MultiChange","Rename Element.addChild to appendChild.

Also implement Element.addElement(String tagName)
","83d1848144abf29b501d59e0c3ec41e40c9cf020","Jonathan Hedley"
"455","testAddNewElement","testAddNewElement","4","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"456","testAddNewElement","testAddNewElement","4","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"457","testAddNewElement","testAddNewElement","4","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"458","testAddBooleanAttribute","testAddBooleanAttribute","3","Body Change, Introduced, MultiChange","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"459","testAddBooleanAttribute","testAddBooleanAttribute","3","Body Change","Removed old deprecated classes and methods
","a7b0c2df028f49fa246c7b6a51b6b83011655865","Jonathan Hedley"
"460","testAddBooleanAttribute","testAddBooleanAttribute","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"461","testAppendRowToTable","testAppendRowToTable","2","Body Change, Introduced, MultiChange","Improved implicit close tag heuristic detection when parsing malformed HTML.

Fixes an issue where appending / prepending rows to a table (or  to similar implicit
element structures) would create a redundant wrapping elements.

Fixes #21
","0081d162cca8ad23b500b53799195fec644f261b","Jonathan Hedley"
"462","testAppendRowToTable","testAppendRowToTable","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"463","testPrependRowToTable","testPrependRowToTable","3","Body Change, Introduced, MultiChange","Improved implicit close tag heuristic detection when parsing malformed HTML.

Fixes an issue where appending / prepending rows to a table (or  to similar implicit
element structures) would create a redundant wrapping elements.

Fixes #21
","0081d162cca8ad23b500b53799195fec644f261b","Jonathan Hedley"
"464","testPrependRowToTable","testPrependRowToTable","3","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"465","testPrependRowToTable","testPrependRowToTable","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"466","testPrependElement","testPrependElement","1","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"467","testAddNewText","testAddNewText","2","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"468","testAddNewText","testAddNewText","2","Body Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"469","testPrependText","testPrependText","2","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"470","testPrependText","testPrependText","2","Body Change","Whitespace tests
","62ea04e4d5cbf91b1b1a225c90b8077e6db27e58","Jonathan Hedley"
"471","testThrowsOnAddNullText","testThrowsOnAddNullText","2","Body Change, Exceptions Change, Introduced, MultiChange","Added not-null validators to Element.appendText() and Element.prependText()
","941f69bfe96753ef30dbb3bb1bdffb72ee8944e0","Jonathan Hedley"
"472","testThrowsOnAddNullText","testThrowsOnAddNullText","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"473","testThrowsOnPrependNullText","testThrowsOnPrependNullText","2","Body Change, Exceptions Change, Introduced, MultiChange","Added not-null validators to Element.appendText() and Element.prependText()
","941f69bfe96753ef30dbb3bb1bdffb72ee8944e0","Jonathan Hedley"
"474","testThrowsOnPrependNullText","testThrowsOnPrependNullText","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"475","testAddNewHtml","testAddNewHtml","2","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"476","testAddNewHtml","testAddNewHtml","2","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"477","testPrependNewHtml","testPrependNewHtml","2","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"478","testPrependNewHtml","testPrependNewHtml","2","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"479","prependNodes","prependNodes","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"480","prependNodes","prependNodes","2","Body Change, Introduced, MultiChange","Tests that append and prepend support Nodes

Like Text, Comments; not just parsed Elements
","cb814bb401566fe508692808281cc3ad59f899b7","Jonathan Hedley"
"481","appendNodes","appendNodes","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"482","appendNodes","appendNodes","2","Body Change, Introduced, MultiChange","Tests that append and prepend support Nodes

Like Text, Comments; not just parsed Elements
","cb814bb401566fe508692808281cc3ad59f899b7","Jonathan Hedley"
"483","testSetHtml","testSetHtml","1","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"484","testSetHtmlTitle","testSetHtmlTitle","1","Body Change, Introduced, MultiChange","Merge pull request #410 from tipabu/fix-title-html

Address #387: prevent NPE when adding markup to <title> elements","97bd42868ba98bb9a757c729d8d6e259644117e4","Jonathan Hedley"
"485","testWrap","testWrap","1","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"486","testWrapNoop","testWrapNoop","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"487","testWrapOnOrphan","testWrapOnOrphan","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"488","testWrapArtificialStructure","testWrapArtificialStructure","2","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"489","testWrapArtificialStructure","testWrapArtificialStructure","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"490","before","before","1","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"491","after","after","1","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"492","testWrapWithRemainder","testWrapWithRemainder","1","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"493","testWrapWithSimpleRemainder","testWrapWithSimpleRemainder","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"494","testHasText","testHasText","1","Body Change, Introduced, MultiChange","hasText
","93e9d84da0e87896aaaac14769eece487ba9e64d","Jonathan Hedley"
"495","dataset","dataset","1","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"496","parentlessToString","parentlessToString","1","Body Change, Introduced, MultiChange","Support node.outerHtml() method when node has no parent.

Fixes #45
","da9b977ef99e2595602a964561906a930b4332f3","Jonathan Hedley"
"497","orphanDivToString","orphanDivToString","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"498","testClone","testClone","2","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"499","testClone","testClone","2","Body Change","When cloning, shallow clone the OwnerDocument

This keeps the element's output settings preserved

Fixes #763
","2b6041f3ed7a0bbef64d33f53ba1b44043de2d74","Jonathan Hedley"
"500","testClonesClassnames","testClonesClassnames","1","Body Change, Introduced, MultiChange","Don't clone the element's classnames

Fixes #278
","0e37cba87eea9d89156c144e3d4298c9c9ed04d4","Jonathan Hedley"
"501","testShallowClone","testShallowClone","1","Body Change, Introduced, MultiChange","Added shallowClone()

Fixes #900
","2d340db5b1ba48079b3bad81a5ffe7c9c7ac26e0","Jonathan Hedley"
"502","testTagNameSet","testTagNameSet","1","Body Change, Introduced, MultiChange","Added ability to change an element's tag with Element.tagName(String), and to change many at once with Elements.tagName(String).
","9ae3df9993f3f5991d0e6fd96c649d93d547d475","Jonathan Hedley"
"503","testSetTag","testSetTag","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"504","testSetTag","testSetTag","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"505","testHtmlContainsOuter","testHtmlContainsOuter","1","Body Change, Introduced, MultiChange","Testcase for bug #63.

Fixes #63
","6d9081bba66809602428ea0b0f7ea78229b3087a","Jonathan Hedley"
"506","testGetTextNodes","testGetTextNodes","1","Body Change, Introduced, MultiChange","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"507","testManipulateTextNodes","testManipulateTextNodes","1","Body Change, Introduced, MultiChange","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"508","testGetDataNodes","testGetDataNodes","1","Body Change, Introduced, MultiChange","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"509","elementIsNotASiblingOfItself","elementIsNotASiblingOfItself","1","Body Change, Introduced, MultiChange","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"510","testChildThrowsIndexOutOfBoundsOnMissing","testChildThrowsIndexOutOfBoundsOnMissing","1","Body Change, Exceptions Change, Introduced, MultiChange","Corrected the javadoc for Element#child() to note that it throws IndexOutOfBounds.

Fixes #277
","7ff15ee20c961e370837d8f96ae77886ecd910d8","Jonathan Hedley"
"511","moveByAppend","moveByAppend","1","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"512","insertChildrenArgumentValidation","insertChildrenArgumentValidation","1","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"513","insertChildrenAtPosition","insertChildrenAtPosition","1","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"514","insertChildrenAsCopy","insertChildrenAsCopy","1","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"515","testCssPath","testCssPath","1","Body Change, Introduced, MultiChange","Merge branch 'pr/459'
","1833adf54de2ec33d68abf4a64202e8572d15ccd","Jonathan Hedley"
"516","testCssPathDuplicateIds","testCssPathDuplicateIds","1","Body Change, Introduced, MultiChange","In Element#cssSelector, check that IDs are unique before using them

Fixes #1085
","7cf9d03bf311494df652a05c2528eb06b2373f9d","jhy"
"517","cssSelectorEscaped","cssSelectorEscaped","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"518","cssSelectorEscaped","cssSelectorEscaped","2","Body Change, Introduced, MultiChange","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"519","cssEscapedAmp","cssEscapedAmp","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"520","cssEscapedAmp","cssEscapedAmp","2","Body Change, Introduced, MultiChange","Fix unescape for runs of escaped characters

Enables the example in #838 by @DulithaRanatunga to work
","bc2181dd4be4e702d54edba8b498e64fc568cf96","Jonathan Hedley"
"521","cssSelectorEscapedClass","cssSelectorEscapedClass","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"522","cssSelectorEscapedClass","cssSelectorEscapedClass","2","Body Change, Introduced, MultiChange","Fix unescape for runs of escaped characters

Enables the example in #838 by @DulithaRanatunga to work
","bc2181dd4be4e702d54edba8b498e64fc568cf96","Jonathan Hedley"
"523","testClassNames","testClassNames","2","Body Change, Introduced, MultiChange","Merge pull request #479 from hannibal218bc/fix-element-classnames

Element.classNames() must not be cached","24d01fbaedf2eab505d7bbd62794f54deb617895","Jonathan Hedley"
"524","testClassNames","testClassNames","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"525","testHashAndEqualsAndValue","testHashAndEqualsAndValue","2","Body Change, Introduced, MultiChange","Reverted Node.equals() and Node.hashCode()

Back to identity (object) comparisons, as deep content inspection had
negative performance impacts and hashkey stability problems.
Functionality replaced with Node.hasSameContent().

Fixes #688
","cc19d3029ab0db137da0e95cc55c20b131241cf1","Jonathan Hedley"
"526","testHashAndEqualsAndValue","testHashAndEqualsAndValue","2","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"527","testRelativeUrls","testRelativeUrls","2","Body Change, Introduced, MultiChange","Added test to confirm that #345 (abs urls) work
","84a2dfeced140fca53293b5fa2d5733494191224","Jonathan Hedley"
"528","testRelativeUrls","testRelativeUrls","2","Body Change","Added support for Internationalized Domain Names (IDNs)

Fixes #1300
","21b01b258952fd6aeb55d061f98321e5b9fe93e0","Jonathan Hedley"
"529","testRelativeIdnUrls","testRelativeIdnUrls","1","Body Change, Introduced, MultiChange","Added support for Internationalized Domain Names (IDNs)

Fixes #1300
","21b01b258952fd6aeb55d061f98321e5b9fe93e0","Jonathan Hedley"
"530","appendMustCorrectlyMoveChildrenInsideOneParentElement","appendMustCorrectlyMoveChildrenInsideOneParentElement","1","Body Change, Introduced, MultiChange","Fixed an issue when moving moving nodes using Element.insert(index, children)

Fixes #689
","b2e37fca64877104cfdad3f56cdc2c8b98cb6be1","Jonathan Hedley"
"531","testHashcodeIsStableWithContentChanges","testHashcodeIsStableWithContentChanges","2","Body Change, Introduced, MultiChange","Reverted Node.equals() and Node.hashCode()

Back to identity (object) comparisons, as deep content inspection had
negative performance impacts and hashkey stability problems.
Functionality replaced with Node.hasSameContent().

Fixes #688
","cc19d3029ab0db137da0e95cc55c20b131241cf1","Jonathan Hedley"
"532","testHashcodeIsStableWithContentChanges","testHashcodeIsStableWithContentChanges","2","Body Change","Small code cleanup
","22a17d24279450e7e214b57beb4c0bda5f3698e5","Jonathan Hedley"
"533","testNamespacedElements","testNamespacedElements","1","Body Change, Introduced, MultiChange","Tag namespaces cause cssSelector() to fail (#677)","f5ddda0a3ed0c0a8adf4e74dcb230bb609a2717f","Erich Schubert"
"534","testChainedRemoveAttributes","testChainedRemoveAttributes","1","Body Change, Introduced, MultiChange","Remove attributes using iterator to avoid CMEs.

Fixes #759
","2c58e975ab00eb369ee3dfbba07a4a78a1ef9e19","Jonathan Hedley"
"535","testLoopedRemoveAttributes","testLoopedRemoveAttributes","1","Body Change, Introduced, MultiChange","Added method to clear all attributes
","824e82fff399c86cc3b7905ee6a952a848b2e69d","Jonathan Hedley"
"536","testIs","testIs","2","Body Change, Introduced, MultiChange","Implemented Element.is()
","4f707008353e272c12a7a6543d6ecfc666a7cc64","Jonathan Hedley"
"537","testIs","testIs","2","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"538","testEvalMethods","testEvalMethods","1","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"539","testClosest","testClosest","1","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"540","elementByTagName","elementByTagName","2","Body Change, Introduced, MultiChange","Simple Element contstructor
","38d04b7dfc11c37e29548d8b046b9b209dfd1fd3","Jonathan Hedley"
"541","elementByTagName","elementByTagName","2","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"542","testChildrenElements","testChildrenElements","2","Body Change, Introduced, MultiChange","Added tests for children() including empty children
","d8eb9bd63c861132e5307a65e8f2f234fab2416b","Jonathan Hedley"
"543","testChildrenElements","testChildrenElements","2","Modifier Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"544","testShadowElementsAreUpdated","testShadowElementsAreUpdated","1","Body Change, Introduced, MultiChange","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"545","classNamesAndAttributeNameIsCaseInsensitive","classNamesAndAttributeNameIsCaseInsensitive","1","Body Change, Introduced, MultiChange","Added test cases to validate case insentitivity of hasClass and selectors for class

Fixes #830
","2f6eabc9f0999421acf032c79f3106215c013580","Jonathan Hedley"
"546","testAppendTo","testAppendTo","2","Body Change, Introduced, MultiChange","Merging #662
","2b7550c5e2d512944cd212f20302555d20b0e6c8","Jonathan Hedley"
"547","testAppendTo","testAppendTo","2","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"548","testNormalizesNbspInText","testNormalizesNbspInText","1","Body Change, Introduced, MultiChange","Treat nbsp chars are spaces when normalizing text

Still output &nbsp; in output HTML, but text provides plain space.
","d3f02400eca1c5cbf84212c46cebcff511536655","Jonathan Hedley"
"549","testNormalizesInvisiblesInText","testNormalizesInvisiblesInText","2","Body Change, Introduced, MultiChange","Normalize invisibles in text()

Fixes #978
","c3f8caa7c16c08b803b0f34bfffdf9777c7e382c","Jonathan Hedley"
"550","testNormalizesInvisiblesInText","testNormalizesInvisiblesInText","2","Body Change","Don't normalize away zwj or zwnj

Fixes #1269, combined emojis broken
","91ca25b341bc5ad1c364b8e7389287c45ca9df2c","Jonathan Hedley"
"551","testRemoveBeforeIndex","testRemoveBeforeIndex","2","Body Change, Introduced, MultiChange","Fixed IndexLessThan matches() to ignore root element and added tests (#918)

* Fixed IndexLessThan matches() to ignore root element and added tests

* moved unit tests for getElementsByIndexLessThan() and getElementsByIndexGreaterThan() to ElementTest.java
","51163017325cf175cda594faed991c05e9fdbe77","damonwong93"
"552","testRemoveBeforeIndex","testRemoveBeforeIndex","2","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"553","testRemoveAfterIndex","testRemoveAfterIndex","2","Body Change, Introduced, MultiChange","Fixed IndexLessThan matches() to ignore root element and added tests (#918)

* Fixed IndexLessThan matches() to ignore root element and added tests

* moved unit tests for getElementsByIndexLessThan() and getElementsByIndexGreaterThan() to ElementTest.java
","51163017325cf175cda594faed991c05e9fdbe77","damonwong93"
"554","testRemoveAfterIndex","testRemoveAfterIndex","2","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"555","whiteSpaceClassElement","whiteSpaceClassElement","2","Body Change, Introduced, MultiChange","Missing Test Case for whitespace class name (#924)

The method that checks if an element has a class is never tested for a class name that ends with a whitespace. The implemented functionality is correct however if the ""if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {"" check is removed, no tests catch this. The missing test case was discovered through mutation testing analysis.","b27c4c14aa90c23625b105d3140fe2bab42c1cd0","Ioana Leontiuc"
"556","whiteSpaceClassElement","whiteSpaceClassElement","2","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"557","testNextElementSiblingAfterClone","testNextElementSiblingAfterClone","1","Body Change, Introduced, MultiChange","Notifications to cloned elements were incorrectly delivered to the original element.

Fixes #951
","c324fabe86c0a59eb635610dc85d8d7a7be25c74","Jonathan Hedley"
"558","testRemovingEmptyClassAttributeWhenLastClassRemoved","testRemovingEmptyClassAttributeWhenLastClassRemoved","1","Body Change, Introduced, MultiChange","removing last class should remove class attribute (#963)

","a58c8e679c00be9abea4925d3b96c16fd2cd9c64","krystiangorecki"
"559","booleanAttributeOutput","booleanAttributeOutput","1","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"560","textHasSpaceAfterBlockTags","textHasSpaceAfterBlockTags","1","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"561","textHasSpaceBetweenDivAndCenterTags","textHasSpaceBetweenDivAndCenterTags","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1113'
","7c60ac132afc0034da18bfe969e18046994f9427","Jonathan Hedley"
"562","testNextElementSiblings","testNextElementSiblings","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1054'
","26adfcbcb07bca87f0d50084aaca7549c97abb0c","Jonathan Hedley"
"563","testPreviousElementSiblings","testPreviousElementSiblings","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1054'
","26adfcbcb07bca87f0d50084aaca7549c97abb0c","Jonathan Hedley"
"564","testClearAttributes","testClearAttributes","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"565","testRemoveAttr","testRemoveAttr","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"566","testRoot","testRoot","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"567","testTraverse","testTraverse","2","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"568","testTraverse","testTraverse","2","Body Change","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"569","testTraverseLambda","testTraverseLambda","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"570","testTraverseLambda","testTraverseLambda","2","Body Change, Introduced, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"571","testFilterCallReturnsElement","testFilterCallReturnsElement","1","Body Change, Introduced, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"572","testFilterAsLambda","testFilterAsLambda","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"573","testFilterAsLambda","testFilterAsLambda","2","Body Change, Introduced, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"574","testForEach","testForEach","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"575","testForEach","testForEach","2","Body Change, Introduced, MultiChange","Added Node.forEachNode and Element.forEach consumer methods

Fixes #1700
","b236d07ee7893c39e45421f79e220fdee0d90e32","Jonathan Hedley"
"576","doesntDeleteZWJWhenNormalizingText","doesntDeleteZWJWhenNormalizingText","1","Body Change, Introduced, MultiChange","Don't normalize away zwj or zwnj

Fixes #1269, combined emojis broken
","91ca25b341bc5ad1c364b8e7389287c45ca9df2c","Jonathan Hedley"
"577","testReparentSeperateNodes","testReparentSeperateNodes","2","Body Change, Introduced, MultiChange","Extra tests
","cfd1362861093f5836513fb1a7a9670f9c5c1de6","Jonathan Hedley"
"578","testReparentSeperateNodes","testReparentSeperateNodes","2","Body Change","Merge branch 'pr/1291'
","894d3ec9c71a324c007a4790604e6ca44e1d83c7","Jonathan Hedley"
"579","testNotActuallyAReparent","testNotActuallyAReparent","1","Body Change, Introduced, MultiChange","Fix issue in addNodes where could incorrectly reparent
","a7c07d968dd76c24cea805363f00550a84e15533","Jonathan Hedley"
"580","testChildSizeWithMixedContent","testChildSizeWithMixedContent","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1291'
","894d3ec9c71a324c007a4790604e6ca44e1d83c7","Jonathan Hedley"
"581","testChildSizeWithMixedContent","testChildSizeWithMixedContent","2","Modifier Change","Missed test annotation

#1335
","23a0e22ede7a83c7c8ea61d7877be414c2f9abf1","Jonathan Hedley"
"582","isBlock","isBlock","1","Body Change, Introduced, MultiChange","Fixed javadoc and added testcase for Element#isBlock

Fixes #1342
","f6388656f6c1ce111bc2dd158bf5a3732bda0605","Jonathan Hedley"
"583","testScriptTextHtmlSetAsData","testScriptTextHtmlSetAsData","1","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"584","testShallowCloneToString","testShallowCloneToString","1","Body Change, Introduced, MultiChange","Test case for shallowClone.toString

Closes #1410
","3f75b90de261b6a19121fd07cd477f45fc500bde","Jonathan Hedley"
"585","styleHtmlRoundTrips","styleHtmlRoundTrips","1","Body Change, Introduced, MultiChange","Test for #1186
","1a0ba6a331a2776ae56d0111481f4b25e67bb1a5","Jonathan Hedley"
"586","moveChildren","moveChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"587","moveChildrenToOuter","moveChildrenToOuter","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"588","appendChildren","appendChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"589","prependChildren","prependChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"590","loopMoveChildren","loopMoveChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"591","accessorsDoNotVivifyAttributes","accessorsDoNotVivifyAttributes","1","Body Change, Exceptions Change, Introduced, MultiChange","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"592","childNodesAccessorDoesNotVivify","childNodesAccessorDoesNotVivify","1","Body Change, Introduced, MultiChange","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"593","emptyChildrenElementsIsModifiable","emptyChildrenElementsIsModifiable","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"594","emptyChildrenElementsIsModifiable","emptyChildrenElementsIsModifiable","2","Body Change, Introduced, MultiChange","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"595","attributeSizeDoesNotAutoVivify","attributeSizeDoesNotAutoVivify","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"596","attributeSizeDoesNotAutoVivify","attributeSizeDoesNotAutoVivify","2","Body Change, Introduced, MultiChange","Speed improvement: cap number of cloned active formatting elements

Also saves on memory allocations for empty attribute lists.

Fixes #1613
","d2c455c94a3aaaca29d8cec6bd53ee9824622b51","Jonathan Hedley"
"597","clonedElementsHaveOwnerDocsAndIndependentSettings","clonedElementsHaveOwnerDocsAndIndependentSettings","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"598","clonedElementsHaveOwnerDocsAndIndependentSettings","clonedElementsHaveOwnerDocsAndIndependentSettings","2","Body Change, Introduced, MultiChange","When cloning, shallow clone the OwnerDocument

This keeps the element's output settings preserved

Fixes #763
","2b6041f3ed7a0bbef64d33f53ba1b44043de2d74","Jonathan Hedley"
"599","testOutputSettings","testOutputSettings","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"600","testOutputSettings","testOutputSettings","2","Body Change, Introduced, MultiChange","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"601","prettySerializationRoundTrips","prettySerializationRoundTrips","1","Body Change, Introduced, MultiChange","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"602","prettyPrintScriptsDoesNotGrowOnRepeat","prettyPrintScriptsDoesNotGrowOnRepeat","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"603","prettyPrintScriptsDoesNotGrowOnRepeat","prettyPrintScriptsDoesNotGrowOnRepeat","2","Body Change, Introduced, MultiChange","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"604","elementBrText","elementBrText","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"605","elementBrText","elementBrText","3","Body Change, Introduced, MultiChange","Test BRs are treated as newlines in wholeText

For #1437

Was fixed by #1636
","22f05e8fbbc29e05d678de05dd0913529fbd1a37","Jonathan Hedley"
"606","elementBrText","elementBrText","3","Body Change","Wrap textnodes that follow a br element

Fixes #1858

Had to special-case in a check for <br> in the pretty-print routine, as it doesn't fit the semantics of isBlock nor isInline.
","29be991198d3b518d64ee36176ae415688468f61","Jonathan Hedley"
"607","wrapTextAfterBr","wrapTextAfterBr","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"608","wrapTextAfterBr","wrapTextAfterBr","2","Body Change, Introduced, MultiChange","Wrap textnodes that follow a br element

Fixes #1858

Had to special-case in a check for <br> in the pretty-print routine, as it doesn't fit the semantics of isBlock nor isInline.
","29be991198d3b518d64ee36176ae415688468f61","Jonathan Hedley"
"609","prettyprintBrInBlock","prettyprintBrInBlock","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"610","prettyprintBrInBlock","prettyprintBrInBlock","2","Body Change, Introduced, MultiChange","Pretty-print - don't wrap a blank line after a br
","e52224fbfe6632248cc58c593efae9a22ba2e622","Jonathan Hedley"
"611","prettyprintBrWhenNotFirstChild","prettyprintBrWhenNotFirstChild","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"612","prettyprintBrWhenNotFirstChild","prettyprintBrWhenNotFirstChild","3","Body Change, Introduced, MultiChange","Wrap <br> tags correctly when in blocks

Fixes #1911
","111919256590a37b74d2caa119c4965d1a25124a","Jonathan Hedley"
"613","prettyprintBrWhenNotFirstChild","prettyprintBrWhenNotFirstChild","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"614","preformatFlowsToChildTextNodes","preformatFlowsToChildTextNodes","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"615","preformatFlowsToChildTextNodes","preformatFlowsToChildTextNodes","2","Body Change, Introduced, MultiChange","Don't skip blanks in preserveWhiteSpace descenders

Fixes #1776.

Regressed in f4d00c290325935186f75f1206d16397cc157ced
","f6d9aa050e3d58b6454d4eaef00f1d061f368eb4","Jonathan Hedley"
"616","inlineInBlockShouldIndent","inlineInBlockShouldIndent","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"617","inlineInBlockShouldIndent","inlineInBlockShouldIndent","2","Body Change, Introduced, MultiChange","Wrap first inline elements in block, ignoring preceding whitespace
","a349582236a7e69ce341f3b4ee913cb8cd19b955","Jonathan Hedley"
"618","testExpectFirst","testExpectFirst","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"619","testExpectFirst","testExpectFirst","2","Body Change, Introduced, MultiChange","Added Element.expectFirst(query)
","dd03d271a3ada7086c3b77603676245e30cb1ac6","Jonathan Hedley"
"620","testExpectFirstMessage","testExpectFirstMessage","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"621","testExpectFirstMessage","testExpectFirstMessage","2","Body Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"622","testExpectFirstMessageDoc","testExpectFirstMessageDoc","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"623","testExpectFirstMessageDoc","testExpectFirstMessageDoc","2","Body Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"624","spanRunsMaintainSpace","spanRunsMaintainSpace","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"625","spanRunsMaintainSpace","spanRunsMaintainSpace","2","Body Change, Introduced, MultiChange","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"626","doctypeIsPrettyPrinted","doctypeIsPrettyPrinted","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"627","doctypeIsPrettyPrinted","doctypeIsPrettyPrinted","2","Body Change, Introduced, MultiChange","Pretty-print doctypes on a newline

Fixes #1664
","67b48ddbcd3ed055d5130141235697cea24c69d1","Jonathan Hedley"
"628","textnodeInBlockIndent","textnodeInBlockIndent","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"629","textnodeInBlockIndent","textnodeInBlockIndent","3","Body Change, Introduced, MultiChange","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"630","textnodeInBlockIndent","textnodeInBlockIndent","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"631","stripTrailing","stripTrailing","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"632","stripTrailing","stripTrailing","2","Body Change, Introduced, MultiChange","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"633","elementIndentAndSpaceTrims","elementIndentAndSpaceTrims","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"634","elementIndentAndSpaceTrims","elementIndentAndSpaceTrims","2","Body Change, Introduced, MultiChange","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"635","divAInlineable","divAInlineable","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"636","divAInlineable","divAInlineable","3","Body Change, Introduced, MultiChange","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"637","divAInlineable","divAInlineable","3","Body Change","Wrap first inline elements in block, ignoring preceding whitespace
","a349582236a7e69ce341f3b4ee913cb8cd19b955","Jonathan Hedley"
"638","noDanglingSpaceAfterCustomElement","noDanglingSpaceAfterCustomElement","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"639","noDanglingSpaceAfterCustomElement","noDanglingSpaceAfterCustomElement","2","Body Change, Introduced, MultiChange","Trim leading & trailing spaces in block-alikes

Was only trimming if explicitly a block vs also a format-as-block.

(We make the distinction for P, which is not a block but formats as block in particular circumstances, so not all checks are just on likeBlock.)

Fixes #1852
","9e5869b6e1e29de2ae8ebc335772f0603a3ef10b","Jonathan Hedley"
"640","spanInBlockTrims","spanInBlockTrims","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"641","spanInBlockTrims","spanInBlockTrims","2","Body Change, Introduced, MultiChange","Collapse non-significant whitespace between block and inline

Fixes #1802
","f2913bd731f12f497b247885143b212cfc94225e","Jonathan Hedley"
"642","replaceWithSelf","replaceWithSelf","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"643","replaceWithSelf","replaceWithSelf","2","Body Change, Introduced, MultiChange","Replacing a node with itself should be a no-op

Fixes #1843
","9bb07d2ab43c0377806b4bb7b88c64366a39a469","Jonathan Hedley"
"644","select","select","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"645","select","select","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"646","insertChildrenValidation","insertChildrenValidation","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"647","insertChildrenValidation","insertChildrenValidation","2","Body Change, Exceptions Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"648","cssSelectorNoDoc","cssSelectorNoDoc","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"649","cssSelectorNoDoc","cssSelectorNoDoc","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"650","cssSelectorNoParent","cssSelectorNoParent","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"651","cssSelectorNoParent","cssSelectorNoParent","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"652","cssSelectorParentWithId","cssSelectorParentWithId","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"653","cssSelectorParentWithId","cssSelectorParentWithId","2","Body Change, Introduced, MultiChange","Restore the behavior of cssSelector before v1.16.2 for elements with an id (#2283)

* Restore the behavior of cssSelector before v1.16.2

* Optimized out id() and ownerDoc() calls

Fixes #2282

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","062d1900f7c57c366d5512e428ed30c71a1536ad","Phu Hung Nguyen"
"654","cssSelectorWithNonUniqueId","cssSelectorWithNonUniqueId","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"655","cssSelectorWithNonUniqueId","cssSelectorWithNonUniqueId","2","Body Change, Introduced, MultiChange","Restore the behavior of cssSelector before v1.16.2 for elements with an id (#2283)

* Restore the behavior of cssSelector before v1.16.2

* Optimized out id() and ownerDoc() calls

Fixes #2282

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","062d1900f7c57c366d5512e428ed30c71a1536ad","Phu Hung Nguyen"
"656","cssSelectorDoesntStackOverflow","cssSelectorDoesntStackOverflow","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"657","cssSelectorDoesntStackOverflow","cssSelectorDoesntStackOverflow","2","Body Change, Introduced, MultiChange","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"658","cssSelectorWithBracket","cssSelectorWithBracket","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"659","cssSelectorWithBracket","cssSelectorWithBracket","2","Body Change, Introduced, MultiChange","Handle escaped characters in consumeSubQuery

Fixes #2146
","a0537c7623ba84252c5535020227babdf6da314f","Jonathan Hedley"
"660","cssSelectorUnbalanced","cssSelectorUnbalanced","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"661","cssSelectorUnbalanced","cssSelectorUnbalanced","2","Body Change, Introduced, MultiChange","Handle escaped characters in consumeSubQuery

Fixes #2146
","a0537c7623ba84252c5535020227babdf6da314f","Jonathan Hedley"
"662","cssSelectorWithAsterisk","cssSelectorWithAsterisk","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"663","cssSelectorWithAsterisk","cssSelectorWithAsterisk","2","Body Change, Introduced, MultiChange","Test for #1998

Closes #1998

Was fixed by #2146
","d5debf82efb35bca3b82aaa72405dfdae8a620df","Jonathan Hedley"
"664","cssSelectorWithPipe","cssSelectorWithPipe","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"665","cssSelectorWithPipe","cssSelectorWithPipe","2","Body Change, Introduced, MultiChange","Test for #1998

Closes #1998

Was fixed by #2146
","d5debf82efb35bca3b82aaa72405dfdae8a620df","Jonathan Hedley"
"666","orphanSiblings","orphanSiblings","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"667","orphanSiblings","orphanSiblings","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"668","getElementsByAttributeStarting","getElementsByAttributeStarting","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"669","getElementsByAttributeStarting","getElementsByAttributeStarting","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"670","getElementsByAttributeValueNot","getElementsByAttributeValueNot","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"671","getElementsByAttributeValueNot","getElementsByAttributeValueNot","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"672","getElementsByAttributeValueStarting","getElementsByAttributeValueStarting","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"673","getElementsByAttributeValueStarting","getElementsByAttributeValueStarting","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"674","getElementsByAttributeValueEnding","getElementsByAttributeValueEnding","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"675","getElementsByAttributeValueEnding","getElementsByAttributeValueEnding","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"676","getElementsByAttributeValueContaining","getElementsByAttributeValueContaining","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"677","getElementsByAttributeValueContaining","getElementsByAttributeValueContaining","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"678","getElementsByAttributeValueMatchingPattern","getElementsByAttributeValueMatchingPattern","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"679","getElementsByAttributeValueMatchingPattern","getElementsByAttributeValueMatchingPattern","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"680","getElementsByAttributeValueMatching","getElementsByAttributeValueMatching","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"681","getElementsByAttributeValueMatching","getElementsByAttributeValueMatching","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"682","getElementsByAttributeValueMatchingValidation","getElementsByAttributeValueMatchingValidation","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"683","getElementsByAttributeValueMatchingValidation","getElementsByAttributeValueMatchingValidation","2","Body Change, Exceptions Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"684","getElementsByIndexEquals","getElementsByIndexEquals","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"685","getElementsByIndexEquals","getElementsByIndexEquals","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"686","getElementsContainingText","getElementsContainingText","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"687","getElementsContainingText","getElementsContainingText","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"688","getElementsContainingOwnText","getElementsContainingOwnText","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"689","getElementsContainingOwnText","getElementsContainingOwnText","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"690","getElementsMatchingTextValidation","getElementsMatchingTextValidation","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"691","getElementsMatchingTextValidation","getElementsMatchingTextValidation","2","Body Change, Exceptions Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"692","getElementsMatchingText","getElementsMatchingText","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"693","getElementsMatchingText","getElementsMatchingText","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"694","getElementsMatchingOwnText","getElementsMatchingOwnText","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"695","getElementsMatchingOwnText","getElementsMatchingOwnText","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"696","getElementsMatchingOwnTextValidation","getElementsMatchingOwnTextValidation","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"697","getElementsMatchingOwnTextValidation","getElementsMatchingOwnTextValidation","2","Body Change, Exceptions Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"698","hasText","hasText","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"699","hasText","hasText","3","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"700","hasText","hasText","3","Body Change","Use a traverser vs recursion for hasText

Also clarified the javadoc
","75bdf8ef13ea840f8b5154f8910a3482bedb951d","Jonathan Hedley"
"701","dataInCdataNode","dataInCdataNode","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"702","dataInCdataNode","dataInCdataNode","2","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"703","datanodesOutputCdataInXhtml","datanodesOutputCdataInXhtml","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"704","datanodesOutputCdataInXhtml","datanodesOutputCdataInXhtml","3","Body Change, Introduced, MultiChange","Wrap Datanodes in CDATA when producing XML (#1720)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","1657e8fd65889cd4a60052ed31f9cb245c02dfad","Max Fortun"
"705","datanodesOutputCdataInXhtml","datanodesOutputCdataInXhtml","3","Body Change","Output polyglot commented CData sections in XML mode

And only if the data does not already contain a (pseudo) CData section.

Fixes #2078
","8a4bdaef7aeaaa62d4016b890cdca87b1a701b7f","Jonathan Hedley"
"706","datanodesOutputExistingCdataInXhtml","datanodesOutputExistingCdataInXhtml","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"707","datanodesOutputExistingCdataInXhtml","datanodesOutputExistingCdataInXhtml","2","Body Change, Introduced, MultiChange","Output polyglot commented CData sections in XML mode

And only if the data does not already contain a (pseudo) CData section.

Fixes #2078
","8a4bdaef7aeaaa62d4016b890cdca87b1a701b7f","Jonathan Hedley"
"708","outerHtmlAppendable","outerHtmlAppendable","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"709","outerHtmlAppendable","outerHtmlAppendable","3","Body Change, Introduced, MultiChange","Added test cases for getElementsBy* methods
","e56c22f64a6a69a6eeb4c266874326f0959cc235","Jonathan Hedley"
"710","outerHtmlAppendable","outerHtmlAppendable","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"711","rubyInline","rubyInline","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"712","rubyInline","rubyInline","2","Body Change, Introduced, MultiChange","Make the <rtc> inline
","195f484ba5de224a3c1be6086e8c0dab066557d9","Jonathan Hedley"
"713","nestedFormatAsInlinePrintsAsBlock","nestedFormatAsInlinePrintsAsBlock","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"714","nestedFormatAsInlinePrintsAsBlock","nestedFormatAsInlinePrintsAsBlock","2","Body Change, Introduced, MultiChange","Nested inlineable elements should indent

Fixes #1926
","8e2b86839b276191cf215a3500c405b1489cb215","Jonathan Hedley"
"715","emptyDetachesChildren","emptyDetachesChildren","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"716","emptyDetachesChildren","emptyDetachesChildren","2","Body Change, Introduced, MultiChange","Clear child nodes' parent on parent.empty()

Fixes #2013
","eff15210b0507f3eb20ff71a201061e841b40c77","Jonathan Hedley"
"717","emptyAndAddPreviousChild","emptyAndAddPreviousChild","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"718","emptyAndAddPreviousChild","emptyAndAddPreviousChild","2","Body Change, Introduced, MultiChange","Clear child nodes' parent on parent.empty()

Fixes #2013
","eff15210b0507f3eb20ff71a201061e841b40c77","Jonathan Hedley"
"719","emptyAndAddPreviousDescendant","emptyAndAddPreviousDescendant","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"720","emptyAndAddPreviousDescendant","emptyAndAddPreviousDescendant","2","Body Change, Introduced, MultiChange","Clear child nodes' parent on parent.empty()

Fixes #2013
","eff15210b0507f3eb20ff71a201061e841b40c77","Jonathan Hedley"
"721","xmlSyntaxSetsEscapeMode","xmlSyntaxSetsEscapeMode","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"722","xmlSyntaxSetsEscapeMode","xmlSyntaxSetsEscapeMode","2","Body Change, Introduced, MultiChange","Set EscapeMode=xhtml when OutputSettings.Syntax = XML

Was already configured when using the Parser.xmlParser(), but this will help users when parsing as HTML and then converting the output to XML.
","c61ce94f35c74f4b2410cb8429511f19a11d5139","Jonathan Hedley"
"723","attribute","attribute","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"724","attribute","attribute","2","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"725","testSelectStream","testSelectStream","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"726","testSelectStream","testSelectStream","2","Body Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"727","elementIsIterable","elementIsIterable","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"728","elementIsIterable","elementIsIterable","2","Body Change, Introduced, MultiChange","Removed previously deprecated class & method, enable Element Iterator (#2246)

","d72a5338ce267744fad7d3bc35ea1495376b0bab","Jonathan Hedley"
"729","htmlToXmlNormalizes","htmlToXmlNormalizes","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"730","htmlToXmlNormalizes","htmlToXmlNormalizes","2","Body Change, Introduced, MultiChange","Normalize XML tag names

Fixes #1496
","61923e0455c46cc6320188b13c613302f01e7880","Jonathan Hedley"
"731","invalidCharactersDiscardedInXml","invalidCharactersDiscardedInXml","1","Body Change, Introduced, MultiChange","Invalid XML characters should be dropped, not encoded

Fixes #1743
","001752f1a0b73ae17668dc9fd4c5942424a6c1e2","Jonathan Hedley"
"732","asList","asList","1","Body Change, Introduced, MultiChange","Added Elements.deselect and Elements.asList

Methods to allow modification of the contents of the list without modifying the DOM.

Fixes #2100
","aa6e0d92728d67e242515d41c14188d5efe1c730","Jonathan Hedley"
"733","deselect","deselect","1","Body Change, Introduced, MultiChange","Added Elements.deselect and Elements.asList

Methods to allow modification of the contents of the list without modifying the DOM.

Fixes #2100
","aa6e0d92728d67e242515d41c14188d5efe1c730","Jonathan Hedley"
"734","deselectAll","deselectAll","1","Body Change, Introduced, MultiChange","Added `Elements.deselectAll()`, like `clear()` but no DOM impact

Fixes #2100

Also added see references
","63023f8b29048e2768cb6c0cfa5c168357b2955d","Jonathan Hedley"
"735","testPathScopedCookies","testPathScopedCookies","1","Body Change","Ensure that response.cookies() includes all set cookies

A rollback from b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73. The net effect is that cookies() will include any cookies set on the response, but if there is a duplicate, the last one will be set. The cookies via the cookie store are still appropriately scoped.
","8dec9c302e2f2d2b5560fefa0d3ed7e1b813e195","Jonathan Hedley"
"736","testHtml5Charset","testHtml5Charset","4","Body Change, Exceptions Change, Introduced, MultiChange","Auto detect charset from HTML5 <meta charset> tag if present
","4f2ff53293ce4afb609ff7cb8b2d2fd27240cb39","Jonathan Hedley"
"737","testHtml5Charset","testHtml5Charset","4","Body Change, Exceptions Change, MultiChange","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"738","testHtml5Charset","testHtml5Charset","4","Body Change","Initial implementation of Connection
","ce843ec83988e3e3318fa7db38133b06be741a1f","Jonathan Hedley"
"739","testHtml5Charset","testHtml5Charset","4","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"740","testBrokenHtml5CharsetWithASingleDoubleQuote","testBrokenHtml5CharsetWithASingleDoubleQuote","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"741","testLowercaseUtf8Charset","testLowercaseUtf8Charset","1","Body Change, Exceptions Change, Introduced, MultiChange","Make sure the HTML parser is correctly reset before reuse

Otherwise the stack and current form element were stuffed if the
DataUtil needed to reparse after switching content encoding.

Also, was needlessly redecoding when the character set was ""utf-8""
because the check was case sensitive.
","1203bd459fe137e78a2a6dc2969f3c4995b726ce","Jonathan Hedley"
"742","testXwiki","testXwiki","3","Body Change, Exceptions Change, Introduced, MultiChange","Preserve the mark when buffering

So that we can rewind if required.

Fixes #1324
","62c0595813b817ec593b0941ca4c3f29d10fac55","Jonathan Hedley"
"743","testXwiki","testXwiki","3","Body Change","Extra test for mark invalid issue
","19be649e596b3066ed0d98d009cdd5b73d14c08d","Jonathan Hedley"
"744","testXwiki","testXwiki","3","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"745","testXwikiExpanded","testXwikiExpanded","2","Body Change, Exceptions Change, Introduced, MultiChange","Extra test for mark invalid issue
","19be649e596b3066ed0d98d009cdd5b73d14c08d","Jonathan Hedley"
"746","testXwikiExpanded","testXwikiExpanded","2","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"747","testWikiExpandedFromString","testWikiExpandedFromString","3","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"748","testWikiExpandedFromString","testWikiExpandedFromString","3","Body Change, Exceptions Change, Introduced, MultiChange","Moved some longer running tests to IT tests

And allow longer runtime for slower CPUs
","d9dfc4a6f2769a7211113b54427b5fd8966f418a","Jonathan Hedley"
"749","testWikiExpandedFromString","testWikiExpandedFromString","3","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"750","testWikiFromString","testWikiFromString","3","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"751","testWikiFromString","testWikiFromString","3","Body Change, Exceptions Change, Introduced, MultiChange","Moved some longer running tests to IT tests

And allow longer runtime for slower CPUs
","d9dfc4a6f2769a7211113b54427b5fd8966f418a","Jonathan Hedley"
"752","testWikiFromString","testWikiFromString","3","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"753","testFileParseNoCharsetMethod","testFileParseNoCharsetMethod","2","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"754","testFileParseNoCharsetMethod","testFileParseNoCharsetMethod","2","Body Change, Exceptions Change, Introduced, MultiChange","Added Jsoup.parse(File) method

Fixes #1693
","3a6e7fa748edc8893e7b110cd530662f53725cee","Jonathan Hedley"
"755","getFile","getFile","5","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"756","getFile","getFile","5","Body Change, Introduced, MultiChange","Flipped integration test to use Parse(File)
","01342bcffce91c36e280158b7c6f2e2cb72237b6","Jonathan Hedley"
"757","getFile","getFile","5","Modifier Change","Merge branch 'pr/306'
","d9ec262369138ca840d4a34473427e401c4cc4a4","Jonathan Hedley"
"758","getFile","getFile","5","Modifier Change","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"759","getFile","getFile","5","Body Change","Test for application/rss+xml
","91fcf208945f458b176c2b6915b53bad095cf527","Jonathan Hedley"
"760","getPath","getPath","2","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"761","getPath","getPath","2","Body Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"762","inputStreamFrom","inputStreamFrom","4","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"763","inputStreamFrom","inputStreamFrom","4","Body Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"764","inputStreamFrom","inputStreamFrom","4","Modifier Change","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"765","inputStreamFrom","inputStreamFrom","4","Body Change","Test for application/rss+xml
","91fcf208945f458b176c2b6915b53bad095cf527","Jonathan Hedley"
"766","getFileAsString","getFileAsString","4","File Renamed","Added integration test for www.news.com.au
","e9e331c2b922a5ac3f89ab8b3ca364df3ab11080","Jonathan Hedley"
"767","getFileAsString","getFileAsString","4","Body Change, Exceptions Change, Introduced, MultiChange","Moved some longer running tests to IT tests

And allow longer runtime for slower CPUs
","d9dfc4a6f2769a7211113b54427b5fd8966f418a","Jonathan Hedley"
"768","getFileAsString","getFileAsString","4","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"769","getFileAsString","getFileAsString","4","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"770","echoUrls","echoUrls","1","Body Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"771","proxyForSession","proxyForSession","1","Body Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"772","canAuthenticateToProxy","canAuthenticateToProxy","1","Body Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"773","canAuthToProxyAndServer","canAuthToProxyAndServer","1","Body Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"774","doIt","doIt","3","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"775","doIt","doIt","3","Body Change, Exceptions Change, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"776","doIt","doIt","3","Body Change, Exceptions Change, MultiChange","Execute test locally
","a36c140174a86d0c1d49415af1fbe3a419565bf5","Jonathan Hedley"
"777","tlsUrlTo","tlsUrlTo","2","File Renamed","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"778","tlsUrlTo","tlsUrlTo","2","Body Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"779","setCookies","setCookies","1","Body Change","Ensure that response.cookies() includes all set cookies

A rollback from b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73. The net effect is that cookies() will include any cookies set on the response, but if there is a duplicate, the last one will be set. The cookies via the cookie store are still appropriately scoped.
","8dec9c302e2f2d2b5560fefa0d3ed7e1b813e195","Jonathan Hedley"
"780","doIt","doIt","1","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"781","main","main","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"782","main","main","2","Body Change","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"783","doIt","doIt","7","Exceptions Change","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"784","doIt","doIt","7","Body Change, Exceptions Change, MultiChange","Moved some URL tests to local servlet
","fd46489cd718ddea7b28f89953265e7ce4ec8372","Jonathan Hedley"
"785","doIt","doIt","7","Body Change, Exceptions Change, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"786","doIt","doIt","7","Body Change, Exceptions Change, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"787","doIt","doIt","7","Body Change, Exceptions Change, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"788","doIt","doIt","7","Modifier Change","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"789","doIt","doIt","7","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"790","write","write","1","Modifier Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"791","main","main","1","Body Change","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"792","createHandler","createHandler","2","File Renamed","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"793","createHandler","createHandler","2","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"794","onServerResponseHeaders","onServerResponseHeaders","1","Body Change","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"795","ConnectProxy","ConnectProxy","2","File Renamed","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"796","ConnectProxy","ConnectProxy","2","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"797","handleAuthentication","handleAuthentication","1","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"798","doIt","doIt","1","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"799","doIt","doIt","2","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"800","doIt","doIt","2","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"801","doIt","doIt","2","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"802","doIt","doIt","2","Exceptions Change","Use the CookieManager to populate response cookies

Vs manually parsing them. This corrects handling for the various properties (order, path, TLS only, etc) that were not handled in the simple cookie map previously.

Fixes #1831.
","b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73","Jonathan Hedley"
"803","doIt","doIt","2","Body Change, Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"804","doIt","doIt","2","Body Change, Exceptions Change, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"805","pause","pause","2","File Renamed","Tidy up
","6bce3ded2afd743f1727564f17a6d46200ddd32a","Jonathan Hedley"
"806","pause","pause","2","Body Change, Introduced, MultiChange","Improved handling of read timeout
","5edd9aed61290b5c6123a0b498e902cc74783430","Jonathan Hedley"
"807","doIt","doIt","1","Exceptions Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"808","doGet","doGet","2","Exceptions Change","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"809","doGet","doGet","2","Body Change, Exceptions Change, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"810","doPost","doPost","2","Exceptions Change","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"811","doPost","doPost","2","Body Change, Exceptions Change, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"812","doPut","doPut","2","Exceptions Change","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"813","doPut","doPut","2","Body Change, Exceptions Change, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"814","doDelete","doDelete","2","Body Change, Exceptions Change, MultiChange","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"815","doDelete","doDelete","2","Body Change, Exceptions Change, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"816","testFiles","testFiles","2","File Renamed","Don't recurse chasing XML declarations

Fixes #1539
","f84549e9fb5618cf58e37dc2f00adb8a279da371","Jonathan Hedley"
"817","testFiles","testFiles","2","Body Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"818","bookmark","bookmark","1","Body Change, Introduced, MultiChange","Rangecheck bookmarks

Fixes #1576
","478b568061b317c79ba6fd018d9ac5fa931bdb02","Jonathan Hedley"
"819","testHtmlParse","testHtmlParse","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"820","testXmlParse","testXmlParse","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"821","multiThread","multiThread","1","Body Change","Removed externally sourced files from integration tests

As jsoup has evolved, we now have specific unit test coverage for anything previously caught by these integration tests, and so they are no longer required.
","00fc2da5e47e0150ec9a7b4ac87623abb5ae3982","Jonathan Hedley"
"822","multiThreadWithoutNewRequestBlowsUp","multiThreadWithoutNewRequestBlowsUp","3","Exceptions Change","Removed externally sourced files from integration tests

As jsoup has evolved, we now have specific unit test coverage for anything previously caught by these integration tests, and so they are no longer required.
","00fc2da5e47e0150ec9a7b4ac87623abb5ae3982","Jonathan Hedley"
"823","multiThreadWithoutNewRequestBlowsUp","multiThreadWithoutNewRequestBlowsUp","3","Body Change, Exceptions Change, MultiChange","Relaxed the multi-thread w/o newRequest test

When the CI workers are busy and can't execute 20 requests within 10,000 milliseconds, the test would flake.
","6423e659d5da3de14fc7bf2e31f3383d5c3646c4","Jonathan Hedley"
"824","multiThreadWithoutNewRequestBlowsUp","multiThreadWithoutNewRequestBlowsUp","3","Exceptions Change","Tweak SessionIT test

Seeing warnings in CI but not locally; exception logs as a ValidationException but isn't instanceof IllegalArgumentException? Odd, because the later assertions on count still passed (?), and so not counted as an IT failure.
","5594c17333c60f27bb4a1f032c3c6956954d9162","Jonathan Hedley"
"825","multiThreadWithProgressListener","multiThreadWithProgressListener","2","Body Change, Exceptions Change, Introduced, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"826","multiThreadWithProgressListener","multiThreadWithProgressListener","2","Exceptions Change","Tweak SessionIT test

Seeing warnings in CI but not locally; exception logs as a ValidationException but isn't instanceof IllegalArgumentException? Odd, because the later assertions on count still passed (?), and so not counted as an IT failure.
","5594c17333c60f27bb4a1f032c3c6956954d9162","Jonathan Hedley"
"827","uncaughtException","uncaughtException","1","Body Change","Tweak SessionIT test

Seeing warnings in CI but not locally; exception logs as a ValidationException but isn't instanceof IllegalArgumentException? Odd, because the later assertions on count still passed (?), and so not counted as an IT failure.
","5594c17333c60f27bb4a1f032c3c6956954d9162","Jonathan Hedley"
"828","setUp","setUp","4","Exceptions Change","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"829","setUp","setUp","4","Exceptions Change","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"830","setUp","setUp","4","Modifier Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"831","setUp","setUp","4","Body Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"832","emptyCookieJar","emptyCookieJar","1","Body Change, Introduced, MultiChange","Use the CookieManager to populate response cookies

Vs manually parsing them. This corrects handling for the various properties (order, path, TLS only, etc) that were not handled in the simple cookie map previously.

Fixes #1831.
","b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73","Jonathan Hedley"
"833","canConnectToLocalTlsServer","canConnectToLocalTlsServer","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"834","canConnectToLocalTlsServer","canConnectToLocalTlsServer","2","Body Change, Exceptions Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"835","fetchURIWithWhitespace","fetchURIWithWhitespace","1","Body Change, Exceptions Change, Introduced, MultiChange","Moved some URL tests to local servlet
","fd46489cd718ddea7b28f89953265e7ce4ec8372","Jonathan Hedley"
"836","ihVal","ihVal","2","Body Change","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"837","ihVal","ihVal","2","Modifier Change","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"838","throwsExceptionOn404","throwsExceptionOn404","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved some URL tests to local servlet
","fd46489cd718ddea7b28f89953265e7ce4ec8372","Jonathan Hedley"
"839","throwsExceptionOn404","throwsExceptionOn404","2","Exceptions Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"840","ignoresExceptionIfSoConfigured","ignoresExceptionIfSoConfigured","1","Body Change, Exceptions Change, Introduced, MultiChange","Moved some URL tests to local servlet
","fd46489cd718ddea7b28f89953265e7ce4ec8372","Jonathan Hedley"
"841","doesPostMultipartWithoutInputstream","doesPostMultipartWithoutInputstream","3","Body Change, Exceptions Change, Introduced, MultiChange","Allow multipart form submission by setting header; automatically add
boundary.
","56ea479e22fdcb360696c5a922d6b45d9445e06d","baodn"
"842","doesPostMultipartWithoutInputstream","doesPostMultipartWithoutInputstream","3","Body Change, Exceptions Change, MultiChange","Changelog and visibility for auto multipater
","68ff8cbe7ad847059737a09c567a501a7f1d251f","Jonathan Hedley"
"843","doesPostMultipartWithoutInputstream","doesPostMultipartWithoutInputstream","3","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"844","canSendSecFetchHeaders","canSendSecFetchHeaders","1","Body Change, Exceptions Change, Introduced, MultiChange","Enable ""restricted"" headers, so that we can set Sec-Fetch-Mode etc

Fixes #1461
","9edccb17aec39e0c4d1182dac88b91c634fdf456","Jonathan Hedley"
"845","secFetchHeadersSurviveRedirect","secFetchHeadersSurviveRedirect","1","Body Change, Exceptions Change, Introduced, MultiChange","Enable ""restricted"" headers, so that we can set Sec-Fetch-Mode etc

Fixes #1461
","9edccb17aec39e0c4d1182dac88b91c634fdf456","Jonathan Hedley"
"846","sendsRequestBodyJsonWithData","sendsRequestBodyJsonWithData","2","Exceptions Change","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"847","sendsRequestBodyJsonWithData","sendsRequestBodyJsonWithData","2","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"848","sendsRequestBodyJsonWithoutData","sendsRequestBodyJsonWithoutData","2","Exceptions Change","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"849","sendsRequestBodyJsonWithoutData","sendsRequestBodyJsonWithoutData","2","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"850","sendsRequestBody","sendsRequestBody","2","Exceptions Change","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"851","sendsRequestBody","sendsRequestBody","2","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"852","sendsRequestBodyWithUrlParams","sendsRequestBodyWithUrlParams","2","Exceptions Change","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"853","sendsRequestBodyWithUrlParams","sendsRequestBodyWithUrlParams","2","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"854","sendsRequestBodyStream","sendsRequestBodyStream","3","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"855","sendsRequestBodyStream","sendsRequestBodyStream","3","Body Change, Exceptions Change, Introduced, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"856","sendsRequestBodyStream","sendsRequestBodyStream","3","Body Change, Exceptions Change, MultiChange","Removed ancient external network tests
","9d15c00dafdbd472d744e994068d3733a5da9f52","Jonathan Hedley"
"857","doesGet","doesGet","1","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"858","streamParserGet","streamParserGet","1","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"859","echoSelect","echoSelect","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"860","echoSelect","echoSelect","2","Body Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"861","doesDeleteWithBody","doesDeleteWithBody","1","Body Change, Exceptions Change, Introduced, MultiChange","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"862","doesDeleteWithoutBody","doesDeleteWithoutBody","1","Body Change, Exceptions Change, Introduced, MultiChange","Enabled request bodies for DELETEs

Fixes #1972
","23573ef31ce1320fa2bf57fb6aaf5e51006d69e7","Jonathan Hedley"
"863","postFiles","postFiles","1","Body Change, Exceptions Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"864","multipleParsesOkAfterBufferUp","multipleParsesOkAfterBufferUp","1","Body Change, Exceptions Change, Introduced, MultiChange","Moved more tests to the local server
","72edc30eeda8ef001c043cc4ca173c6311bec887","Jonathan Hedley"
"865","bodyAfterParseThrowsValidationError","bodyAfterParseThrowsValidationError","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved more tests to the local server
","72edc30eeda8ef001c043cc4ca173c6311bec887","Jonathan Hedley"
"866","bodyAfterParseThrowsValidationError","bodyAfterParseThrowsValidationError","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"867","bodyAndBytesAvailableBeforeParse","bodyAndBytesAvailableBeforeParse","1","Body Change, Exceptions Change, Introduced, MultiChange","Moved more tests to the local server
","72edc30eeda8ef001c043cc4ca173c6311bec887","Jonathan Hedley"
"868","parseParseThrowsValidates","parseParseThrowsValidates","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved more tests to the local server
","72edc30eeda8ef001c043cc4ca173c6311bec887","Jonathan Hedley"
"869","parseParseThrowsValidates","parseParseThrowsValidates","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"870","multiCookieSet","multiCookieSet","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved more tests to the local server
","72edc30eeda8ef001c043cc4ca173c6311bec887","Jonathan Hedley"
"871","multiCookieSet","multiCookieSet","2","Body Change, Exceptions Change, MultiChange","Removed external URL from testsuite

Don't want external dependencies on the build
","8d1d503913a68e549b5c4a94717c62cf3f64507a","jhy"
"872","requestCookiesSurviveRedirect","requestCookiesSurviveRedirect","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"873","requestCookiesSurviveRedirect","requestCookiesSurviveRedirect","2","Body Change, Exceptions Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"874","supportsDeflate","supportsDeflate","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"875","supportsDeflate","supportsDeflate","2","Body Change, Exceptions Change, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"876","handlesLargerContentLengthParseRead","handlesLargerContentLengthParseRead","2","Body Change, Exceptions Change, Introduced, MultiChange","Updata Jetty servlet to current

This is used for integ tests, and is not distributed with the jar. Had to update some tests - Jetty won't write past the Content Length size any more. Might add some more tests around this.
","4e052740436ce42efa1bf4cb49204f90e4796fd7","jhy"
"877","handlesLargerContentLengthParseRead","handlesLargerContentLengthParseRead","2","Body Change, Exceptions Change, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"878","handlesWrongContentLengthDuringBufferedRead","handlesWrongContentLengthDuringBufferedRead","1","Body Change, Exceptions Change, Introduced, MultiChange","Updata Jetty servlet to current

This is used for integ tests, and is not distributed with the jar. Had to update some tests - Jetty won't write past the Content Length size any more. Might add some more tests around this.
","4e052740436ce42efa1bf4cb49204f90e4796fd7","jhy"
"879","handlesRedirect","handlesRedirect","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"880","handlesRedirect","handlesRedirect","2","Body Change, Exceptions Change, Introduced, MultiChange","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"881","handlesEmptyRedirect","handlesEmptyRedirect","3","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"882","handlesEmptyRedirect","handlesEmptyRedirect","3","Body Change, Exceptions Change, Introduced, MultiChange","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"883","handlesEmptyRedirect","handlesEmptyRedirect","3","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"884","doesNotPostFor302","doesNotPostFor302","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"885","doesNotPostFor302","doesNotPostFor302","2","Body Change, Exceptions Change, Introduced, MultiChange","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"886","doesPostFor307","doesPostFor307","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"887","doesPostFor307","doesPostFor307","2","Body Change, Exceptions Change, Introduced, MultiChange","Some redirect tests
","77966f79996f3fc4c7828b4d02a926c071faf040","Jonathan Hedley"
"888","getUtf8Bom","getUtf8Bom","4","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"889","getUtf8Bom","getUtf8Bom","4","Body Change, Exceptions Change, Introduced, MultiChange","If the input file or URL is binary, throw an exception

Prevents useless processing and apparent hangs

Fixes #1192
","247c5d05f4529e55aa1fdbd333f99e323809b5e0","Jonathan Hedley"
"890","getUtf8Bom","getUtf8Bom","4","Body Change, Exceptions Change, MultiChange","Get location from path info
","27a445b029b02bced263a0686f40a4f373827953","Jonathan Hedley"
"891","getUtf8Bom","getUtf8Bom","4","Body Change, Exceptions Change, MultiChange","Test for application/rss+xml
","91fcf208945f458b176c2b6915b53bad095cf527","Jonathan Hedley"
"892","streamerGetUtf8Bom","streamerGetUtf8Bom","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"893","streamerGetUtf8Bom","streamerGetUtf8Bom","2","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"894","testBinaryContentTypeThrowsException","testBinaryContentTypeThrowsException","4","Body Change, Exceptions Change, Introduced, MultiChange","If the input file or URL is binary, throw an exception

Prevents useless processing and apparent hangs

Fixes #1192
","247c5d05f4529e55aa1fdbd333f99e323809b5e0","Jonathan Hedley"
"895","testBinaryContentTypeThrowsException","testBinaryContentTypeThrowsException","4","Body Change, Exceptions Change, MultiChange","Get location from path info
","27a445b029b02bced263a0686f40a4f373827953","Jonathan Hedley"
"896","testBinaryContentTypeThrowsException","testBinaryContentTypeThrowsException","4","Exceptions Change","Test for application/rss+xml
","91fcf208945f458b176c2b6915b53bad095cf527","Jonathan Hedley"
"897","testBinaryContentTypeThrowsException","testBinaryContentTypeThrowsException","4","Exceptions Change","Allow any XML mimetype in Connection

Fixes #2059
","58521a45067f5c4fa558cb090480fa4b2e407056","Jonathan Hedley"
"898","testParseRss","testParseRss","4","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"899","testParseRss","testParseRss","4","Body Change, Exceptions Change, Introduced, MultiChange","Test for application/rss+xml
","91fcf208945f458b176c2b6915b53bad095cf527","Jonathan Hedley"
"900","testParseRss","testParseRss","4","Body Change, Exceptions Change, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"901","testParseRss","testParseRss","4","Exceptions Change","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"902","testSupplyParserToConnection","testSupplyParserToConnection","1","Body Change, Exceptions Change, Introduced, MultiChange","Execute test locally
","a36c140174a86d0c1d49415af1fbe3a419565bf5","Jonathan Hedley"
"903","imageXmlMimeType","imageXmlMimeType","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"904","imageXmlMimeType","imageXmlMimeType","2","Body Change, Exceptions Change, Introduced, MultiChange","Allow any XML mimetype in Connection

Fixes #2059
","58521a45067f5c4fa558cb090480fa4b2e407056","Jonathan Hedley"
"905","canFetchBinaryAsBytes","canFetchBinaryAsBytes","3","Body Change, Exceptions Change, Introduced, MultiChange","Test binary to byte fetch OK
","b87c013947d59cca92e853a02f2d2d6ae41ef586","Jonathan Hedley"
"906","canFetchBinaryAsBytes","canFetchBinaryAsBytes","3","Body Change, Exceptions Change, MultiChange","Get location from path info
","27a445b029b02bced263a0686f40a4f373827953","Jonathan Hedley"
"907","canFetchBinaryAsBytes","canFetchBinaryAsBytes","3","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"908","handlesUnknownEscapesAcrossBuffer","handlesUnknownEscapesAcrossBuffer","2","Body Change, Exceptions Change, Introduced, MultiChange","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"909","handlesUnknownEscapesAcrossBuffer","handlesUnknownEscapesAcrossBuffer","2","Body Change, Exceptions Change, MultiChange","Removed external URL test dependency

Would cause test failures if no network was available during test execution. Since it was authored, the buffer variants that tripped the original bug have had better coverage added, no it is no longer required.

Fixes #1733
Closes #1754
","103d7864a6d54391a2a98c5027e03d5a777ebc71","Jonathan Hedley"
"910","postHtmlFile","postHtmlFile","2","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented the form upload test
","1b170925e005cb7d42c874827d72d677cfee74b2","Jonathan Hedley"
"911","postHtmlFile","postHtmlFile","2","Body Change, Exceptions Change, MultiChange","Removed externally sourced files from integration tests

As jsoup has evolved, we now have specific unit test coverage for anything previously caught by these integration tests, and so they are no longer required.
","00fc2da5e47e0150ec9a7b4ac87623abb5ae3982","Jonathan Hedley"
"912","fetchHandlesXml","fetchHandlesXml","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"913","fetchHandlesXml","fetchHandlesXml","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"914","fetchHandlesXml","fetchHandlesXml","2","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"915","fetchHandlesXmlAsHtmlWhenParserSet","fetchHandlesXmlAsHtmlWhenParserSet","2","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"916","fetchHandlesXmlAsHtmlWhenParserSet","fetchHandlesXmlAsHtmlWhenParserSet","2","Body Change, Exceptions Change, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"917","combinesSameHeadersWithComma","combinesSameHeadersWithComma","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"918","sendHeadRequest","sendHeadRequest","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"919","fetchToW3c","fetchToW3c","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"920","baseHrefCorrectAfterHttpEquiv","baseHrefCorrectAfterHttpEquiv","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"921","maxBodySize","maxBodySize","3","Body Change, Exceptions Change, Introduced, MultiChange","Reimplemented some URL fetch tests to use local Jetty server
","60bf584667ab1e3cb03ad02209b3b9006bb58519","Jonathan Hedley"
"922","maxBodySize","maxBodySize","3","Exceptions Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"923","maxBodySize","maxBodySize","3","Exceptions Change","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"924","repeatable","repeatable","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"925","repeatable","repeatable","2","Body Change, Exceptions Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"926","maxBodySizeInReadToByteBuffer","maxBodySizeInReadToByteBuffer","1","Body Change, Exceptions Change, Introduced, MultiChange","In readToByteBuffer, read to max, not the internal buffer size

Fixes #1774. Regressed by #1671.
","ccbd65f3bb10922b89f381c3141c11a10c68ee5c","Jonathan Hedley"
"927","formLoginFlow","formLoginFlow","4","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"928","formLoginFlow","formLoginFlow","4","Body Change, Exceptions Change, Introduced, MultiChange","Don't copy request data or body on newRequest()

Enables multi-step forms, or requests after a form submission, without sending data from earlier submissions.

Fixes #1778
","a242df8520f59cbdfcf15a0f55fdf22d14fa9ad6","Jonathan Hedley"
"929","formLoginFlow","formLoginFlow","4","Body Change, Exceptions Change, MultiChange","Simplify form retrieval
","029a4869d10a52762b3af4425ad64fede389673c","Jonathan Hedley"
"930","formLoginFlow","formLoginFlow","4","Exceptions Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"931","formLoginFlow2","formLoginFlow2","4","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"932","formLoginFlow2","formLoginFlow2","4","Body Change, Exceptions Change, Introduced, MultiChange","Don't copy request data or body on newRequest()

Enables multi-step forms, or requests after a form submission, without sending data from earlier submissions.

Fixes #1778
","a242df8520f59cbdfcf15a0f55fdf22d14fa9ad6","Jonathan Hedley"
"933","formLoginFlow2","formLoginFlow2","4","Body Change, Exceptions Change, MultiChange","Simplify form retrieval
","029a4869d10a52762b3af4425ad64fede389673c","Jonathan Hedley"
"934","formLoginFlow2","formLoginFlow2","4","Body Change, Exceptions Change, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"935","preservesUrlFragment","preservesUrlFragment","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"936","preservesUrlFragment","preservesUrlFragment","2","Body Change, Exceptions Change, Introduced, MultiChange","Test to confirm #hash fragments are retained

Closes #1686
","434f251271c2e4465e009b44ecc3865fdb72b84b","Jonathan Hedley"
"937","fetchUnicodeUrl","fetchUnicodeUrl","4","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"938","fetchUnicodeUrl","fetchUnicodeUrl","4","Body Change, Exceptions Change, Introduced, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"939","fetchUnicodeUrl","fetchUnicodeUrl","4","Body Change, Exceptions Change, MultiChange","Encode QS in test

If not encoded, was failing on Windows due to default charset difference.

Todo - as a convenience, could look at encoding user input QS (as well as generated in jsoup data keyvals)
","f1d246c406eea37299610690421c6205007b2bfe","Jonathan Hedley"
"940","fetchUnicodeUrl","fetchUnicodeUrl","4","Body Change, Exceptions Change, MultiChange","Escape non-ascii characters in URL query and anchor

Improves #1914
","0121311b1bd56cbbd29e9b291d42564d5135afa5","Jonathan Hedley"
"941","willEscapePathInRedirect","willEscapePathInRedirect","2","File Renamed","SlowRider test for interruptable read
","7d8abb78a1d0c4cdfa93e7e96e9b2e625486e99f","Jonathan Hedley"
"942","willEscapePathInRedirect","willEscapePathInRedirect","2","Body Change, Exceptions Change, Introduced, MultiChange","Improved URL component escaping

Checks for specific unsafe characters

Fixes #2142
","6c0c2d4514278a82eb0868c5d978612a79c6d058","Jonathan Hedley"
"943","echoUrls","echoUrls","1","Body Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"944","failsIfNotAuthenticated","failsIfNotAuthenticated","1","Body Change, Exceptions Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"945","canAuthenticate","canAuthenticate","1","Body Change, Exceptions Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"946","incorrectAuth","incorrectAuth","2","Body Change, Exceptions Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"947","incorrectAuth","incorrectAuth","2","Body Change, Exceptions Change, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"948","progressListener","progressListener","4","Body Change, Exceptions Change, Introduced, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"949","progressListener","progressListener","4","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"950","progressListener","progressListener","4","Exceptions Change","Relax the progress emission count test

With less overall buffering now we may have more granular progress emits.
","c778c3aea78f402252c35c958721242755e6e187","Jonathan Hedley"
"951","progressListener","progressListener","4","Exceptions Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"952","canInterruptBodyStringRead","canInterruptBodyStringRead","2","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"953","canInterruptBodyStringRead","canInterruptBodyStringRead","2","Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"954","canInterruptDocumentRead","canInterruptDocumentRead","3","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"955","canInterruptDocumentRead","canInterruptDocumentRead","3","Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"956","canInterruptDocumentRead","canInterruptDocumentRead","3","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"957","canInterruptThenJoinASpawnedThread","canInterruptThenJoinASpawnedThread","3","File Renamed","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"958","canInterruptThenJoinASpawnedThread","canInterruptThenJoinASpawnedThread","3","Body Change, Exceptions Change, Introduced, MultiChange","Don't clear interrupt with Thread.interrupted

Allows caller to spawn a thread, execute, interrupt, and join.

Fixes #1991
","04b3a82861ae0d2a6317cf4466e3d7e021d1beaa","Jonathan Hedley"
"959","canInterruptThenJoinASpawnedThread","canInterruptThenJoinASpawnedThread","3","Exceptions Change","Relax the spawned test timeout

When the GitHub Runners are busy, the first thread may complete before the second thread gets a chance to run.
","02bbe6e093113e6a3a5f48ab8ab325df8c90e2aa","Jonathan Hedley"
"960","totalTimeout","totalTimeout","2","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"961","totalTimeout","totalTimeout","2","Exceptions Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"962","streamParserUncheckedExceptionOnTimeoutInStream","streamParserUncheckedExceptionOnTimeoutInStream","2","File Renamed","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"963","streamParserUncheckedExceptionOnTimeoutInStream","streamParserUncheckedExceptionOnTimeoutInStream","2","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"964","streamParserCheckedExceptionOnTimeoutInSelect","streamParserCheckedExceptionOnTimeoutInSelect","2","File Renamed","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"965","streamParserCheckedExceptionOnTimeoutInSelect","streamParserCheckedExceptionOnTimeoutInSelect","2","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"966","remainingAfterFirstRead","remainingAfterFirstRead","3","Body Change, Exceptions Change, Introduced, MultiChange","Re-enabled ConstrainedInputStream tests

Using local Jetty server, in IT tests
","b0c206f0dad656803c9b8a6224dbd68930d1ed77","Jonathan Hedley"
"967","remainingAfterFirstRead","remainingAfterFirstRead","3","Body Change, Exceptions Change, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"968","remainingAfterFirstRead","remainingAfterFirstRead","3","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"969","noLimitAfterFirstRead","noLimitAfterFirstRead","3","Body Change, Exceptions Change, Introduced, MultiChange","Re-enabled ConstrainedInputStream tests

Using local Jetty server, in IT tests
","b0c206f0dad656803c9b8a6224dbd68930d1ed77","Jonathan Hedley"
"970","noLimitAfterFirstRead","noLimitAfterFirstRead","3","Body Change, Exceptions Change, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"971","noLimitAfterFirstRead","noLimitAfterFirstRead","3","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"972","bodyStreamConstrainedViaBufferUp","bodyStreamConstrainedViaBufferUp","3","File Renamed","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"973","bodyStreamConstrainedViaBufferUp","bodyStreamConstrainedViaBufferUp","3","Body Change, Exceptions Change, Introduced, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"974","bodyStreamConstrainedViaBufferUp","bodyStreamConstrainedViaBufferUp","3","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"975","testHtmlParse","testHtmlParse","1","Modifier Change","Disable the fuzz timeout integration tests

These are flaky if the CPU allocation on the GitHub runners is low. And aren't really specified. They are intended to catch regressions in the parse time for (somewhat maliciously crafted) input. Manually execute as performance tests instead for now.

There are other tests that are flaky if the CPU is very throttled - the timeout tests and interupt tests. Hoping that the CPU will get less throttled if we reduce the time of runs overall, and they will come good.
","f9f34df1a153c5438f6de60d892b2ebd99c68589","Jonathan Hedley"
"976","testXmlParse","testXmlParse","1","Modifier Change","Disable the fuzz timeout integration tests

These are flaky if the CPU allocation on the GitHub runners is low. And aren't really specified. They are intended to catch regressions in the parse time for (somewhat maliciously crafted) input. Manually execute as performance tests instead for now.

There are other tests that are flaky if the CPU is very throttled - the timeout tests and interupt tests. Hoping that the CPU will get less throttled if we reduce the time of runs overall, and they will come good.
","f9f34df1a153c5438f6de60d892b2ebd99c68589","Jonathan Hedley"
"977","newServer","newServer","3","File Renamed","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"978","newServer","newServer","3","Body Change, Introduced, MultiChange","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"979","newServer","newServer","3","Body Change","Jetty logs to stdout
","8ecb39eb4ec4e50126853ab05d54f7dd4f392de2","Jonathan Hedley"
"980","start","start","5","Modifier Change","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"981","start","start","5","Body Change","Simplified the Test Server startup

Removed the counting latch as Jetty will only start if it's not already running, so the latch was redundant. The stop wasn't being called anyway (which is good - we want the same server to run throughout the test session, vs restarting for each test class).

Also ensure the server binds only to localhost, vs to 0.0.0.0.

Fixes #1822
","5ed84f631e8889abc9b20ebcc898d053d77bb05d","Jonathan Hedley"
"982","start","start","5","Body Change","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"983","start","start","5","Body Change","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"984","start","start","5","Body Change","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"985","closeAuthedProxyConnections","closeAuthedProxyConnections","1","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"986","map","map","3","Body Change","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"987","map","map","3","Body Change","Add a test proxy (#2029)

* Added a proxy implementation and test cases
* Simplified servlet tests to implement all HTTP methods
","45d327f22a864253f12d69b4c8e0667ebd98d82b","Jonathan Hedley"
"988","map","map","3","Return Type Change, Body Change, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"989","ServletUrls","ServletUrls","1","Body Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"990","proxySettings","proxySettings","3","File Renamed","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"991","proxySettings","proxySettings","3","Body Change, Introduced, MultiChange","Remove unused
","84fd43766992401057b73f740acec4b82f1e3dd6","Jonathan Hedley"
"992","proxySettings","proxySettings","3","Body Change","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"993","addHttpsConnector","addHttpsConnector","1","Body Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"994","setupDefaultTrust","setupDefaultTrust","3","File Renamed","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"995","setupDefaultTrust","setupDefaultTrust","3","Body Change, Exceptions Change, Introduced, MultiChange","Tests jsoup's client support for HTTPS (#2032)

Tests jsoup's client support for HTTPS

During test time, adds a HTTPS listener to the Jetty test server. Uses a local self-signed cert.

Also refactored the test proxy to use Jetty's ProxyServlet, and ConnectHandler to support TLS proxy tunneling.
","7d46675bef8cf12397466b8a67599a792fa92b06","Jonathan Hedley"
"996","setupDefaultTrust","setupDefaultTrust","3","Exceptions Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"997","join","join","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"998","join","join","2","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"999","padding","padding","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1000","padding","padding","2","Body Change","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"1001","paddingInACan","paddingInACan","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1002","isBlank","isBlank","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1003","isNumeric","isNumeric","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1004","isWhitespace","isWhitespace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1005","normaliseWhiteSpace","normaliseWhiteSpace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1006","normaliseWhiteSpaceHandlesHighSurrogates","normaliseWhiteSpaceHandlesHighSurrogates","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1007","resolvesRelativeUrls","resolvesRelativeUrls","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"1008","resolvesRelativeUrls","resolvesRelativeUrls","2","Body Change","resolve abnormal urls in compliance with rfc3986 (#1482)

","8db724e82cc73f921adc2fad900e10655438e662","Yohei Kishimoto"
"1009","stripsControlCharsFromUrls","stripsControlCharsFromUrls","1","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"1010","allowsSpaceInUrl","allowsSpaceInUrl","1","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"1011","isAscii","isAscii","1","Body Change, Introduced, MultiChange","Added support for Internationalized Domain Names (IDNs)

Fixes #1300
","21b01b258952fd6aeb55d061f98321e5b9fe93e0","Jonathan Hedley"
"1012","caseSupport","caseSupport","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1013","attributeCaseNormalization","attributeCaseNormalization","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1014","attributesCaseNormalization","attributesCaseNormalization","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1015","isCaseSensitive","isCaseSensitive","2","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1016","isCaseSensitive","isCaseSensitive","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1017","canBeInsensitive","canBeInsensitive","2","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1018","canBeInsensitive","canBeInsensitive","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1019","equality","equality","2","Body Change","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1020","equality","equality","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1021","divSemantics","divSemantics","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1022","divSemantics","divSemantics","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1023","pSemantics","pSemantics","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1024","pSemantics","pSemantics","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1025","imgSemantics","imgSemantics","1","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1026","defaultSemantics","defaultSemantics","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1027","defaultSemantics","defaultSemantics","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1028","defaultSemantics","defaultSemantics","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1029","valueOfChecksNotNull","valueOfChecksNotNull","2","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1030","valueOfChecksNotNull","valueOfChecksNotNull","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1031","valueOfChecksNotEmpty","valueOfChecksNotEmpty","2","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1032","valueOfChecksNotEmpty","valueOfChecksNotEmpty","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1033","knownTags","knownTags","2","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1034","knownTags","knownTags","2","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1035","knownSvgNamespace","knownSvgNamespace","3","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1036","knownSvgNamespace","knownSvgNamespace","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1037","knownSvgNamespace","knownSvgNamespace","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1038","unknownTagNamespace","unknownTagNamespace","3","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1039","unknownTagNamespace","unknownTagNamespace","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1040","unknownTagNamespace","unknownTagNamespace","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1041","canSetOptions","canSetOptions","2","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1042","canSetOptions","canSetOptions","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1043","updateNameAndNamespace","updateNameAndNamespace","3","File Renamed","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1044","updateNameAndNamespace","updateNameAndNamespace","3","Body Change, Introduced, MultiChange","Setters for Tag name and namespace
","29bc6f50c0a31614835e9378f0d30fcae9bcc2e8","Jonathan Hedley"
"1045","updateNameAndNamespace","updateNameAndNamespace","3","Body Change","Confirm options are not changed
","005da925db2ff5fe592b79c1a4d77cb91882fcf0","Jonathan Hedley"
"1046","unescapeEntities","unescapeEntities","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1047","unescapeEntitiesHandlesLargeInput","unescapeEntitiesHandlesLargeInput","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1048","testUtf8","testUtf8","2","Body Change, Exceptions Change, Introduced, MultiChange","Testcase for #1557
","32d9878413a4cf5d392e57d8325153b3a6aa8c3c","jhy"
"1049","testUtf8","testUtf8","2","Body Change, Exceptions Change, MultiChange"," Use Charset.forname, to better cache charset lookups

","b873e21ea050b5f5c52b1d5b60bbe204dab22e99","Jeremy Landis"
"1050","testClone","testClone","1","Body Change, Introduced, MultiChange","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"1051","handlesNewLinesAndReturns","handlesNewLinesAndReturns","2","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1052","handlesNewLinesAndReturns","handlesNewLinesAndReturns","2","Body Change, Introduced, MultiChange","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1053","canStartWithEq","canStartWithEq","3","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1054","canStartWithEq","canStartWithEq","3","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1055","canStartWithEq","canStartWithEq","3","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"1056","strictAttributeUnescapes","strictAttributeUnescapes","4","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1057","strictAttributeUnescapes","strictAttributeUnescapes","4","Body Change, Introduced, MultiChange","Force strict entity matching (must be &xxx; and not &xxx) in element attributes.

Fixes #71
","f317c04acf821d61601f5d986252db40505153bc","Jonathan Hedley"
"1058","strictAttributeUnescapes","strictAttributeUnescapes","4","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1059","strictAttributeUnescapes","strictAttributeUnescapes","4","Body Change","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"1060","moreAttributeUnescapes","moreAttributeUnescapes","2","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1061","moreAttributeUnescapes","moreAttributeUnescapes","2","Body Change, Introduced, MultiChange","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"1062","parsesBooleanAttributes","parsesBooleanAttributes","4","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1063","parsesBooleanAttributes","parsesBooleanAttributes","4","Body Change, Introduced, MultiChange","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"1064","parsesBooleanAttributes","parsesBooleanAttributes","4","Body Change","Code improvements (#1216)

* Code simplified.

* Code improvements:

 - String concatenation avoided
 - Size checks replaced by isEmpty()
 - Initialization fixed
 - Missing Overrides added
","a4b5e826f2440b19ee2a98fdece7211433cfdaed","offa"
"1065","parsesBooleanAttributes","parsesBooleanAttributes","4","Body Change","Removed old deprecated classes and methods
","a7b0c2df028f49fa246c7b6a51b6b83011655865","Jonathan Hedley"
"1066","dropsSlashFromAttributeName","dropsSlashFromAttributeName","3","File Renamed","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"1067","dropsSlashFromAttributeName","dropsSlashFromAttributeName","3","Body Change, Introduced, MultiChange","Merge ahielg:master for attribute fix

Fixes #746
","f0f0e41e6c581de43dfaa98f5c2af52e43e42e62","Jonathan Hedley"
"1068","dropsSlashFromAttributeName","dropsSlashFromAttributeName","3","Body Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"1069","testCommentAndDocType","testCommentAndDocType","1","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1070","testSupplyParserToJsoupClass","testSupplyParserToJsoupClass","1","Body Change","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1071","testSupplyParserToDataStream","testSupplyParserToDataStream","1","Body Change, Exceptions Change, Introduced, MultiChange","Added test for invocation of alternate parser when loading from file input stream.
","6c8365b9a0e963c1f2dc46099116a5c77f48c5d8","Jonathan Hedley"
"1072","testDoesNotForceSelfClosingKnownTags","testDoesNotForceSelfClosingKnownTags","2","Body Change, Introduced, MultiChange","Test XML (un)known self-closing behaviour.
","96f316812fc31cd13c06a948cf84979c77b15f8b","Jonathan Hedley"
"1073","testDoesNotForceSelfClosingKnownTags","testDoesNotForceSelfClosingKnownTags","2","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"1074","handlesXmlDeclarationAsDeclaration","handlesXmlDeclarationAsDeclaration","3","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1075","handlesXmlDeclarationAsDeclaration","handlesXmlDeclarationAsDeclaration","3","Body Change, Introduced, MultiChange","When parsing in XML mode, preserve XML declarations (<?xml ... ?>).

Fixes #242
","caf61a4a0778a72ab713f72e9ef749bf373c98ac","Jonathan Hedley"
"1076","handlesXmlDeclarationAsDeclaration","handlesXmlDeclarationAsDeclaration","3","Body Change","Disable pretty printing of XML input by default
","20797a47313b115eb220f4df74d39da9de94f5e0","Jonathan Hedley"
"1077","xmlFragment","xmlFragment","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1078","xmlFragment","xmlFragment","2","Body Change, Introduced, MultiChange","Introduced Parser.parseXmlFragment(), to allow easy parsing of XML fragments.
","e917ada8cc976397aa5c3e11492f108a35919e48","Jonathan Hedley"
"1079","xmlParseDefaultsToHtmlOutputSyntax","xmlParseDefaultsToHtmlOutputSyntax","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1080","xmlParseDefaultsToHtmlOutputSyntax","xmlParseDefaultsToHtmlOutputSyntax","2","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"1081","testDoesHandleEOFInTag","testDoesHandleEOFInTag","1","Body Change, Introduced, MultiChange","Merge pull request #582 from fazerish/handle_unclosed_tag_on_eof

Keep tag that have not been closed by > before reaching EOF.","4edb78991f8d0bf87dafde5e01ccd8922065c9b2","Jonathan Hedley"
"1082","testDetectCharsetEncodingDeclaration","testDetectCharsetEncodingDeclaration","2","Body Change, Exceptions Change, Introduced, MultiChange","Detect charset from xml prolog

Fixes #701
","4eb4f2b2e88a2f9e6c5c1e8d0477060954f24218","Jonathan Hedley"
"1083","testDetectCharsetEncodingDeclaration","testDetectCharsetEncodingDeclaration","2","Exceptions Change","Preserve whitespace in nodes before <head>
","9675a92b41593244d6d3ecd99425aeb19e2a6219","Jonathan Hedley"
"1084","testParseDeclarationAttributes","testParseDeclarationAttributes","1","Body Change, Introduced, MultiChange","Detect charset from xml prolog

Fixes #701
","4eb4f2b2e88a2f9e6c5c1e8d0477060954f24218","Jonathan Hedley"
"1085","testParseDeclarationWithoutAttributes","testParseDeclarationWithoutAttributes","1","Body Change, Introduced, MultiChange","Skip empty attribute values when serializing XML processing instructions

Fixes #770
","fce241b57f1e0292b143a11d31b8abf9ad949398","Jonathan Hedley"
"1086","caseSensitiveDeclaration","caseSensitiveDeclaration","1","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1087","testCreatesValidProlog","testCreatesValidProlog","1","Body Change, Introduced, MultiChange","Test for prolog

Fixes #652
","c090381c55b6d275eebe60053d36f198ffe793ca","Jonathan Hedley"
"1088","preservesCaseByDefault","preservesCaseByDefault","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1089","preservesCaseByDefault","preservesCaseByDefault","2","Body Change","Corrected fix for #998
","e5210d1f9ef4f1d41ff0a8c4a2ab8e9192d5e087","Jonathan Hedley"
"1090","appendPreservesCaseByDefault","appendPreservesCaseByDefault","1","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"1091","disablesPrettyPrintingByDefault","disablesPrettyPrintingByDefault","1","Body Change, Introduced, MultiChange","Disable pretty printing of XML input by default
","20797a47313b115eb220f4df74d39da9de94f5e0","Jonathan Hedley"
"1092","canNormalizeCase","canNormalizeCase","1","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1093","normalizesDiscordantTags","normalizesDiscordantTags","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1094","normalizesDiscordantTags","normalizesDiscordantTags","2","Body Change, Introduced, MultiChange","In XML parse mode set to lowercase, normalize closing tags

Fixes #998
","df272b77c2cf89e9cbe2512bbddf8a3bc28a704b","Jonathan Hedley"
"1095","roundTripsCdata","roundTripsCdata","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1096","roundTripsCdata","roundTripsCdata","2","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1097","cdataPreservesWhiteSpace","cdataPreservesWhiteSpace","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1098","cdataPreservesWhiteSpace","cdataPreservesWhiteSpace","2","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1099","handlesDodgyXmlDecl","handlesDodgyXmlDecl","1","Body Change, Introduced, MultiChange","Check that XML declarations parse OK

Fixes #1015
","e9feec90dbd3e428dc1930c3b5efbd9271160d01","Jonathan Hedley"
"1100","handlesLTinScript","handlesLTinScript","1","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"1101","dropsDuplicateAttributes","dropsDuplicateAttributes","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1102","dropsDuplicateAttributes","dropsDuplicateAttributes","2","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"1103","readerClosedAfterParse","readerClosedAfterParse","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1104","readerClosedAfterParse","readerClosedAfterParse","2","Body Change, Introduced, MultiChange","Close and clear the character reader

Saves a bunch of retained memory in Document (and transitively, every Element)

#1321
","c5c5a735d3d3f643ee614e9f9f93a0978970cf20","Jonathan Hedley"
"1105","xmlParserEnablesXmlOutputAndEscapes","xmlParserEnablesXmlOutputAndEscapes","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1106","xmlParserEnablesXmlOutputAndEscapes","xmlParserEnablesXmlOutputAndEscapes","2","Body Change, Introduced, MultiChange","Using the XML parser will default to XML output

And make sure < in attributes are escaped when in XML output mode.

Fixes #1420
","528d85f3a99bf3a064eb8582af0643e1cc65f206","jhy"
"1107","xmlSyntaxEscapesLtInAttributes","xmlSyntaxEscapesLtInAttributes","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1108","xmlSyntaxEscapesLtInAttributes","xmlSyntaxEscapesLtInAttributes","2","Body Change, Introduced, MultiChange","Using the XML parser will default to XML output

And make sure < in attributes are escaped when in XML output mode.

Fixes #1420
","528d85f3a99bf3a064eb8582af0643e1cc65f206","jhy"
"1109","xmlOutputCorrectsInvalidAttributeNames","xmlOutputCorrectsInvalidAttributeNames","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1110","xmlOutputCorrectsInvalidAttributeNames","xmlOutputCorrectsInvalidAttributeNames","2","Body Change, Introduced, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"1111","xmlValidAttributes","xmlValidAttributes","3","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1112","xmlValidAttributes","xmlValidAttributes","3","Body Change, Introduced, MultiChange","Fix XML attribute validation

When converting from the `[a-zA-Z_:][-a-zA-Z0-9_:.]*` regex, missed `-`, `.`, and digits.

Also clarified HTML attribute scan.

Fixes #2235
","0a4b830ccb9df906c11d154c774e14fb2eb5deff","Jonathan Hedley"
"1113","xmlValidAttributes","xmlValidAttributes","3","Body Change","Assert namespaced attribute with digit

Closes #2236
","bf13b496cda81630d9bad7bacd1831a6eae77ea7","Jonathan Hedley"
"1114","customTagsAreFlyweights","customTagsAreFlyweights","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1115","customTagsAreFlyweights","customTagsAreFlyweights","2","Body Change, Introduced, MultiChange","Flyweight Tag.valueOf in TreeBuilder

Lowers memory consumption when many repeated custom tags were in the parse.

(Known tags were already re-used)
","d3f4e319e009f7af8f1305279495d05e8488b089","Jonathan Hedley"
"1116","rootHasXmlSettings","rootHasXmlSettings","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1117","rootHasXmlSettings","rootHasXmlSettings","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1118","xmlNamespace","xmlNamespace","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1119","xmlNamespace","xmlNamespace","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1120","assertXmlNamespace","assertXmlNamespace","3","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1121","assertXmlNamespace","assertXmlNamespace","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1122","assertXmlNamespace","assertXmlNamespace","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1123","declarations","declarations","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1124","declarations","declarations","2","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"1125","declarationWithGt","declarationWithGt","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1126","declarationWithGt","declarationWithGt","2","Body Change, Introduced, MultiChange","Declaration parse test

Closes #1947
","ae4dfd28bb80228bb87f1dd7c6dff40fd21edb14","Jonathan Hedley"
"1127","xmlHeaderIsValid","xmlHeaderIsValid","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1128","xmlHeaderIsValid","xmlHeaderIsValid","2","Body Change, Introduced, MultiChange","Merge branch 'master' into develop-1.20.1
","9cb943a9f2ffeeca2adcd9aa3d127df249b75515","Jonathan Hedley"
"1129","canSetCustomRcdataTag","canSetCustomRcdataTag","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1130","canSetCustomRcdataTag","canSetCustomRcdataTag","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1131","canSetCustomDataTag","canSetCustomDataTag","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1132","canSetCustomDataTag","canSetCustomDataTag","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1133","canSetCustomVoid","canSetCustomVoid","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1134","canSetCustomVoid","canSetCustomVoid","2","Body Change, Introduced, MultiChange","XML parser can have custom void elements

Allows parsing of pseudo HTML with the HTML tag set, without using the HTML TreeBuilder rules

For #2285
","0270598732b77c25e643e4e1b1e4347fd8037dfa","Jonathan Hedley"
"1135","canSupplyWithHtmlTagSet","canSupplyWithHtmlTagSet","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1136","canSupplyWithHtmlTagSet","canSupplyWithHtmlTagSet","2","Body Change, Introduced, MultiChange","XML parser can have custom void elements

Allows parsing of pseudo HTML with the HTML tag set, without using the HTML TreeBuilder rules

For #2285
","0270598732b77c25e643e4e1b1e4347fd8037dfa","Jonathan Hedley"
"1137","prettyFormatsTextInline","prettyFormatsTextInline","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1138","prettyFormatsTextInline","prettyFormatsTextInline","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1139","xmlns","xmlns","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1140","xmlns","xmlns","2","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"1141","unprefixedDefaults","unprefixedDefaults","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1142","unprefixedDefaults","unprefixedDefaults","2","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"1143","emptyDefault","emptyDefault","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1144","emptyDefault","emptyDefault","2","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"1145","namespacedAttribute","namespacedAttribute","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1146","namespacedAttribute","namespacedAttribute","2","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"1147","elementsViaAppendHtmlAreNamespaced","elementsViaAppendHtmlAreNamespaced","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1148","elementsViaAppendHtmlAreNamespaced","elementsViaAppendHtmlAreNamespaced","2","Body Change, Introduced, MultiChange","Apply namespaces when fragment parsing

For #2299
","aabf0b0dbb19f6ff13f28cf1b5033b1661437a71","Jonathan Hedley"
"1149","selfClosingOK","selfClosingOK","2","File Renamed","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"1150","selfClosingOK","selfClosingOK","2","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1151","parserTrackDefaults","parserTrackDefaults","1","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1152","tracksPosition","tracksPosition","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1153","tracksPosition","tracksPosition","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1154","tracksExpectedPoppedElements","tracksExpectedPoppedElements","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1155","tracksExpectedPoppedElements","tracksExpectedPoppedElements","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1156","accumulatePositions","accumulatePositions","1","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1157","tracksImplicitPoppedElements","tracksImplicitPoppedElements","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1158","tracksImplicitPoppedElements","tracksImplicitPoppedElements","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1159","printRange","printRange","1","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1160","tracksMarkup","tracksMarkup","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1161","tracksMarkup","tracksMarkup","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1162","tracksDataNodes","tracksDataNodes","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1163","tracksDataNodes","tracksDataNodes","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1164","tracksExplicitAndImplicitBodyHtml","tracksExplicitAndImplicitBodyHtml","1","Body Change, Introduced, MultiChange","Merge branch 'master' into develop-1.20.1
","e10e04da6c7d93daf5f74d449594cba7ea3683e3","Jonathan Hedley"
"1165","tracksXml","tracksXml","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1166","tracksXml","tracksXml","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1167","tracksFromFetch","tracksFromFetch","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1168","tracksFromFetch","tracksFromFetch","2","Body Change, Exceptions Change, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1169","tracksFromXmlFetch","tracksFromXmlFetch","2","Body Change, Exceptions Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1170","tracksFromXmlFetch","tracksFromXmlFetch","2","Body Change, Exceptions Change, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1171","tracksTableMovedText","tracksTableMovedText","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1172","tracksTableMovedText","tracksTableMovedText","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1173","tracksClosingHtmlTagsInXml","tracksClosingHtmlTagsInXml","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1174","tracksClosingHtmlTagsInXml","tracksClosingHtmlTagsInXml","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1175","tracksClosingHeadingTags","tracksClosingHeadingTags","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1176","tracksClosingHeadingTags","tracksClosingHeadingTags","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1177","tracksAttributes","tracksAttributes","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1178","tracksAttributes","tracksAttributes","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1179","tracksAttributesAcrossLines","tracksAttributesAcrossLines","2","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1180","tracksAttributesAcrossLines","tracksAttributesAcrossLines","2","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1181","trackAttributePositionInFirstElement","trackAttributePositionInFirstElement","1","Body Change, Introduced, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1182","trackAttributePositionWithCase","trackAttributePositionWithCase","1","Body Change, Introduced, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1183","trackAttributesPositionsDedupes","trackAttributesPositionsDedupes","1","Body Change, Introduced, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1184","trackAttributesPositionsDirectionalDedupes","trackAttributesPositionsDirectionalDedupes","1","Body Change, Introduced, MultiChange","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"1185","tracksFrag","tracksFrag","1","Body Change, Introduced, MultiChange","Initialise current token to the virtual start token

Ensures that in body fragment parsing, which adds the context element to the stack before there is a real token, has a current token during the track position for that first stack insert.

Fixes #2068
","daef8bb412db6c94b9895837ae6e28c5770c65ad","Jonathan Hedley"
"1186","tracksAfterPSelfClose","tracksAfterPSelfClose","2","Body Change, Introduced, MultiChange","Simplify character start position tracking

Fixes #2175

Moves the char start update to the token completion emit event, vs reader state changes. Multiple state changes may happen for the same token as the tokeniser unwinds itself from an invalid state, which would inadvertently clear the char start position.
","dc3b6c59d2d4dc1b72424785e9b8455b1df15664","Jonathan Hedley"
"1187","tracksAfterPSelfClose","tracksAfterPSelfClose","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1188","tracksFirstTextnode","tracksFirstTextnode","1","Body Change, Introduced, MultiChange","Initialize startPos to 0 vs -1

So that nodes that are added without first going through transition() have the correct start pos.

Fixes #2106
","be1301f86a80221ed5477980999d599a3710e1eb","Jonathan Hedley"
"1189","updateKeyMaintainsRangeLc","updateKeyMaintainsRangeLc","1","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"1190","tracksDocument","tracksDocument","1","Body Change, Introduced, MultiChange","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"1191","tracksDocumentXml","tracksDocumentXml","1","Body Change, Introduced, MultiChange","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"1192","updateKeyMaintainsRangeUc","updateKeyMaintainsRangeUc","1","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"1193","movedAttributesHaveRange","movedAttributesHaveRange","1","Body Change, Introduced, MultiChange","Copy attribute source range when merging attributes

Also simplified setting source range.

Fixes #2204
","91b5a56c63a9f8dca761b4cab959977fcd3308fd","Jonathan Hedley"
"1194","accumulateAttributePositions","accumulateAttributePositions","1","Body Change, Introduced, MultiChange","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"1195","accumulatePositions","accumulatePositions","1","Body Change, Introduced, MultiChange","Moved position tests to parser package

Tests are more about the parser than the node APIs themselves
","de0e749c519d7f220a9c9c393f412493d79916b1","Jonathan Hedley"
"1196","parsesSimpleDocument","parsesSimpleDocument","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1197","parsesRoughAttributes","parsesRoughAttributes","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1198","dropsDuplicateAttributes","dropsDuplicateAttributes","1","Body Change, Introduced, MultiChange","Fix attribute deduplication in form and empty elements (#1950)

Add test-case and fixes for attribute deduplication in form and empty elements

Fixes #1949
---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","401c8b010e01a03d5af00b88387e0dc3a8c1c8a4","Per Landberg"
"1199","dupeAttributeData","dupeAttributeData","1","Body Change, Introduced, MultiChange","Fix attribute deduplication in form and empty elements (#1950)

Add test-case and fixes for attribute deduplication in form and empty elements

Fixes #1949
---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","401c8b010e01a03d5af00b88387e0dc3a8c1c8a4","Per Landberg"
"1200","retainsAttributesOfDifferentCaseIfSensitive","retainsAttributesOfDifferentCaseIfSensitive","2","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"1201","retainsAttributesOfDifferentCaseIfSensitive","retainsAttributesOfDifferentCaseIfSensitive","2","Body Change","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"1202","parsesQuiteRoughAttributes","parsesQuiteRoughAttributes","3","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1203","parsesQuiteRoughAttributes","parsesQuiteRoughAttributes","3","Body Change","Treat < in a start tag as a new tag, not an attribute name

Fixes #797
","bdf1df7eb3ca76cdcdaca38f7df5d941bbb1c664","Jonathan Hedley"
"1204","parsesQuiteRoughAttributes","parsesQuiteRoughAttributes","3","Body Change","Follow spec so `<` can start an attribute name

Fixes #1483
","d27370ac7ecd7eee843b3153c81f44e46b4ef63c","Jonathan Hedley"
"1205","parsesComments","parsesComments","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1206","parsesUnterminatedComments","parsesUnterminatedComments","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1207","allDashCommentsAreNotParseErrors","allDashCommentsAreNotParseErrors","1","Body Change, Introduced, MultiChange","Fixed comment transition and removed some parse errors

Fixes #1667
","7c9539cc7a5780f3ee3bfffcbb3a09fc6c499394","Jonathan Hedley"
"1208","dropsUnterminatedTag","dropsUnterminatedTag","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1209","dropsUnterminatedAttribute","dropsUnterminatedAttribute","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1210","parsesUnterminatedTextarea","parsesUnterminatedTextarea","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1211","parsesUnterminatedOption","parsesUnterminatedOption","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1212","testSelectWithOption","testSelectWithOption","1","Body Change, Introduced, MultiChange","Merge pull request #817 from lexspoon/select-with-options

Minor fix for the parsing of non-empty selects","45a9de55c2c2a99b3ebf9410bdcec2edd97518d2","Jonathan Hedley"
"1213","testSpaceAfterTag","testSpaceAfterTag","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1214","createsDocumentStructure","createsDocumentStructure","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1215","createsStructureFromBodySnippet","createsStructureFromBodySnippet","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1216","handlesEscapedData","handlesEscapedData","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1217","handlesDataOnlyTags","handlesDataOnlyTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1218","handlesTextAfterData","handlesTextAfterData","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1219","handlesTextArea","handlesTextArea","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1220","preservesSpaceInTextArea","preservesSpaceInTextArea","1","Body Change, Introduced, MultiChange","Fixed whitespace preservation in <textarea> tags.

Fixes #167.
","94002db5f90395b8927ae69c569e5a0726dd00c4","Jonathan Hedley"
"1221","preservesSpaceInScript","preservesSpaceInScript","1","Body Change, Introduced, MultiChange","Fixed whitespace preservation in <textarea> tags.

Fixes #167.
","94002db5f90395b8927ae69c569e5a0726dd00c4","Jonathan Hedley"
"1222","doesNotCreateImplicitLists","doesNotCreateImplicitLists","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1223","discardsNakedTds","discardsNakedTds","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1224","handlesNestedImplicitTable","handlesNestedImplicitTable","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1225","handlesWhatWgExpensesTableExample","handlesWhatWgExpensesTableExample","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1226","handlesTbodyTable","handlesTbodyTable","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1227","handlesImplicitCaptionClose","handlesImplicitCaptionClose","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1228","noTableDirectInTable","noTableDirectInTable","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1229","ignoresDupeEndTrTag","ignoresDupeEndTrTag","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1230","handlesBaseTags","handlesBaseTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1231","handlesProtocolRelativeUrl","handlesProtocolRelativeUrl","1","Body Change, Introduced, MultiChange","Added test to verify protocol relative URLs

Fixes #426
","799b9aa3e623b56092100fa672c034ae9f259038","Jonathan Hedley"
"1232","handlesCdata","handlesCdata","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1233","handlesCdata","handlesCdata","2","Body Change","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1234","roundTripsCdata","roundTripsCdata","1","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1235","handlesCdataAcrossBuffer","handlesCdataAcrossBuffer","2","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1236","handlesCdataAcrossBuffer","handlesCdataAcrossBuffer","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1237","handlesCdataInScript","handlesCdataInScript","1","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"1238","handlesUnclosedCdataAtEOF","handlesUnclosedCdataAtEOF","1","Body Change, Introduced, MultiChange","Fixed a crash when reading an unterminated CDATA section.

Fixes #349
","88730bf9f399aab6a150212faeea012598be9ec6","Jonathan Hedley"
"1239","handleCDataInText","handleCDataInText","1","Body Change, Introduced, MultiChange","More cdata coverage
","e9885f060d59dc2bd7351c5bd654a27cbe6de69a","Jonathan Hedley"
"1240","cdataNodesAreTextNodes","cdataNodesAreTextNodes","1","Body Change, Introduced, MultiChange","More cdata coverage
","e9885f060d59dc2bd7351c5bd654a27cbe6de69a","Jonathan Hedley"
"1241","handlesInvalidStartTags","handlesInvalidStartTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1242","handlesUnknownTags","handlesUnknownTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1243","handlesUnknownInlineTags","handlesUnknownInlineTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1244","parsesBodyFragment","parsesBodyFragment","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1245","parseBodyIsIndexNoAttributes","parseBodyIsIndexNoAttributes","2","Body Change, Introduced, MultiChange","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"1246","parseBodyIsIndexNoAttributes","parseBodyIsIndexNoAttributes","2","Body Change","Removed `isindex` form autovivification

No longer in the spec.
","13f42529d656ddf140022707581f040bbb460e2a","Jonathan Hedley"
"1247","handlesUnknownNamespaceTags","handlesUnknownNamespaceTags","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1248","handlesUnknownNamespaceTags","handlesUnknownNamespaceTags","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1249","handlesKnownEmptyBlocks","handlesKnownEmptyBlocks","4","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1250","handlesKnownEmptyBlocks","handlesKnownEmptyBlocks","4","Body Change","When parsing, allow all tags to self-close.

Tags that aren't expected to self-close will get an end tag.

Fixes #2458
","c3c952e55f10b07dd9d4a9121db1b3828b0a1bc7","Jonathan Hedley"
"1251","handlesKnownEmptyBlocks","handlesKnownEmptyBlocks","4","Body Change","Fixed support for self-closing script tags.

Fixes #305
","2518e92a052d922d81d11e28b8e5205639fed9a7","Jonathan Hedley"
"1252","handlesKnownEmptyBlocks","handlesKnownEmptyBlocks","4","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1253","handlesEmptyNoFrames","handlesEmptyNoFrames","1","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1254","handlesKnownEmptyStyle","handlesKnownEmptyStyle","2","Body Change, Introduced, MultiChange","Allow rctext / rcdata tags to self -close

Fixes #906
","195566fa6d4092c6983fbf497c37ae53a188fa90","Jonathan Hedley"
"1255","handlesKnownEmptyStyle","handlesKnownEmptyStyle","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1256","handlesKnownEmptyTitle","handlesKnownEmptyTitle","2","Body Change, Introduced, MultiChange","Allow rctext / rcdata tags to self -close

Fixes #906
","195566fa6d4092c6983fbf497c37ae53a188fa90","Jonathan Hedley"
"1257","handlesKnownEmptyTitle","handlesKnownEmptyTitle","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1258","handlesKnownEmptyIframe","handlesKnownEmptyIframe","2","Body Change, Introduced, MultiChange","Test for self-closing iframe

Confirms #382
","a05130322dc311c2aeb63227d4890294e4a3703d","Jonathan Hedley"
"1259","handlesKnownEmptyIframe","handlesKnownEmptyIframe","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1260","handlesSolidusAtAttributeEnd","handlesSolidusAtAttributeEnd","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1261","handlesMultiClosingBody","handlesMultiClosingBody","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1262","handlesUnclosedDefinitionLists","handlesUnclosedDefinitionLists","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1263","handlesBlocksInDefinitions","handlesBlocksInDefinitions","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1264","handlesFrames","handlesFrames","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1265","ignoresContentAfterFrameset","ignoresContentAfterFrameset","1","Body Change, Introduced, MultiChange","Correctly handle content (ignore it) after frameset end.
Fixes #162
","1030e6182d2fde38d4d307af8e21791ad9b91429","Jonathan Hedley"
"1266","handlesJavadocFont","handlesJavadocFont","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1267","handlesBaseWithoutHref","handlesBaseWithoutHref","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1268","normalisesDocument","normalisesDocument","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1269","normalisesEmptyDocument","normalisesEmptyDocument","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1270","normalisesHeadlessBody","normalisesHeadlessBody","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1271","normalisedBodyAfterContent","normalisedBodyAfterContent","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1272","findsCharsetInMalformedMeta","findsCharsetInMalformedMeta","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1273","testHgroup","testHgroup","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1274","testHgroup","testHgroup","2","Body Change","Enable adoption test
","0e1ca51dc8198f524e72ddf15710f9d9e834d499","Jonathan Hedley"
"1275","testRelaxedTags","testRelaxedTags","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1276","testHeaderContents","testHeaderContents","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1277","testSpanContents","testSpanContents","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1278","testNoImagesInNoScriptInHead","testNoImagesInNoScriptInHead","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1279","testUnclosedNoscriptInHead","testUnclosedNoscriptInHead","1","Body Change, Introduced, MultiChange","Testcase for noscript EOF token
","90fd58cdaee35d4e9b4b9a405bf155be12b02b0b","Jonathan Hedley"
"1280","testAFlowContents","testAFlowContents","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1281","testFontFlowContents","testFontFlowContents","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1282","handlesMisnestedTagsBI","handlesMisnestedTagsBI","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1283","handlesMisnestedTagsBP","handlesMisnestedTagsBP","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1284","handlesMisnestedAInDivs","handlesMisnestedAInDivs","4","Body Change, Introduced, MultiChange","Test case for #845

(Which doesn't actually work yet, so ignored)
","c4f6a622ef63687c23a21e795d7a3e32de222d2f","Jonathan Hedley"
"1285","handlesMisnestedAInDivs","handlesMisnestedAInDivs","4","Modifier Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1286","handlesMisnestedAInDivs","handlesMisnestedAInDivs","4","Modifier Change, Body Change, MultiChange","Enable adoption test
","0e1ca51dc8198f524e72ddf15710f9d9e834d499","Jonathan Hedley"
"1287","handlesMisnestedAInDivs","handlesMisnestedAInDivs","4","Body Change","Reimplement the adoption agency algorithm (#2278)

Fixes #2267

The implementation of the adoption agency algorithm vs the HTML5 spec had drifted over time. This fixes that.

The spec for table fostering when in adoption is not presently implemented, marked as a todo.

Given the complexity of the algo and how it has changed over time, I opted to include it inline so that hopefully later changes are easier to adopt.","cee75632544001c6d1d814a0eeb522cb18811497","Jonathan Hedley"
"1288","handlesUnexpectedMarkupInTables","handlesUnexpectedMarkupInTables","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1289","handlesUnexpectedMarkupInTables","handlesUnexpectedMarkupInTables","2","Body Change","Fix typos (#1830)

* Fix some typos in documentation","eabfcdd25d3d1604baaa78d585ea671540a45adf","Michael Ernst"
"1290","handlesUnclosedFormattingElements","handlesUnclosedFormattingElements","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1291","handlesUnclosedFormattingElements","handlesUnclosedFormattingElements","2","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1292","handlesUnclosedAnchors","handlesUnclosedAnchors","1","Body Change, Introduced, MultiChange","Fixed an issue where elements added via the adoption agency algorithm did not preserve their attributes.

Fixes #313
","76399e5b273d63d6affeb94597d8dfddce811964","Jonathan Hedley"
"1293","reconstructFormattingElements","reconstructFormattingElements","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1294","reconstructFormattingElementsInTable","reconstructFormattingElementsInTable","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1295","reconstructFormattingElementsInTable","reconstructFormattingElementsInTable","2","Body Change","Nested inlineable elements should indent

Fixes #1926
","8e2b86839b276191cf215a3500c405b1489cb215","Jonathan Hedley"
"1296","commentBeforeHtml","commentBeforeHtml","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1297","emptyTdTag","emptyTdTag","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1298","handlesSolidusInA","handlesSolidusInA","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1299","handlesSpanInTbody","handlesSpanInTbody","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1300","handlesUnclosedTitleAtEof","handlesUnclosedTitleAtEof","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1301","handlesUnclosedTitle","handlesUnclosedTitle","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1302","handlesUnclosedScriptAtEof","handlesUnclosedScriptAtEof","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1303","handlesUnclosedRawtextAtEof","handlesUnclosedRawtextAtEof","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1304","noImplicitFormForTextAreas","noImplicitFormForTextAreas","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1305","handlesEscapedScript","handlesEscapedScript","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1306","handles0CharacterAsText","handles0CharacterAsText","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1307","handlesNullInData","handlesNullInData","2","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1308","handlesNullInData","handlesNullInData","2","Body Change","Escape ascii control codes in both XML and HTML

Required for XML and easier to read for HTML

Fixes #1556.
","2a4c9decd617e7892fe767a535803b68d2268dca","Jonathan Hedley"
"1309","handlesNullInComments","handlesNullInComments","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1310","handlesNewlinesAndWhitespaceInTag","handlesNewlinesAndWhitespaceInTag","1","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1311","handlesWhitespaceInoDocType","handlesWhitespaceInoDocType","3","Body Change, Introduced, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"1312","handlesWhitespaceInoDocType","handlesWhitespaceInoDocType","3","Body Change","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1313","handlesWhitespaceInoDocType","handlesWhitespaceInoDocType","3","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1314","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"1315","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1316","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1317","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"1318","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"1319","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Removed character range check (>= 0xD800 &&  <= 0xDFFF)

That was preventing the valid decode of &#55357;&#56495; to 💯.

This rule must have been in the spec when initially implemented but I can't find a reference to it now. I'm assuming that the range had since been added, but can't immediately identify why it was explicitly excluded originally.

Fixes #2047
","954c46a92a1a0c5052ed241d4398db8b0331e1f3","Jonathan Hedley"
"1320","tracksErrorsWhenRequested","tracksErrorsWhenRequested","7","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1321","tracksLimitedErrorsWhenRequested","tracksLimitedErrorsWhenRequested","2","Body Change, Introduced, MultiChange","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"1322","tracksLimitedErrorsWhenRequested","tracksLimitedErrorsWhenRequested","2","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1323","noErrorsByDefault","noErrorsByDefault","2","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"1324","noErrorsByDefault","noErrorsByDefault","2","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"1325","optionalPClosersAreNotErrors","optionalPClosersAreNotErrors","1","Body Change, Introduced, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"1326","handlesCommentsInTable","handlesCommentsInTable","1","Body Change, Introduced, MultiChange","Changelog and test for pull #165 (comments in tables).
Fixes #126
","68c05150bf4ce702c334405dc707d95c6fe73577","Jonathan Hedley"
"1327","handlesQuotesInCommentsInScripts","handlesQuotesInCommentsInScripts","2","Body Change, Introduced, MultiChange","Fixed issue where contents of a script tag within a comment could be incorrectly parsed.

Fixes #115
","04b8921d4dcab019b02588620d953c4f19d43a58","Jonathan Hedley"
"1328","handlesQuotesInCommentsInScripts","handlesQuotesInCommentsInScripts","2","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1329","handleNullContextInParseFragment","handleNullContextInParseFragment","1","Body Change, Introduced, MultiChange","Fixed NPE in Parser.parseFragment() when context parameter is null.

Fixes #195.
","5c43ce2d83e44cd46049a7f0bfaeb5d9a322c032","Jonathan Hedley"
"1330","doesNotFindExtendedPrefixMatchingEntity","doesNotFindExtendedPrefixMatchingEntity","1","Body Change, Introduced, MultiChange","Entity decoding supports prefix matches

When parsing named HTML entities, base entities should resolve if they are a prefix of the input token (and not in an  attribute). Finds the longest prefix.

Validated matches browser behavior and extended entities *don't* match (like `&clubsuite;`)

Fixes #2207
","5ee376bc5bbe6a4f66eb24e2180552b547b8a4bf","Jonathan Hedley"
"1331","relaxedBaseEntityMatchAndStrictExtendedMatch","relaxedBaseEntityMatchAndStrictExtendedMatch","1","Body Change, Introduced, MultiChange","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"1332","findsBasePrefixEntity","findsBasePrefixEntity","1","Body Change, Introduced, MultiChange","Entity decoding supports prefix matches

When parsing named HTML entities, base entities should resolve if they are a prefix of the input token (and not in an  attribute). Finds the longest prefix.

Validated matches browser behavior and extended entities *don't* match (like `&clubsuite;`)

Fixes #2207
","5ee376bc5bbe6a4f66eb24e2180552b547b8a4bf","Jonathan Hedley"
"1333","handlesXmlDeclarationAsBogusComment","handlesXmlDeclarationAsBogusComment","1","Body Change, Introduced, MultiChange","When parsing in XML mode, preserve XML declarations (<?xml ... ?>).

Fixes #242
","caf61a4a0778a72ab713f72e9ef749bf373c98ac","Jonathan Hedley"
"1334","handlesTagsInTextarea","handlesTagsInTextarea","1","Body Change, Introduced, MultiChange","Fixed an issue when parsing <textarea>/RCData tags containing unescaped closing tags that would drop the traling >.
","3cfd45112b28c5401fc6bd70cd25b22f98c9b3f9","Jonathan Hedley"
"1335","createsFormElements","createsFormElements","1","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"1336","associatedFormControlsWithDisjointForms","associatedFormControlsWithDisjointForms","1","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"1337","handlesInputInTable","handlesInputInTable","2","Body Change, Introduced, MultiChange","Added test for #332, already passes without pull
","2c07dc3e05ec1efe3c696d4888421fd6d03f4c10","Jonathan Hedley"
"1338","handlesInputInTable","handlesInputInTable","2","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1339","convertsImageToImg","convertsImageToImg","1","Body Change, Introduced, MultiChange","Don't parse <img> as <image> when in <svg>

Fixes #364
","9e9e15856d41f55cee4a215acae3c3866e78d200","Jonathan Hedley"
"1340","handlesInvalidDoctypes","handlesInvalidDoctypes","3","Body Change, Introduced, MultiChange","Relaxed doctype validation

Fixes #460
","b033535fe2cf887de8076221a0d614abfcf17d7b","Jonathan Hedley"
"1341","handlesInvalidDoctypes","handlesInvalidDoctypes","3","Body Change","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"1342","handlesInvalidDoctypes","handlesInvalidDoctypes","3","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1343","handlesManyChildren","handlesManyChildren","2","Body Change, Introduced, MultiChange","Merge pull request #506 from kguelzau/master

Improve performance when re-parenting nodes","13b55d7e81414d2a96de3bdc8dd95829fd7dad92","Jonathan Hedley"
"1344","handlesManyChildren","handlesManyChildren","2","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1345","testInvalidTableContents","testInvalidTableContents","2","Body Change, Exceptions Change, Introduced, MultiChange","Fixed an issue where unexpected elements in a badly nested table could be moved to the wrong location in the document.

Fixes #552
Closes #591
","3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3","Jonathan Hedley"
"1346","testInvalidTableContents","testInvalidTableContents","2","Exceptions Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1347","testNormalisesIsIndex","testNormalisesIsIndex","2","Body Change, Introduced, MultiChange","Fixed an issue where unexpected elements in a badly nested table could be moved to the wrong location in the document.

Fixes #552
Closes #591
","3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3","Jonathan Hedley"
"1348","testNormalisesIsIndex","testNormalisesIsIndex","2","Body Change","Removed `isindex` form autovivification

No longer in the spec.
","13f42529d656ddf140022707581f040bbb460e2a","Jonathan Hedley"
"1349","testReinsertionModeForThCelss","testReinsertionModeForThCelss","1","Body Change, Introduced, MultiChange","Fix table insertion into TH tags

Fixes #575
","3b4f9dfa91b6f1852c35baf79c4a13eacc6112c3","Jonathan Hedley"
"1350","testUsingSingleQuotesInQueries","testUsingSingleQuotesInQueries","1","Body Change, Introduced, MultiChange","Merge pull request #655 from javalite/master

#650 Cannot use single quotes in selectors","97c3cb4d63c5512e2b596fbe0de6f3709418e157","Jonathan Hedley"
"1351","testSupportsNonAsciiTags","testSupportsNonAsciiTags","3","Body Change, Introduced, MultiChange","Added support for unicode letters in tags

Fixes #667
","25e0e1e9ffca9a350d060db7d2179c5c9e459055","Jonathan Hedley"
"1352","testSupportsNonAsciiTags","testSupportsNonAsciiTags","3","Body Change","Additional test
","8de737bf9e3d313b3ff75f1cc893e716f49f4de0","Jonathan Hedley"
"1353","testSupportsNonAsciiTags","testSupportsNonAsciiTags","3","Body Change","Make sure tags and related start with an ascii alpha, per spec

Fixes #1006
","e6b11b0bdd86e333fa0054c83760394f8fb76b1c","Jonathan Hedley"
"1354","testSupportsPartiallyNonAsciiTags","testSupportsPartiallyNonAsciiTags","1","Body Change, Introduced, MultiChange","Fix getting stuck on non-ascii tags

Fixed #704
","49db84f8f2beb846fb8271fa20a28271afe37d90","Jonathan Hedley"
"1355","testFragment","testFragment","1","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1356","testHtmlLowerCase","testHtmlLowerCase","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1357","testHtmlLowerCase","testHtmlLowerCase","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"1358","testHtmlLowerCaseAttributesOfVoidTags","testHtmlLowerCaseAttributesOfVoidTags","1","Body Change, Introduced, MultiChange","Normalize form attributes
","6e8241ab59152f1e87a9276654c67534124793c7","Jonathan Hedley"
"1359","testHtmlLowerCaseAttributesForm","testHtmlLowerCaseAttributesForm","1","Body Change, Introduced, MultiChange","Normalize form attributes
","6e8241ab59152f1e87a9276654c67534124793c7","Jonathan Hedley"
"1360","canPreserveTagCase","canPreserveTagCase","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1361","canPreserveTagCase","canPreserveTagCase","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"1362","canPreserveAttributeCase","canPreserveAttributeCase","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1363","canPreserveAttributeCase","canPreserveAttributeCase","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"1364","canPreserveBothCase","canPreserveBothCase","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1365","canPreserveBothCase","canPreserveBothCase","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"1366","handlesControlCodeInAttributeName","handlesControlCodeInAttributeName","1","Body Change, Introduced, MultiChange","Check attribute name is not empty after trimming before creating attribute

Fixes #793
","a623db776696c0e03f68e849147f6a0c57063c02","Jonathan Hedley"
"1367","caseSensitiveParseTree","caseSensitiveParseTree","2","Body Change, Introduced, MultiChange","Make sure unkown tags close correctly when in insensitive case mode

Fixes #819
","b934c5d3e30917de86796c89fcb7cd000f642a80","Jonathan Hedley"
"1368","caseSensitiveParseTree","caseSensitiveParseTree","2","Body Change","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"1369","caseInsensitiveParseTree","caseInsensitiveParseTree","1","Body Change, Introduced, MultiChange","[fix] parsing of mixed-case tags after b934c5d (#942)

","397a0caeb374c55b8dcb58e09d0faebb6e017252","MazzeX28"
"1370","preservedCaseLinksCantNest","preservedCaseLinksCantNest","4","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"1371","preservedCaseLinksCantNest","preservedCaseLinksCantNest","4","Body Change","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"1372","preservedCaseLinksCantNest","preservedCaseLinksCantNest","4","Body Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"1373","preservedCaseLinksCantNest","preservedCaseLinksCantNest","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1374","normalizesDiscordantTags","normalizesDiscordantTags","1","Body Change, Introduced, MultiChange","In XML parse mode set to lowercase, normalize closing tags

Fixes #998
","df272b77c2cf89e9cbe2512bbddf8a3bc28a704b","Jonathan Hedley"
"1375","selfClosingVoidIsNotAnError","selfClosingVoidIsNotAnError","1","Body Change, Introduced, MultiChange","Cleaned up self-closing ack and error track

Fixes #868
","35bceca331e07938a9c4cd62d68e08740cd39575","Jonathan Hedley"
"1376","selfClosingOnNonvoidIsError","selfClosingOnNonvoidIsError","4","Body Change, Introduced, MultiChange","Cleaned up self-closing ack and error track

Fixes #868
","35bceca331e07938a9c4cd62d68e08740cd39575","Jonathan Hedley"
"1377","selfClosingOnNonvoidIsError","selfClosingOnNonvoidIsError","4","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1378","selfClosingOnNonvoidIsError","selfClosingOnNonvoidIsError","4","Body Change","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"1379","selfClosingOnNonvoidIsError","selfClosingOnNonvoidIsError","4","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1380","testTemplateInsideTable","testTemplateInsideTable","1","Body Change, Exceptions Change, Introduced, MultiChange","allow template inside thead/tbody/tr. Fixes #807 (#901)

","4fa93397353a7cd3cf15f9c29c40f8a18fc051e5","Maxim Ermilov"
"1381","testHandlesDeepSpans","testHandlesDeepSpans","1","Body Change, Introduced, MultiChange","Start stack search at right spot

Fixes a bug in the in-scope search, which was starting in the middle instead of the bottom when trying to limit the stack depth search. That meant that when generating implied end-tags, the stack wasn't getting shorter, so it tried to generate end tags for days, and ultimately threw a StackOverflowDetect.

(Which is somewhat ironic, because the max depth was set to prevent a different STE... Le Sigh.)

Fixes #966
","adb7a15a1e2dd6742a25592602a6e8ee77b518b6","Jonathan Hedley"
"1382","commentAtEnd","commentAtEnd","2","Body Change, Exceptions Change, Introduced, MultiChange","Don't OBE at  EOF

Fixes #972
","b8411990753314ed3b746d3402dec5a65ff6d603","Jonathan Hedley"
"1383","commentAtEnd","commentAtEnd","2","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"1384","preSkipsFirstNewline","preSkipsFirstNewline","1","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"1385","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Body Change, Exceptions Change, Introduced, MultiChange","Make sure to consume a UTF-8 BOM at the start of a doc

Fixes #1003
","0f7e0cc373aced32629f5321c9521f81d8248647","Jonathan Hedley"
"1386","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Body Change","Indentation fix
","39e90ee38c3ce7aa254bb89740282c12eb149162","Jonathan Hedley"
"1387","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Body Change, Exceptions Change, MultiChange","Don't push inline comments to newline
","a82d6b6ae8cb33cc7ccc78c7a805886a06b1dcd2","Jonathan Hedley"
"1388","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Exceptions Change","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"1389","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Exceptions Change","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"1390","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Body Change, Exceptions Change, MultiChange","Pretty-print doctypes on a newline

Fixes #1664
","67b48ddbcd3ed055d5130141235697cea24c69d1","Jonathan Hedley"
"1391","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Exceptions Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"1392","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Exceptions Change","Wrap Comment if it's 'effectively first'

As in, the first node that is not blank space.

Also refactored impl in Element, which I just fixed for the same issue.

Fixes #1906
","a90bae7928f9b038d1c142773b4a5011335bf8e8","Jonathan Hedley"
"1393","handlesXmlDeclAndCommentsBeforeDoctype","handlesXmlDeclAndCommentsBeforeDoctype","9","Body Change, Exceptions Change, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1394","fallbackToUtfIfCantEncode","fallbackToUtfIfCantEncode","1","Body Change, Exceptions Change, Introduced, MultiChange","If a charset cannot encode, flip to one that can

Fixes #1007
","6be19a6fa26e6e5e3d716283bad4b5de0348a8b7","Jonathan Hedley"
"1395","characterReaderBuffer","characterReaderBuffer","2","Body Change, Exceptions Change, Introduced, MultiChange","Adding unit test demonstrating character reader buffer issue.

The CharacterReader re-fills its buffer in the middle of reading a
parameter with an underscore (""param_two""). It loses its mark while
filling up and drops everything before the underscore in the parameter.","54e87300275b587cd2033ab6493526cbb2caf3e9","mboisvert"
"1396","characterReaderBuffer","characterReaderBuffer","2","Body Change, Exceptions Change, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"1397","selfClosingTextAreaDoesntLeaveDroppings","selfClosingTextAreaDoesntLeaveDroppings","2","Body Change, Introduced, MultiChange","Moved test
","ef400e71e9d85b8bab30b28552bf1c339024d79f","Jonathan Hedley"
"1398","selfClosingTextAreaDoesntLeaveDroppings","selfClosingTextAreaDoesntLeaveDroppings","2","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1399","testNoSpuriousSpace","testNoSpuriousSpace","1","Body Change, Introduced, MultiChange","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"1400","pTagsGetIndented","pTagsGetIndented","1","Body Change, Introduced, MultiChange","Indent sanity test
","006c6cc5cb279245b57a4327327ecded17a77849","Jonathan Hedley"
"1401","indentRegardlessOfCase","indentRegardlessOfCase","1","Body Change, Introduced, MultiChange","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"1402","testH20","testH20","1","Body Change, Introduced, MultiChange","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"1403","testUNewlines","testUNewlines","1","Body Change, Introduced, MultiChange","Test for #851
","97758e74cbd39552f711480a4d1e4e5fe058efea","Jonathan Hedley"
"1404","testFarsi","testFarsi","1","Body Change, Introduced, MultiChange","Test to verify zwnj fix for Farsi

#1227
","2d431412fc5a2fea8d7d4490c487e2012474011e","Jonathan Hedley"
"1405","testStartOptGroup","testStartOptGroup","1","Body Change, Introduced, MultiChange","Auto close optgroup in select

Fixes #1313
","fbc7e76a2ac966a19b12c73147d3c6c8ab0eb61d","Jonathan Hedley"
"1406","readerClosedAfterParse","readerClosedAfterParse","1","Body Change, Introduced, MultiChange","Close and clear the character reader

Saves a bunch of retained memory in Document (and transitively, every Element)

#1321
","c5c5a735d3d3f643ee614e9f9f93a0978970cf20","Jonathan Hedley"
"1407","scriptInDataNode","scriptInDataNode","1","Body Change, Introduced, MultiChange","Script and Style must be DataNodes when case-sensitive parsing
","532360506bdc20ed6ae71d4ca16effd078a18266","Jonathan Hedley"
"1408","textareaValue","textareaValue","1","Body Change, Introduced, MultiChange","Use Tag#normalName, not Element#tagName for all comparisons
","75815e2d6b743bbdffede8e46d80da5c9684385c","Jonathan Hedley"
"1409","preserveWhitespaceInHead","preserveWhitespaceInHead","2","Body Change, Introduced, MultiChange","Preserve whitespace in nodes before <head>
","9675a92b41593244d6d3ecd99425aeb19e2a6219","Jonathan Hedley"
"1410","preserveWhitespaceInHead","preserveWhitespaceInHead","2","Body Change","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"1411","handleContentAfterBody","handleContentAfterBody","2","Body Change, Introduced, MultiChange","Preserve whitespace in nodes before <head>
","9675a92b41593244d6d3ecd99425aeb19e2a6219","Jonathan Hedley"
"1412","handleContentAfterBody","handleContentAfterBody","2","Body Change","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"1413","preservesTabs","preservesTabs","1","Body Change, Introduced, MultiChange","Testcase to demonstrate tab retention #1240
","8e7dedbb257d2080b058cb732d068114d4b2bb67","Jonathan Hedley"
"1414","wholeTextTreatsBRasNewline","wholeTextTreatsBRasNewline","1","Body Change, Introduced, MultiChange","Added the :containsWholeOwnText selector

And the corresponding Element#wholeOwnText() method.

For #1636
","027c70c94368c2793a42c0532d29f4e05a0307f8","Jonathan Hedley"
"1415","canDetectAutomaticallyAddedElements","canDetectAutomaticallyAddedElements","1","Body Change, Introduced, MultiChange","Simple test to detect if a document was normalized

Example code for https://stackoverflow.com/a/65612378/153184
","5174584e4d52135e82652d021aa2faf64bf31074","Jonathan Hedley"
"1416","didAddElements","didAddElements","1","Body Change, Introduced, MultiChange","Simple test to detect if a document was normalized

Example code for https://stackoverflow.com/a/65612378/153184
","5174584e4d52135e82652d021aa2faf64bf31074","Jonathan Hedley"
"1417","canSetHtmlOnCreatedTableElements","canSetHtmlOnCreatedTableElements","1","Body Change, Introduced, MultiChange","Fixed an NPE hit on Current Element if there was nothing left on the stack

And guarded other calls to Current Element when used in the same manner

Fixes #1603
","26d3c14ec3f0bf81c12e490efd7923e659696cca","Jonathan Hedley"
"1418","parseFragmentOnCreatedDocument","parseFragmentOnCreatedDocument","2","Body Change, Introduced, MultiChange","Make CurrentElement not null; return root document if nothing on stack

Fixes #1601
","dd2536b3f6e14411a67e9ef02a9305895fc224c1","Jonathan Hedley"
"1419","parseFragmentOnCreatedDocument","parseFragmentOnCreatedDocument","2","Body Change","In adoption agency, make sure there's sufficient elements on stack

Fixes #1602
","d6a4d20ed67a03a51d801e2f8930ab0ae8be054d","Jonathan Hedley"
"1420","nestedPFragments","nestedPFragments","1","Body Change, Introduced, MultiChange","In adoption agency, make sure there's sufficient elements on stack

Fixes #1602
","d6a4d20ed67a03a51d801e2f8930ab0ae8be054d","Jonathan Hedley"
"1421","nestedAnchorAdoption","nestedAnchorAdoption","1","Body Change, Introduced, MultiChange","Tests that adoption agency algo doesn't IOOB

Issue was fixed in 478b568061b317c79ba6fd018d9ac5fa931bdb02

Closes #1608
","04735f9a5430cdaef175c65580a4c38d812945fc","jhy"
"1422","adoption","adoption","1","Body Change, Exceptions Change, Introduced, MultiChange","Reimplement the adoption agency algorithm (#2278)

Fixes #2267

The implementation of the adoption agency algorithm vs the HTML5 spec had drifted over time. This fixes that.

The spec for table fostering when in adoption is not presently implemented, marked as a todo.

Given the complexity of the algo and how it has changed over time, I opted to include it inline so that hopefully later changes are easier to adopt.","cee75632544001c6d1d814a0eeb522cb18811497","Jonathan Hedley"
"1423","tagsMustStartWithAscii","tagsMustStartWithAscii","1","Body Change, Introduced, MultiChange","Make sure tags and related start with an ascii alpha, per spec

Fixes #1006
","e6b11b0bdd86e333fa0054c83760394f8fb76b1c","Jonathan Hedley"
"1424","htmlOutputCorrectsInvalidAttributeNames","htmlOutputCorrectsInvalidAttributeNames","1","Body Change, Introduced, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"1425","templateInHead","templateInHead","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1426","nestedTemplateInBody","nestedTemplateInBody","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1427","canSelectIntoTemplate","canSelectIntoTemplate","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1428","tableRowFragment","tableRowFragment","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1429","templateTableRowFragment","templateTableRowFragment","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1430","templateNotInTableRowFragment","templateNotInTableRowFragment","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1431","templateFragment","templateFragment","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"1432","templateInferredForm","templateInferredForm","3","Body Change, Introduced, MultiChange","Test formElement != null before copying isindex action

As there will not be a form element pointer for inferred forms within template elements.
","80c6ec7dbe424351193a29bb873476034e668057","Jonathan Hedley"
"1433","templateInferredForm","templateInferredForm","3","Body Change","Make sure Tag.valueOf and Token.StartTag both do the same name normalization

Was allowing elements to be created without correctly processing the state leading to it.
","86602ebe8827631d291d56705cfd61f5ef513e62","Jonathan Hedley"
"1434","templateInferredForm","templateInferredForm","3","Body Change","Removed `isindex` form autovivification

No longer in the spec.
","13f42529d656ddf140022707581f040bbb460e2a","Jonathan Hedley"
"1435","trimNormalizeElementNamesInBuilder","trimNormalizeElementNamesInBuilder","1","Body Change, Introduced, MultiChange","Make sure Tag.valueOf and Token.StartTag both do the same name normalization

Was allowing elements to be created without correctly processing the state leading to it.
","86602ebe8827631d291d56705cfd61f5ef513e62","Jonathan Hedley"
"1436","templateInLi","templateInLi","1","Body Change, Introduced, MultiChange","`template` is a special tag

Also updated isSpecial to current spec

Fixes #2258
","72fb5963d96c7a6f2663513aa993049239bada23","Jonathan Hedley"
"1437","templateInButton","templateInButton","1","Body Change, Introduced, MultiChange","Updated in specific scope tag searches

Includes template and SVG / MathML tags.

This is not currently specifically namespace aware. In practice I think that's OK, but we can update if required.

Fixes #2271
","b875b92b832949abbbb54e9770bf35cfd3825f65","Jonathan Hedley"
"1438","errorsBeforeHtml","errorsBeforeHtml","1","Body Change, Introduced, MultiChange","Testcase for errors in BeforeHtml
","6e46b8b1b1e02f90689ab700c071e24c9b75b43d","Jonathan Hedley"
"1439","afterHeadReAdds","afterHeadReAdds","1","Body Change, Introduced, MultiChange","Added some HtmlTreeBuilderState tests
","b7ea21ea374d761c4160564b8b42b83d3b92523c","Jonathan Hedley"
"1440","mergeHtmlAttributesFromBody","mergeHtmlAttributesFromBody","1","Body Change, Introduced, MultiChange","Added some HtmlTreeBuilderState tests
","b7ea21ea374d761c4160564b8b42b83d3b92523c","Jonathan Hedley"
"1441","mergeHtmlNoAttributesFromBody","mergeHtmlNoAttributesFromBody","1","Body Change, Introduced, MultiChange","Added some HtmlTreeBuilderState tests
","b7ea21ea374d761c4160564b8b42b83d3b92523c","Jonathan Hedley"
"1442","supportsRuby","supportsRuby","2","Body Change, Introduced, MultiChange","Brought ruby elements up to current spec

Fixes #1294.
","220a3b21be3b3d50ed90f5665aff031a989572f4","Jonathan Hedley"
"1443","supportsRuby","supportsRuby","2","Body Change","Improved ruby parse tests
","544e85c4eb84baeee8add07b14eba2d731debc76","Jonathan Hedley"
"1444","rubyRpRtImplicitClose","rubyRpRtImplicitClose","1","Body Change, Introduced, MultiChange","Improved ruby parse tests
","544e85c4eb84baeee8add07b14eba2d731debc76","Jonathan Hedley"
"1445","rubyScopeError","rubyScopeError","1","Body Change, Introduced, MultiChange","Improved ruby parse tests
","544e85c4eb84baeee8add07b14eba2d731debc76","Jonathan Hedley"
"1446","errorOnEofIfOpen","errorOnEofIfOpen","1","Body Change, Introduced, MultiChange","Updated AfterBody and AfterAfterBody to current spec

Don't pop stack to close on </body> or </html>, but leave them on the stack.

Had to deviate from the spec slightly to allow whitespace to be added to the html or doc elements. (The goal of that is so that when pretty-printing is off, the output more closely resembles the input, by tracking newlines after </body> etc)

Fixes #1851
","dea49696e976b389864cd2926f93c6ff07bdcfa6","Jonathan Hedley"
"1447","NoErrorOnEofIfBodyOpen","NoErrorOnEofIfBodyOpen","1","Body Change, Introduced, MultiChange","Updated AfterBody and AfterAfterBody to current spec

Don't pop stack to close on </body> or </html>, but leave them on the stack.

Had to deviate from the spec slightly to allow whitespace to be added to the html or doc elements. (The goal of that is so that when pretty-printing is off, the output more closely resembles the input, by tracking newlines after </body> etc)

Fixes #1851
","dea49696e976b389864cd2926f93c6ff07bdcfa6","Jonathan Hedley"
"1448","htmlClose","htmlClose","1","Body Change, Introduced, MultiChange","Updated AfterBody and AfterAfterBody to current spec

Don't pop stack to close on </body> or </html>, but leave them on the stack.

Had to deviate from the spec slightly to allow whitespace to be added to the html or doc elements. (The goal of that is so that when pretty-printing is off, the output more closely resembles the input, by tracking newlines after </body> etc)

Fixes #1851
","dea49696e976b389864cd2926f93c6ff07bdcfa6","Jonathan Hedley"
"1449","largeTextareaContents","largeTextareaContents","1","Body Change, Introduced, MultiChange","Check the buffer is fully read if looking for absent content

Fixes #1929

In this case we are testing for a missing `</textarea>` - but if the buffer hasn't been fully read, we could never find it.

For the normal case that this code is looking for - a missing `</title>` in brief HTML, a best-effort check (assuming the buffer is complete) is sufficient.
","f0ae81b13eb3dee39d4b93e73913e5072bf5debd","Jonathan Hedley"
"1450","svgParseTest","svgParseTest","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1451","mathParseText","mathParseText","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1452","assertHtmlNamespace","assertHtmlNamespace","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1453","assertSvgNamespace","assertSvgNamespace","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1454","assertMathNamespace","assertMathNamespace","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1455","mathSvgStyleTest","mathSvgStyleTest","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1456","xmlnsAttributeError","xmlnsAttributeError","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1457","mathAnnotationSvg","mathAnnotationSvg","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1458","mathHtmlIntegrationPoint","mathHtmlIntegrationPoint","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"1459","parseEmojiFromMultipointEncoded","parseEmojiFromMultipointEncoded","1","Body Change, Introduced, MultiChange","Removed character range check (>= 0xD800 &&  <= 0xDFFF)

That was preventing the valid decode of &#55357;&#56495; to 💯.

This rule must have been in the spec when initially implemented but I can't find a reference to it now. I'm assuming that the range had since been added, but can't immediately identify why it was explicitly excluded originally.

Fixes #2047
","954c46a92a1a0c5052ed241d4398db8b0331e1f3","Jonathan Hedley"
"1460","tableInPInQuirksMode","tableInPInQuirksMode","1","Body Change, Introduced, MultiChange","Parse in quirksmode if no doctype html

Fixes #2197
","8601e85f96a67f8548216eec5e27737085d54488","Jonathan Hedley"
"1461","gtAfterTagClose","gtAfterTagClose","2","Body Change, Introduced, MultiChange","Allow `<` in tag name state

We used to have specific handling for this, but that moves us out of spec, and it's not a clear-cut intent.

Fixes #2230
","0ef4b70b2acf47c1094aedbb9954324a2e84c05e","Jonathan Hedley"
"1462","gtAfterTagClose","gtAfterTagClose","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1463","ltInAttrStart","ltInAttrStart","1","Body Change, Introduced, MultiChange","Follow spec so `<` can start an attribute name

Fixes #1483
","d27370ac7ecd7eee843b3153c81f44e46b4ef63c","Jonathan Hedley"
"1464","pseudoAttributeComment","pseudoAttributeComment","1","Body Change, Introduced, MultiChange","Test for #1938

Fixes #1938
","28db617354cc2ed60a8b978865e71e5d7c6b6224","Jonathan Hedley"
"1465","nullStreamReturnsEmptyDoc","nullStreamReturnsEmptyDoc","1","Body Change, Exceptions Change, Introduced, MultiChange","A null inputstream should return an empty doc

Fixes #2252
","e99c87d3f52c848db5e891dc57c3ad6b54d55bd2","Jonathan Hedley"
"1466","assertErrorsContain","assertErrorsContain","1","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1467","assertErrorsDoNotContain","assertErrorsDoNotContain","1","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1468","selfClosing","selfClosing","1","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1469","canControlSelfClosing","canControlSelfClosing","1","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"1470","testIssue1251","testIssue1251","1","Modifier Change","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"1471","unconsume","unconsume","3","Exceptions Change","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1472","unconsume","unconsume","3","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"1473","unconsume","unconsume","3","Exceptions Change","Add new tests for CharacterReader (#1931)

* Update test to verify invalid unconsumption

* Add test to verify invalid rewinding

* Add test for digit matching

* Update matchesAny test for fully consumed buffer","907d09e28fe9f6df9d39c050d7d476879956574e","Deepika Tiwari"
"1474","mark","mark","1","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"1475","rewindToMark","rewindToMark","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1476","rewindToMark","rewindToMark","2","Body Change, Exceptions Change, Introduced, MultiChange","Add new tests for CharacterReader (#1931)

* Update test to verify invalid unconsumption

* Add test to verify invalid rewinding

* Add test for digit matching

* Update matchesAny test for fully consumed buffer","907d09e28fe9f6df9d39c050d7d476879956574e","Deepika Tiwari"
"1477","nextIndexOfChar","nextIndexOfChar","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1478","nextIndexOfChar","nextIndexOfChar","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1479","nextIndexOfString","nextIndexOfString","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1480","nextIndexOfString","nextIndexOfString","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1481","nextIndexOfUnmatched","nextIndexOfUnmatched","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1482","nextIndexOfUnmatched","nextIndexOfUnmatched","2","Body Change, Introduced, MultiChange","Fixed a crash when reading an unterminated CDATA section.

Fixes #349
","88730bf9f399aab6a150212faeea012598be9ec6","Jonathan Hedley"
"1483","consumeToChar","consumeToChar","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1484","consumeToChar","consumeToChar","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1485","consumeToString","consumeToString","3","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1486","consumeToString","consumeToString","3","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1487","consumeToString","consumeToString","3","Body Change","Fix edge cases with delimiters being near a buffer boundary.","de97030ff54ee0bd306cbc58bd8093645cc8a5dc","Csaba Varga"
"1488","advance","advance","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1489","advance","advance","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1490","consumeToAny","consumeToAny","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1491","consumeToAny","consumeToAny","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1492","consumeLetterSequence","consumeLetterSequence","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1493","consumeLetterSequence","consumeLetterSequence","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1494","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1495","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1496","matches","matches","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1497","matches","matches","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1498","matchesIgnoreCase","matchesIgnoreCase","1","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1499","containsIgnoreCase","containsIgnoreCase","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1500","containsIgnoreCase","containsIgnoreCase","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1501","containsIgnoreCaseBuffer","containsIgnoreCaseBuffer","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1502","containsIgnoreCaseBuffer","containsIgnoreCaseBuffer","2","Body Change, Introduced, MultiChange","Memoize containsIgnoreCase(seq) results and lower GC when scanning for </title

Fixes #1644
","88c19434c6ab8e39ab6c9ffd4854304db57fd911","Jonathan Hedley"
"1503","BufferBuster","BufferBuster","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1504","BufferBuster","BufferBuster","2","Body Change, Introduced, MultiChange","Memoize containsIgnoreCase(seq) results and lower GC when scanning for </title

Fixes #1644
","88c19434c6ab8e39ab6c9ffd4854304db57fd911","Jonathan Hedley"
"1505","matchesAny","matchesAny","3","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1506","matchesAny","matchesAny","3","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1507","matchesAny","matchesAny","3","Body Change","Add new tests for CharacterReader (#1931)

* Update test to verify invalid unconsumption

* Add test to verify invalid rewinding

* Add test for digit matching

* Update matchesAny test for fully consumed buffer","907d09e28fe9f6df9d39c050d7d476879956574e","Deepika Tiwari"
"1508","matchesDigit","matchesDigit","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1509","matchesDigit","matchesDigit","2","Body Change, Introduced, MultiChange","Add new tests for CharacterReader (#1931)

* Update test to verify invalid unconsumption

* Add test to verify invalid rewinding

* Add test for digit matching

* Update matchesAny test for fully consumed buffer","907d09e28fe9f6df9d39c050d7d476879956574e","Deepika Tiwari"
"1510","cachesStrings","cachesStrings","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1511","cachesStrings","cachesStrings","2","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"1512","rangeEquals","rangeEquals","1","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"1513","empty","empty","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1514","empty","empty","2","Introduced","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"1515","consumeToNonexistentEndWhenAtAnd","consumeToNonexistentEndWhenAtAnd","1","Body Change, Introduced, MultiChange","Don't OBE at  EOF

Fixes #972
","b8411990753314ed3b746d3402dec5a65ff6d603","Jonathan Hedley"
"1516","notEmptyAtBufferSplitPoint","notEmptyAtBufferSplitPoint","4","Body Change, Introduced, MultiChange","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"1517","notEmptyAtBufferSplitPoint","notEmptyAtBufferSplitPoint","4","Modifier Change, Body Change, MultiChange","Do a full bufferUp when marking a reader

This makes sure there is enough buffer to rewind
","54a8d301bb486fcc87887d2961da0e82b55dd54e","Jonathan Hedley"
"1518","notEmptyAtBufferSplitPoint","notEmptyAtBufferSplitPoint","4","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"1519","notEmptyAtBufferSplitPoint","notEmptyAtBufferSplitPoint","4","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1520","bufferUp","bufferUp","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1521","bufferUp","bufferUp","2","Body Change, Introduced, MultiChange","Do a full bufferUp when marking a reader

This makes sure there is enough buffer to rewind
","54a8d301bb486fcc87887d2961da0e82b55dd54e","Jonathan Hedley"
"1522","canEnableAndDisableLineNumberTracking","canEnableAndDisableLineNumberTracking","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1523","canEnableAndDisableLineNumberTracking","canEnableAndDisableLineNumberTracking","2","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1524","canTrackNewlines","canTrackNewlines","3","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1525","canTrackNewlines","canTrackNewlines","3","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1526","canTrackNewlines","canTrackNewlines","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1527","countsColumnsOverBufferWhenNoNewlines","countsColumnsOverBufferWhenNoNewlines","3","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1528","countsColumnsOverBufferWhenNoNewlines","countsColumnsOverBufferWhenNoNewlines","3","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1529","countsColumnsOverBufferWhenNoNewlines","countsColumnsOverBufferWhenNoNewlines","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1530","linenumbersAgreeWithEditor","linenumbersAgreeWithEditor","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1531","linenumbersAgreeWithEditor","linenumbersAgreeWithEditor","2","Body Change, Exceptions Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"1532","consumeDoubleQuotedAttributeConsumesThruSingleQuote","consumeDoubleQuotedAttributeConsumesThruSingleQuote","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1533","consumeDoubleQuotedAttributeConsumesThruSingleQuote","consumeDoubleQuotedAttributeConsumesThruSingleQuote","2","Body Change, Introduced, MultiChange","Perf tweak when consuming (single|double) quotes in (double|single) quoted attributes (#2045)

commit 6edd13594c4b5a3eceabffc5542c12c90820bfa8
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Fri Nov 17 11:30:23 2023 +1100

    Updated to reflect reader's position at caller TokeniserState

    And updated names to reflect intention of change

commit 0eebaaf54622d1c048d6559780cfcaee61b50cf8
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:52:21 2023 -0800

    fix CharacterReader's incorrect handling of single quote in double quoted attributes

commit 379dae202f54283e4b5c2b81773047e4d1c9fecb
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:50:27 2023 -0800

    add failing test to reveal fault in CharacterReader
","061ee0c90ac147d86d89c9fb64a0b11acfbd569a","Jonathan Hedley"
"1534","consumeSingleQuotedAttributeConsumesThruDoubleQuote","consumeSingleQuotedAttributeConsumesThruDoubleQuote","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1535","consumeSingleQuotedAttributeConsumesThruDoubleQuote","consumeSingleQuotedAttributeConsumesThruDoubleQuote","2","Body Change, Introduced, MultiChange","Perf tweak when consuming (single|double) quotes in (double|single) quoted attributes (#2045)

commit 6edd13594c4b5a3eceabffc5542c12c90820bfa8
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Fri Nov 17 11:30:23 2023 +1100

    Updated to reflect reader's position at caller TokeniserState

    And updated names to reflect intention of change

commit 0eebaaf54622d1c048d6559780cfcaee61b50cf8
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:52:21 2023 -0800

    fix CharacterReader's incorrect handling of single quote in double quoted attributes

commit 379dae202f54283e4b5c2b81773047e4d1c9fecb
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:50:27 2023 -0800

    add failing test to reveal fault in CharacterReader
","061ee0c90ac147d86d89c9fb64a0b11acfbd569a","Jonathan Hedley"
"1536","consumeDoubleQuotedAttributeConsumesThruSingleQuoteToAmp","consumeDoubleQuotedAttributeConsumesThruSingleQuoteToAmp","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1537","consumeDoubleQuotedAttributeConsumesThruSingleQuoteToAmp","consumeDoubleQuotedAttributeConsumesThruSingleQuoteToAmp","2","Body Change, Introduced, MultiChange","Perf tweak when consuming (single|double) quotes in (double|single) quoted attributes (#2045)

commit 6edd13594c4b5a3eceabffc5542c12c90820bfa8
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Fri Nov 17 11:30:23 2023 +1100

    Updated to reflect reader's position at caller TokeniserState

    And updated names to reflect intention of change

commit 0eebaaf54622d1c048d6559780cfcaee61b50cf8
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:52:21 2023 -0800

    fix CharacterReader's incorrect handling of single quote in double quoted attributes

commit 379dae202f54283e4b5c2b81773047e4d1c9fecb
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:50:27 2023 -0800

    add failing test to reveal fault in CharacterReader
","061ee0c90ac147d86d89c9fb64a0b11acfbd569a","Jonathan Hedley"
"1538","consumeSingleQuotedAttributeConsumesThruDoubleQuoteToAmp","consumeSingleQuotedAttributeConsumesThruDoubleQuoteToAmp","2","File Renamed","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"1539","consumeSingleQuotedAttributeConsumesThruDoubleQuoteToAmp","consumeSingleQuotedAttributeConsumesThruDoubleQuoteToAmp","2","Body Change, Introduced, MultiChange","Perf tweak when consuming (single|double) quotes in (double|single) quoted attributes (#2045)

commit 6edd13594c4b5a3eceabffc5542c12c90820bfa8
Author: Jonathan Hedley <jonathan@hedley.net>
Date:   Fri Nov 17 11:30:23 2023 +1100

    Updated to reflect reader's position at caller TokeniserState

    And updated names to reflect intention of change

commit 0eebaaf54622d1c048d6559780cfcaee61b50cf8
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:52:21 2023 -0800

    fix CharacterReader's incorrect handling of single quote in double quoted attributes

commit 379dae202f54283e4b5c2b81773047e4d1c9fecb
Author: thermodynathan <sh4aj@virginia.edu>
Date:   Thu Nov 9 09:50:27 2023 -0800

    add failing test to reveal fault in CharacterReader
","061ee0c90ac147d86d89c9fb64a0b11acfbd569a","Jonathan Hedley"
"1540","handleSuperLargeTagNames","handleSuperLargeTagNames","1","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1541","handleSuperLargeAttributeName","handleSuperLargeAttributeName","1","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1542","handleLargeText","handleLargeText","2","Body Change","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1543","handleLargeText","handleLargeText","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1544","handleLargeComment","handleLargeComment","2","Body Change","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1545","handleLargeComment","handleLargeComment","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1546","handleLargeCdata","handleLargeCdata","2","Body Change","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1547","handleLargeCdata","handleLargeCdata","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1548","handleLargeTitle","handleLargeTitle","2","Body Change","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1549","handleLargeTitle","handleLargeTitle","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1550","cp1252Entities","cp1252Entities","2","File Renamed","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1551","cp1252Entities","cp1252Entities","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1046'
","18ef323541f6c369824e0c726b2be55880ec36da","Jonathan Hedley"
"1552","cp1252EntitiesProduceError","cp1252EntitiesProduceError","2","File Renamed","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1553","cp1252EntitiesProduceError","cp1252EntitiesProduceError","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1046'
","18ef323541f6c369824e0c726b2be55880ec36da","Jonathan Hedley"
"1554","cp1252SubstitutionTable","cp1252SubstitutionTable","4","File Renamed","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1555","cp1252SubstitutionTable","cp1252SubstitutionTable","4","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'pr/1046'
","18ef323541f6c369824e0c726b2be55880ec36da","Jonathan Hedley"
"1556","cp1252SubstitutionTable","cp1252SubstitutionTable","4","Exceptions Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1557","cp1252SubstitutionTable","cp1252SubstitutionTable","4","Body Change, Exceptions Change, MultiChange"," Use Charset.forname, to better cache charset lookups

","b873e21ea050b5f5c52b1d5b60bbe204dab22e99","Jeremy Landis"
"1558","canParseVeryLongBogusComment","canParseVeryLongBogusComment","3","File Renamed","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1559","canParseVeryLongBogusComment","canParseVeryLongBogusComment","3","Body Change, Introduced, MultiChange","Fix edge cases with delimiters being near a buffer boundary.","de97030ff54ee0bd306cbc58bd8093645cc8a5dc","Csaba Varga"
"1560","canParseVeryLongBogusComment","canParseVeryLongBogusComment","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1561","canParseCdataEndingAtEdgeOfBuffer","canParseCdataEndingAtEdgeOfBuffer","3","File Renamed","Other buffer underrun tests
","d32321351ced83c7c2edff2abe4a8b2fa17a6bd7","Jonathan Hedley"
"1562","canParseCdataEndingAtEdgeOfBuffer","canParseCdataEndingAtEdgeOfBuffer","3","Body Change, Introduced, MultiChange","Fix edge cases with delimiters being near a buffer boundary.","de97030ff54ee0bd306cbc58bd8093645cc8a5dc","Csaba Varga"
"1563","canParseCdataEndingAtEdgeOfBuffer","canParseCdataEndingAtEdgeOfBuffer","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1564","findConstantArrays","findConstantArrays","3","File Renamed","Fixes #1220 self-closing textarea

","a8d431bad9575d5f32d7b87252962a8aae02d59f","krystiangorecki"
"1565","findConstantArrays","findConstantArrays","3","Body Change, Introduced, MultiChange","Clean up sort test
","43c35a792cf234c2c86616a81a4097c0d3ab693d","Jonathan Hedley"
"1566","findConstantArrays","findConstantArrays","3","Body Change","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"1567","ensureSorted","ensureSorted","2","File Renamed","Fixes #1220 self-closing textarea

","a8d431bad9575d5f32d7b87252962a8aae02d59f","krystiangorecki"
"1568","ensureSorted","ensureSorted","2","Body Change, Introduced, MultiChange","Use canned arrays for all searches

Saves GC
","328f2e4ea8edb4c993051ba6834f12cde513657e","Jonathan Hedley"
"1569","ensureArraysAreSorted","ensureArraysAreSorted","3","Body Change","Use canned arrays for all searches

Saves GC
","328f2e4ea8edb4c993051ba6834f12cde513657e","Jonathan Hedley"
"1570","ensureArraysAreSorted","ensureArraysAreSorted","3","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1571","ensureArraysAreSorted","ensureArraysAreSorted","3","Body Change","Clean up sort test
","43c35a792cf234c2c86616a81a4097c0d3ab693d","Jonathan Hedley"
"1572","ensureTagSearchesAreKnownTags","ensureTagSearchesAreKnownTags","2","File Renamed","Fixes #1220 self-closing textarea

","a8d431bad9575d5f32d7b87252962a8aae02d59f","krystiangorecki"
"1573","ensureTagSearchesAreKnownTags","ensureTagSearchesAreKnownTags","2","Body Change, Introduced, MultiChange","Short-circuit tag scans for custom tags
","4b46397a3c6f18f88cac76c6e983e2aa6cbef230","Jonathan Hedley"
"1574","nestedAnchorElements01","nestedAnchorElements01","2","Body Change, Introduced, MultiChange","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"1575","nestedAnchorElements01","nestedAnchorElements01","2","Body Change","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"1576","nestedAnchorElements02","nestedAnchorElements02","2","Body Change, Introduced, MultiChange","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"1577","nestedAnchorElements02","nestedAnchorElements02","2","Body Change","When serializing TextNodes, skip emitting blank newlines if the previous element indented

Also, don't add newlines in outline mode for data nodes

Fixes #1688
Fixes #1689
","f24175e49e4359631cba640f7effaf5327094619","Jonathan Hedley"
"1578","ensureSearchArraysAreSorted","ensureSearchArraysAreSorted","1","Body Change","Minor parse speed improvement
","8c50f6f6a76964a0f16e4e3aea127321903c079a","Jonathan Hedley"
"1579","testPublicIdentifiersWithWhitespace","testPublicIdentifiersWithWhitespace","1","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1580","testUnconsumeAtBufferBoundary","testUnconsumeAtBufferBoundary","3","Body Change, Introduced, MultiChange","Report the correct error position in some malformed constructs

Merges #1253

Fixes #1251

Authored bt @csaboka, but I rewrote the test file to fix the diff up.
","c2b1fe73129e9c23d93e5393ce8007995c1630dc","Jonathan Hedley"
"1581","testUnconsumeAtBufferBoundary","testUnconsumeAtBufferBoundary","3","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1582","testUnconsumeAtBufferBoundary","testUnconsumeAtBufferBoundary","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1583","testUnconsumeAfterBufferUp","testUnconsumeAfterBufferUp","2","Body Change, Introduced, MultiChange","Don't try to unconsume after a potential bufferUp when moving from RCData to TagOpen state

Should fix #1542 - I wasn't able to directly test this with the sample fuzz output, but was able to reconstruct the same code execution path and error with a standard unit test.

Also reviewed all 14 other uses of unconsume() and verified that these all are directly after a consume() and there's no bufferUp() potential, so those cannot trigger this underrun.
","48d86458bfef17e5ed1118235c422b7a9d4e5c7c","Jonathan Hedley"
"1584","testUnconsumeAfterBufferUp","testUnconsumeAfterBufferUp","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"1585","testOpeningAngleBracketInsteadOfAttribute","testOpeningAngleBracketInsteadOfAttribute","1","Body Change, Introduced, MultiChange","Report the correct error position in some malformed constructs

Merges #1253

Fixes #1251

Authored bt @csaboka, but I rewrote the test file to fix the diff up.
","c2b1fe73129e9c23d93e5393ce8007995c1630dc","Jonathan Hedley"
"1586","testMalformedSelfClosingTag","testMalformedSelfClosingTag","1","Body Change, Introduced, MultiChange","Report the correct error position in some malformed constructs

Merges #1253

Fixes #1251

Authored bt @csaboka, but I rewrote the test file to fix the diff up.
","c2b1fe73129e9c23d93e5393ce8007995c1630dc","Jonathan Hedley"
"1587","rcData","rcData","1","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1588","plaintext","plaintext","1","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1589","nullInTag","nullInTag","1","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1590","attributeValUnquoted","attributeValUnquoted","1","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"1591","chompBalancedMatchesAsMuchAsPossible","chompBalancedMatchesAsMuchAsPossible","1","Body Change","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"1592","unescape_2","unescape_2","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1593","unescape_2","unescape_2","2","Body Change, Introduced, MultiChange","Fix unescape for runs of escaped characters

Enables the example in #838 by @DulithaRanatunga to work
","bc2181dd4be4e702d54edba8b498e64fc568cf96","Jonathan Hedley"
"1594","escapeCssIdentifier","escapeCssIdentifier","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1595","escapeCssIdentifier","escapeCssIdentifier","2","Body Change, Introduced, MultiChange","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"1596","chompToIgnoreCase","chompToIgnoreCase","1","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1597","consumeToIgnoreSecondCallTest","consumeToIgnoreSecondCallTest","3","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1598","consumeToIgnoreSecondCallTest","consumeToIgnoreSecondCallTest","3","Body Change, Introduced, MultiChange","Missing Test Case to preserve consumeToIgnoreCase() behavior (#925)

Since pos is a class attribute, calling consumeToIgnoreCase() on the same queue will return different Strings. If this is the intended behavior than this test preserves that. If not the second assert should be changed to assertEquals(""<textarea>one < two "", data); . Nevertheless that would cause the test to fail based on current implementation. This missing behavior preservation was detected by running mutation testing analysis.","ac13ffd28c09afa1da96b60e2e41f646de87d4af","Ioana Leontiuc"
"1599","consumeToIgnoreSecondCallTest","consumeToIgnoreSecondCallTest","3","Body Change","Adding support for nested quotes in attribute selection
","1791ef17ad6e0624a7b057b89439f7a33b3bbb82","Himanshu Garg"
"1600","testNestedQuotes","testNestedQuotes","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1601","testNestedQuotes","testNestedQuotes","2","Body Change, Introduced, MultiChange","Prep #988 for merge
","bf4f99c72ba3d59486e0decb59a2b87edee4f1ff","Jonathan Hedley"
"1602","validateNestedQuotes","validateNestedQuotes","1","Body Change, Introduced, MultiChange","Prep #988 for merge
","bf4f99c72ba3d59486e0decb59a2b87edee4f1ff","Jonathan Hedley"
"1603","chompBalancedThrowIllegalArgumentException","chompBalancedThrowIllegalArgumentException","3","Body Change, Exceptions Change, Introduced, MultiChange","test: chompBalanced() should throw IllegalArgumentException when unbalanced input
","ff979f461572acfc32c0c70b091cc3a24529296a","danglotb"
"1604","chompBalancedThrowIllegalArgumentException","chompBalancedThrowIllegalArgumentException","3","Exceptions Change","Test improvements; assertions updated and unused exception declarations
removed.
","8ddcef3c420f64689ae486237291daf975940973","offa"
"1605","chompBalancedThrowIllegalArgumentException","chompBalancedThrowIllegalArgumentException","3","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1606","testQuotedPattern","testQuotedPattern","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","6e9efc9f4dd3cd307e3dae7fbc67bdb0b92936d7","Jonathan Hedley"
"1607","testQuotedPattern","testQuotedPattern","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1608","consumeEscapedTag","consumeEscapedTag","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1609","consumeEscapedTag","consumeEscapedTag","2","Body Change, Introduced, MultiChange","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"1610","consumeEscapedId","consumeEscapedId","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1611","consumeEscapedId","consumeEscapedId","2","Body Change, Introduced, MultiChange","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"1612","escapeAtEof","escapeAtEof","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1613","escapeAtEof","escapeAtEof","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"1614","consumeCssIdentifier_WebPlatformTests","consumeCssIdentifier_WebPlatformTests","1","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1615","cssIdentifiers","cssIdentifiers","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1616","cssIdentifiers","cssIdentifiers","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1617","cssAdditionalIdentifiers","cssAdditionalIdentifiers","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1618","cssAdditionalIdentifiers","cssAdditionalIdentifiers","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1619","consumeCssIdentifierWithEmptyInput","consumeCssIdentifierWithEmptyInput","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1620","consumeCssIdentifierWithEmptyInput","consumeCssIdentifierWithEmptyInput","2","Body Change, Exceptions Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1621","consumeCssIdentifier_invalidButSupportedForBackwardsCompatibility","consumeCssIdentifier_invalidButSupportedForBackwardsCompatibility","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1622","consumeCssIdentifier_invalidButSupportedForBackwardsCompatibility","consumeCssIdentifier_invalidButSupportedForBackwardsCompatibility","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1623","parseCssIdentifier","parseCssIdentifier","2","File Renamed","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"1624","parseCssIdentifier","parseCssIdentifier","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1625","assertParsedCssIdentifierEquals","assertParsedCssIdentifierEquals","1","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"1626","ensureSearchArraysAreSorted","ensureSearchArraysAreSorted","1","Body Change","Clean up sort test
","43c35a792cf234c2c86616a81a4097c0d3ab693d","Jonathan Hedley"
"1627","nonnull","nonnull","1","Body Change","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"1628","nonnullAssertions","nonnullAssertions","2","Body Change, Exceptions Change, MultiChange","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"1629","nonnullAssertions","nonnullAssertions","2","Body Change, Exceptions Change, MultiChange","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"1630","isSpecial","isSpecial","2","File Renamed","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"1631","isSpecial","isSpecial","2","Body Change, Introduced, MultiChange","`template` is a special tag

Also updated isSpecial to current spec

Fixes #2258
","72fb5963d96c7a6f2663513aa993049239bada23","Jonathan Hedley"
"1632","customRcdataTag","customRcdataTag","2","File Renamed","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"1633","customRcdataTag","customRcdataTag","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1634","customDataTag","customDataTag","2","File Renamed","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"1635","customDataTag","customDataTag","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"1636","canReuse","canReuse","1","Body Change","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"1637","canCleanlyConsumePortionOfUrl","canCleanlyConsumePortionOfUrl","2","Body Change, Exceptions Change, MultiChange","Added test of partial fetch in Stream Parser
","b4b3fd177d5750b15f8ad8322a696d91cbea034e","Jonathan Hedley"
"1638","canCleanlyConsumePortionOfUrl","canCleanlyConsumePortionOfUrl","2","Exceptions Change","Shh
","e1bfee9357360d0783d46476a6f029bf0336446e","Jonathan Hedley"
"1639","canStreamFragmentXml","canStreamFragmentXml","2","Exceptions Change","Added test of partial fetch in Stream Parser
","b4b3fd177d5750b15f8ad8322a696d91cbea034e","Jonathan Hedley"
"1640","canStreamFragmentXml","canStreamFragmentXml","2","Exceptions Change","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"1641","emitsOnlyOnce","emitsOnlyOnce","1","Body Change, Introduced, MultiChange","Merge branch 'master' into develop-1.20.1
","e10e04da6c7d93daf5f74d449594cba7ea3683e3","Jonathan Hedley"
"1642","simpleBehaviourTest","simpleBehaviourTest","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1643","simpleBehaviourTest2","simpleBehaviourTest2","2","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1644","simpleBehaviourTest2","simpleBehaviourTest2","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1645","basicBehaviourTest","basicBehaviourTest","2","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1646","basicBehaviourTest","basicBehaviourTest","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1647","basicWithImagesTest","basicWithImagesTest","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1648","testRelaxed","testRelaxed","3","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1649","testRelaxed","testRelaxed","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1650","testRelaxed","testRelaxed","3","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1651","testRemoveTags","testRemoveTags","1","Body Change, Introduced, MultiChange","Merge branch 'pr/449'
","de941054022a153e8503710e9073fd258ee00ac3","Jonathan Hedley"
"1652","testRemoveAttributes","testRemoveAttributes","1","Body Change, Introduced, MultiChange","Merge branch 'pr/449'
","de941054022a153e8503710e9073fd258ee00ac3","Jonathan Hedley"
"1653","allAttributes","allAttributes","1","Body Change, Introduced, MultiChange","Use Iterator.remove to avoid ConcurrentModificationException

Add improved test coverage
","b5de45fee2354f06829292fae8bb24822017d848","Jonathan Hedley"
"1654","removeProtocols","removeProtocols","1","Body Change, Introduced, MultiChange","Use Iterator.remove to avoid ConcurrentModificationException

Add improved test coverage
","b5de45fee2354f06829292fae8bb24822017d848","Jonathan Hedley"
"1655","testRemoveEnforcedAttributes","testRemoveEnforcedAttributes","2","Body Change, Introduced, MultiChange","Merge branch 'pr/449'
","de941054022a153e8503710e9073fd258ee00ac3","Jonathan Hedley"
"1656","testRemoveEnforcedAttributes","testRemoveEnforcedAttributes","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1657","testRemoveProtocols","testRemoveProtocols","2","Body Change, Introduced, MultiChange","Merge branch 'pr/449'
","de941054022a153e8503710e9073fd258ee00ac3","Jonathan Hedley"
"1658","testRemoveProtocols","testRemoveProtocols","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1659","safeListedProtocolShouldBeRetained","safeListedProtocolShouldBeRetained","1","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1660","testDropComments","testDropComments","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1661","testDropXmlProc","testDropXmlProc","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1662","testDropScript","testDropScript","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1663","testDropImageScript","testDropImageScript","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1664","testCleanJavascriptHref","testCleanJavascriptHref","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1665","testCleanAnchorProtocol","testCleanAnchorProtocol","2","Body Change, Introduced, MultiChange","Merge branch 'pr/441'
","199e34bca6538c2125b00d20853eb4616c08a0b5","Jonathan Hedley"
"1666","testCleanAnchorProtocol","testCleanAnchorProtocol","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1667","testDropsUnknownTags","testDropsUnknownTags","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1668","testHandlesEmptyAttributes","testHandlesEmptyAttributes","1","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1669","testIsValidBodyHtml","testIsValidBodyHtml","1","Body Change, Introduced, MultiChange","Update isValid and cleaner methods

Stricter at enforcing that it is only body content and that there are
no HTML errors.

Fixes #245
Fixes #632
","f44d6e64ac97d4a5c119e3e22f22f4d87c94b7e1","Jonathan Hedley"
"1670","testIsValidDocument","testIsValidDocument","2","Body Change, Introduced, MultiChange","Update isValid and cleaner methods

Stricter at enforcing that it is only body content and that there are
no HTML errors.

Fixes #245
Fixes #632
","f44d6e64ac97d4a5c119e3e22f22f4d87c94b7e1","Jonathan Hedley"
"1671","testIsValidDocument","testIsValidDocument","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1672","resolvesRelativeLinks","resolvesRelativeLinks","3","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1673","resolvesRelativeLinks","resolvesRelativeLinks","3","Body Change","Optionally preserve related links in elements when cleaning
","7171cec2dfd3c8b58645b69970425864abf8ba1f","Jonathan Hedley"
"1674","resolvesRelativeLinks","resolvesRelativeLinks","3","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1675","preservesRelativeLinksIfConfigured","preservesRelativeLinksIfConfigured","1","Body Change, Introduced, MultiChange","Refactored the Cleaner to traverse rather than recurse child nodes

Avoids the risk of overflowing the stack

Fixes #246
","dfac9ce465ff9c988904d05014d2be2715aa1d2b","Jonathan Hedley"
"1676","dropsUnresolvableRelativeLinks","dropsUnresolvableRelativeLinks","2","Body Change, Introduced, MultiChange","Fixed test package
","77add7946ea5bca622b1f4f654f97e62f6db1e95","Jonathan Hedley"
"1677","dropsUnresolvableRelativeLinks","dropsUnresolvableRelativeLinks","2","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"1678","dropsJavascriptWhenRelativeLinks","dropsJavascriptWhenRelativeLinks","1","Body Change, Introduced, MultiChange","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"1679","dropsConcealedJavascriptProtocolWhenRelativesLinksEnabled","dropsConcealedJavascriptProtocolWhenRelativesLinksEnabled","2","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"1680","dropsConcealedJavascriptProtocolWhenRelativesLinksEnabled","dropsConcealedJavascriptProtocolWhenRelativesLinksEnabled","2","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"1681","dropsConcealedJavascriptProtocolWhenRelativesLinksDisabled","dropsConcealedJavascriptProtocolWhenRelativesLinksDisabled","1","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"1682","handlesCustomProtocols","handlesCustomProtocols","3","Body Change, Introduced, MultiChange","Updated the Cleaner to support custom allowed protocols such as ""cid:"" and ""data:"".

Fixes #127
","c98349a7fb5598f0cbac88130520171bd6f253c1","Jonathan Hedley"
"1683","handlesCustomProtocols","handlesCustomProtocols","3","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"1684","handlesCustomProtocols","handlesCustomProtocols","3","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1685","handlesAllPseudoTag","handlesAllPseudoTag","2","Body Change, Introduced, MultiChange","Fixed issue with :all pseudo-tag in HTML sanitizer when cleaning tags

Fixes #156
","a97385eb2870d113427b0d9430e108236ae363b4","Jonathan Hedley"
"1686","handlesAllPseudoTag","handlesAllPseudoTag","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1687","addsTagOnAttributesIfNotSet","addsTagOnAttributesIfNotSet","2","Body Change, Introduced, MultiChange","In HTML whitelists, when defining allowed attributes for a tag, automatically add the tag to the allowed list.

Fixes #192.
","1e85878fe008f6c651c348dd1d5b2edf713f63bb","Jonathan Hedley"
"1688","addsTagOnAttributesIfNotSet","addsTagOnAttributesIfNotSet","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1689","supplyOutputSettings","supplyOutputSettings","2","Body Change, Introduced, MultiChange","In jsoup.clean, allow custom OutputSettings, to control pretty printing, character set, and entity escaping.

Fixes #148
","cf8ae1c58905cca6cddf69d9f736c1f6e7e2933a","Jonathan Hedley"
"1690","supplyOutputSettings","supplyOutputSettings","2","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"1691","handlesFramesets","handlesFramesets","2","Body Change, Introduced, MultiChange","Check for null body, possible in framesets.

Fixes #154
","d7b5d5b28a6dd7ff198f02e1ee82160220135a74","Jonathan Hedley"
"1692","handlesFramesets","handlesFramesets","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1693","cleansInternationalText","cleansInternationalText","1","Body Change, Introduced, MultiChange","Confirm cleans Russian characters OK
","fb837fe7667480e0ca7e550f6cf813de45309996","Jonathan Hedley"
"1694","testScriptTagInSafeList","testScriptTagInSafeList","1","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1695","bailsIfRemovingProtocolThatsNotSet","bailsIfRemovingProtocolThatsNotSet","3","Body Change, Introduced, MultiChange","In Whitelists, validate that removed protocol exists before removing.
","b919f01e4719631f2621c523d78777ba237be7dd","Jonathan Hedley"
"1696","bailsIfRemovingProtocolThatsNotSet","bailsIfRemovingProtocolThatsNotSet","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1697","bailsIfRemovingProtocolThatsNotSet","bailsIfRemovingProtocolThatsNotSet","3","Body Change, Exceptions Change, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1698","handlesControlCharactersAfterTagName","handlesControlCharactersAfterTagName","1","Body Change, Introduced, MultiChange","Check attribute name is not empty after trimming before creating attribute

Fixes #793
","a623db776696c0e03f68e849147f6a0c57063c02","Jonathan Hedley"
"1699","handlesAttributesWithNoValue","handlesAttributesWithNoValue","1","Body Change, Introduced, MultiChange","NPE fix
","8808e3fbc5a8f25970c151d076636ad05798ff9d","Jonathan Hedley"
"1700","handlesNoHrefAttribute","handlesNoHrefAttribute","2","Body Change, Introduced, MultiChange","Test for #1205
","82e2c44234ca5a33b5f6a688949e0247af4dbfe4","Jonathan Hedley"
"1701","handlesNoHrefAttribute","handlesNoHrefAttribute","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1702","handlesNestedQuotesInAttribute","handlesNestedQuotesInAttribute","2","Body Change, Introduced, MultiChange","Added test to validate #1243

(Doesn't repro)
","6b2bf55e43ce17efb8d8ac15d5417d78c3eaad16","Jonathan Hedley"
"1703","handlesNestedQuotesInAttribute","handlesNestedQuotesInAttribute","2","Body Change","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"1704","copiesOutputSettings","copiesOutputSettings","1","Body Change, Introduced, MultiChange","Clone outputsettings from dirty to clean document
","532b79a61ae8191e2927c59300af68d18a54aa4e","Jonathan Hedley"
"1705","preservesSourcePositionViaUserData","preservesSourcePositionViaUserData","3","Body Change, Introduced, MultiChange","Track source position from original to cleaned elements.
","12175ab43e639289c387d4af4a3741a477416f45","Jonathan Hedley"
"1706","preservesSourcePositionViaUserData","preservesSourcePositionViaUserData","3","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"1707","preservesSourcePositionViaUserData","preservesSourcePositionViaUserData","3","Body Change","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"1708","cleansCaseSensitiveElements","cleansCaseSensitiveElements","2","Body Change, Introduced, MultiChange","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"1709","cleansCaseSensitiveElements","cleansCaseSensitiveElements","2","Body Change","Normalize attribute names on creation

Allows preserved case attributes in input to make it into the output, even if the safelist attribute name was set as lowercase).

Fixes attribute case in #2049
","adce86ef40fbbb185ba4ff6f6b1e5c015e8cd7d0","Jonathan Hedley"
"1710","nofollowOnlyOnExternalLinks","nofollowOnlyOnExternalLinks","1","Body Change, Introduced, MultiChange","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"1711","filter","filter","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1712","filter","filter","2","Body Change, Introduced, MultiChange","Renamed Elements#select to Elements#filter.

Renamed so the API is better self describing.
","314fa9d2351741b47c34337f57faacc8fd5448da","Jonathan Hedley"
"1713","attributes","attributes","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1714","attributes","attributes","2","Body Change, Introduced, MultiChange","Attribute helpers in Element and Elements.
","43e16a608ddc00981c92cf3772c350c8b7e934dc","Jonathan Hedley"
"1715","hasAttr","hasAttr","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1716","hasAttr","hasAttr","2","Body Change, Introduced, MultiChange","Changed Elements#attr(key) to scan all elements for attribute.

Closes #4.
","4a0e5a59e690f53f4fbeb16ef80ba5afe66bb744","Jonathan Hedley"
"1717","hasAbsAttr","hasAbsAttr","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1718","hasAbsAttr","hasAbsAttr","3","Body Change, Introduced, MultiChange","Improved ""abs:"" absolute URL handling in Elements.attr(""abs:href"") and Node.hasAttr(""abs:href"").

Fixes #97
","411c01ff53f56f0b84bee210ad75c8c2114efa55","Jonathan Hedley"
"1719","hasAbsAttr","hasAbsAttr","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"1720","attr","attr","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1721","attr","attr","2","Body Change, Introduced, MultiChange","Changed Elements#attr(key) to scan all elements for attribute.

Closes #4.
","4a0e5a59e690f53f4fbeb16ef80ba5afe66bb744","Jonathan Hedley"
"1722","absAttr","absAttr","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1723","absAttr","absAttr","3","Body Change, Introduced, MultiChange","Improved ""abs:"" absolute URL handling in Elements.attr(""abs:href"") and Node.hasAttr(""abs:href"").

Fixes #97
","411c01ff53f56f0b84bee210ad75c8c2114efa55","Jonathan Hedley"
"1724","absAttr","absAttr","3","Body Change","Update links to https://jsoup.org/
","f6a1ef346c74ca3305ef5f198ac953a4fc208813","Jonathan Hedley"
"1725","classes","classes","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1726","classes","classes","2","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"1727","hasClassCaseInsensitive","hasClassCaseInsensitive","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1728","hasClassCaseInsensitive","hasClassCaseInsensitive","2","Body Change, Introduced, MultiChange","Access the class attribute case-insensitiviely

Fixes #814
","83f01fd864e59fa69c894da06f4a15489222d401","Jonathan Hedley"
"1729","text","text","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1730","text","text","2","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"1731","hasText","hasText","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1732","hasText","hasText","2","Body Change, Introduced, MultiChange","hasText
","93e9d84da0e87896aaaac14769eece487ba9e64d","Jonathan Hedley"
"1733","html","html","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1734","html","html","2","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"1735","outerHtml","outerHtml","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1736","outerHtml","outerHtml","2","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"1737","setHtml","setHtml","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1738","setHtml","setHtml","3","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"1739","setHtml","setHtml","3","Body Change","Code improvements (#1216)

* Code simplified.

* Code improvements:

 - String concatenation avoided
 - Size checks replaced by isEmpty()
 - Initialization fixed
 - Missing Overrides added
","a4b5e826f2440b19ee2a98fdece7211433cfdaed","offa"
"1740","val","val","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1741","val","val","3","Body Change, Introduced, MultiChange","Added val() and val(string) to Element and Elements.

Treat contents of textarea as text, not data.

Closes #14
","fcab98cdd311deb3dd4fd63fef2bc6c4c397f186","Jonathan Hedley"
"1742","val","val","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"1743","before","before","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1744","before","before","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"1745","after","after","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1746","after","after","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"1747","wrap","wrap","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1748","wrap","wrap","2","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"1749","wrapDiv","wrapDiv","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1750","wrapDiv","wrapDiv","3","Body Change, Introduced, MultiChange","Extra wrap/unwrap tests
","59fb5117a767ab75fe3baf5c37966c83430b02af","Jonathan Hedley"
"1751","wrapDiv","wrapDiv","3","Body Change","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"1752","unwrap","unwrap","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1753","unwrap","unwrap","3","Body Change, Introduced, MultiChange","Added Node.unwrap() and Elements.unwrap(), to remove a node but keep its contents.

Fixes #100
","444b5cea6a4c02cecfd50e5d1ecaaaa389d05781","Jonathan Hedley"
"1754","unwrap","unwrap","3","Body Change","Wrap first inline elements in block, ignoring preceding whitespace
","a349582236a7e69ce341f3b4ee913cb8cd19b955","Jonathan Hedley"
"1755","unwrapP","unwrapP","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1756","unwrapP","unwrapP","2","Body Change, Introduced, MultiChange","Extra wrap/unwrap tests
","59fb5117a767ab75fe3baf5c37966c83430b02af","Jonathan Hedley"
"1757","unwrapKeepsSpace","unwrapKeepsSpace","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1758","unwrapKeepsSpace","unwrapKeepsSpace","2","Body Change, Introduced, MultiChange","Test to verify #610

Doesn’t repro.

Closes #610
","f2f3e66014a8e85863e31b8b7f7e8ebdde886f1d","Jonathan Hedley"
"1759","empty","empty","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1760","empty","empty","2","Body Change, Introduced, MultiChange","Implement Elements.empty() and Elements.remove().
","210eeadbea339e00711cfe3f8bd68f600ea0765c","Jonathan Hedley"
"1761","remove","remove","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1762","remove","remove","2","Body Change, Introduced, MultiChange","Implement Elements.empty() and Elements.remove().
","210eeadbea339e00711cfe3f8bd68f600ea0765c","Jonathan Hedley"
"1763","eq","eq","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1764","eq","eq","3","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"1765","eq","eq","3","Body Change","Javadoc note for Elements.get(int)
","e96bd4bc44fa8e57993679ba0f4851554a8e7131","Jonathan Hedley"
"1766","is","is","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1767","is","is","2","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"1768","parents","parents","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1769","parents","parents","2","Body Change, Introduced, MultiChange","Added :has(selector) pseudo-selector.
Added Element#parents() and Elements#parents() methods.

Fixes #20
","aec561f3328980182f299e61eaae45420245141b","Jonathan Hedley"
"1770","not","not","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1771","not","not","2","Body Change, Introduced, MultiChange","Added Elements.not(selector) method, to remove undesired results from selector results.
","ca8bad78bf898f808ad6028d4a7c09a69bc65b84","Jonathan Hedley"
"1772","tagNameSet","tagNameSet","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1773","tagNameSet","tagNameSet","2","Body Change, Introduced, MultiChange","Added ability to change an element's tag with Element.tagName(String), and to change many at once with Elements.tagName(String).
","9ae3df9993f3f5991d0e6fd96c649d93d547d475","Jonathan Hedley"
"1774","traverse","traverse","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1775","traverse","traverse","3","Body Change, Introduced, MultiChange","Added Node.traverse() and Elements.traverse() methods, to iterate through a node's descendants.
","f45de034880877582fb6414c4d09f40c5999ac70","Jonathan Hedley"
"1776","traverse","traverse","3","Body Change","Code improvements (#1216)

* Code simplified.

* Code improvements:

 - String concatenation avoided
 - Size checks replaced by isEmpty()
 - Initialization fixed
 - Missing Overrides added
","a4b5e826f2440b19ee2a98fdece7211433cfdaed","offa"
"1777","forms","forms","3","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1778","forms","forms","3","Body Change, Introduced, MultiChange","Added a forms() convenience method to Elements

This allows one to get at FormElements without casting.
","834d3142304e0927dc659791da6a4521f271d7fd","Jonathan Hedley"
"1779","forms","forms","3","Body Change","Fix Elements.forms()

the forms() method used to return FormElement-s that are directly in the Elements collection.
This behavior was broken since a657ae0240b875a703a1e4909d56ad59997d362d

Fixes #1384
","982c993a1b886a807d7facc47dcb29dbed2961f3","Arnaud Pflieger"
"1780","comments","comments","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1781","comments","comments","2","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"1782","textNodes","textNodes","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1783","textNodes","textNodes","2","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"1784","dataNodes","dataNodes","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1785","dataNodes","dataNodes","2","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"1786","nodesEmpty","nodesEmpty","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1787","nodesEmpty","nodesEmpty","2","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"1788","classWithHyphen","classWithHyphen","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1789","classWithHyphen","classWithHyphen","2","Body Change, Introduced, MultiChange","Verify #398

No repro
","8165206e8ac599512434e88267a78e543cfdc3f7","Jonathan Hedley"
"1790","siblings","siblings","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1791","siblings","siblings","2","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"1792","eachText","eachText","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1793","eachText","eachText","2","Body Change, Introduced, MultiChange","Added eachText and eachAttr
","16b2ab8e25e6bea39ae04f9d310331e411fb2e65","Jonathan Hedley"
"1794","eachAttr","eachAttr","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1795","eachAttr","eachAttr","2","Body Change, Introduced, MultiChange","Added eachText and eachAttr
","16b2ab8e25e6bea39ae04f9d310331e411fb2e65","Jonathan Hedley"
"1796","setElementByIndex","setElementByIndex","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1797","setElementByIndex","setElementByIndex","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1798","removeElementByIndex","removeElementByIndex","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1799","removeElementByIndex","removeElementByIndex","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1800","removeElementByObject","removeElementByObject","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1801","removeElementByObject","removeElementByObject","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1802","removeElementObjectNoops","removeElementObjectNoops","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1803","removeElementObjectNoops","removeElementObjectNoops","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1804","clear","clear","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1805","clear","clear","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1806","removeAll","removeAll","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1807","removeAll","removeAll","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1808","retainAll","retainAll","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1809","retainAll","retainAll","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1810","iteratorRemovesFromDom","iteratorRemovesFromDom","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1811","iteratorRemovesFromDom","iteratorRemovesFromDom","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1812","removeIf","removeIf","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1813","removeIf","removeIf","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1814","removeIfSupportsConcurrentRead","removeIfSupportsConcurrentRead","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1815","removeIfSupportsConcurrentRead","removeIfSupportsConcurrentRead","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1816","replaceAll","replaceAll","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1817","replaceAll","replaceAll","2","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"1818","selectFirst","selectFirst","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1819","selectFirst","selectFirst","2","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"1820","selectFirstNullOnNoMatch","selectFirstNullOnNoMatch","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1821","selectFirstNullOnNoMatch","selectFirstNullOnNoMatch","2","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"1822","expectFirst","expectFirst","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1823","expectFirst","expectFirst","2","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"1824","expectFirstThrowsOnNoMatch","expectFirstThrowsOnNoMatch","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1825","expectFirstThrowsOnNoMatch","expectFirstThrowsOnNoMatch","2","Body Change, Exceptions Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"1826","selectFirstFromPreviousSelect","selectFirstFromPreviousSelect","2","File Renamed","Renamed ElementList to Elements
","d31572d7abb174d3a75d80d909d9aaa0be093c62","Jonathan Hedley"
"1827","selectFirstFromPreviousSelect","selectFirstFromPreviousSelect","2","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"1828","assertSelectedIds","assertSelectedIds","3","Body Change, Introduced, MultiChange","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1829","assertSelectedIds","assertSelectedIds","3","Body Change","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"1830","assertSelectedIds","assertSelectedIds","3","Modifier Change","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"1831","assertSelectedOwnText","assertSelectedOwnText","3","Body Change, Introduced, MultiChange","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1832","assertSelectedOwnText","assertSelectedOwnText","3","Body Change","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"1833","assertSelectedOwnText","assertSelectedOwnText","3","Modifier Change","Test for #1998

Closes #1998

Was fixed by #2146
","d5debf82efb35bca3b82aaa72405dfdae8a620df","Jonathan Hedley"
"1834","testByTag","testByTag","3","Body Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1835","testByTag","testByTag","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1836","testByTag","testByTag","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1837","byEscapedTag","byEscapedTag","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1838","byEscapedTag","byEscapedTag","2","Body Change, Introduced, MultiChange","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"1839","testById","testById","3","Body Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1840","testById","testById","3","Body Change","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"1841","testById","testById","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1842","byEscapedId","byEscapedId","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1843","byEscapedId","byEscapedId","2","Body Change, Introduced, MultiChange","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"1844","testByClass","testByClass","3","Body Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1845","testByClass","testByClass","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1846","testByClass","testByClass","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1847","byEscapedClass","byEscapedClass","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1848","byEscapedClass","byEscapedClass","3","Body Change, Introduced, MultiChange","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"1849","byEscapedClass","byEscapedClass","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1850","testByClassCaseInsensitive","testByClassCaseInsensitive","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1851","testByClassCaseInsensitive","testByClassCaseInsensitive","2","Body Change, Introduced, MultiChange","Access the class attribute case-insensitiviely

Fixes #814
","83f01fd864e59fa69c894da06f4a15489222d401","Jonathan Hedley"
"1852","testByAttribute","testByAttribute","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1853","testNamespacedTag","testNamespacedTag","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1854","testNamespacedTag","testNamespacedTag","4","Body Change, Introduced, MultiChange","Added support for namespaced elements (<fb:name>) and selectors (fb|name)
","e5f6e084f755969196ca9a87c6b334f7125359aa","Jonathan Hedley"
"1855","testNamespacedTag","testNamespacedTag","4","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1856","testNamespacedTag","testNamespacedTag","4","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1857","testWildcardNamespacedTag","testWildcardNamespacedTag","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1858","testWildcardNamespacedTag","testWildcardNamespacedTag","3","Body Change, Introduced, MultiChange","Merge pull request #724 from er1c/wildcardnamespace

Add wildcard-namespace selector support '*|' Issue #723","1eecd1ad42097adba8f43ab1928e76b6027d3ad1","Jonathan Hedley"
"1859","testWildcardNamespacedTag","testWildcardNamespacedTag","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1860","testNamespacedWildcardTag","testNamespacedWildcardTag","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1861","testNamespacedWildcardTag","testNamespacedWildcardTag","2","Body Change, Introduced, MultiChange","Added support for `ns|*` selector

Fixes #1811
","5ad4b5347b9aec819ed1017fff5faac9c9da715e","Jonathan Hedley"
"1862","testWildcardNamespacedXmlTag","testWildcardNamespacedXmlTag","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1863","testWildcardNamespacedXmlTag","testWildcardNamespacedXmlTag","3","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"1864","testWildcardNamespacedXmlTag","testWildcardNamespacedXmlTag","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1865","testWildCardNamespacedCaseVariations","testWildCardNamespacedCaseVariations","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1866","testWildCardNamespacedCaseVariations","testWildCardNamespacedCaseVariations","2","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"1867","testByAttributeStarting","testByAttributeStarting","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1868","testByAttributeRegex","testByAttributeRegex","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1869","testByAttributeRegex","testByAttributeRegex","3","Body Change, Introduced, MultiChange","Added [key~=regex] attribute selector by regular expression
","57567c678cadb79fbc19b86e11391e325834dffb","Jonathan Hedley"
"1870","testByAttributeRegex","testByAttributeRegex","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1871","testByAttributeRegexCharacterClass","testByAttributeRegexCharacterClass","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1872","testByAttributeRegexCharacterClass","testByAttributeRegexCharacterClass","3","Body Change, Introduced, MultiChange","Fixed support for character class regular expressions in [attr=~regex] selector
","eb1edd463b1f3b52b541d58487718676445d0d34","Jonathan Hedley"
"1873","testByAttributeRegexCharacterClass","testByAttributeRegexCharacterClass","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"1874","testByAttributeRegexCombined","testByAttributeRegexCombined","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1875","testByAttributeRegexCombined","testByAttributeRegexCombined","2","Body Change, Introduced, MultiChange","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1876","testCombinedWithContains","testCombinedWithContains","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1877","testCombinedWithContains","testCombinedWithContains","2","Body Change, Introduced, MultiChange","Added a test to confirm combinators don't match in balanced contains queries
","4ad65182dbdfec91d7795206bef4342673cb8f11","Jonathan Hedley"
"1878","testAllElements","testAllElements","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1879","testAllElements","testAllElements","3","Body Change, Introduced, MultiChange","Selector: added * (all elements) and parent > child.
","86c1d97c5f83cb6cc9c0d7490942b806d3a1d3be","Jonathan Hedley"
"1880","testAllElements","testAllElements","3","Body Change","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"1881","testAllWithClass","testAllWithClass","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1882","testAllWithClass","testAllWithClass","2","Body Change, Introduced, MultiChange","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"1883","testGroupOr","testGroupOr","3","Body Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1884","testGroupOr","testGroupOr","3","Body Change","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"1885","testGroupOr","testGroupOr","3","Body Change","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"1886","testGroupOrAttribute","testGroupOrAttribute","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1887","testGroupOrAttribute","testGroupOrAttribute","2","Body Change, Introduced, MultiChange","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"1888","descendant","descendant","5","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1889","descendant","descendant","5","Body Change, Introduced, MultiChange","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"1890","descendant","descendant","5","Body Change","Merge branch 'pr/619'
","3bdad1f1113d27dc74e3e9c631696bb14b61a599","Jonathan Hedley"
"1891","descendant","descendant","5","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"1892","descendant","descendant","5","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1893","and","and","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1894","and","and","4","Body Change, Introduced, MultiChange","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"1895","and","and","4","Body Change","Extend selector test for multi classes and attributes.

E.g.
div.foo.bar[title=qux][name=bar] matches:
<div class=""foo bar"" title=""qux"" name=""bar"">
","c1472f385f1c24c047543787ab7ef8b807cc8ba4","Jonathan Hedley"
"1896","and","and","4","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1897","deeperDescendant","deeperDescendant","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1898","deeperDescendant","deeperDescendant","4","Body Change, Introduced, MultiChange","Deeper descendant test.
","315292d76e2e415be2a743ebefb5116898cd97ac","Jonathan Hedley"
"1899","deeperDescendant","deeperDescendant","4","Body Change","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"1900","deeperDescendant","deeperDescendant","4","Body Change","Merge branch 'pr/619'
","3bdad1f1113d27dc74e3e9c631696bb14b61a599","Jonathan Hedley"
"1901","parentChildElement","parentChildElement","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1902","parentChildElement","parentChildElement","2","Body Change, Introduced, MultiChange","Selector: added * (all elements) and parent > child.
","86c1d97c5f83cb6cc9c0d7490942b806d3a1d3be","Jonathan Hedley"
"1903","parentWithClassChild","parentWithClassChild","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1904","parentWithClassChild","parentWithClassChild","3","Body Change, Introduced, MultiChange","Fixed select parser for childs.
","72fe7662416118598bc0af126c15cba3ca09d9b4","Jonathan Hedley"
"1905","parentWithClassChild","parentWithClassChild","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1906","parentChildStar","parentChildStar","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1907","parentChildStar","parentChildStar","2","Body Change, Introduced, MultiChange","Selector: added * (all elements) and parent > child.
","86c1d97c5f83cb6cc9c0d7490942b806d3a1d3be","Jonathan Hedley"
"1908","streamParentChildStar","streamParentChildStar","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1909","streamParentChildStar","streamParentChildStar","2","Body Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"1910","multiChildDescent","multiChildDescent","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1911","multiChildDescent","multiChildDescent","2","Body Change, Introduced, MultiChange","Fixed selector for multi descenders.
","ac57740b13bddd414c98253d53092546c1c330a2","Jonathan Hedley"
"1912","caseInsensitive","caseInsensitive","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1913","caseInsensitive","caseInsensitive","4","Body Change, Introduced, MultiChange","Test confirms selectors are case insensitive.
","45718e932a4b1d88f4228e95e52992d2c5ab7402","Jonathan Hedley"
"1914","caseInsensitive","caseInsensitive","4","Body Change","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"1915","caseInsensitive","caseInsensitive","4","Body Change","Better case insensitive test
","622caa2ac9742eb8985c35430b58efc352e9a05d","Jonathan Hedley"
"1916","adjacentSiblings","adjacentSiblings","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1917","adjacentSiblings","adjacentSiblings","2","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1918","adjacentSiblingsWithId","adjacentSiblingsWithId","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1919","adjacentSiblingsWithId","adjacentSiblingsWithId","2","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1920","notAdjacent","notAdjacent","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1921","notAdjacent","notAdjacent","2","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1922","mixCombinator","mixCombinator","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1923","mixCombinator","mixCombinator","2","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1924","mixCombinatorGroup","mixCombinatorGroup","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1925","mixCombinatorGroup","mixCombinatorGroup","4","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1926","mixCombinatorGroup","mixCombinatorGroup","4","Body Change","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"1927","mixCombinatorGroup","mixCombinatorGroup","4","Body Change","Fixed precedence parsing of group OR (,) in CSS selectors.

Added tests, and repaired cheekily / hastily / incorrectly modified test.
","5d56ace149ae3264d2502d49dd85302fc613a27c","Jonathan Hedley"
"1928","generalSiblings","generalSiblings","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1929","generalSiblings","generalSiblings","2","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"1930","testCharactersInIdAndClass","testCharactersInIdAndClass","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1931","testCharactersInIdAndClass","testCharactersInIdAndClass","3","Body Change, Introduced, MultiChange","Allow - and _ in CSS ID selectors.

Closes #10.
","ec69d09deb79468edde57456c0f79c19128e19e1","Jonathan Hedley"
"1932","testCharactersInIdAndClass","testCharactersInIdAndClass","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1933","testSupportsLeadingCombinator","testSupportsLeadingCombinator","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1934","testSupportsLeadingCombinator","testSupportsLeadingCombinator","3","Body Change, Introduced, MultiChange","Allow combinators at start of selector query

Closes #13
","3eb8a67876703682e4156b378871911870fcaad9","Jonathan Hedley"
"1935","testSupportsLeadingCombinator","testSupportsLeadingCombinator","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1936","testPseudoLessThan","testPseudoLessThan","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1937","testPseudoLessThan","testPseudoLessThan","2","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"1938","testPseudoGreaterThan","testPseudoGreaterThan","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1939","testPseudoGreaterThan","testPseudoGreaterThan","2","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"1940","testPseudoEquals","testPseudoEquals","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1941","testPseudoEquals","testPseudoEquals","2","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"1942","testPseudoBetween","testPseudoBetween","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1943","testPseudoBetween","testPseudoBetween","2","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"1944","testPseudoCombined","testPseudoCombined","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1945","testPseudoCombined","testPseudoCombined","2","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"1946","testPseudoHas","testPseudoHas","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1947","testPseudoHas","testPseudoHas","3","Body Change, Introduced, MultiChange","Added :has(selector) pseudo-selector.
Added Element#parents() and Elements#parents() methods.

Fixes #20
","aec561f3328980182f299e61eaae45420245141b","Jonathan Hedley"
"1948","testPseudoHas","testPseudoHas","3","Body Change","Added :not() selector, to find elements that do not match the selector. E.g. div:not(.logo) finds divs that
do not have the ""logo"" class name.

Fixes #36
","f462438f2ebfb354c823cd2c0b677b0674f0e80c","Jonathan Hedley"
"1949","testNestedHas","testNestedHas","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1950","testNestedHas","testNestedHas","3","Body Change, Introduced, MultiChange","Upgraded the selector query parser to allow nested selectors like 'div:has(p:has(span))'
","cf3676c534e92052acf870c71e2fa8fb9c060fe6","Jonathan Hedley"
"1951","testNestedHas","testNestedHas","3","Body Change","Test update
","211a0b397d251f043e9b2c4815a7e452741dbd0b","Jonathan Hedley"
"1952","testHasSibling","testHasSibling","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1953","testHasSibling","testHasSibling","2","Body Change, Introduced, MultiChange","In `:has()`, check siblings vs descendants if required

Fixes @2137
","c3963d4bb19414d56f42986db96d62208309e748","Jonathan Hedley"
"1954","testPseudoContains","testPseudoContains","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1955","testPsuedoContainsWithParentheses","testPsuedoContainsWithParentheses","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1956","testPsuedoContainsWithParentheses","testPsuedoContainsWithParentheses","3","Body Change, Introduced, MultiChange","Updated TokenQueue so :contains(text) can be escaped, if looking
for ( or ) within text
","e6cc4ceff4e1d119f1779d1370ff99aaa2911f23","Jonathan Hedley"
"1957","testPsuedoContainsWithParentheses","testPsuedoContainsWithParentheses","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1958","containsWholeText","containsWholeText","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1959","containsWholeText","containsWholeText","2","Body Change, Introduced, MultiChange","Added :containsWholeText

Part of #1636
","adba4e80be13fb7a8d0ddfb31258b628bba61b99","jhy"
"1960","containsWholeOwnText","containsWholeOwnText","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1961","containsWholeOwnText","containsWholeOwnText","2","Body Change, Introduced, MultiChange","Added the :containsWholeOwnText selector

And the corresponding Element#wholeOwnText() method.

For #1636
","027c70c94368c2793a42c0532d29f4e05a0307f8","Jonathan Hedley"
"1962","containsOwn","containsOwn","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1963","testMatches","testMatches","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1964","testMatches","testMatches","3","Body Change, Introduced, MultiChange","Implemented :matches(regex) selector.
","916d5399a698ccf3eb2e0f02f4cad234fedec177","Jonathan Hedley"
"1965","testMatches","testMatches","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1966","matchesOwn","matchesOwn","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1967","matchesOwn","matchesOwn","3","Body Change, Introduced, MultiChange","Added support for selectors :containsOwn(text) and :matchesOwn(regex), to supplement Element.ownText().
","2217137d9254f124e01aa935628a4076f7478995","Jonathan Hedley"
"1968","matchesOwn","matchesOwn","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1969","matchesWholeText","matchesWholeText","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1970","matchesWholeText","matchesWholeText","2","Body Change, Introduced, MultiChange","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"1971","matchesWholeOwnText","matchesWholeOwnText","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1972","matchesWholeOwnText","matchesWholeOwnText","2","Body Change, Introduced, MultiChange","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"1973","testRelaxedTags","testRelaxedTags","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1974","testRelaxedTags","testRelaxedTags","3","Body Change, Introduced, MultiChange","Added support for tag names with - and _ (<abc_foo>, <abc-foo>)
","8a49d09f5c2acfb89b0c1f2887728793a036aa15","Jonathan Hedley"
"1975","testRelaxedTags","testRelaxedTags","3","Body Change","Fixed issue when using descendant regex attribute selectors.

Fixes #52
","d0a7e3a00350ea9bdca6a1f005ccc75e5b2d19d4","Jonathan Hedley"
"1976","notParas","notParas","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1977","notParas","notParas","2","Body Change, Introduced, MultiChange","Added :not() selector, to find elements that do not match the selector. E.g. div:not(.logo) finds divs that
do not have the ""logo"" class name.

Fixes #36
","f462438f2ebfb354c823cd2c0b677b0674f0e80c","Jonathan Hedley"
"1978","notAll","notAll","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1979","notAll","notAll","2","Body Change, Introduced, MultiChange","Added :not() selector, to find elements that do not match the selector. E.g. div:not(.logo) finds divs that
do not have the ""logo"" class name.

Fixes #36
","f462438f2ebfb354c823cd2c0b677b0674f0e80c","Jonathan Hedley"
"1980","notClass","notClass","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1981","notClass","notClass","2","Body Change, Introduced, MultiChange","Added :not() selector, to find elements that do not match the selector. E.g. div:not(.logo) finds divs that
do not have the ""logo"" class name.

Fixes #36
","f462438f2ebfb354c823cd2c0b677b0674f0e80c","Jonathan Hedley"
"1982","handlesCommasInSelector","handlesCommasInSelector","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1983","handlesCommasInSelector","handlesCommasInSelector","2","Body Change, Introduced, MultiChange","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"1984","selectSupplementaryCharacter","selectSupplementaryCharacter","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1985","selectSupplementaryCharacter","selectSupplementaryCharacter","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/mingfai/jsoup into mingfai-master
","aa812e42a784bb551e3cda70078c2c1ed6147b20","Jonathan Hedley"
"1986","selectClassWithSpace","selectClassWithSpace","2","Body Change, Introduced, MultiChange","Merge pull request #526 from offa/class_fix

Fix for selector attribute space normalization (issue #521)","98e87c6ae88fc31782f7cb542d4637df1af19f89","Jonathan Hedley"
"1987","selectClassWithSpace","selectClassWithSpace","2","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1988","selectSameElements","selectSameElements","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1989","selectSameElements","selectSameElements","2","Body Change, Introduced, MultiChange","Dedupe elements by identity, not equality

Fixed #614
","73b52d0d995b8c6091c0e92f8ada03a2753b576a","Jonathan Hedley"
"1990","attributeWithBrackets","attributeWithBrackets","4","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1991","attributeWithBrackets","attributeWithBrackets","4","Body Change, Introduced, MultiChange","Allow selectors to contain unbalanced braces

Fixes #611
","a229d7354da5210a728ce5d43158d5cd780772db","Jonathan Hedley"
"1992","attributeWithBrackets","attributeWithBrackets","4","Body Change","Clarify precedence
","d374092e9903cf912fc4ad71b77fd947a6784b20","Jonathan Hedley"
"1993","attributeWithBrackets","attributeWithBrackets","4","Body Change","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"1994","containsData","containsData","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"1995","containsWithQuote","containsWithQuote","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1996","containsWithQuote","containsWithQuote","2","Body Change, Introduced, MultiChange","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"1997","selectFirst","selectFirst","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"1998","selectFirst","selectFirst","2","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"1999","selectFirstWithAnd","selectFirstWithAnd","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2000","selectFirstWithAnd","selectFirstWithAnd","2","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"2001","selectFirstWithOr","selectFirstWithOr","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2002","selectFirstWithOr","selectFirstWithOr","2","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"2003","matchText","matchText","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2004","matchText","matchText","3","Body Change, Introduced, MultiChange","Some more :matchText tests
","5f0714329e2763d330460efee8ccd7f69acc8e7c","Jonathan Hedley"
"2005","matchText","matchText","3","Body Change","Wrap textnodes that follow a br element

Fixes #1858

Had to special-case in a check for <br> in the pretty-print routine, as it doesn't fit the semantics of isBlock nor isInline.
","29be991198d3b518d64ee36176ae415688468f61","Jonathan Hedley"
"2006","nthLastChildWithNoParent","nthLastChildWithNoParent","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2007","nthLastChildWithNoParent","nthLastChildWithNoParent","2","Body Change, Introduced, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"2008","splitOnBr","splitOnBr","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2009","splitOnBr","splitOnBr","2","Body Change, Introduced, MultiChange",":matchText

Fixes #550
","1d7e6fa1c5fb974bdae7abeabbb1e5a48dc00967","Jonathan Hedley"
"2010","matchTextAttributes","matchTextAttributes","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2011","matchTextAttributes","matchTextAttributes","2","Body Change, Introduced, MultiChange","Some more :matchText tests
","5f0714329e2763d330460efee8ccd7f69acc8e7c","Jonathan Hedley"
"2012","findBetweenSpan","findBetweenSpan","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2013","findBetweenSpan","findBetweenSpan","3","Body Change, Introduced, MultiChange","Some more :matchText tests
","5f0714329e2763d330460efee8ccd7f69acc8e7c","Jonathan Hedley"
"2014","findBetweenSpan","findBetweenSpan","3","Body Change","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"2015","startsWithBeginsWithSpace","startsWithBeginsWithSpace","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2016","startsWithBeginsWithSpace","startsWithBeginsWithSpace","2","Body Change, Introduced, MultiChange","Also add fix for ends with spaces

Fixes #1279
","a4210b7a958aa2eaff2b78881f5a1e16f8265dc8","Jonathan Hedley"
"2017","endsWithEndsWithSpaces","endsWithEndsWithSpaces","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2018","endsWithEndsWithSpaces","endsWithEndsWithSpaces","2","Body Change, Introduced, MultiChange","Also add fix for ends with spaces

Fixes #1279
","a4210b7a958aa2eaff2b78881f5a1e16f8265dc8","Jonathan Hedley"
"2019","html_mixed_case_simple_name","html_mixed_case_simple_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2020","html_mixed_case_wildcard_name","html_mixed_case_wildcard_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2021","html_lowercase_simple_name","html_lowercase_simple_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2022","html_lowercase_wildcard_name","html_lowercase_wildcard_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2023","xml_mixed_case_simple_name","xml_mixed_case_simple_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2024","xml_mixed_case_wildcard_name","xml_mixed_case_wildcard_name","2","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2025","xml_mixed_case_wildcard_name","xml_mixed_case_wildcard_name","2","Body Change","Test cleanup
","2ea6f9a8fc51b3a52754517523699b255beb5832","jhy"
"2026","xml_lowercase_simple_name","xml_lowercase_simple_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2027","xml_lowercase_wildcard_name","xml_lowercase_wildcard_name","1","Body Change, Introduced, MultiChange","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"2028","trimSelector","trimSelector","1","Body Change, Introduced, MultiChange","Don't throw an exception if a selector ends in a space, just trim it.

Fixes #1274
","f5fc1bb04c224865f8eee5ed718f4ffee0e18712","Jonathan Hedley"
"2029","xmlWildcardNamespaceTest","xmlWildcardNamespaceTest","1","Body Change, Introduced, MultiChange","Test to verify #1208
","d36f91a47fc5e4ae8a8b172d6822e5019abf356c","Jonathan Hedley"
"2030","childElements","childElements","1","Body Change, Introduced, MultiChange","Testcase to show #1292 works as-is.
","5136929fea4c786ddccc040da84905a3546e92ba","Jonathan Hedley"
"2031","selectFirstLevelChildrenOnly","selectFirstLevelChildrenOnly","1","Body Change, Introduced, MultiChange","Testcase for selecting direct children

Closes #984
","dd054bb724f25f2ecfaa6fd9e6c1ce51186d0d66","jhy"
"2032","wildcardNamespaceMatchesNoNamespace","wildcardNamespaceMatchesNoNamespace","1","Body Change, Introduced, MultiChange","Fix the Evaluator for wildcard namespace queries

The *|el wildcard namespace selector now also matches elements with no namespace.

Fixes #1565
","426e35ec1cd48cd2802e031fc8b4ef4a42de0482","jhy"
"2033","containsTextQueryIsNormalized","containsTextQueryIsNormalized","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2034","containsTextQueryIsNormalized","containsTextQueryIsNormalized","2","Body Change, Introduced, MultiChange","Normalize the query in :contains and :containsOwn selectors

Addresses #876
","ec9847624f75ee485247f1173cafa20eb4a385a8","jhy"
"2035","selectorExceptionNotStringFormatException","selectorExceptionNotStringFormatException","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2036","selectorExceptionNotStringFormatException","selectorExceptionNotStringFormatException","2","Body Change, Introduced, MultiChange","Exception testcase for formatter

For #1691
","639900f6210ecd201d607d1865868dcb03a7c70d","Jonathan Hedley"
"2037","evaluatorMemosAreReset","evaluatorMemosAreReset","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2038","evaluatorMemosAreReset","evaluatorMemosAreReset","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"2039","blankTextNodesAreConsideredEmpty","blankTextNodesAreConsideredEmpty","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2040","blankTextNodesAreConsideredEmpty","blankTextNodesAreConsideredEmpty","3","Body Change, Introduced, MultiChange","In the empty selector, treat blank textnodes as empty

Fixes #1976
","48c3e992ad52b90f0e78371994b9f8d3c68c783f","Jonathan Hedley"
"2041","blankTextNodesAreConsideredEmpty","blankTextNodesAreConsideredEmpty","3","Body Change","Tidied up some tests with an assertion helper
","0c14534294587a19ce81b5ed0282118001c1fa38","Jonathan Hedley"
"2042","emptyPseudo","emptyPseudo","1","Body Change, Introduced, MultiChange","Don't short-circuit on blank text in `:empty`

Fixes #2130

Also clarified the documentation, and reduced GC during the loop by not hitting element.childNodes().

Regressed by #1976
","6de7cfcd9dbe64297a2d430601f69d0b8005eece","Jonathan Hedley"
"2043","parentFromSpecifiedDescender","parentFromSpecifiedDescender","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2044","parentFromSpecifiedDescender","parentFromSpecifiedDescender","2","Body Change, Introduced, MultiChange","ImmediateParent evaluator should not match the context root

Fixes #2018

Was a regression when ImmediateParent was reimplemented into ImmediateParentRun
","2a4a9cf83dea46aff9fc97fc6da808948f5086e0","Jonathan Hedley"
"2045","rootImmediateParentSubquery","rootImmediateParentSubquery","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2046","rootImmediateParentSubquery","rootImmediateParentSubquery","2","Body Change, Introduced, MultiChange","consumeSubQuery should not drop leading combinators

Refactored so that it eats until a combinator is seen after non-combinator content, and returns it all.

And corrected unit tests that were incorrectly relying on that behavior.

Note that a leading combinator will combine against the root element, which is either the Document, or the context element.

Fixes #1707
","d126488db626790a69ce99bb96bf3cfe9c591534","Jonathan Hedley"
"2047","is","is","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2048","is","is","2","Body Change, Introduced, MultiChange","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"2049","orAfterClass","orAfterClass","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2050","orAfterClass","orAfterClass","2","Body Change, Introduced, MultiChange","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2051","emptyAttributePrefix","emptyAttributePrefix","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2052","emptyAttributePrefix","emptyAttributePrefix","2","Body Change, Introduced, MultiChange","Relax validator to support `[^]` any attribute prefix

This discovered functionality previously worked.

Relates to #2079
","3375e1c24fcbb2b53819bf87460f3eb4932b1c78","Jonathan Hedley"
"2053","anyAttribute","anyAttribute","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2054","anyAttribute","anyAttribute","2","Body Change, Introduced, MultiChange","Implement the `[*]` any attribute selector

Fixes #2079
","945b5218b271d8c8cc0df529e8b1fd0330971e41","Jonathan Hedley"
"2055","divHasSpanPreceding","divHasSpanPreceding","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2056","divHasSpanPreceding","divHasSpanPreceding","2","Body Change, Introduced, MultiChange","For `has()` queries, always test children

Even if we checked siblings.

Fixes #2187
","7e2d5038b2a435aef5400c7f04dd14080a24132e","Jonathan Hedley"
"2057","divHasDivPreceding","divHasDivPreceding","3","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2058","divHasDivPreceding","divHasDivPreceding","3","Body Change, Introduced, MultiChange","For `has()` queries, always test children

Even if we checked siblings.

Fixes #2187
","7e2d5038b2a435aef5400c7f04dd14080a24132e","Jonathan Hedley"
"2059","divHasDivPreceding","divHasDivPreceding","3","Body Change","Use a SoftPool of ElementIterators vs a single ThreadLocal

For nested `:has()` evaluators, using a single ThreadLocal of the Element Iterator was effectively non-reentrant, and reusing it may trash the outer iteration.

Fixes #2131
","0daab3dd601ced7fb07d4b000bf25b1315da0b40","Jonathan Hedley"
"2060","nestedMultiHas","nestedMultiHas","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2061","nestedMultiHas","nestedMultiHas","2","Body Change, Introduced, MultiChange","Use a SoftPool of ElementIterators vs a single ThreadLocal

For nested `:has()` evaluators, using a single ThreadLocal of the Element Iterator was effectively non-reentrant, and reusing it may trash the outer iteration.

Fixes #2131
","0daab3dd601ced7fb07d4b000bf25b1315da0b40","Jonathan Hedley"
"2062","negativeNthChild","negativeNthChild","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2063","negativeNthChild","negativeNthChild","2","Body Change, Introduced, MultiChange","Fix parse of :nth-child(-n+2)

The `-` sign of the nth-child step was ignored if there was no digit for the step.

Also cleaned up the function a bit.

Fixes #1147
","62674f903bd2fc352601fa39a3d9dea348e59f4b","Jonathan Hedley"
"2064","matches","matches","1","Body Change, Introduced, MultiChange","Cascade cache resets in StructuralEvaluator

Fixes #2277
","76b391e367645d367a6cdd4b48b107bcc2ee9ae1","Jonathan Hedley"
"2065","reset","reset","1","Body Change, Introduced, MultiChange","Cascade cache resets in StructuralEvaluator

Fixes #2277
","76b391e367645d367a6cdd4b48b107bcc2ee9ae1","Jonathan Hedley"
"2066","notResetCascades","notResetCascades","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2067","notResetCascades","notResetCascades","2","Body Change, Introduced, MultiChange","Cascade cache resets in StructuralEvaluator

Fixes #2277
","76b391e367645d367a6cdd4b48b107bcc2ee9ae1","Jonathan Hedley"
"2068","testImmediateParentRunCascades","testImmediateParentRunCascades","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2069","testImmediateParentRunCascades","testImmediateParentRunCascades","2","Body Change, Introduced, MultiChange","Cascade cache resets in StructuralEvaluator

Fixes #2277
","76b391e367645d367a6cdd4b48b107bcc2ee9ae1","Jonathan Hedley"
"2070","testAncestorChain","testAncestorChain","1","Body Change, Introduced, MultiChange","Cascade cache resets in StructuralEvaluator

Fixes #2277
","76b391e367645d367a6cdd4b48b107bcc2ee9ae1","Jonathan Hedley"
"2071","hexDigitUnescape","hexDigitUnescape","2","File Renamed","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"2072","hexDigitUnescape","hexDigitUnescape","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"2073","supportsXpathFromElement","supportsXpathFromElement","1","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2074","throwsSelectException","throwsSelectException","2","Exceptions Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2075","throwsSelectException","throwsSelectException","2","Exceptions Change","Maintain the root cause for Xpath parse exceptions
","0b10d516ed8f907f8fb4acb9a0806137a8988d45","Jonathan Hedley"
"2076","supportsLocalname","supportsLocalname","1","Body Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"2077","canDitchNamespaces","canDitchNamespaces","1","Body Change","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"2078","selectOutsideOfElementTree","selectOutsideOfElementTree","1","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2079","selectAncestorsOnContextElement","selectAncestorsOnContextElement","1","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2080","notNamespaceAware","notNamespaceAware","1","Body Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"2081","supportsPrefixes","supportsPrefixes","1","Body Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"2082","withSemiInAttributeName","withSemiInAttributeName","2","File Renamed","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2083","withSemiInAttributeName","withSemiInAttributeName","2","Body Change, Introduced, MultiChange","If required, normalize W3CDom attribute names further

Fixes #2244
","d67c994ac0247cebe4af233ff42cc0b7d5a4651c","Jonathan Hedley"
"2084","replaceElement","replaceElement","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2085","replaceElement","replaceElement","2","Body Change, Introduced, MultiChange","Support node.replaceWith(node) during node traversal

Closes #1289
","d66decd3c6ce450c19f276e9693a2727b7aa9748","Jonathan Hedley"
"2086","canAddChildren","canAddChildren","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2087","canAddChildren","canAddChildren","2","Body Change, Introduced, MultiChange","Support node.replaceWith(node) during node traversal

Closes #1289
","d66decd3c6ce450c19f276e9693a2727b7aa9748","Jonathan Hedley"
"2088","canSpecifyOnlyHead","canSpecifyOnlyHead","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2089","canSpecifyOnlyHead","canSpecifyOnlyHead","2","Body Change, Introduced, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"2090","canRemoveDuringHead","canRemoveDuringHead","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2091","canRemoveDuringHead","canRemoveDuringHead","2","Body Change, Introduced, MultiChange","Allow nodes to be removed in NodeTraversor
","2bad736e9a18bab0b4660423b0eb3c4dc961a312","Jonathan Hedley"
"2092","elementFunctionalTraverse","elementFunctionalTraverse","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2093","elementFunctionalTraverse","elementFunctionalTraverse","2","Body Change, Introduced, MultiChange","Documented FunctionalInterface for NodeVisitor
","32a0b1979d4091a2f5e775d6ccc022a5c86556d7","Jonathan Hedley"
"2094","seesDocRoot","seesDocRoot","2","File Renamed","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2095","seesDocRoot","seesDocRoot","2","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2096","testConsumeSubQuery","testConsumeSubQuery","3","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2097","testConsumeSubQuery","testConsumeSubQuery","3","Body Change, Introduced, MultiChange","Consume empty sub queries 

Fix #issue1425","4ac8a93b0a85f666941ef0198556d1e2395991eb","Ryderxxx"
"2098","testConsumeSubQuery","testConsumeSubQuery","3","Body Change","consumeSubQuery should not drop leading combinators

Refactored so that it eats until a combinator is seen after non-combinator content, and returns it all.

And corrected unit tests that were incorrectly relying on that behavior.

Note that a leading combinator will combine against the root element, which is either the Document, or the context element.

Fixes #1707
","d126488db626790a69ce99bb96bf3cfe9c591534","Jonathan Hedley"
"2099","testImmediateParentRun","testImmediateParentRun","3","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2100","testImmediateParentRun","testImmediateParentRun","3","Body Change, Introduced, MultiChange","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"2101","testImmediateParentRun","testImmediateParentRun","3","Body Change","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2102","testOrGetsCorrectPrecedence","testOrGetsCorrectPrecedence","2","Body Change","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2103","testOrGetsCorrectPrecedence","testOrGetsCorrectPrecedence","2","Body Change","Optimize `#id .class` selector performance

Fixes #2254
","36ba3edad1de83e61dff71ca929909587eebd834","Jonathan Hedley"
"2104","testParsesMultiCorrectly","testParsesMultiCorrectly","3","Body Change","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"2105","testParsesMultiCorrectly","testParsesMultiCorrectly","3","Body Change","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"2106","testParsesMultiCorrectly","testParsesMultiCorrectly","3","Body Change","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2107","idDescenderClassOrder","idDescenderClassOrder","2","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2108","idDescenderClassOrder","idDescenderClassOrder","2","Body Change, Introduced, MultiChange","Optimize `#id .class` selector performance

Fixes #2254
","36ba3edad1de83e61dff71ca929909587eebd834","Jonathan Hedley"
"2109","exceptionOnUncloseAttribute","exceptionOnUncloseAttribute","4","Modifier Change, Body Change, Exceptions Change, MultiChange","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2110","exceptionOnUncloseAttribute","exceptionOnUncloseAttribute","4","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2111","exceptionOnUncloseAttribute","exceptionOnUncloseAttribute","4","Body Change, Exceptions Change, MultiChange","Improved test coverage for Selector exceptions
","e0019ebf336082d57027f40f75a6142419710235","Jonathan Hedley"
"2112","exceptionOnUncloseAttribute","exceptionOnUncloseAttribute","4","Exceptions Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"2113","testParsesSingleQuoteInContains","testParsesSingleQuoteInContains","4","Body Change, Exceptions Change, MultiChange","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2114","testParsesSingleQuoteInContains","testParsesSingleQuoteInContains","4","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2115","testParsesSingleQuoteInContains","testParsesSingleQuoteInContains","4","Body Change, Exceptions Change, MultiChange","Improved test coverage for Selector exceptions
","e0019ebf336082d57027f40f75a6142419710235","Jonathan Hedley"
"2116","testParsesSingleQuoteInContains","testParsesSingleQuoteInContains","4","Exceptions Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"2117","exceptOnEmptySelector","exceptOnEmptySelector","3","Body Change, Introduced, MultiChange","Don't throw an exception if a selector ends in a space, just trim it.

Fixes #1274
","f5fc1bb04c224865f8eee5ed718f4ffee0e18712","Jonathan Hedley"
"2118","exceptOnEmptySelector","exceptOnEmptySelector","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2119","exceptOnEmptySelector","exceptOnEmptySelector","3","Body Change, Exceptions Change, MultiChange","Improved test coverage for Selector exceptions
","e0019ebf336082d57027f40f75a6142419710235","Jonathan Hedley"
"2120","exceptOnNullSelector","exceptOnNullSelector","3","Body Change, Introduced, MultiChange","Don't throw an exception if a selector ends in a space, just trim it.

Fixes #1274
","f5fc1bb04c224865f8eee5ed718f4ffee0e18712","Jonathan Hedley"
"2121","exceptOnNullSelector","exceptOnNullSelector","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2122","exceptOnNullSelector","exceptOnNullSelector","3","Body Change, Exceptions Change, MultiChange","Improved test coverage for Selector exceptions
","e0019ebf336082d57027f40f75a6142419710235","Jonathan Hedley"
"2123","exceptOnUnhandledEvaluator","exceptOnUnhandledEvaluator","1","Body Change, Exceptions Change, Introduced, MultiChange","Improved test coverage for Selector exceptions
","e0019ebf336082d57027f40f75a6142419710235","Jonathan Hedley"
"2124","okOnSpacesForeAndAft","okOnSpacesForeAndAft","3","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2125","okOnSpacesForeAndAft","okOnSpacesForeAndAft","3","Body Change, Introduced, MultiChange","Don't throw an exception if a selector ends in a space, just trim it.

Fixes #1274
","f5fc1bb04c224865f8eee5ed718f4ffee0e18712","Jonathan Hedley"
"2126","okOnSpacesForeAndAft","okOnSpacesForeAndAft","3","Body Change","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"2127","structuralEvaluatorsToString","structuralEvaluatorsToString","3","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2128","structuralEvaluatorsToString","structuralEvaluatorsToString","3","Body Change, Introduced, MultiChange","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"2129","structuralEvaluatorsToString","structuralEvaluatorsToString","3","Body Change","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2130","parsesOrAfterAttribute","parsesOrAfterAttribute","3","File Renamed","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"2131","parsesOrAfterAttribute","parsesOrAfterAttribute","3","Body Change, Introduced, MultiChange","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"2132","parsesOrAfterAttribute","parsesOrAfterAttribute","3","Body Change","Optimize `#id .class` selector performance

Fixes #2254
","36ba3edad1de83e61dff71ca929909587eebd834","Jonathan Hedley"
"2133","initClass","initClass","1","Modifier Change, Body Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2134","init","init","1","Modifier Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2135","canCreateEmptyConnection","canCreateEmptyConnection","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2136","canCreateEmptyConnection","canCreateEmptyConnection","2","Body Change, Exceptions Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"2137","throwsExceptionOnResponseWithoutExecute","throwsExceptionOnResponseWithoutExecute","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2138","throwsExceptionOnResponseWithoutExecute","throwsExceptionOnResponseWithoutExecute","2","Body Change, Exceptions Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"2139","throwsExceptionOnParseWithoutExecute","throwsExceptionOnParseWithoutExecute","2","Exceptions Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2140","throwsExceptionOnParseWithoutExecute","throwsExceptionOnParseWithoutExecute","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2141","throwsExceptionOnBodyWithoutExecute","throwsExceptionOnBodyWithoutExecute","2","Exceptions Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2142","throwsExceptionOnBodyWithoutExecute","throwsExceptionOnBodyWithoutExecute","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2143","throwsExceptionOnBodyAsBytesWithoutExecute","throwsExceptionOnBodyAsBytesWithoutExecute","2","Exceptions Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2144","throwsExceptionOnBodyAsBytesWithoutExecute","throwsExceptionOnBodyAsBytesWithoutExecute","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2145","caseInsensitiveHeaders","caseInsensitiveHeaders","1","Body Change, Introduced, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2146","headers","headers","3","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2147","headers","headers","3","Body Change, Introduced, MultiChange","Merge pull request #725 from zJiaJun/master

Add Connection.headers(map)","4029b29631731c9bd613fbbaf3efd399192f43bf","Jonathan Hedley"
"2148","headers","headers","3","Body Change","Small code cleanup
","22a17d24279450e7e214b57beb4c0bda5f3698e5","Jonathan Hedley"
"2149","sameHeadersCombineWithComma","sameHeadersCombineWithComma","3","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2150","sameHeadersCombineWithComma","sameHeadersCombineWithComma","3","Body Change, Introduced, MultiChange","Combine header values with comma

Fixes #618
","65553582d184e18de10e496b0eaa53fbe206ba17","Jonathan Hedley"
"2151","sameHeadersCombineWithComma","sameHeadersCombineWithComma","3","Body Change","Small code cleanup
","22a17d24279450e7e214b57beb4c0bda5f3698e5","Jonathan Hedley"
"2152","multipleHeaders","multipleHeaders","3","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2153","multipleHeaders","multipleHeaders","3","Body Change, Introduced, MultiChange","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"2154","multipleHeaders","multipleHeaders","3","Body Change","Multiple headers should be comma joined
","35b592536592219f1b7731641726f0c7585039a5","Jonathan Hedley"
"2155","ignoresEmptySetCookies","ignoresEmptySetCookies","4","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2156","ignoresEmptySetCookies","ignoresEmptySetCookies","4","Body Change, Introduced, MultiChange","Fixed cookie handling issue in jsoup.Connect where empty cookies would cause a validation exception.

Fixes #87
","76de9d87000f375749f355a7d7d6af9fe37c3558","Jonathan Hedley"
"2157","ignoresEmptySetCookies","ignoresEmptySetCookies","4","Body Change","Small code cleanup
","22a17d24279450e7e214b57beb4c0bda5f3698e5","Jonathan Hedley"
"2158","ignoresEmptySetCookies","ignoresEmptySetCookies","4","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2159","connectWithUrl","connectWithUrl","1","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2160","throwsOnMalformedUrl","throwsOnMalformedUrl","2","Body Change, Exceptions Change, MultiChange","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2161","throwsOnMalformedUrl","throwsOnMalformedUrl","2","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2162","userAgent","userAgent","2","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2163","userAgent","userAgent","2","Body Change","Updated default timeout and user-agent
","2a9f635f6448f101916e3b723af567149a94ab0b","Jonathan Hedley"
"2164","timeout","timeout","2","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2165","timeout","timeout","2","Body Change","Updated default timeout and user-agent
","2a9f635f6448f101916e3b723af567149a94ab0b","Jonathan Hedley"
"2166","referrer","referrer","1","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2167","method","method","1","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2168","throwsOnOddData","throwsOnOddData","3","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2169","throwsOnOddData","throwsOnOddData","3","Body Change, Exceptions Change, Introduced, MultiChange","Updated default timeout and user-agent
","2a9f635f6448f101916e3b723af567149a94ab0b","Jonathan Hedley"
"2170","throwsOnOddData","throwsOnOddData","3","Modifier Change, Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2171","data","data","1","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2172","cookie","cookie","1","Body Change","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2173","inputStream","inputStream","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2174","inputStream","inputStream","2","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"2175","requestBody","requestBody","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2176","requestBody","requestBody","2","Body Change, Introduced, MultiChange","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"2177","encodeUrl","encodeUrl","5","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2178","encodeUrl","encodeUrl","5","Body Change, Exceptions Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2179","encodeUrl","encodeUrl","5","Body Change, Exceptions Change, MultiChange","Escape URLs via URI components

Vs previous method of using u.toExternalForm. This way, URI will encode characters in the path correctly.
","45ed00232722efacafdf58cb0e2bdcc751585f84","Jonathan Hedley"
"2180","encodeUrl","encodeUrl","5","Body Change, Exceptions Change, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"2181","encodeUrl","encodeUrl","5","Body Change, Exceptions Change, MultiChange","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"2182","encodeUrlSupplementary","encodeUrlSupplementary","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2183","encodeUrlSupplementary","encodeUrlSupplementary","2","Body Change, Exceptions Change, Introduced, MultiChange","Escape supplemental characters correctly
","6ccd158754e21a749b2390ca27282a8dda7fb4f6","Jonathan Hedley"
"2184","encodedUrlDoesntDoubleEncode","encodedUrlDoesntDoubleEncode","4","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2185","encodedUrlDoesntDoubleEncode","encodedUrlDoesntDoubleEncode","4","Body Change, Exceptions Change, Introduced, MultiChange","Decode components from URL into URI

This allows both escaped and un-escaped inputs to be correctly decoded then encoded.

Fixes #1902
","a96ebc95f9ad681c3a8bb70a4d83020bf8812395","Jonathan Hedley"
"2186","encodedUrlDoesntDoubleEncode","encodedUrlDoesntDoubleEncode","4","Body Change, Exceptions Change, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"2187","encodedUrlDoesntDoubleEncode","encodedUrlDoesntDoubleEncode","4","Body Change, Exceptions Change, MultiChange","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"2188","urlPathIsPreservedDoesntDoubleEncode","urlPathIsPreservedDoesntDoubleEncode","3","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2189","urlPathIsPreservedDoesntDoubleEncode","urlPathIsPreservedDoesntDoubleEncode","3","Body Change, Exceptions Change, Introduced, MultiChange","Test url paths are handled as-is
","4e7ea39b2064b078cc3e29f6dd6f8f0a60a9765c","Jonathan Hedley"
"2190","urlPathIsPreservedDoesntDoubleEncode","urlPathIsPreservedDoesntDoubleEncode","3","Exceptions Change","Improved URL component escaping

Checks for specific unsafe characters

Fixes #2142
","6c0c2d4514278a82eb0868c5d978612a79c6d058","Jonathan Hedley"
"2191","connectToEncodedUrl","connectToEncodedUrl","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2192","connectToEncodedUrl","connectToEncodedUrl","2","Body Change, Introduced, MultiChange","Decode components from URL into URI

This allows both escaped and un-escaped inputs to be correctly decoded then encoded.

Fixes #1902
","a96ebc95f9ad681c3a8bb70a4d83020bf8812395","Jonathan Hedley"
"2193","encodedUrlPathIsPreserved","encodedUrlPathIsPreserved","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2194","encodedUrlPathIsPreserved","encodedUrlPathIsPreserved","2","Body Change, Introduced, MultiChange","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"2195","urlPathPlusIsPreserved","urlPathPlusIsPreserved","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2196","urlPathPlusIsPreserved","urlPathPlusIsPreserved","2","Body Change, Introduced, MultiChange","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"2197","noUrlThrowsValidationError","noUrlThrowsValidationError","4","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2198","noUrlThrowsValidationError","noUrlThrowsValidationError","4","Body Change, Exceptions Change, Introduced, MultiChange","Make HttpConnection constructor public

For DI tasks

Fixes #1052
","1933e9727c694863d6b7a9bb98682b560510d212","Jonathan Hedley"
"2199","noUrlThrowsValidationError","noUrlThrowsValidationError","4","Exceptions Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"2200","noUrlThrowsValidationError","noUrlThrowsValidationError","4","Body Change, Exceptions Change, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"2201","handlesHeaderEncodingOnRequest","handlesHeaderEncodingOnRequest","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2202","handlesHeaderEncodingOnRequest","handlesHeaderEncodingOnRequest","2","Body Change, Introduced, MultiChange","Validate string length

Fixes #1172
","7de614ffd01161d8718d7458bab9d9690ad2334f","Jonathan Hedley"
"2203","supportsInternationalDomainNames","supportsInternationalDomainNames","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2204","supportsInternationalDomainNames","supportsInternationalDomainNames","2","Body Change, Exceptions Change, Introduced, MultiChange","Added support for Internationalized Domain Names (IDNs)

Fixes #1300
","21b01b258952fd6aeb55d061f98321e5b9fe93e0","Jonathan Hedley"
"2205","supportsIdnWithPort","supportsIdnWithPort","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2206","supportsIdnWithPort","supportsIdnWithPort","2","Body Change, Exceptions Change, Introduced, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"2207","validationErrorsOnExecute","validationErrorsOnExecute","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2208","validationErrorsOnExecute","validationErrorsOnExecute","2","Body Change, Exceptions Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"2209","testMalformedException","testMalformedException","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2210","testMalformedException","testMalformedException","2","Body Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"2211","setHeaderWithUnicodeValue","setHeaderWithUnicodeValue","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2212","setHeaderWithUnicodeValue","setHeaderWithUnicodeValue","2","Body Change, Introduced, MultiChange","Only attempt to correct 8559 -> UTF on response headers

Fixes #2011

This allows header values to be sent as UTF-8 (as encoded by Java HTTP request writer). But that's out of spec and depending on how the upstream server handles that, may or may not work as the user intended. Hence added a note on the docs to suggest encoding the data first.
","9de27fa7cd823f6d26e33e48b36ef010c05f977c","Jonathan Hedley"
"2213","setAuth","setAuth","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2214","setAuth","setAuth","2","Body Change, Exceptions Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"2215","mojibake","mojibake","2","File Renamed","More tests for Jsoup.Connection
","0722718f1f3e3811639600a3333ec7665592364d","Jonathan Hedley"
"2216","mojibake","mojibake","2","Body Change, Introduced, MultiChange","Tests for fixHeaderEncoding

These already pass - if the header was mojibaked (e.g. the server sent UTF8, but JVM decoded it as 8859), that's detected and we convert. If the server sent UTF8 and Android decoded it as UTF8, it gets passed through untouched.

Related to #2011
","da185458a86a9a820e2b522e40b6df597d4f31f8","Jonathan Hedley"
"2217","fixesHeaderEncodingIfRequired","fixesHeaderEncodingIfRequired","1","Body Change, Introduced, MultiChange","Tests for fixHeaderEncoding

These already pass - if the header was mojibaked (e.g. the server sent UTF8, but JVM decoded it as 8859), that's detected and we convert. If the server sent UTF8 and Android decoded it as UTF8, it gets passed through untouched.

Related to #2011
","da185458a86a9a820e2b522e40b6df597d4f31f8","Jonathan Hedley"
"2218","testCharset","testCharset","1","Body Change","If the charset from the server is not supported, fail-back to UTF8.

Fixes #215
","8963e2ac79a97e694c388622e935a0471267e9eb","Jonathan Hedley"
"2219","testQuotedCharset","testQuotedCharset","2","Body Change","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2220","testQuotedCharset","testQuotedCharset","2","Body Change","If the charset from the server is not supported, fail-back to UTF8.

Fixes #215
","8963e2ac79a97e694c388622e935a0471267e9eb","Jonathan Hedley"
"2221","stream","stream","3","File Renamed","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2222","stream","stream","3","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2223","stream","stream","3","Return Type Change, Body Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"2224","stream","stream","3","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2225","stream","stream","3","Body Change"," Use Charset.forname, to better cache charset lookups

","b873e21ea050b5f5c52b1d5b60bbe204dab22e99","Jeremy Landis"
"2226","stream","stream","3","Return Type Change, Body Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"2227","discardsSpuriousByteOrderMark","discardsSpuriousByteOrderMark","2","Body Change, Introduced, MultiChange","Drop BOM at start of byte data if present after decode.

Fixes #134.
","1d31086acba06579c4e7d5928dbba9ca8a0128b1","Jonathan Hedley"
"2228","discardsSpuriousByteOrderMark","discardsSpuriousByteOrderMark","2","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2229","discardsSpuriousByteOrderMarkWhenNoCharsetSet","discardsSpuriousByteOrderMarkWhenNoCharsetSet","2","Body Change, Introduced, MultiChange","Fix issue with UTF-8 BOM when charset only in HTML.

Fixes #348
","3f9f33d88355f22aefc7ea402da09fd1950289ce","Jonathan Hedley"
"2230","discardsSpuriousByteOrderMarkWhenNoCharsetSet","discardsSpuriousByteOrderMarkWhenNoCharsetSet","2","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2231","shouldNotThrowExceptionOnEmptyCharset","shouldNotThrowExceptionOnEmptyCharset","2","Body Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"2232","shouldNotThrowExceptionOnEmptyCharset","shouldNotThrowExceptionOnEmptyCharset","2","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2233","shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags","shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags","1","Body Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"2234","shouldCorrectCharsetForDuplicateCharsetString","shouldCorrectCharsetForDuplicateCharsetString","1","Body Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"2235","shouldReturnNullForIllegalCharsetNames","shouldReturnNullForIllegalCharsetNames","2","Body Change, Introduced, MultiChange","Merge branch 'pr/325'
","21d8c188b27937079007f0129f2b372b857f2e16","Jonathan Hedley"
"2236","shouldReturnNullForIllegalCharsetNames","shouldReturnNullForIllegalCharsetNames","2","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2237","generatesMimeBoundaries","generatesMimeBoundaries","1","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"2238","wrongMetaCharsetFallback","wrongMetaCharsetFallback","2","Body Change, Introduced, MultiChange","Merge pull request #509 from offa/datautil_fix

Fix for UnsupportedCharsetException","a7b2b42a50f0536a3c5b3473575d67c2e5907581","Jonathan Hedley"
"2239","wrongMetaCharsetFallback","wrongMetaCharsetFallback","2","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2240","secondMetaElementWithContentTypeContainsCharsetParameter","secondMetaElementWithContentTypeContainsCharsetParameter","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","f229eb960a807dd08c969d861545550456a638e1","Jonathan Hedley"
"2241","secondMetaElementWithContentTypeContainsCharsetParameter","secondMetaElementWithContentTypeContainsCharsetParameter","2","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2242","firstMetaElementWithCharsetShouldBeUsedForDecoding","firstMetaElementWithCharsetShouldBeUsedForDecoding","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","f229eb960a807dd08c969d861545550456a638e1","Jonathan Hedley"
"2243","firstMetaElementWithCharsetShouldBeUsedForDecoding","firstMetaElementWithCharsetShouldBeUsedForDecoding","2","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"2244","parseSequenceInputStream","parseSequenceInputStream","2","Body Change, Exceptions Change, Introduced, MultiChange","Fix sequence input stream parsing (#1671)

Fix sequence input stream parsing

Co-authored-by: KirylBubovich <kiryl.bubovich@duallab.com>","b049d5bc2a95fbdd4f7eb0be2bfa2dc36643bfe3","KirylBubovich"
"2245","parseSequenceInputStream","parseSequenceInputStream","2","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"2246","supportsBOMinFiles","supportsBOMinFiles","1","Body Change, Exceptions Change, Introduced, MultiChange","Support UTF-16 and -32 BOMs

Fixes #695
","c3cbe1b64e7f66ff9f9b53f1388eb135e6693187","Jonathan Hedley"
"2247","streamerSupportsBOMinFiles","streamerSupportsBOMinFiles","1","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"2248","supportsUTF8BOM","supportsUTF8BOM","1","Body Change, Exceptions Change, Introduced, MultiChange","Make sure to consume a UTF-8 BOM at the start of a doc

Fixes #1003
","0f7e0cc373aced32629f5321c9521f81d8248647","Jonathan Hedley"
"2249","noExtraNULLBytes","noExtraNULLBytes","2","Body Change, Exceptions Change, Introduced, MultiChange","Limit reading CharBuffer.array() to CharBuffer.limit() to avoid additional NULL characters at the end of some inputs (#1452)

","22405b7980ec56d4570c24eb1cda612d5f6775dd","Hannes Erven"
"2250","noExtraNULLBytes","noExtraNULLBytes","2","Body Change, Exceptions Change, MultiChange"," Use Charset.forname, to better cache charset lookups

","b873e21ea050b5f5c52b1d5b60bbe204dab22e99","Jeremy Landis"
"2251","supportsZippedUTF8BOM","supportsZippedUTF8BOM","1","Body Change, Exceptions Change, Introduced, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"2252","streamerSupportsZippedUTF8BOM","streamerSupportsZippedUTF8BOM","1","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"2253","supportsXmlCharsetDeclaration","supportsXmlCharsetDeclaration","3","Body Change, Exceptions Change, Introduced, MultiChange","Detect charset from pseudo XML declaration when in HTML parser mode

Fixes #1009
","e38dfd44829e13ee83fd62bfe937580f5a998c11","Jonathan Hedley"
"2254","supportsXmlCharsetDeclaration","supportsXmlCharsetDeclaration","3","Body Change","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2255","supportsXmlCharsetDeclaration","supportsXmlCharsetDeclaration","3","Exceptions Change"," Use Charset.forname, to better cache charset lookups

","b873e21ea050b5f5c52b1d5b60bbe204dab22e99","Jeremy Landis"
"2256","loadsGzipFile","loadsGzipFile","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"2257","loadsGzipPath","loadsGzipPath","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"2258","loadsZGzipFile","loadsZGzipFile","1","Body Change, Exceptions Change, Introduced, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"2259","loadsZGzipPath","loadsZGzipPath","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"2260","handlesFakeGzipFile","handlesFakeGzipFile","1","Body Change, Exceptions Change, Introduced, MultiChange","Added support for loading gzipped HTML files.

Mostly this is so I can compress the test HTML files in the repo,
so that GitHub stops reporting jsoup as a HTML project.
","34715b3858bcdbae76d0bb31921ef6a806632a86","Jonathan Hedley"
"2261","handlesFakeGzipPath","handlesFakeGzipPath","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"2262","VaryingReadInputStream","VaryingReadInputStream","2","File Renamed","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2263","VaryingReadInputStream","VaryingReadInputStream","2","Body Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2264","read","read","2","File Renamed","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2265","read","read","2","Body Change, Exceptions Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2266","read","read","2","File Renamed","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2267","read","read","2","Body Change, Exceptions Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2268","read","read","1","Body Change, Exceptions Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2269","handlesChunkedInputStream","handlesChunkedInputStream","1","Body Change, Exceptions Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2270","handlesUnlimitedRead","handlesUnlimitedRead","2","Body Change, Exceptions Change, Introduced, MultiChange","Set the read size correctly when capped

The read size of the inputstream should be the desired remaining max (if set), but no larger than the defined buffer size.

Fixes #1807

See #1774, 1671
","c58112a2eddd630a4f6d76450034c1227ef5f842","Jonathan Hedley"
"2271","handlesUnlimitedRead","handlesUnlimitedRead","2","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"2272","controllableInputStreamAllowsNull","controllableInputStreamAllowsNull","2","File Renamed","Fixed issue in jsoup.connect when extracting character set from content-type header; now supports quoted
charset declaration.
","cacbbfb9604fc5ce565b3547f4a7de77c037013f","Jonathan Hedley"
"2273","controllableInputStreamAllowsNull","controllableInputStreamAllowsNull","2","Body Change, Exceptions Change, Introduced, MultiChange","A null inputstream should return an empty doc

Fixes #2252
","e99c87d3f52c848db5e891dc57c3ad6b54d55bd2","Jonathan Hedley"
"2274","parseXml","parseXml","3","Body Change, Introduced, MultiChange","Added tests to verify #1096

Already works - but the default output dom is namespace aware, so xpath queries must be as well.
","052dc1b1cac3dd4bfded785ce8c9dadc8b95f18c","Jonathan Hedley"
"2275","parseXml","parseXml","3","Body Change, Exceptions Change, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"2276","parseXml","parseXml","3","Body Change, Exceptions Change, MultiChange","Java8 and JUnit5 (#1335)

* Migration to java8.

* Tests ported to JUnit 5.

* Surefire plugin added.

* Assertions and Rules ported to JUnit 5.

* JUnit 4 dependency removed.

* MultiLocale annotation renamed and changed to include the @ParameterizedTest;
multi locale tests need only a single annotation now.
","8e432a5f5fde4694834ce23c5ac1503ce8d381bc","Jonathan Hedley"
"2277","simpleConversion","simpleConversion","6","Body Change","Fixed w3c test in JDK 9

The w3c dom output was indented, so needed to normalize.
","590f77e561de567305c5992f6016f1e9af2178ca","Jonathan Hedley"
"2278","simpleConversion","simpleConversion","6","Body Change","W3CDom#asString should emit XML

Fixes #1098
","fe92494c7716eeb04d5d4040cc43d67b8f2f4aaf","Jonathan Hedley"
"2279","simpleConversion","simpleConversion","6","Body Change","Added tests to verify #1096

Already works - but the default output dom is namespace aware, so xpath queries must be as well.
","052dc1b1cac3dd4bfded785ce8c9dadc8b95f18c","Jonathan Hedley"
"2280","simpleConversion","simpleConversion","6","Body Change","Normalize xml strings before comparison
","1a84ce3b0e3df1018088c59b7c4484df181a2fdb","Jonathan Hedley"
"2281","simpleConversion","simpleConversion","6","Body Change","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"2282","simpleConversion","simpleConversion","6","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2283","namespacePreservation","namespacePreservation","4","Body Change, Exceptions Change, MultiChange","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2284","namespacePreservation","namespacePreservation","4","Body Change, Exceptions Change, MultiChange","Maintain stack for namespaces

Fixes #977
","3475dc846d78e56422b3e6fdf36dfd4416f359f5","Jonathan Hedley"
"2285","namespacePreservation","namespacePreservation","4","Body Change, Exceptions Change, MultiChange","Preserve whitespace in nodes before <head>
","9675a92b41593244d6d3ecd99425aeb19e2a6219","Jonathan Hedley"
"2286","namespacePreservation","namespacePreservation","4","Body Change, Exceptions Change, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"2287","handlesInvalidAttributeNames","handlesInvalidAttributeNames","2","Body Change, Introduced, MultiChange","Normalize invalid attribute names in XML when converting

Fixes #721
","f148f88de365c50eea28d3e14093e13c33104483","Jonathan Hedley"
"2288","handlesInvalidAttributeNames","handlesInvalidAttributeNames","2","Body Change","In W3CDom, treat illegal tag names as text Nodes

Fixes #1093
","165b3c8225eaed0dd3bff1284375b1ff4340c9ad","Jonathan Hedley"
"2289","htmlInputDocMaintainsHtmlAttributeNames","htmlInputDocMaintainsHtmlAttributeNames","1","Body Change, Introduced, MultiChange","Allow attributes valid in html when converting (#1648)

When parsing and converting an html document, the syntax was hard-coded to xml. This PR checks the document type of the output document and uses that to determine which attributes are valid.

Co-authored-by: jhy <jonathan@hedley.net>

Fixes #1647","6b1fbb51b501de87049b250fecc9a5076a186f6d","Jairam Chandar"
"2290","xmlInputDocMaintainsHtmlAttributeNames","xmlInputDocMaintainsHtmlAttributeNames","2","Body Change, Introduced, MultiChange","Allow attributes valid in html when converting (#1648)

When parsing and converting an html document, the syntax was hard-coded to xml. This PR checks the document type of the output document and uses that to determine which attributes are valid.

Co-authored-by: jhy <jonathan@hedley.net>

Fixes #1647","6b1fbb51b501de87049b250fecc9a5076a186f6d","Jairam Chandar"
"2291","xmlInputDocMaintainsHtmlAttributeNames","xmlInputDocMaintainsHtmlAttributeNames","2","Body Change","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"2292","handlesInvalidTagAsText","handlesInvalidTagAsText","1","Body Change, Introduced, MultiChange","In W3CDom, treat illegal tag names as text Nodes

Fixes #1093
","165b3c8225eaed0dd3bff1284375b1ff4340c9ad","Jonathan Hedley"
"2293","handlesHtmlElsWithLt","handlesHtmlElsWithLt","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2294","handlesHtmlElsWithLt","handlesHtmlElsWithLt","2","Body Change, Introduced, MultiChange","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"2295","canConvertToCustomDocument","canConvertToCustomDocument","2","Body Change, Exceptions Change, Introduced, MultiChange","Fix NullPointerException in case a custom document is passed to W3CDom#convert
","385219da0dea81918ffc285b42cca51f9c8d9df9","Andreas Hager"
"2296","canConvertToCustomDocument","canConvertToCustomDocument","2","Exceptions Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"2297","treatsUndeclaredNamespaceAsLocalName","treatsUndeclaredNamespaceAsLocalName","2","Body Change, Introduced, MultiChange","Don't blow up if a namespace is undefined

Fixes #848
","a810d2e3615da9a37ad74a7db2ca8bc6945ab9a8","Jonathan Hedley"
"2298","treatsUndeclaredNamespaceAsLocalName","treatsUndeclaredNamespaceAsLocalName","2","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2299","xmlnsXpathTest","xmlnsXpathTest","2","Body Change, Exceptions Change, Introduced, MultiChange","Added tests to verify #1096

Already works - but the default output dom is namespace aware, so xpath queries must be as well.
","052dc1b1cac3dd4bfded785ce8c9dadc8b95f18c","Jonathan Hedley"
"2300","xmlnsXpathTest","xmlnsXpathTest","2","Body Change, Exceptions Change, MultiChange","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2301","xhtmlNoNamespace","xhtmlNoNamespace","1","Body Change, Exceptions Change, Introduced, MultiChange","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2302","canDisableNamespaces","canDisableNamespaces","1","Body Change, Exceptions Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"2303","xpath","xpath","1","Body Change, Exceptions Change, Introduced, MultiChange","Added tests to verify #1096

Already works - but the default output dom is namespace aware, so xpath queries must be as well.
","052dc1b1cac3dd4bfded785ce8c9dadc8b95f18c","Jonathan Hedley"
"2304","testRoundTripDoctype","testRoundTripDoctype","4","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"2305","testRoundTripDoctype","testRoundTripDoctype","4","Body Change","Update test for varying XHTML impl formats
","52bbe52a0cc943708bb25f0a4c56421cfda2e1ae","Jonathan Hedley"
"2306","testRoundTripDoctype","testRoundTripDoctype","4","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2307","testRoundTripDoctype","testRoundTripDoctype","4","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2308","output","output","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"2309","assertEqualsIgnoreCase","assertEqualsIgnoreCase","1","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2310","canOutputHtmlWithoutNamespace","canOutputHtmlWithoutNamespace","1","Body Change, Introduced, MultiChange","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"2311","convertsElementsAndMaintainsSource","convertsElementsAndMaintainsSource","3","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2312","convertsElementsAndMaintainsSource","convertsElementsAndMaintainsSource","3","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2313","convertsElementsAndMaintainsSource","convertsElementsAndMaintainsSource","3","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"2314","canXmlParseCdataNodes","canXmlParseCdataNodes","4","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2315","canXmlParseCdataNodes","canXmlParseCdataNodes","4","Body Change, Exceptions Change, Introduced, MultiChange","Wrap Datanodes in CDATA when producing XML (#1720)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","1657e8fd65889cd4a60052ed31f9cb245c02dfad","Max Fortun"
"2316","canXmlParseCdataNodes","canXmlParseCdataNodes","4","Body Change, Exceptions Change, MultiChange","Output polyglot commented CData sections in XML mode

And only if the data does not already contain a (pseudo) CData section.

Fixes #2078
","8a4bdaef7aeaaa62d4016b890cdca87b1a701b7f","Jonathan Hedley"
"2317","canXmlParseCdataNodes","canXmlParseCdataNodes","4","Body Change, Exceptions Change, MultiChange","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"2318","handlesEmptyDoctype","handlesEmptyDoctype","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2319","handlesEmptyDoctype","handlesEmptyDoctype","2","Body Change, Introduced, MultiChange","Discard invalid doctypes during W3CDom conversion
","98200dbe4e99dfddc2a44e709332c8ee45cba966","Jonathan Hedley"
"2320","testHtmlParseAttributesAreCaseInsensitive","testHtmlParseAttributesAreCaseInsensitive","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2321","testHtmlParseAttributesAreCaseInsensitive","testHtmlParseAttributesAreCaseInsensitive","2","Body Change, Exceptions Change, Introduced, MultiChange","Testcase for #981

Closes #981

Fixed many, many moons ago.
","d3104a0307ce6c46a1ed99d0c5af672751209d9e","Jonathan Hedley"
"2322","doesNotExpandEntities","doesNotExpandEntities","1","Body Change, Introduced, MultiChange","Test we don't expand entities when converting to W3CDom
","5ec472da5f5b48ecf38027d81fde2f22ddb85a54","Jonathan Hedley"
"2323","undeclaredAttrNamespaceAsString","undeclaredAttrNamespaceAsString","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2324","undeclaredAttrNamespaceAsString","undeclaredAttrNamespaceAsString","2","Body Change, Introduced, MultiChange","In W3CDom, add an xmlns for undeclared attribute prefixes

Fixes #2087
","3082a4f3b3bdf4b2ce5c2cf8ec6a35392d60f20f","Jonathan Hedley"
"2325","declaredNamespaceIsUsed","declaredNamespaceIsUsed","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2326","declaredNamespaceIsUsed","declaredNamespaceIsUsed","2","Body Change, Introduced, MultiChange","In W3CDom, add an xmlns for undeclared attribute prefixes

Fixes #2087
","3082a4f3b3bdf4b2ce5c2cf8ec6a35392d60f20f","Jonathan Hedley"
"2327","nestedElementsWithUndeclaredNamespace","nestedElementsWithUndeclaredNamespace","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2328","nestedElementsWithUndeclaredNamespace","nestedElementsWithUndeclaredNamespace","2","Body Change, Introduced, MultiChange","In W3CDom, add an xmlns for undeclared attribute prefixes

Fixes #2087
","3082a4f3b3bdf4b2ce5c2cf8ec6a35392d60f20f","Jonathan Hedley"
"2329","parserProvider","parserProvider","2","File Renamed","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"2330","parserProvider","parserProvider","2","Body Change, Introduced, MultiChange","Test we don't expand entities when converting to W3CDom
","5ec472da5f5b48ecf38027d81fde2f22ddb85a54","Jonathan Hedley"
"2331","testWtf","testWtf","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2332","testEnsureNotNull","testEnsureNotNull","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2333","testEnsureNotNullWithMessage","testEnsureNotNullWithMessage","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2334","testEnsureNotNullWithFormattedMessage","testEnsureNotNullWithFormattedMessage","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2335","testNotNullParam","testNotNullParam","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2336","testNotEmpty","testNotEmpty","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2337","testIsTrue","testIsTrue","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2338","testIsFalse","testIsFalse","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2339","testAssertFail","testAssertFail","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2340","testNotEmptyParam","testNotEmptyParam","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2341","testNoNullElementsWithMessage","testNoNullElementsWithMessage","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2342","testNotEmptyWithMessage","testNotEmptyWithMessage","1","Body Change","Adding test coverage for Validate
","37169b107bc64d2928ea8847f03076df39ce0276","Jonathan Hedley"
"2343","stripNewlines","stripNewlines","2","Body Change","Code improvements (#1216)

* Code simplified.

* Code improvements:

 - String concatenation avoided
 - Size checks replaced by isEmpty()
 - Initialization fixed
 - Missing Overrides added
","a4b5e826f2440b19ee2a98fdece7211433cfdaed","offa"
"2344","stripNewlines","stripNewlines","2","Body Change","Don't recompile regex on each hit
","92392a674e3905c85f960696d99fe1f3e0c19413","Jonathan Hedley"
"2345","normalizeSpaces","normalizeSpaces","2","File Renamed","Merge pull request #533 from torrlane/master

Use platform independent line endings in W3CDomTest.","2588abdd5f81d4de2c1300ad24e9c401f9a9fc92","Jonathan Hedley"
"2346","normalizeSpaces","normalizeSpaces","2","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2347","stripCRs","stripCRs","2","File Renamed","Merge pull request #533 from torrlane/master

Use platform independent line endings in W3CDomTest.","2588abdd5f81d4de2c1300ad24e9c401f9a9fc92","Jonathan Hedley"
"2348","stripCRs","stripCRs","2","Body Change, Introduced, MultiChange","W3CDom#asString should emit XML

Fixes #1098
","fe92494c7716eeb04d5d4040cc43d67b8f2f4aaf","Jonathan Hedley"
"2349","checkCapacity","checkCapacity","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2350","checkCapacity","checkCapacity","3","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2351","checkCapacity","checkCapacity","3","Body Change","Tweaked new Attributes

Was always hitting Array.copy from 0 to 2. Very marginal improvement as new String[] vs Array.copy from 0 is basically the same thing. Some improvement from using min size = 3, fewer resize copies.
","50576455fd4f244375d05b029c25b3b17edfbb74","Jonathan Hedley"
"2352","indexOfKey","indexOfKey","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2353","indexOfKey","indexOfKey","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2354","indexOfKeyIgnoreCase","indexOfKeyIgnoreCase","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2355","indexOfKeyIgnoreCase","indexOfKeyIgnoreCase","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2356","checkNotNull","checkNotNull","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2357","checkNotNull","checkNotNull","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"2358","get","get","3","Body Change","Attributes values back to Attribute
","5b4070635f916b7d9d99e306a4c3016473828db6","Jonathan Hedley"
"2359","get","get","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2360","get","get","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2361","attribute","attribute","3","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"2362","attribute","attribute","3","Modifier Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2363","attribute","attribute","3","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"2364","getIgnoreCase","getIgnoreCase","4","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"2365","getIgnoreCase","getIgnoreCase","4","Body Change","Access the class attribute case-insensitiviely

Fixes #814
","83f01fd864e59fa69c894da06f4a15489222d401","Jonathan Hedley"
"2366","getIgnoreCase","getIgnoreCase","4","Body Change","Case-insensitive attribute setter (#903)

* Add failing test for updating attribute using differently-cased key

* Do case-insensitive key comparison when replacing attributes
","416ad294fb97f594c05dda7da53733cea59ab0ce","cketti"
"2367","getIgnoreCase","getIgnoreCase","4","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2368","add","add","2","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2369","add","add","2","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"2370","addObject","addObject","1","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"2371","put","put","1","Body Change, Introduced, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"2372","userData","userData","1","Body Change, Introduced, MultiChange","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2373","userData","userData","3","Body Change, Introduced, MultiChange","Renamed to userData()

And clarified some javadoc
","4840efb3b91962499c5a55537c418cb93476402b","Jonathan Hedley"
"2374","userData","userData","3","Modifier Change, Body Change, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2375","userData","userData","3","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2376","userData","userData","3","Body Change, Introduced, MultiChange","Renamed to userData()

And clarified some javadoc
","4840efb3b91962499c5a55537c418cb93476402b","Jonathan Hedley"
"2377","userData","userData","3","Modifier Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2378","userData","userData","3","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2379","putIgnoreCase","putIgnoreCase","2","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2380","putIgnoreCase","putIgnoreCase","2","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2381","put","put","3","Body Change, Introduced, MultiChange","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"2382","put","put","3","Return Type Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2383","put","put","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2384","put","put","5","Body Change","Attributes values back to Attribute
","5b4070635f916b7d9d99e306a4c3016473828db6","Jonathan Hedley"
"2385","put","put","5","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2386","put","put","5","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"2387","put","put","5","Return Type Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2388","put","put","5","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2389","remove","remove","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2390","remove","remove","2","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2391","remove","remove","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2392","remove","remove","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2393","removeIgnoreCase","removeIgnoreCase","3","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"2394","removeIgnoreCase","removeIgnoreCase","3","Body Change","Remove attributes using iterator to avoid CMEs.

Fixes #759
","2c58e975ab00eb369ee3dfbba07a4a78a1ef9e19","Jonathan Hedley"
"2395","removeIgnoreCase","removeIgnoreCase","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2396","hasKey","hasKey","3","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2397","hasKey","hasKey","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2398","hasKey","hasKey","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2399","hasKeyIgnoreCase","hasKeyIgnoreCase","2","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"2400","hasKeyIgnoreCase","hasKeyIgnoreCase","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2401","hasDeclaredValueForKey","hasDeclaredValueForKey","1","Body Change, Introduced, MultiChange","Updated to Attributes#hasDeclaredValueForKey
","528ba552b19ab2ae949feecb373ef85a0b126566","jhy"
"2402","hasDeclaredValueForKeyIgnoreCase","hasDeclaredValueForKeyIgnoreCase","1","Body Change, Introduced, MultiChange","Updated to Attributes#hasDeclaredValueForKey
","528ba552b19ab2ae949feecb373ef85a0b126566","jhy"
"2403","size","size","5","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2404","size","size","5","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2405","size","size","5","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2406","size","size","5","Body Change","Update Attributes.size() to be O(1) vs O(n)

We were excluding internalKeys from the size, but that meant scanning through the keys array on every invocation.

Updated to reflect the total size instead - can use asList.size() for the non-internal count if ever actually required. Internal keys are seldom used (base URL on document is only current use) so low impact change.

Preferred this than adding another int to track and other methods - keeps object size to 24 bytes.
","ab34da41de20717b3e556d5562143c918cc02fbc","Jonathan Hedley"
"2407","size","size","5","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2408","isEmpty","isEmpty","1","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"2409","addAll","addAll","4","Body Change, Introduced, MultiChange","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"2410","addAll","addAll","4","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2411","addAll","addAll","4","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2412","addAll","addAll","4","Body Change","Perf: cap the number of active formatting elements

Also, use add() vs put() when applicable to save scanning for existing attributes in addAll()

Fixes #1695
","f8decb298cc9f6de8e181aa4ad72898c31aef341","Jonathan Hedley"
"2413","sourceRange","sourceRange","3","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2414","sourceRange","sourceRange","3","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2415","sourceRange","sourceRange","3","Body Change","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"2416","getRanges","getRanges","1","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"2417","sourceRange","sourceRange","1","Body Change, Introduced, MultiChange","Copy attribute source range when merging attributes

Also simplified setting source range.

Fixes #2204
","91b5a56c63a9f8dca761b4cab959977fcd3308fd","Jonathan Hedley"
"2418","iterator","iterator","11","Body Change, Introduced, MultiChange","Reimplemented parser.
","2f0a7bf507020d98b3bdbf0a93bb1c753dd90268","Jonathan Hedley"
"2419","iterator","iterator","11","Body Change","Merge branch 'attributes-iterator-optim' of https://github.com/benbenw/jsoup
","01779db81c28933f4bffbfb2d530937a96a23b84","Jonathan Hedley"
"2420","iterator","iterator","11","Body Change","Changelog and tweak for #755
","a79d5e287a40634f0e41ee8371a742f57245d4bd","Jonathan Hedley"
"2421","iterator","iterator","11","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2422","iterator","iterator","11","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2423","iterator","iterator","11","Body Change","Check for concurrent modifications outside of the Attribute Iterator

Fails fast if an attribute is removed outside of Iterator#remove() while iterating.

Closes #2002
","91b630f86b5ca0f3540ed0347029cb52c3228ad9","Jonathan Hedley"
"2424","iterator","iterator","11","Modifier Change, Body Change, MultiChange","Tiny tidy up
","297ea4ff7a0e2ee38d46c3ae16f6004b5c8bf43f","Jonathan Hedley"
"2425","iterator","iterator","11","Body Change","Make Attributes iterator throw NoSuchElementException

Once drained
","4669e14039a976644e8fcd53bed422b11d32dfeb","Jonathan Hedley"
"2426","iterator","iterator","11","Body Change","Re-specify Iterator<Attribute> type

(Weird that it compiles & runs OK in editor without the seemingly redundant type, but blows up in the runner.)
","0a737674a52c5cda41aff7a58154d4073fcd3d6c","Jonathan Hedley"
"2427","iterator","iterator","11","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2428","iterator","iterator","11","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"2429","asList","asList","8","Body Change, Introduced, MultiChange","Reimplemented parser.
","2f0a7bf507020d98b3bdbf0a93bb1c753dd90268","Jonathan Hedley"
"2430","asList","asList","8","Body Change","Attributes values back to Attribute
","5b4070635f916b7d9d99e306a4c3016473828db6","Jonathan Hedley"
"2431","asList","asList","8","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2432","asList","asList","8","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"2433","asList","asList","8","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2434","asList","asList","8","Body Change","Removed old deprecated classes and methods
","a7b0c2df028f49fa246c7b6a51b6b83011655865","Jonathan Hedley"
"2435","asList","asList","8","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2436","asList","asList","8","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2437","dataset","dataset","1","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2438","html","html","7","Body Change, Introduced, MultiChange","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"2439","html","html","7","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"2440","html","html","7","Body Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"2441","html","html","7","Body Change","Fixed Attributes.hmtl()
","c6936dd3daab6dc7098065dff0bf39d8318349eb","Jonathan Hedley"
"2442","html","html","7","Body Change, Exceptions Change, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"2443","html","html","7","Body Change, Exceptions Change, MultiChange","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"2444","html","html","7","Exceptions Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2445","html","html","6","Body Change, Exceptions Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2446","html","html","6","Body Change, Exceptions Change, MultiChange","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"2447","html","html","6","Body Change, Exceptions Change, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2448","html","html","6","Body Change, Exceptions Change, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"2449","html","html","6","Exceptions Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"2450","html","html","6","Body Change, Exceptions Change, MultiChange","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2451","toString","toString","2","Body Change, Introduced, MultiChange","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"2452","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"2453","equals","equals","4","Body Change, Introduced, MultiChange","Added Nullable annotations for equals()

Fixed #1628
","f7ef7c3dc986e420891b5d0d58feba27019c5974","jhy"
"2454","equals","equals","4","Body Change","Attribute::equals should not be order sensitive

Fixes #1492
","c5bab9175c628558eb0abbdb205e0b9903bec9e1","jhy"
"2455","equals","equals","4","Body Change","Fewer key scans in Attributes::equals

Improves fix for #1492
","ecf09c27a69769d8d4957bb45da7c7bb1397edcf","jhy"
"2456","equals","equals","4","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"2457","hashCode","hashCode","2","Body Change, Introduced, MultiChange","Implemented select(query, query, query) or group selector.
","1f3cfcfb08a5e7454e61513389b814c7da6072ac","Jonathan Hedley"
"2458","hashCode","hashCode","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2459","clone","clone","3","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"2460","clone","clone","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2461","clone","clone","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2462","normalize","normalize","5","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2463","normalize","normalize","5","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2464","normalize","normalize","5","Body Change","Normalize and dedupe attribute source ranges

Fixes #2067
","fc4b175e02df2ceabdec9371d1874a014a35472d","Jonathan Hedley"
"2465","normalize","normalize","5","Body Change","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"2466","normalize","normalize","5","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2467","deduplicate","deduplicate","2","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"2468","deduplicate","deduplicate","2","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2469","Dataset","Dataset","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2470","Dataset","Dataset","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2471","entrySet","entrySet","2","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2472","entrySet","entrySet","2","Modifier Change","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"2473","put","put","5","Body Change","Attributes values back to Attribute
","5b4070635f916b7d9d99e306a4c3016473828db6","Jonathan Hedley"
"2474","put","put","5","Return Type Change, Body Change, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2475","put","put","5","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2476","put","put","5","Body Change","Added Attribute#hasValue, Attributes#hasValue(key)
","2080cbb75a2746123eb89db2bd9f923e7c109e15","Jonathan Hedley"
"2477","put","put","5","Return Type Change, Modifier Change, Body Change, MultiChange","Tests for Attribute and Attributes consistency

Closes #1026
","bdfe70da8533edd27a8a5e2357a5d3dd7a1d7f11","Jonathan Hedley"
"2478","iterator","iterator","11","Body Change, Introduced, MultiChange","Reimplemented parser.
","2f0a7bf507020d98b3bdbf0a93bb1c753dd90268","Jonathan Hedley"
"2479","iterator","iterator","11","Body Change","Merge branch 'attributes-iterator-optim' of https://github.com/benbenw/jsoup
","01779db81c28933f4bffbfb2d530937a96a23b84","Jonathan Hedley"
"2480","iterator","iterator","11","Body Change","Changelog and tweak for #755
","a79d5e287a40634f0e41ee8371a742f57245d4bd","Jonathan Hedley"
"2481","iterator","iterator","11","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2482","iterator","iterator","11","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2483","iterator","iterator","11","Body Change","Check for concurrent modifications outside of the Attribute Iterator

Fails fast if an attribute is removed outside of Iterator#remove() while iterating.

Closes #2002
","91b630f86b5ca0f3540ed0347029cb52c3228ad9","Jonathan Hedley"
"2484","iterator","iterator","11","Modifier Change, Body Change, MultiChange","Tiny tidy up
","297ea4ff7a0e2ee38d46c3ae16f6004b5c8bf43f","Jonathan Hedley"
"2485","iterator","iterator","11","Body Change","Make Attributes iterator throw NoSuchElementException

Once drained
","4669e14039a976644e8fcd53bed422b11d32dfeb","Jonathan Hedley"
"2486","iterator","iterator","11","Body Change","Re-specify Iterator<Attribute> type

(Weird that it compiles & runs OK in editor without the seemingly redundant type, but blows up in the runner.)
","0a737674a52c5cda41aff7a58154d4073fcd3d6c","Jonathan Hedley"
"2487","iterator","iterator","11","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2488","iterator","iterator","11","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"2489","size","size","5","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2490","size","size","5","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"2491","size","size","5","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2492","size","size","5","Body Change","Update Attributes.size() to be O(1) vs O(n)

We were excluding internalKeys from the size, but that meant scanning through the keys array on every invocation.

Updated to reflect the total size instead - can use asList.size() for the non-internal count if ever actually required. Internal keys are seldom used (base URL on document is only current use) so low impact change.

Preferred this than adding another int to track and other methods - keeps object size to 24 bytes.
","ab34da41de20717b3e556d5562143c918cc02fbc","Jonathan Hedley"
"2493","size","size","5","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2494","hasNext","hasNext","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2495","hasNext","hasNext","3","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2496","hasNext","hasNext","3","Modifier Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2497","next","next","2","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2498","next","next","2","Modifier Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2499","remove","remove","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2500","remove","remove","3","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2501","remove","remove","3","Modifier Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2502","dataKey","dataKey","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2503","dataKey","dataKey","2","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2504","internalKey","internalKey","4","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2505","internalKey","internalKey","4","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2506","internalKey","internalKey","4","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2507","internalKey","internalKey","4","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2508","isInternalKey","isInternalKey","4","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2509","isInternalKey","isInternalKey","4","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2510","isInternalKey","isInternalKey","4","Modifier Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2511","isInternalKey","isInternalKey","4","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"2512","Element","Element","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2513","Element","Element","4","Body Change, Introduced, MultiChange","Simple Element contstructor
","38d04b7dfc11c37e29548d8b046b9b209dfd1fd3","Jonathan Hedley"
"2514","Element","Element","4","Body Change","Don't create Attributes objects until required

Saves memory & garbage
","0a4bd07adf2f483207c0c0820f020a2361d841c3","Jonathan Hedley"
"2515","Element","Element","4","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2516","Element","Element","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2517","Element","Element","2","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2518","Element","Element","2","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2519","Element","Element","1","Body Change, Introduced, MultiChange","absUrl now supports already abs URLs, even when there's no defined stream handler

Fixes #1610
","50ff7100ccf1c3c6e4b3d2de0e7771aff33ecc59","Jonathan Hedley"
"2520","hasChildNodes","hasChildNodes","1","Body Change, Introduced, MultiChange","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2521","ensureChildNodes","ensureChildNodes","4","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2522","ensureChildNodes","ensureChildNodes","4","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2523","ensureChildNodes","ensureChildNodes","4","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2524","ensureChildNodes","ensureChildNodes","4","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2525","hasAttributes","hasAttributes","1","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2526","attributes","attributes","2","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2527","attributes","attributes","2","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2528","baseUri","baseUri","2","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2529","baseUri","baseUri","2","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2530","searchUpForAttribute","searchUpForAttribute","2","Body Change, Introduced, MultiChange","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2531","searchUpForAttribute","searchUpForAttribute","2","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2532","doSetBaseUri","doSetBaseUri","2","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2533","doSetBaseUri","doSetBaseUri","2","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2534","childNodeSize","childNodeSize","1","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2535","nodeName","nodeName","1","Modifier Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2536","tagName","tagName","2","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2537","tagName","tagName","2","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"2538","normalName","normalName","3","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"2539","normalName","normalName","3","Body Change","Fix some jdoc warnings
","1c51c84e68f0d76ee239a4a1ab52a487a4e2e764","Jonathan Hedley"
"2540","normalName","normalName","3","Modifier Change","Specify @​Override for normalName
","5e0b048e22e422d5351e4dad7a3d90737003e456","Jonathan Hedley"
"2541","elementIs","elementIs","1","Body Change, Introduced, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"2542","tagName","tagName","3","Body Change, Introduced, MultiChange","Added ability to change an element's tag with Element.tagName(String), and to change many at once with Elements.tagName(String).
","9ae3df9993f3f5991d0e6fd96c649d93d547d475","Jonathan Hedley"
"2543","tagName","tagName","3","Body Change","Doc hints for rename
","fbd74e726108934eb7002a24aeef60c589eafdef","Jonathan Hedley"
"2544","tagName","tagName","3","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2545","tagName","tagName","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2546","tag","tag","1","Body Change, Introduced, MultiChange","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"2547","tag","tag","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2548","isBlock","isBlock","4","Body Change, Introduced, MultiChange","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"2549","isBlock","isBlock","4","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2550","isBlock","isBlock","4","Body Change","Doc tidy.
","46e1e9780049f855ca60f2c32c594062358a3330","Jonathan Hedley"
"2551","isBlock","isBlock","4","Body Change","Fixed javadoc and added testcase for Element#isBlock

Fixes #1342
","f6388656f6c1ce111bc2dd158bf5a3732bda0605","Jonathan Hedley"
"2552","id","id","5","Body Change, Introduced, MultiChange","Implemented getElementsByTagName
","9db51cf756951fa62a7670b70d314af2f0ffc197","Jonathan Hedley"
"2553","id","id","5","Body Change","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2554","id","id","5","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2555","id","id","5","Body Change","Simplify get by ID
","2bef2e7ce9b8089a9e0ae3cf82f7625a5b93ed09","Jonathan Hedley"
"2556","id","id","5","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2557","id","id","1","Body Change, Introduced, MultiChange","Added Element#id(String) setter

Symmetrical to Element#id() getter
","5727d18a04df73982ce8e6d77e965cb768cfee7d","Jonathan Hedley"
"2558","attr","attr","2","Modifier Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2559","attr","attr","2","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2560","attr","attr","2","Body Change, Introduced, MultiChange","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"2561","attr","attr","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2562","attribute","attribute","3","Body Change, Introduced, MultiChange","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"2563","attribute","attribute","3","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2564","attribute","attribute","3","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"2565","dataset","dataset","2","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"2566","dataset","dataset","2","Body Change","Javadoc fix
","1342c6117241469f0c376353798821105cf7cd02","Jonathan Hedley"
"2567","parent","parent","4","Body Change, Introduced, MultiChange","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"2568","parent","parent","4","Modifier Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"2569","parent","parent","4","Body Change","Optimised normaliseWhitespace
","e8e29ca111772980970275662e0027fa695d9f27","Jonathan Hedley"
"2570","parent","parent","4","Modifier Change","Scan ancestor chain with less GC
","cc2363e4501e086b6ba628ececb7716cfad87796","Jonathan Hedley"
"2571","parents","parents","2","Body Change, Introduced, MultiChange","Added :has(selector) pseudo-selector.
Added Element#parents() and Elements#parents() methods.

Fixes #20
","aec561f3328980182f299e61eaae45420245141b","Jonathan Hedley"
"2572","parents","parents","2","Body Change","Collapse single-used method
","da20d2b1106f4dcf9fc28d8e2a3ca4d49075dfa9","Jonathan Hedley"
"2573","child","child","4","Exceptions Change","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2574","child","child","4","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2575","child","child","4","Body Change, Exceptions Change, MultiChange","Corrected the javadoc for Element#child() to note that it throws IndexOutOfBounds.

Fixes #277
","7ff15ee20c961e370837d8f96ae77886ecd910d8","Jonathan Hedley"
"2576","child","child","4","Exceptions Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2577","childrenSize","childrenSize","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1291'
","894d3ec9c71a324c007a4790604e6ca44e1d83c7","Jonathan Hedley"
"2578","children","children","4","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2579","children","children","4","Return Type Change, Body Change, MultiChange","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2580","children","children","4","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2581","children","children","4","Body Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2582","childElementsList","childElementsList","5","Body Change, Introduced, MultiChange","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2583","childElementsList","childElementsList","5","Body Change","Don't create Integer objects or Iterators

Getting rid of the autoboxing effectively doubles the speed of the N-th
selector benchmark (450 to 850 ops/s). And removing the Iterator lowers
a bunch of GC.
","3c81151c7b4dd4739b11f0b6aa5eff81c07fd684","Jonathan Hedley"
"2584","childElementsList","childElementsList","5","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"2585","childElementsList","childElementsList","5","Modifier Change","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"2586","childElementsList","childElementsList","5","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2587","nodelistChanged","nodelistChanged","1","Body Change, Introduced, MultiChange","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2588","stream","stream","1","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2589","filterNodes","filterNodes","1","Body Change, Introduced, MultiChange","Simplify node filtering operations using Streams API (#2080)

","d4b2c36dadad3e644d1c1b5b85aa704b22c3b077","Isira Seneviratne"
"2590","textNodes","textNodes","1","Body Change, Introduced, MultiChange","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"2591","dataNodes","dataNodes","3","Body Change, Introduced, MultiChange","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"2592","dataNodes","dataNodes","3","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2593","dataNodes","dataNodes","3","Body Change","Simplify node filtering operations using Streams API (#2080)

","d4b2c36dadad3e644d1c1b5b85aa704b22c3b077","Isira Seneviratne"
"2594","select","select","4","Body Change, Introduced, MultiChange","Tweaked Element#select documentation to reinforce CSS selector syntax.
","f31916f55db7d57b67b71c469105978692b88cf5","Jonathan Hedley"
"2595","select","select","4","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2596","select","select","4","Exceptions Change","Javadoc for selector parse exceptions

Fixes #507
","6e14804768c3553c0670ea08135675d67d51d811","Jonathan Hedley"
"2597","select","select","4","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2598","select","select","1","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2599","selectStream","selectStream","1","Body Change, Exceptions Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"2600","selectStream","selectStream","1","Body Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"2601","selectFirst","selectFirst","3","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"2602","selectFirst","selectFirst","3","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2603","selectFirst","selectFirst","3","Modifier Change","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"2604","selectFirst","selectFirst","2","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2605","selectFirst","selectFirst","2","Modifier Change","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"2606","expectFirst","expectFirst","3","Body Change, Exceptions Change, Introduced, MultiChange","Added Element.expectFirst(query)
","dd03d271a3ada7086c3b77603676245e30cb1ac6","Jonathan Hedley"
"2607","expectFirst","expectFirst","3","Exceptions Change","Javadoc tweak
","1541765f3efe10541452e048cd22e33e35467528","Jonathan Hedley"
"2608","expectFirst","expectFirst","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"2609","is","is","2","Body Change, Introduced, MultiChange","Implemented Element.is()
","4f707008353e272c12a7a6543d6ecfc666a7cc64","Jonathan Hedley"
"2610","is","is","2","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2611","is","is","3","Body Change, Introduced, MultiChange","Implemented Element.is()
","4f707008353e272c12a7a6543d6ecfc666a7cc64","Jonathan Hedley"
"2612","is","is","3","Body Change","Node.root()
","f78df946f00cdc9ed2159716b50a785b12b57aca","Jonathan Hedley"
"2613","is","is","3","Body Change","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2614","closest","closest","2","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2615","closest","closest","2","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2616","closest","closest","2","Body Change, Introduced, MultiChange","Added Element#closest

And Evaluator enabled select and selectFirst.
","bd64b0192c7d3485665afdc10805b587df19eab3","Jonathan Hedley"
"2617","closest","closest","2","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2618","selectXpath","selectXpath","3","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2619","selectXpath","selectXpath","3","Body Change","Added support for XPath selection for specific node types
","2bf377f72faa3b85e1a6ef66a21fca9c04001abf","Jonathan Hedley"
"2620","selectXpath","selectXpath","3","Body Change","Index entry for xpath
","e39b9b972ddccb73939c335231cb7d80528387d6","Jonathan Hedley"
"2621","selectXpath","selectXpath","1","Body Change, Introduced, MultiChange","Added support for XPath selection for specific node types
","2bf377f72faa3b85e1a6ef66a21fca9c04001abf","Jonathan Hedley"
"2622","appendChild","appendChild","5","Body Change, Introduced, MultiChange","Rename Element.addChild to appendChild.

Also implement Element.addElement(String tagName)
","83d1848144abf29b501d59e0c3ec41e40c9cf020","Jonathan Hedley"
"2623","appendChild","appendChild","5","Return Type Change, Body Change, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2624","appendChild","appendChild","5","Body Change","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"2625","appendChild","appendChild","5","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"2626","appendChild","appendChild","5","Body Change","Performance improvement on parsing larger HTML pages.
","8c43a813f98dcd5362c33aff2378ef1cb12252b3","Jonathan Hedley"
"2627","appendChildren","appendChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"2628","appendTo","appendTo","1","Body Change, Introduced, MultiChange","Merging #662
","2b7550c5e2d512944cd212f20302555d20b0e6c8","Jonathan Hedley"
"2629","prependChild","prependChild","3","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"2630","prependChild","prependChild","3","Body Change","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"2631","prependChild","prependChild","3","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2632","prependChildren","prependChildren","1","Body Change, Introduced, MultiChange","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"2633","insertChildren","insertChildren","1","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"2634","insertChildren","insertChildren","1","Body Change, Introduced, MultiChange","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2635","appendElement","appendElement","5","Body Change, Introduced, MultiChange","Rename Element.addChild to appendChild.

Also implement Element.addElement(String tagName)
","83d1848144abf29b501d59e0c3ec41e40c9cf020","Jonathan Hedley"
"2636","appendElement","appendElement","5","Body Change","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2637","appendElement","appendElement","5","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2638","appendElement","appendElement","5","Body Change","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"2639","appendElement","appendElement","5","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2640","appendElement","appendElement","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2641","appendElement","appendElement","3","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2642","appendElement","appendElement","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2643","prependElement","prependElement","2","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"2644","prependElement","prependElement","2","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2645","prependElement","prependElement","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"2646","prependElement","prependElement","3","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2647","prependElement","prependElement","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2648","appendText","appendText","3","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2649","appendText","appendText","3","Body Change","Added not-null validators to Element.appendText() and Element.prependText()
","941f69bfe96753ef30dbb3bb1bdffb72ee8944e0","Jonathan Hedley"
"2650","appendText","appendText","3","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2651","prependText","prependText","3","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"2652","prependText","prependText","3","Body Change","Added not-null validators to Element.appendText() and Element.prependText()
","941f69bfe96753ef30dbb3bb1bdffb72ee8944e0","Jonathan Hedley"
"2653","prependText","prependText","3","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2654","append","append","8","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2655","append","append","8","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2656","append","append","8","Body Change","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"2657","append","append","8","Body Change","Improved implicit close tag heuristic detection when parsing malformed HTML.

Fixes an issue where appending / prepending rows to a table (or  to similar implicit
element structures) would create a redundant wrapping elements.

Fixes #21
","0081d162cca8ad23b500b53799195fec644f261b","Jonathan Hedley"
"2658","append","append","8","Body Change","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"2659","append","append","8","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2660","append","append","8","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"2661","append","append","8","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"2662","prepend","prepend","7","Body Change, Introduced, MultiChange","Implemented Element prepend methods
","95945f173ca94f9ac6620011cb970707351f070e","Jonathan Hedley"
"2663","prepend","prepend","7","Body Change","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"2664","prepend","prepend","7","Body Change","Improved implicit close tag heuristic detection when parsing malformed HTML.

Fixes an issue where appending / prepending rows to a table (or  to similar implicit
element structures) would create a redundant wrapping elements.

Fixes #21
","0081d162cca8ad23b500b53799195fec644f261b","Jonathan Hedley"
"2665","prepend","prepend","7","Body Change","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"2666","prepend","prepend","7","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2667","prepend","prepend","7","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"2668","prepend","prepend","7","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"2669","before","before","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"2670","before","before","2","Modifier Change, Body Change, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2671","before","before","1","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2672","after","after","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"2673","after","after","2","Modifier Change, Body Change, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2674","after","after","1","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2675","empty","empty","4","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2676","empty","empty","4","Body Change","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2677","empty","empty","4","Modifier Change","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"2678","empty","empty","4","Body Change","Clear child nodes' parent on parent.empty()

Fixes #2013
","eff15210b0507f3eb20ff71a201061e841b40c77","Jonathan Hedley"
"2679","wrap","wrap","3","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"2680","wrap","wrap","3","Body Change","Improved implicit close tag heuristic detection when parsing malformed HTML.

Fixes an issue where appending / prepending rows to a table (or  to similar implicit
element structures) would create a redundant wrapping elements.

Fixes #21
","0081d162cca8ad23b500b53799195fec644f261b","Jonathan Hedley"
"2681","wrap","wrap","3","Modifier Change, Body Change, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2682","uniqueIdSelector","uniqueIdSelector","1","Body Change, Introduced, MultiChange","Restore the behavior of cssSelector before v1.16.2 for elements with an id (#2283)

* Restore the behavior of cssSelector before v1.16.2

* Optimized out id() and ownerDoc() calls

Fixes #2282

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","062d1900f7c57c366d5512e428ed30c71a1536ad","Phu Hung Nguyen"
"2683","cssSelector","cssSelector","9","Body Change, Introduced, MultiChange","Merge branch 'pr/459'
","1833adf54de2ec33d68abf4a64202e8572d15ccd","Jonathan Hedley"
"2684","cssSelector","cssSelector","9","Body Change","Fixed 1.5 support from last pull
","d758acab64d16f7dfb664f18fd9c0f63901d7138","Jonathan Hedley"
"2685","cssSelector","cssSelector","9","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2686","cssSelector","cssSelector","9","Body Change","Tag namespaces cause cssSelector() to fail (#677)","f5ddda0a3ed0c0a8adf4e74dcb230bb609a2717f","Erich Schubert"
"2687","cssSelector","cssSelector","9","Body Change","In Element#cssSelector, check that IDs are unique before using them

Fixes #1085
","7cf9d03bf311494df652a05c2528eb06b2373f9d","jhy"
"2688","cssSelector","cssSelector","9","Body Change","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"2689","cssSelector","cssSelector","9","Body Change","Re-use StringBuilder in Element.cssSelector
","e98305dcf5f5e741f07e7b589bb1ad2a4db42a8d","Jonathan Hedley"
"2690","cssSelector","cssSelector","9","Body Change","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"2691","cssSelector","cssSelector","9","Body Change","Restore the behavior of cssSelector before v1.16.2 for elements with an id (#2283)

* Restore the behavior of cssSelector before v1.16.2

* Optimized out id() and ownerDoc() calls

Fixes #2282

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","062d1900f7c57c366d5512e428ed30c71a1536ad","Phu Hung Nguyen"
"2692","cssSelectorComponent","cssSelectorComponent","3","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2693","cssSelectorComponent","cssSelectorComponent","3","Body Change, Introduced, MultiChange","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"2694","cssSelectorComponent","cssSelectorComponent","3","Body Change","Uncomment stream block in Element (#1988)

* Uncomment stream block in Element

* Add custom StringJoiner collector

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","38615afffecc51519e00f1b4769f6d2dc220c9bc","Isira Seneviratne"
"2695","siblingElements","siblingElements","3","Body Change, Introduced, MultiChange","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2696","siblingElements","siblingElements","3","Body Change","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"2697","siblingElements","siblingElements","3","Body Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2698","nextElementSibling","nextElementSibling","6","Body Change","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"2699","nextElementSibling","nextElementSibling","6","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2700","nextElementSibling","nextElementSibling","6","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2701","nextElementSibling","nextElementSibling","6","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2702","nextElementSibling","nextElementSibling","6","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2703","nextElementSibling","nextElementSibling","6","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2704","nextElementSiblings","nextElementSiblings","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1054'
","26adfcbcb07bca87f0d50084aaca7549c97abb0c","Jonathan Hedley"
"2705","previousElementSibling","previousElementSibling","7","Body Change","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"2706","previousElementSibling","previousElementSibling","7","Body Change","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2707","previousElementSibling","previousElementSibling","7","Body Change","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"2708","previousElementSibling","previousElementSibling","7","Body Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2709","previousElementSibling","previousElementSibling","7","Body Change","Avoid unnecessary null checks, as Element#indexInList never returns null.
","d06d8f423439290032dbbb8211c58220fa13e7bd","Pascal Schumacher"
"2710","previousElementSibling","previousElementSibling","7","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2711","previousElementSibling","previousElementSibling","7","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2712","previousElementSiblings","previousElementSiblings","1","Body Change, Introduced, MultiChange","Merge branch 'pr/1054'
","26adfcbcb07bca87f0d50084aaca7549c97abb0c","Jonathan Hedley"
"2713","nextElementSiblings","nextElementSiblings","2","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2714","nextElementSiblings","nextElementSiblings","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1054'
","26adfcbcb07bca87f0d50084aaca7549c97abb0c","Jonathan Hedley"
"2715","firstElementSibling","firstElementSibling","4","Body Change, Introduced, MultiChange","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"2716","firstElementSibling","firstElementSibling","4","Body Change","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2717","firstElementSibling","firstElementSibling","4","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2718","firstElementSibling","firstElementSibling","4","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2719","elementSiblingIndex","elementSiblingIndex","3","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"2720","elementSiblingIndex","elementSiblingIndex","3","Body Change","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"2721","elementSiblingIndex","elementSiblingIndex","3","Return Type Change","Don't create Integer objects or Iterators

Getting rid of the autoboxing effectively doubles the speed of the N-th
selector benchmark (450 to 850 ops/s). And removing the Iterator lowers
a bunch of GC.
","3c81151c7b4dd4739b11f0b6aa5eff81c07fd684","Jonathan Hedley"
"2722","lastElementSibling","lastElementSibling","5","Body Change, Introduced, MultiChange","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"2723","lastElementSibling","lastElementSibling","5","Body Change","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"2724","lastElementSibling","lastElementSibling","5","Body Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"2725","lastElementSibling","lastElementSibling","5","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2726","lastElementSibling","lastElementSibling","5","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2727","indexInList","indexInList","3","Body Change, Introduced, MultiChange","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"2728","indexInList","indexInList","3","Return Type Change, Body Change, MultiChange","Don't create Integer objects or Iterators

Getting rid of the autoboxing effectively doubles the speed of the N-th
selector benchmark (450 to 850 ops/s). And removing the Iterator lowers
a bunch of GC.
","3c81151c7b4dd4739b11f0b6aa5eff81c07fd684","Jonathan Hedley"
"2729","indexInList","indexInList","3","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"2730","firstElementChild","firstElementChild","2","Body Change, Introduced, MultiChange","Added {first|last}[Element]Child accessors

Improvement: added Element.firstElementChild(), Element.lastElementChild(), Node.firstChild(), Node.lastChild(), as convenient accessors to those child nodes and elements.
","372ef90d8753690f23b1967aed42a106ce2b8ae2","Jonathan Hedley"
"2731","firstElementChild","firstElementChild","2","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2732","lastElementChild","lastElementChild","3","Body Change, Introduced, MultiChange","Added {first|last}[Element]Child accessors

Improvement: added Element.firstElementChild(), Element.lastElementChild(), Node.firstChild(), Node.lastChild(), as convenient accessors to those child nodes and elements.
","372ef90d8753690f23b1967aed42a106ce2b8ae2","Jonathan Hedley"
"2733","lastElementChild","lastElementChild","3","Body Change","Tweaked for fewer child.size() hits
","bb7f93b4c8f7cb47029fe542334b09799d7b8a95","Jonathan Hedley"
"2734","lastElementChild","lastElementChild","3","Body Change","For first/last/next/prev sibling/child, filter for Elements in place

Vs always allocating a complete filtered Element list, and scanning that.

Reduces memory consumption, and tweaks performance, especially for large child counts.
","37f6690fe01604f23792b10e8fdaa2f1a8479a43","Jonathan Hedley"
"2735","getElementsByTag","getElementsByTag","5","Body Change, Introduced, MultiChange","Implemented getElementsByTagName
","9db51cf756951fa62a7670b70d314af2f0ffc197","Jonathan Hedley"
"2736","getElementsByTag","getElementsByTag","5","Body Change","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2737","getElementsByTag","getElementsByTag","5","Body Change","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2738","getElementsByTag","getElementsByTag","5","Return Type Change","Have Element DOM methods return Elements instead of List<Element>, to give ready access to .select(query)
","3dd9e66bc21c6f53aaa21ce45666610f68540555","Jonathan Hedley"
"2739","getElementsByTag","getElementsByTag","5","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"2740","getElementById","getElementById","6","Body Change, Introduced, MultiChange","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"2741","getElementById","getElementById","6","Body Change","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2742","getElementById","getElementById","6","Body Change","Have Element DOM methods return Elements instead of List<Element>, to give ready access to .select(query)
","3dd9e66bc21c6f53aaa21ce45666610f68540555","Jonathan Hedley"
"2743","getElementById","getElementById","6","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2744","getElementById","getElementById","6","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2745","getElementById","getElementById","6","Body Change","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"2746","getElementsByClass","getElementsByClass","4","Body Change, Introduced, MultiChange","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"2747","getElementsByClass","getElementsByClass","4","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2748","getElementsByClass","getElementsByClass","4","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2749","getElementsByClass","getElementsByClass","4","Body Change","Tidying up some javadoc
","283352773e206289124540c8fd0558013596b126","Jonathan Hedley"
"2750","getElementsByAttribute","getElementsByAttribute","2","Body Change, Introduced, MultiChange","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"2751","getElementsByAttribute","getElementsByAttribute","2","Body Change","Added support for [^attributePrefix] selector query. Useful for finding
elements with HTML5 datasets: [^data]
","af580c310cab08ed637afb235c22a83bb71f4f9a","Jonathan Hedley"
"2752","getElementsByAttributeStarting","getElementsByAttributeStarting","2","Body Change, Introduced, MultiChange","Added support for [^attributePrefix] selector query. Useful for finding
elements with HTML5 datasets: [^data]
","af580c310cab08ed637afb235c22a83bb71f4f9a","Jonathan Hedley"
"2753","getElementsByAttributeStarting","getElementsByAttributeStarting","2","Body Change","Fix typos (#1830)

* Fix some typos in documentation","eabfcdd25d3d1604baaa78d585ea671540a45adf","Michael Ernst"
"2754","getElementsByAttributeValue","getElementsByAttributeValue","2","Body Change, Introduced, MultiChange","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"2755","getElementsByAttributeValue","getElementsByAttributeValue","2","Body Change","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2756","getElementsByAttributeValueNot","getElementsByAttributeValueNot","2","Body Change, Introduced, MultiChange","Implemented advanced attribute selectors (!= ^= $= *=) and element methods.
","4555f2d3bdd513bfa82e444930e29531387d0215","Jonathan Hedley"
"2757","getElementsByAttributeValueNot","getElementsByAttributeValueNot","2","Body Change","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2758","getElementsByAttributeValueStarting","getElementsByAttributeValueStarting","2","Body Change, Introduced, MultiChange","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2759","getElementsByAttributeValueStarting","getElementsByAttributeValueStarting","2","Body Change","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2760","getElementsByAttributeValueEnding","getElementsByAttributeValueEnding","2","Body Change, Introduced, MultiChange","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2761","getElementsByAttributeValueEnding","getElementsByAttributeValueEnding","2","Body Change","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2762","getElementsByAttributeValueContaining","getElementsByAttributeValueContaining","2","Body Change, Introduced, MultiChange","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2763","getElementsByAttributeValueContaining","getElementsByAttributeValueContaining","2","Body Change","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2764","getElementsByAttributeValueMatching","getElementsByAttributeValueMatching","1","Body Change, Introduced, MultiChange","Added [key~=regex] attribute selector by regular expression
","57567c678cadb79fbc19b86e11391e325834dffb","Jonathan Hedley"
"2765","getElementsByAttributeValueMatching","getElementsByAttributeValueMatching","2","Body Change, Introduced, MultiChange","Added [key~=regex] attribute selector by regular expression
","57567c678cadb79fbc19b86e11391e325834dffb","Jonathan Hedley"
"2766","getElementsByAttributeValueMatching","getElementsByAttributeValueMatching","2","Body Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2767","getElementsByIndexLessThan","getElementsByIndexLessThan","1","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"2768","getElementsByIndexGreaterThan","getElementsByIndexGreaterThan","1","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"2769","getElementsByIndexEquals","getElementsByIndexEquals","1","Body Change, Introduced, MultiChange","Added selector support for :eq, :lt, and gt

Closes #16
","5eecccd3eae2d7af9c8426473e9ee53bc01bc7c0","Jonathan Hedley"
"2770","getElementsContainingText","getElementsContainingText","1","Body Change, Introduced, MultiChange","Added :contains(text) selector
","214c5686b075152d2bf8995731632080ed8f8e83","Jonathan Hedley"
"2771","getElementsContainingOwnText","getElementsContainingOwnText","1","Body Change, Introduced, MultiChange","Added support for selectors :containsOwn(text) and :matchesOwn(regex), to supplement Element.ownText().
","2217137d9254f124e01aa935628a4076f7478995","Jonathan Hedley"
"2772","getElementsMatchingText","getElementsMatchingText","1","Body Change, Introduced, MultiChange","Implemented :matches(regex) selector.
","916d5399a698ccf3eb2e0f02f4cad234fedec177","Jonathan Hedley"
"2773","getElementsMatchingText","getElementsMatchingText","2","Body Change, Introduced, MultiChange","Implemented :matches(regex) selector.
","916d5399a698ccf3eb2e0f02f4cad234fedec177","Jonathan Hedley"
"2774","getElementsMatchingText","getElementsMatchingText","2","Body Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2775","getElementsMatchingOwnText","getElementsMatchingOwnText","1","Body Change, Introduced, MultiChange","Added support for selectors :containsOwn(text) and :matchesOwn(regex), to supplement Element.ownText().
","2217137d9254f124e01aa935628a4076f7478995","Jonathan Hedley"
"2776","getElementsMatchingOwnText","getElementsMatchingOwnText","2","Body Change, Introduced, MultiChange","Added support for selectors :containsOwn(text) and :matchesOwn(regex), to supplement Element.ownText().
","2217137d9254f124e01aa935628a4076f7478995","Jonathan Hedley"
"2777","getElementsMatchingOwnText","getElementsMatchingOwnText","2","Body Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2778","getAllElements","getAllElements","1","Body Change, Introduced, MultiChange","Moved Evaluator to nodes from select, to close down public methods.
","80c826dc46a5270826c411d3741bfab8c98eb42e","Jonathan Hedley"
"2779","text","text","15","Body Change, Introduced, MultiChange","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"2780","text","text","15","Body Change","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"2781","text","text","15","Body Change","Implemented Element#ownText()
","e4917452778b4e1b19b2fcbe9f258e9e4061a97f","Jonathan Hedley"
"2782","text","text","15","Body Change","Modified Element.text() to build text by traversing child nodes rather than recursing.

Fixes #271
","1fd0a617cb216113997569937b43ec7c7a9c2fd2","Jonathan Hedley"
"2783","text","text","15","Body Change","Document that Element.text() normalizes whitespace

Fixes #439

(For a somewhat passive-aggressive definition of “fix”.)
","8f9b51dab9020d499bc2a2ca2fcb306bbfb4e734","Jonathan Hedley"
"2784","text","text","15","Body Change","Less StringBuilder GC in text()

Need to roll out further.
","c63ccf8324539deddab636dd3c8003201024af1a","Jonathan Hedley"
"2785","text","text","15","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"2786","text","text","15","Body Change","Renamed and changelog for wholeText
","b001b304826d33f8f2b34fc7f14a931d9a97cf8a","Jonathan Hedley"
"2787","text","text","15","Body Change","Merge branch 'master' into pr/988
","3676b132429306c722304e94177172dca42c2dda","Jonathan Hedley"
"2788","text","text","15","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"2789","text","text","15","Body Change","Text javadoc clarification
","4dc96506ca76074e59341cf1e7ef46450baf777a","Jonathan Hedley"
"2790","text","text","15","Body Change","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"2791","text","text","15","Body Change","In text(), insert a space between block and inline elements.

Fixes #1877
","db5375eb5b9b153816fb09e884f5700230d19120","Jonathan Hedley"
"2792","text","text","15","Body Change","Tidying up some javadoc
","283352773e206289124540c8fd0558013596b126","Jonathan Hedley"
"2793","text","text","15","Body Change","Format tweaks
","afc38d827ac31ee264d8444d81c3863ad569bbb9","Jonathan Hedley"
"2794","TextAccumulator","TextAccumulator","2","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2795","TextAccumulator","TextAccumulator","2","Body Change, Introduced, MultiChange","Format tweaks
","afc38d827ac31ee264d8444d81c3863ad569bbb9","Jonathan Hedley"
"2796","head","head","2","Body Change, Introduced, MultiChange","Format tweaks
","afc38d827ac31ee264d8444d81c3863ad569bbb9","Jonathan Hedley"
"2797","head","head","2","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2798","tail","tail","2","Body Change, Introduced, MultiChange","Format tweaks
","afc38d827ac31ee264d8444d81c3863ad569bbb9","Jonathan Hedley"
"2799","tail","tail","2","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2800","wholeText","wholeText","6","Body Change, Introduced, MultiChange","Renamed and changelog for wholeText
","b001b304826d33f8f2b34fc7f14a931d9a97cf8a","Jonathan Hedley"
"2801","wholeText","wholeText","6","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"2802","wholeText","wholeText","6","Body Change","Added the :containsWholeOwnText selector

And the corresponding Element#wholeOwnText() method.

For #1636
","027c70c94368c2793a42c0532d29f4e05a0307f8","Jonathan Hedley"
"2803","wholeText","wholeText","6","Body Change","Simplify traverse to lambda
","59201d92f5c5e44b8a6b19fab60fd80495e705cb","jhy"
"2804","wholeText","wholeText","6","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2805","wholeText","wholeText","6","Body Change","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"2806","wholeTextOf","wholeTextOf","2","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2807","wholeTextOf","wholeTextOf","2","Body Change, Introduced, MultiChange","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"2808","wholeOwnText","wholeOwnText","2","Body Change, Introduced, MultiChange","Added the :containsWholeOwnText selector

And the corresponding Element#wholeOwnText() method.

For #1636
","027c70c94368c2793a42c0532d29f4e05a0307f8","Jonathan Hedley"
"2809","wholeOwnText","wholeOwnText","2","Body Change","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"2810","ownText","ownText","2","Body Change, Introduced, MultiChange","Implemented Element#ownText()
","e4917452778b4e1b19b2fcbe9f258e9e4061a97f","Jonathan Hedley"
"2811","ownText","ownText","2","Body Change","Doc
","ec49e3832a1db13efc343d22798efb1523684959","Jonathan Hedley"
"2812","ownText","ownText","4","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2813","ownText","ownText","4","Body Change, Introduced, MultiChange","Implemented Element#ownText()
","e4917452778b4e1b19b2fcbe9f258e9e4061a97f","Jonathan Hedley"
"2814","ownText","ownText","4","Body Change","Have <br> output as "" "" for Element.ownText()
","db9efbd54c6ff876768eb874f7e9fe84a6632729","Jonathan Hedley"
"2815","ownText","ownText","4","Body Change","Reduce GC when bashing on ownText during matching

The for(obj : list) creates ArrayList Iterators, and those were making 20% of the GC now. The StringBuilder still dominates though.
","bc4720a2c13a321a40a9a90ee3991fb1c2f09bbe","Jonathan Hedley"
"2816","appendNormalisedText","appendNormalisedText","5","Body Change, Introduced, MultiChange","Implemented Element#ownText()
","e4917452778b4e1b19b2fcbe9f258e9e4061a97f","Jonathan Hedley"
"2817","appendNormalisedText","appendNormalisedText","5","Modifier Change, Body Change, MultiChange","Modified Element.text() to build text by traversing child nodes rather than recursing.

Fixes #271
","1fd0a617cb216113997569937b43ec7c7a9c2fd2","Jonathan Hedley"
"2818","appendNormalisedText","appendNormalisedText","5","Body Change","Performance improvment for Element.text

Increase the speed of getting an element's text content by 220%, by
reducing new object creation. Also reduces GC load.
","d6fd1637307f6b088eb226c3f979085725530f32","Jonathan Hedley"
"2819","appendNormalisedText","appendNormalisedText","5","Body Change","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"2820","appendNormalisedText","appendNormalisedText","5","Body Change","Added Node#normalName()

And simplified some accesses
","df747421a79521e668a0b21a645a169fe91d8ccd","Jonathan Hedley"
"2821","preserveWhitespace","preserveWhitespace","2","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2822","preserveWhitespace","preserveWhitespace","2","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2823","text","text","5","Body Change, Introduced, MultiChange","Implemented Element.text(string) method, to set the text of an element, and clear out existing html.
","6fe6c34a888486b417a913deaca517305b76cc71","Jonathan Hedley"
"2824","text","text","5","Body Change","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2825","text","text","5","Body Change","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"2826","text","text","5","Body Change","In text(), insert a space between block and inline elements.

Fixes #1877
","db5375eb5b9b153816fb09e884f5700230d19120","Jonathan Hedley"
"2827","text","text","5","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2828","hasText","hasText","3","Body Change, Introduced, MultiChange","Improved document normalisation.
","d24b485e252d9e86858207da7a57678d41d3f72c","Jonathan Hedley"
"2829","hasText","hasText","3","Body Change","hasText
","93e9d84da0e87896aaaac14769eece487ba9e64d","Jonathan Hedley"
"2830","hasText","hasText","3","Body Change","Use a traverser vs recursion for hasText

Also clarified the javadoc
","75bdf8ef13ea840f8b5154f8910a3482bedb951d","Jonathan Hedley"
"2831","data","data","10","Body Change, Introduced, MultiChange","Introduced a DataNode, and SCRIPT, TEXTAREA, TITLE etc goes into DataNodes, so that Element.text() does not get clouded with script or style inners.
","ce691239d40e469b75fa22b0bb6a065202c475a7","Jonathan Hedley"
"2832","data","data","10","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2833","data","data","10","Body Change","Added Element.textNodes() and Element.dataNodes(), to easily access an element's children text nodes and data nodes.
","7b9f17760049161b775fd23b15653961620e259d","Jonathan Hedley"
"2834","data","data","10","Body Change","Added :containsData() selector
","1038abfd34a21905e176e6d28f6377c90fce27d7","Jonathan Hedley"
"2835","data","data","10","Body Change","Improved docs to help with #852
","bae55f9e99afed86b0d30caff999fd40c4268d48","Jonathan Hedley"
"2836","data","data","10","Body Change","Change log
","07ce1cf7e37591038ed4e1a9ca966ba69350b5d0","Jonathan Hedley"
"2837","data","data","10","Body Change","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"2838","data","data","10","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"2839","data","data","10","Body Change","Text javadoc clarification
","4dc96506ca76074e59341cf1e7ef46450baf777a","Jonathan Hedley"
"2840","data","data","10","Body Change","Moved to a traversor vs recursion to gather data()

Fixes #1864
","075b0e62b15497a7c32ce84c3d24bcb7d0561954","Jonathan Hedley"
"2841","className","className","2","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2842","className","className","2","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2843","classNames","classNames","4","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2844","classNames","classNames","4","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2845","classNames","classNames","4","Body Change","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"2846","classNames","classNames","4","Body Change","Merge pull request #479 from hannibal218bc/fix-element-classnames

Element.classNames() must not be cached","24d01fbaedf2eab505d7bbd62794f54deb617895","Jonathan Hedley"
"2847","classNames","classNames","2","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"2848","classNames","classNames","2","Body Change","removing last class should remove class attribute (#963)

","a58c8e679c00be9abea4925d3b96c16fd2cd9c64","krystiangorecki"
"2849","hasClass","hasClass","9","Body Change, Introduced, MultiChange","Implemented:
 * Element.getElementsByClass
 * Element.getElementsWithAttribute
 * Element.getElementsWithAttributeValue
 * Element.className
 * Element.hasClass
 * Elmenet.classNames
","f435b791e193cfe771d7dbd28d2822c32a0889e2","Jonathan Hedley"
"2850","hasClass","hasClass","9","Body Change","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"2851","hasClass","hasClass","9","Body Change","Speed improvement for .class selector

2.5x to 14x on Android 5.
","495cb3d885125843cb409372a38ac25f13d3b2f6","Jonathan Hedley"
"2852","hasClass","hasClass","9","Body Change","Merge branch 'benbenw-hasclass-optim'
","6e295d4428e4f04baf65c704f00f3142b46f34ff","Jonathan Hedley"
"2853","hasClass","hasClass","9","Body Change","Changelog for #753 and tidied up comments a little

Fixes #753
","4f5a56459a98e21780d813919da66de9eee91b74","Jonathan Hedley"
"2854","hasClass","hasClass","9","Body Change","Access the class attribute case-insensitiviely

Fixes #814
","83f01fd864e59fa69c894da06f4a15489222d401","Jonathan Hedley"
"2855","hasClass","hasClass","9","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2856","hasClass","hasClass","9","Body Change","Don't create Attributes objects until required

Saves memory & garbage
","0a4bd07adf2f483207c0c0820f020a2361d841c3","Jonathan Hedley"
"2857","hasClass","hasClass","9","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2858","addClass","addClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"2859","removeClass","removeClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"2860","toggleClass","toggleClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"2861","val","val","3","Body Change, Introduced, MultiChange","Added val() and val(string) to Element and Elements.

Treat contents of textarea as text, not data.

Closes #14
","fcab98cdd311deb3dd4fd63fef2bc6c4c397f186","Jonathan Hedley"
"2862","val","val","3","Body Change","Use Tag#normalName, not Element#tagName for all comparisons
","75815e2d6b743bbdffede8e46d80da5c9684385c","Jonathan Hedley"
"2863","val","val","3","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"2864","val","val","3","Body Change, Introduced, MultiChange","Added val() and val(string) to Element and Elements.

Treat contents of textarea as text, not data.

Closes #14
","fcab98cdd311deb3dd4fd63fef2bc6c4c397f186","Jonathan Hedley"
"2865","val","val","3","Body Change","Use Tag#normalName, not Element#tagName for all comparisons
","75815e2d6b743bbdffede8e46d80da5c9684385c","Jonathan Hedley"
"2866","val","val","3","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"2867","endSourceRange","endSourceRange","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"2868","endSourceRange","endSourceRange","2","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"2869","outerHtmlHead","outerHtmlHead","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2870","outerHtmlHead","outerHtmlHead","2","Body Change, Exceptions Change, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"2871","outerHtmlTail","outerHtmlTail","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2872","outerHtmlTail","outerHtmlTail","2","Body Change, Exceptions Change, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"2873","safeTagName","safeTagName","3","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2874","safeTagName","safeTagName","3","Body Change, Introduced, MultiChange","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"2875","safeTagName","safeTagName","3","Modifier Change","Normalize XML tag names

Fixes #1496
","61923e0455c46cc6320188b13c613302f01e7880","Jonathan Hedley"
"2876","html","html","5","Body Change, Introduced, MultiChange","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"2877","html","html","5","Body Change","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"2878","html","html","5","Body Change","Element documentation.
","9bed789bfee6c6433945c0a3e2c710c897616888","Jonathan Hedley"
"2879","html","html","5","Body Change","Use string builders for HTML creation.
","7898cdffecce78996012bd06eac0792dd4b6ac6d","Jonathan Hedley"
"2880","html","html","5","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"2881","html","html","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"2882","html","html","1","Body Change, Introduced, MultiChange","Implemented Element.append(html)
","abdf22714e557304d9f6782d30da9b7254ce017c","Jonathan Hedley"
"2883","clone","clone","4","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"2884","clone","clone","4","Body Change","Don't clone the element's classnames

Fixes #278
","0e37cba87eea9d89156c144e3d4298c9c9ed04d4","Jonathan Hedley"
"2885","clone","clone","4","Body Change","Merge pull request #479 from hannibal218bc/fix-element-classnames

Element.classNames() must not be cached","24d01fbaedf2eab505d7bbd62794f54deb617895","Jonathan Hedley"
"2886","clone","clone","4","Body Change","Improved hashcode and equals for Node

Fixes #537
","8391b7231a2519557d41209d728acc4f422af381","Jonathan Hedley"
"2887","shallowClone","shallowClone","2","Body Change, Introduced, MultiChange","Added shallowClone()

Fixes #900
","2d340db5b1ba48079b3bad81a5ffe7c9c7ac26e0","Jonathan Hedley"
"2888","shallowClone","shallowClone","2","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2889","doClone","doClone","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2890","clearAttributes","clearAttributes","3","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"2891","clearAttributes","clearAttributes","3","Body Change","Ensure that attributes are nulled on clear()
","fb79deab9ddac9ac494ab444ba0086b935c10e6e","Jonathan Hedley"
"2892","clearAttributes","clearAttributes","3","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"2893","removeAttr","removeAttr","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"2894","root","root","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"2895","traverse","traverse","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"2896","forEachNode","forEachNode","1","Body Change, Introduced, MultiChange","Added Node.forEachNode and Element.forEach consumer methods

Fixes #1700
","b236d07ee7893c39e45421f79e220fdee0d90e32","Jonathan Hedley"
"2897","forEach","forEach","3","Body Change, Introduced, MultiChange","Added Node.forEachNode and Element.forEach consumer methods

Fixes #1700
","b236d07ee7893c39e45421f79e220fdee0d90e32","Jonathan Hedley"
"2898","forEach","forEach","3","Modifier Change, Body Change, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2899","forEach","forEach","3","Return Type Change, Modifier Change, Body Change, MultiChange","Removed previously deprecated class & method, enable Element Iterator (#2246)

","d72a5338ce267744fad7d3bc35ea1495376b0bab","Jonathan Hedley"
"2900","iterator","iterator","1","Body Change, Introduced, MultiChange","Removed previously deprecated class & method, enable Element Iterator (#2246)

","d72a5338ce267744fad7d3bc35ea1495376b0bab","Jonathan Hedley"
"2901","filter","filter","1","Body Change, Introduced, MultiChange","Added remaining typed Element chaining methods

Fixes #1193
","1e576bbb7bb896b8f2ee7f3c20224d678fb21acf","Jonathan Hedley"
"2902","NodeList","NodeList","1","Body Change, Introduced, MultiChange","Notifications to cloned elements were incorrectly delivered to the original element.

Fixes #951
","c324fabe86c0a59eb635610dc85d8d7a7be25c74","Jonathan Hedley"
"2903","onContentsChanged","onContentsChanged","4","File Renamed","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2904","onContentsChanged","onContentsChanged","4","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2905","onContentsChanged","onContentsChanged","4","Body Change","Notifications to cloned elements were incorrectly delivered to the original element.

Fixes #951
","c324fabe86c0a59eb635610dc85d8d7a7be25c74","Jonathan Hedley"
"2906","onContentsChanged","onContentsChanged","4","Modifier Change","Nullable annotation for #attribute(key)

And some trivial other cleanups
","f396007e8ec322ef99329c7b9b37922a927e9897","Jonathan Hedley"
"2907","Node","Node","6","Body Change, Introduced, MultiChange","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"2908","Node","Node","6","Body Change, Deleted, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"2909","Node","Node","6","Body Change, Introduced, MultiChange","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"2910","Node","Node","6","Body Change","Generify empty child list.
","7eefa1b51eb9fdc36b0762c0bbc417aff4b19a39","Jonathan Hedley"
"2911","Node","Node","6","Body Change","Performance improvement on parsing larger HTML pages.
","8c43a813f98dcd5362c33aff2378ef1cb12252b3","Jonathan Hedley"
"2912","Node","Node","6","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2913","nodeName","nodeName","1","Introduced","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2914","normalName","normalName","1","Body Change, Introduced, MultiChange","Added Node#normalName()

And simplified some accesses
","df747421a79521e668a0b21a645a169fe91d8ccd","Jonathan Hedley"
"2915","nameIs","nameIs","1","Body Change, Introduced, MultiChange","Move nameIs to Node
","b5761608fc8862a58403b88f4582b5f883ad31ea","Jonathan Hedley"
"2916","parentNameIs","parentNameIs","1","Body Change, Introduced, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"2917","parentElementIs","parentElementIs","1","Body Change, Introduced, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"2918","hasAttributes","hasAttributes","1","Introduced","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2919","hasParent","hasParent","2","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2920","hasParent","hasParent","2","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2921","attr","attr","6","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2922","attr","attr","6","Body Change","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"2923","attr","attr","6","Body Change","Implemented ""abs:"" virtual attribute prefix for absolute URLs.
","e322266704817edd0a19e05207a15b791ca160b6","Jonathan Hedley"
"2924","attr","attr","6","Body Change","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"2925","attr","attr","6","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2926","attr","attr","6","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2927","attributes","attributes","2","Body Change, Introduced, MultiChange","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"2928","attributes","attributes","2","Modifier Change, Body Change, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2929","attributesSize","attributesSize","1","Body Change, Introduced, MultiChange","Speed improvement: cap number of cloned active formatting elements

Also saves on memory allocations for empty attribute lists.

Fixes #1613
","d2c455c94a3aaaca29d8cec6bd53ee9824622b51","Jonathan Hedley"
"2930","attr","attr","5","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2931","attr","attr","5","Body Change","Case-insensitive attribute setter (#903)

* Add failing test for updating attribute using differently-cased key

* Do case-insensitive key comparison when replacing attributes
","416ad294fb97f594c05dda7da53733cea59ab0ce","cketti"
"2932","attr","attr","5","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"2933","attr","attr","5","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"2934","attr","attr","5","Body Change","Don't create a new Parser in Node#attr

If a Node did not (yet) have a parent document, calling attr() would create a parser, to get the default HTML settings to normalize the attribute name. Simplify that to just use defaults directly.

Also, simplified DocumentType to use attributes.add, which does not go through normalization or dedupe.
","c6208d2c8d3f3cb45215053f2656683844155e8a","Jonathan Hedley"
"2935","hasAttr","hasAttr","4","Body Change, Introduced, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"2936","hasAttr","hasAttr","4","Body Change","Improved ""abs:"" absolute URL handling in Elements.attr(""abs:href"") and Node.hasAttr(""abs:href"").

Fixes #97
","411c01ff53f56f0b84bee210ad75c8c2114efa55","Jonathan Hedley"
"2937","hasAttr","hasAttr","4","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"2938","hasAttr","hasAttr","4","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2939","removeAttr","removeAttr","3","Body Change, Introduced, MultiChange","Attribute helpers in Element and Elements.
","43e16a608ddc00981c92cf3772c350c8b7e934dc","Jonathan Hedley"
"2940","removeAttr","removeAttr","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"2941","removeAttr","removeAttr","3","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2942","clearAttributes","clearAttributes","2","Body Change, Introduced, MultiChange","Added method to clear all attributes
","824e82fff399c86cc3b7905ee6a952a848b2e69d","Jonathan Hedley"
"2943","clearAttributes","clearAttributes","2","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2944","baseUri","baseUri","2","Body Change, Introduced, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"2945","baseUri","baseUri","2","Modifier Change, Body Change, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2946","doSetBaseUri","doSetBaseUri","1","Introduced","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2947","setBaseUri","setBaseUri","2","Body Change, Introduced, MultiChange","Act on only the first base href in parse.

And make node.setBaseUri() recurse down to descendants.
","1e84edbe208aab0c9330eadc50f9773d81d70cd6","Jonathan Hedley"
"2948","setBaseUri","setBaseUri","2","Body Change","Introduced internal attributes

And moved baseUri to them when set, vs a field on every element regardless of differing value.

#1321
","979d5dd744b7cd30319965743b8a62269ba7845b","Jonathan Hedley"
"2949","absUrl","absUrl","5","Body Change, Introduced, MultiChange","Modified Node#absURL to return only absolute URLs, or """".

Previously if there was no baseURI, it would return a relative URL from the
attribute value, which is unreliable.

Also documented method.
","2f732574251122055092a4c6869123eb08058b14","Jonathan Hedley"
"2950","absUrl","absUrl","5","Body Change","Javadoc example on absUrl
","08a3d67273f31718acde383a4c5158bed9c506b2","Jonathan Hedley"
"2951","absUrl","absUrl","5","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"2952","absUrl","absUrl","5","Body Change","Fix a relative redirect issue, and clean up URL resolving.

Fixes #585
","1e09df66f0302958d547037e7258913b3069f2b6","Jonathan Hedley"
"2953","absUrl","absUrl","5","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2954","ensureChildNodes","ensureChildNodes","2","Body Change, Introduced, MultiChange","Performance improvement on parsing larger HTML pages.
","8c43a813f98dcd5362c33aff2378ef1cb12252b3","Jonathan Hedley"
"2955","ensureChildNodes","ensureChildNodes","2","Return Type Change, Modifier Change, Body Change, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2956","childNode","childNode","4","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2957","childNode","childNode","4","Body Change, Exceptions Change, MultiChange","Corrected the javadoc for Element#child() to note that it throws IndexOutOfBounds.

Fixes #277
","7ff15ee20c961e370837d8f96ae77886ecd910d8","Jonathan Hedley"
"2958","childNode","childNode","4","Exceptions Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2959","childNode","childNode","4","Body Change, Exceptions Change, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"2960","childNodes","childNodes","6","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2961","childNodes","childNodes","6","Body Change","To save GC time in select, don't wrap childnodes in unmodifiable list.
","074d9bfd5476d0430e75073fb27001f43435c081","Jonathan Hedley"
"2962","childNodes","childNodes","6","Body Change","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"2963","childNodes","childNodes","6","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2964","childNodes","childNodes","6","Body Change","Added appendChildren and prependChildren, and wrap the Node children to prevent CMEs

Added Element#insertChildren and Elment#prependChildren, as convenience methods in addition to Element#insertChildren(index, children), for bulk moving nodes.

Although Node#childNodes() returns an UnmodifiableList as a view into its children, it was still directly backed by the internal child list. That made some uses, such as looping and moving those children to another element, throw a ConcurrentModificationException. Now this method returns its own list so that they are separated and changes to the parent's contents will not impact the children view.

Fixes #1431
","3afde5830e5bc811dfaf214be86652e2c1f95489","Jonathan Hedley"
"2965","childNodes","childNodes","6","Body Change","Do not auto-vivify attributes or child nodes for read only ops

Saves a good amount of memory / garbage, partic for selector attribute traversals
","28792633d291818bca6cdcc1ed890afe8ca8b4ea","Jonathan Hedley"
"2966","childNodesCopy","childNodesCopy","3","Body Change, Introduced, MultiChange","Added Node.childNodesCopy()
","fa87a8fe2838e80ae0eeba6e2978815ef5533e91","Jonathan Hedley"
"2967","childNodesCopy","childNodesCopy","3","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"2968","childNodesCopy","childNodesCopy","3","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2969","childNodeSize","childNodeSize","2","Body Change, Introduced, MultiChange","Added Element.insertChildren

Also tidied up JavaDoc, and returned Node.childNodes to a unmodifiable
list.

Fixes #239 (with alternative implementation)
","deaf9f6a51b928dcad619fd8300ee3926345d1ea","Jonathan Hedley"
"2970","childNodeSize","childNodeSize","2","Modifier Change, Body Change, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2971","childNodesAsArray","childNodesAsArray","4","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"2972","childNodesAsArray","childNodesAsArray","4","Body Change, Introduced, MultiChange","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"2973","childNodesAsArray","childNodesAsArray","4","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"2974","childNodesAsArray","childNodesAsArray","4","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"2975","empty","empty","1","Introduced","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"2976","parent","parent","2","Body Change, Introduced, MultiChange","Complain if moving elements in tree (to implement)
","d6da0b0240d8e550ab459c9b222cb34cee5a9cc8","Jonathan Hedley"
"2977","parent","parent","2","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2978","parentNode","parentNode","4","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"2979","parentNode","parentNode","4","Body Change, Deleted, MultiChange","Complain if moving elements in tree (to implement)
","d6da0b0240d8e550ab459c9b222cb34cee5a9cc8","Jonathan Hedley"
"2980","parentNode","parentNode","4","Body Change, Introduced, MultiChange","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"2981","parentNode","parentNode","4","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2982","root","root","1","Body Change, Introduced, MultiChange","Node.root()
","f78df946f00cdc9ed2159716b50a785b12b57aca","Jonathan Hedley"
"2983","ownerDocument","ownerDocument","4","Body Change, Introduced, MultiChange","Implemented Node.ownerDocument DOM API method.
","2ca58b79dd165a6eec7ce990cf53ceaf9445e5f0","Jonathan Hedley"
"2984","ownerDocument","ownerDocument","4","Body Change","Don't recurse in ownerDocument
","97a270ce61059c876e9ff69261c08c64664bfe13","Jonathan Hedley"
"2985","ownerDocument","ownerDocument","4","Body Change","Node.root()
","f78df946f00cdc9ed2159716b50a785b12b57aca","Jonathan Hedley"
"2986","ownerDocument","ownerDocument","4","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"2987","remove","remove","2","Body Change, Introduced, MultiChange","Added Node#remove and Node#replaceWith.

Closes #19
","982e4f96560dadd33e627a1ecea7557f08745d98","Jonathan Hedley"
"2988","remove","remove","2","Body Change","No-op remove() on orphan nodes

As suggested in #1898
","da5e9778e4e28bcf12086e7a5e057b39a16f2618","Jonathan Hedley"
"2989","before","before","1","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2990","before","before","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2991","before","before","2","Body Change","Remove incoming sibling prior to add in before() and after()

This ensures that the siblingIndex is correct before calling the absolute addChildren(index) to re-position.

Otherwise, if the incoming node was already before the context node (in before()), or after (in after()), the relative order would be incorrect due to being removed and re-indexed prior to re-add. For after(), that could lead to an IndexOutOfBounds exception.

Fixes #1898.
","62de0a18c7702ab5b0d1b4add3b8b3bd4f0dc93c","Jonathan Hedley"
"2992","after","after","1","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2993","after","after","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2994","after","after","2","Body Change","Remove incoming sibling prior to add in before() and after()

This ensures that the siblingIndex is correct before calling the absolute addChildren(index) to re-position.

Otherwise, if the incoming node was already before the context node (in before()), or after (in after()), the relative order would be incorrect due to being removed and re-indexed prior to re-add. For after(), that could lead to an IndexOutOfBounds exception.

Fixes #1898.
","62de0a18c7702ab5b0d1b4add3b8b3bd4f0dc93c","Jonathan Hedley"
"2995","addSiblingHtml","addSiblingHtml","3","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2996","addSiblingHtml","addSiblingHtml","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"2997","addSiblingHtml","addSiblingHtml","3","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"2998","wrap","wrap","6","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"2999","wrap","wrap","6","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3000","wrap","wrap","6","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3001","wrap","wrap","6","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"3002","wrap","wrap","6","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3003","wrap","wrap","6","Body Change","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"3004","unwrap","unwrap","4","Body Change, Introduced, MultiChange","Added Node.unwrap() and Elements.unwrap(), to remove a node but keep its contents.

Fixes #100
","444b5cea6a4c02cecfd50e5d1ecaaaa389d05781","Jonathan Hedley"
"3005","unwrap","unwrap","4","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"3006","unwrap","unwrap","4","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3007","unwrap","unwrap","4","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3008","getDeepChild","getDeepChild","5","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3009","getDeepChild","getDeepChild","5","Body Change, Introduced, MultiChange","Moved .wrap, .before, and .after from Element to Node for flexibility. Overriding implementations in Element still return Element.
","785d41a37f6c311084ebf2d23e83f4ceb4bb94ed","Jonathan Hedley"
"3010","getDeepChild","getDeepChild","5","Body Change","Iterate vs recurse to find the deepest child

Removes chance of overflow in wrap(html) and simplifies.

Related to #1864
","3091b666a672aba7281e29d919f5c940380ef846","Jonathan Hedley"
"3011","getDeepChild","getDeepChild","5","Body Change","Use firstElementChild / Sibling in preference to child(0)

Saves allocating a filtered Element list for these internal calls.
","1762412a28fa7b08ccf71d93fc4c98dc73086e03","Jonathan Hedley"
"3012","getDeepChild","getDeepChild","5","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3013","nodelistChanged","nodelistChanged","1","Body Change, Introduced, MultiChange","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"3014","replaceWith","replaceWith","2","Body Change, Introduced, MultiChange","Added Node#remove and Node#replaceWith.

Closes #19
","982e4f96560dadd33e627a1ecea7557f08745d98","Jonathan Hedley"
"3015","replaceWith","replaceWith","2","Body Change","Use the incoming node's parent if outgoing has already been removed

Fixes #2212

This won't work for all scenarios - when an element is removed it is de-parented, and so if the order of calls had lead to both elements already being detached, there won't be a parent to re-attach to.
","1a91aac56176edcb2327569feb5aff5282f8cacb","Jonathan Hedley"
"3016","setParentNode","setParentNode","5","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3017","setParentNode","setParentNode","5","Body Change, Introduced, MultiChange","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"3018","setParentNode","setParentNode","5","Body Change","Complain if moving elements in tree (to implement)
","d6da0b0240d8e550ab459c9b222cb34cee5a9cc8","Jonathan Hedley"
"3019","setParentNode","setParentNode","5","Body Change","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"3020","setParentNode","setParentNode","5","Body Change","Memoize the child element list, so that sibling index queries are much faster

Measurement was 24 ops/s prior, now 450 ops/s. (When matching ~ 12K
elements in a loop)
","38049ce2808cafce3884c25c4613aaaff9f2d0d8","Jonathan Hedley"
"3021","replaceChild","replaceChild","3","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"3022","replaceChild","replaceChild","3","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3023","replaceChild","replaceChild","3","Body Change","Replacing a node with itself should be a no-op

Fixes #1843
","9bb07d2ab43c0377806b4bb7b88c64366a39a469","Jonathan Hedley"
"3024","removeChild","removeChild","5","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3025","removeChild","removeChild","5","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"3026","removeChild","removeChild","5","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3027","removeChild","removeChild","5","Body Change","Tidied up siblingIndex() access in Node
","1fd3a3cb0ab51861ef671e48f067f143960457f0","Jonathan Hedley"
"3028","removeChild","removeChild","5","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3029","addChildren","addChildren","5","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3030","addChildren","addChildren","5","Body Change, Introduced, MultiChange","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"3031","addChildren","addChildren","5","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"3032","addChildren","addChildren","5","Body Change","Performance improvement on parsing larger HTML pages.
","8c43a813f98dcd5362c33aff2378ef1cb12252b3","Jonathan Hedley"
"3033","addChildren","addChildren","5","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3034","addChildren","addChildren","8","Body Change, Introduced, MultiChange","Cleanup Element and Node add mechanism
","05ea09d373e05aa538793ba042148f83859d1402","Jonathan Hedley"
"3035","addChildren","addChildren","8","Body Change","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"3036","addChildren","addChildren","8","Body Change","Fixed an issue when moving moving nodes using Element.insert(index, children)

Fixes #689
","b2e37fca64877104cfdad3f56cdc2c8b98cb6be1","Jonathan Hedley"
"3037","addChildren","addChildren","8","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3038","addChildren","addChildren","8","Body Change","patch about issue #836 addChildren is quadratic (#930)

* patch about issue #836 addChildren is quadratic

patch about  issue #836 addChildren is quadratic
when add many children, the origin implementation will move childNodes array per loop.(method add(index, obj)),
a performance improvement was made using addAll(index, objs).there are three steps:
1. reparent all the children
2. use addAll(index, objs) to insert children
3. reset sibling index
it is very similar with method addChildren(Node... children)","b185fd76845a9c99e4077bc017d25d65ed58d440","xiaojian cai"
"3039","addChildren","addChildren","8","Body Change","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"3040","addChildren","addChildren","8","Body Change","Fix issue in addNodes where could incorrectly reparent
","a7c07d968dd76c24cea805363f00550a84e15533","Jonathan Hedley"
"3041","addChildren","addChildren","8","Body Change","Speed optimization when reparenting children into an empty element

Fixes #1638
","6607830962b35cbf6be8a8bd8199745dbd21b067","Jonathan Hedley"
"3042","reparentChild","reparentChild","4","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3043","reparentChild","reparentChild","4","Body Change, Introduced, MultiChange","Optimise adding nodes to end of childnode list.
","674dab0387c4bfad01465574c4be6ea4b3f4f6e9","Jonathan Hedley"
"3044","reparentChild","reparentChild","4","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3045","reparentChild","reparentChild","4","Body Change","Duplicated Logic in Called Method (#923)

The same logic is implemented in setParentNode(Node parentNode).","410c15f17dd04588f9f402c8d27cb7a6843f0da7","Ioana Leontiuc"
"3046","reindexChildren","reindexChildren","6","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3047","reindexChildren","reindexChildren","6","Body Change, Introduced, MultiChange","Merge pull request #506 from kguelzau/master

Improve performance when re-parenting nodes","13b55d7e81414d2a96de3bdc8dd95829fd7dad92","Jonathan Hedley"
"3048","reindexChildren","reindexChildren","6","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3049","reindexChildren","reindexChildren","6","Body Change","Speed optimization when reparenting children into an empty element

Fixes #1638
","6607830962b35cbf6be8a8bd8199745dbd21b067","Jonathan Hedley"
"3050","reindexChildren","reindexChildren","6","Body Change","Tidy up child node accessor
","ef0065dcf1a523b57bebf28cf4f0395cd4970082","Jonathan Hedley"
"3051","reindexChildren","reindexChildren","6","Body Change","Tweaked for fewer child.size() hits
","bb7f93b4c8f7cb47029fe542334b09799d7b8a95","Jonathan Hedley"
"3052","siblingNodes","siblingNodes","4","Body Change, Introduced, MultiChange","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"3053","siblingNodes","siblingNodes","4","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3054","siblingNodes","siblingNodes","4","Body Change","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"3055","siblingNodes","siblingNodes","4","Body Change","Tidy up child node accessor
","ef0065dcf1a523b57bebf28cf4f0395cd4970082","Jonathan Hedley"
"3056","nextSibling","nextSibling","6","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3057","nextSibling","nextSibling","6","Body Change","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"3058","nextSibling","nextSibling","6","Body Change","Use a Visitor instead of recursion for HTML and selectors.
","10cfa0465c9d48f6a3ce3f5996259e77b43fa858","Jonathan Hedley"
"3059","nextSibling","nextSibling","6","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3060","nextSibling","nextSibling","6","Body Change","Tidied up siblingIndex() access in Node
","1fd3a3cb0ab51861ef671e48f067f143960457f0","Jonathan Hedley"
"3061","nextSibling","nextSibling","6","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3062","previousSibling","previousSibling","6","Body Change, Introduced, MultiChange","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3063","previousSibling","previousSibling","6","Body Change","Implemented sibling methods
","ffde882f49c01900d6ff3b65e9407a3da3d57f1c","Jonathan Hedley"
"3064","previousSibling","previousSibling","6","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3065","previousSibling","previousSibling","6","Body Change","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"3066","previousSibling","previousSibling","6","Body Change","Tidied up siblingIndex() access in Node
","1fd3a3cb0ab51861ef671e48f067f143960457f0","Jonathan Hedley"
"3067","previousSibling","previousSibling","6","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3068","siblingIndex","siblingIndex","3","Body Change, Introduced, MultiChange","Improved HTML output (pretty-print)
","a52e669ca8bc48265accd57d610c0258f7891841","Jonathan Hedley"
"3069","siblingIndex","siblingIndex","3","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3070","siblingIndex","siblingIndex","3","Return Type Change","removing boxing/unboxing
","b0c8d3ef8e6fcf32a2cd38357c0f4ba9b351afd6","Anton Kazennikov"
"3071","setSiblingIndex","setSiblingIndex","2","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3072","setSiblingIndex","setSiblingIndex","2","Body Change, Introduced, MultiChange","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"3073","firstChild","firstChild","1","Body Change, Introduced, MultiChange","Added {first|last}[Element]Child accessors

Improvement: added Element.firstElementChild(), Element.lastElementChild(), Node.firstChild(), Node.lastChild(), as convenient accessors to those child nodes and elements.
","372ef90d8753690f23b1967aed42a106ce2b8ae2","Jonathan Hedley"
"3074","lastChild","lastChild","2","Body Change, Introduced, MultiChange","Added {first|last}[Element]Child accessors

Improvement: added Element.firstElementChild(), Element.lastElementChild(), Node.firstChild(), Node.lastChild(), as convenient accessors to those child nodes and elements.
","372ef90d8753690f23b1967aed42a106ce2b8ae2","Jonathan Hedley"
"3075","lastChild","lastChild","2","Body Change","Tweaked for fewer child.size() hits
","bb7f93b4c8f7cb47029fe542334b09799d7b8a95","Jonathan Hedley"
"3076","traverse","traverse","2","Body Change, Introduced, MultiChange","Added Node.traverse() and Elements.traverse() methods, to iterate through a node's descendants.
","f45de034880877582fb6414c4d09f40c5999ac70","Jonathan Hedley"
"3077","traverse","traverse","2","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"3078","forEachNode","forEachNode","2","Body Change, Introduced, MultiChange","Added Node.forEachNode and Element.forEach consumer methods

Fixes #1700
","b236d07ee7893c39e45421f79e220fdee0d90e32","Jonathan Hedley"
"3079","forEachNode","forEachNode","2","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"3080","filter","filter","1","Body Change, Introduced, MultiChange","Add Node.filter, Elements.filter convenience API
","fe001bcccd29f9659ff375a625fd575c9285ce86","Erich Schubert"
"3081","nodeStream","nodeStream","1","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"3082","nodeStream","nodeStream","1","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"3083","outerHtml","outerHtml","3","Introduced","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"3084","outerHtml","outerHtml","3","Modifier Change, Body Change, MultiChange","Use string builders for HTML creation.
","7898cdffecce78996012bd06eac0792dd4b6ac6d","Jonathan Hedley"
"3085","outerHtml","outerHtml","3","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"3086","outerHtml","outerHtml","5","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3087","outerHtml","outerHtml","5","Body Change, Introduced, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3088","outerHtml","outerHtml","5","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"3089","outerHtml","outerHtml","5","Body Change","Spring cleaning
","f1b885d238d8576d91d71a09f8658358dd846921","Jonathan Hedley"
"3090","outerHtml","outerHtml","5","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3091","outerHtmlHead","outerHtmlHead","1","Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3092","outerHtmlTail","outerHtmlTail","1","Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3093","html","html","1","Body Change, Introduced, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3094","sourceRange","sourceRange","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3095","sourceRange","sourceRange","2","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3096","isEffectivelyFirst","isEffectivelyFirst","1","Body Change, Introduced, MultiChange","Wrap Comment if it's 'effectively first'

As in, the first node that is not blank space.

Also refactored impl in Element, which I just fixed for the same issue.

Fixes #1906
","a90bae7928f9b038d1c142773b4a5011335bf8e8","Jonathan Hedley"
"3097","toString","toString","4","Body Change","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3098","toString","toString","4","Body Change","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"3099","toString","toString","4","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"3100","toString","toString","4","Modifier Change","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3101","indent","indent","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3102","indent","indent","3","Exceptions Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3103","indent","indent","3","Exceptions Change","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"3104","equals","equals","1","Body Change, Introduced, MultiChange","Added Nullable annotations for equals()

Fixed #1628
","f7ef7c3dc986e420891b5d0d58feba27019c5974","jhy"
"3105","hashCode","hashCode","4","Body Change, Introduced, MultiChange","Implemented select(query, query, query) or group selector.
","1f3cfcfb08a5e7454e61513389b814c7da6072ac","Jonathan Hedley"
"3106","hashCode","hashCode","4","Body Change","Improved hashcode and equals for Node

Fixes #537
","8391b7231a2519557d41209d728acc4f422af381","Jonathan Hedley"
"3107","hashCode","hashCode","4","Body Change, Deleted, MultiChange","Reverted Node.equals() and Node.hashCode()

Back to identity (object) comparisons, as deep content inspection had
negative performance impacts and hashkey stability problems.
Functionality replaced with Node.hasSameContent().

Fixes #688
","cc19d3029ab0db137da0e95cc55c20b131241cf1","Jonathan Hedley"
"3108","hashCode","hashCode","4","Body Change, Introduced, MultiChange","Confirm to CodeQL that we use an identity hashcode.
","4ec4ace6dd3c2285070f190229d91cf6a0a35754","Jonathan Hedley"
"3109","hasSameValue","hasSameValue","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3110","clone","clone","5","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"3111","clone","clone","5","Body Change","Merge branch 'pr/292'
","11185c4fc1a0bcfa15d59b23fe039bf5908a2a77","Jonathan Hedley"
"3112","clone","clone","5","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3113","clone","clone","5","Body Change","Added shallowClone()

Fixes #900
","2d340db5b1ba48079b3bad81a5ffe7c9c7ac26e0","Jonathan Hedley"
"3114","clone","clone","5","Modifier Change, Body Change, MultiChange","Suppress incorrect super.clone warning
","17d56d13afa74c2786bd3fac6224a270c8add4b0","Jonathan Hedley"
"3115","shallowClone","shallowClone","1","Body Change, Introduced, MultiChange","Added shallowClone()

Fixes #900
","2d340db5b1ba48079b3bad81a5ffe7c9c7ac26e0","Jonathan Hedley"
"3116","doClone","doClone","3","File Renamed","Updated TokenStream to deal with < or > within attributes.
","4cbae5ad165b260c43f5c369517dff90a2139377","Jonathan Hedley"
"3117","doClone","doClone","3","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3118","doClone","doClone","3","Body Change","When cloning, shallow clone the OwnerDocument

This keeps the element's output settings preserved

Fixes #763
","2b6041f3ed7a0bbef64d33f53ba1b44043de2d74","Jonathan Hedley"
"3119","LeafNode","LeafNode","2","File Renamed","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"3120","LeafNode","LeafNode","2","Body Change, Introduced, MultiChange","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3121","LeafNode","LeafNode","2","File Renamed","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"3122","LeafNode","LeafNode","2","Body Change, Introduced, MultiChange","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3123","hasAttributes","hasAttributes","1","Modifier Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3124","ensureAttributes","ensureAttributes","1","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3125","attr","attr","1","Body Change","Simplified TextNode.outerHtml a little
","f4d00c290325935186f75f1206d16397cc157ced","jhy"
"3126","baseUri","baseUri","1","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3127","empty","empty","1","Body Change","Much faster perf when bulk inserting a complete node list into anothe r node

Fixes #1281
","5a570cf31e078c9b3865f93a37fbbde68c9799df","Jonathan Hedley"
"3128","outerHtmlTail","outerHtmlTail","1","Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3129","doClone","doClone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3130","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3131","Document","Document","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3132","Document","Document","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3133","Document","Document","7","Body Change, Introduced, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"3134","Document","Document","7","Body Change","Removed StartTag
","3205f0ef9409bb622f66315983830aa89d9313cf","Jonathan Hedley"
"3135","Document","Document","7","Body Change","Merge branch 'pr/306'
","d9ec262369138ca840d4a34473427e401c4cc4a4","Jonathan Hedley"
"3136","Document","Document","7","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3137","Document","Document","7","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3138","Document","Document","7","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3139","Document","Document","7","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"3140","createShell","createShell","5","Body Change, Introduced, MultiChange","Initial Cleaner implementation.
","83b8d1a6c8db2d34fbb344ae3125781978910725","Jonathan Hedley"
"3141","createShell","createShell","5","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3142","createShell","createShell","5","Modifier Change","Update Document.java

cosmetic change in createShell","69073d98de01dbfc5560068b4d2cd705c5933a4b","nirro01"
"3143","createShell","createShell","5","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3144","createShell","createShell","5","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3145","location","location","1","Body Change, Introduced, MultiChange","Merge branch 'pr/306'
","d9ec262369138ca840d4a34473427e401c4cc4a4","Jonathan Hedley"
"3146","connection","connection","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3147","documentType","documentType","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3148","documentType","documentType","2","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3149","htmlEl","htmlEl","3","Body Change, Introduced, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"3150","htmlEl","htmlEl","3","Body Change","Use firstElementChild / Sibling in preference to child(0)

Saves allocating a filtered Element list for these internal calls.
","1762412a28fa7b08ccf71d93fc4c98dc73086e03","Jonathan Hedley"
"3151","htmlEl","htmlEl","3","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"3152","head","head","6","Body Change, Introduced, MultiChange","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"3153","head","head","6","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3154","head","head","6","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3155","head","head","6","Modifier Change, Body Change, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"3156","head","head","6","Body Change","Use firstElementChild / Sibling in preference to child(0)

Saves allocating a filtered Element list for these internal calls.
","1762412a28fa7b08ccf71d93fc4c98dc73086e03","Jonathan Hedley"
"3157","head","head","6","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3158","body","body","6","Body Change, Introduced, MultiChange","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"3159","body","body","6","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3160","body","body","6","Modifier Change, Body Change, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3161","body","body","6","Modifier Change, Body Change, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"3162","body","body","6","Body Change","Document#body should return the framset el for frameset docs
","af763d07c41085fcf518e547857d419ffb455d52","Jonathan Hedley"
"3163","body","body","6","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3164","forms","forms","1","Body Change, Introduced, MultiChange","Added Document#forms()
","4208ae30e0172ae06e6d64a4e52e1eaa15b4446e","Jonathan Hedley"
"3165","expectForm","expectForm","1","Body Change, Exceptions Change, Introduced, MultiChange","Added Document#expectForm
","bc320aa0e93c45fbb27e2d6ac5596f6afd9d371a","Jonathan Hedley"
"3166","title","title","5","Body Change, Introduced, MultiChange","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"3167","title","title","5","Body Change","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"3168","title","title","5","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3169","title","title","5","Body Change","Splelling.
","fa9d20a3fb3060daaaa4f183a4be5cf27caf2583","Jonathan Hedley"
"3170","title","title","5","Body Change","Whitespace normalise document.title() output.

Fixes #168
","05ae97865c84536a6cfe7759ca6c382eb761ecb2","Jonathan Hedley"
"3171","title","title","4","Body Change, Introduced, MultiChange","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"3172","title","title","4","Body Change","Linked Document title methods with HTML structure
","37d4c1f1d3297fd078dd8d1574b7f7c2357a99b4","Jonathan Hedley"
"3173","title","title","4","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3174","title","title","4","Body Change","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"3175","createElement","createElement","2","Body Change, Introduced, MultiChange","Document.createElement(String)
","116866284b8068c817ad53b2b611568a7be25090","Jonathan Hedley"
"3176","createElement","createElement","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3177","outerHtml","outerHtml","1","Body Change, Introduced, MultiChange","Implicit parent creation for elements, more general document structure creation.
","e97f564d2450702d2b74ff35ecc5ad5c1e57fc0d","Jonathan Hedley"
"3178","text","text","3","Body Change, Introduced, MultiChange","Implemented Element.text(string) method, to set the text of an element, and clear out existing html.
","6fe6c34a888486b417a913deaca517305b76cc71","Jonathan Hedley"
"3179","text","text","3","Body Change","Simplified Document bean methods for consistency.
","bd3e7c8ada7748dc5cf2428e68c828c0cf744469","Jonathan Hedley"
"3180","text","text","3","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3181","nodeName","nodeName","1","Body Change, Introduced, MultiChange","Rename Element.addChild to appendChild.

Also implement Element.addElement(String tagName)
","83d1848144abf29b501d59e0c3ec41e40c9cf020","Jonathan Hedley"
"3182","charset","charset","4","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3183","charset","charset","4","Body Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3184","charset","charset","4","Return Type Change, Body Change, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3185","charset","charset","4","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3186","charset","charset","3","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3187","charset","charset","3","Body Change","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3188","charset","charset","3","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3189","updateMetaCharsetElement","updateMetaCharsetElement","1","Body Change, Introduced, MultiChange","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3190","updateMetaCharsetElement","updateMetaCharsetElement","2","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3191","updateMetaCharsetElement","updateMetaCharsetElement","2","Modifier Change, Body Change, MultiChange","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3192","clone","clone","2","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"3193","clone","clone","2","Body Change","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"3194","shallowClone","shallowClone","2","Body Change, Introduced, MultiChange","When cloning, shallow clone the OwnerDocument

This keeps the element's output settings preserved

Fixes #763
","2b6041f3ed7a0bbef64d33f53ba1b44043de2d74","Jonathan Hedley"
"3195","shallowClone","shallowClone","2","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3196","ensureMetaCharsetElement","ensureMetaCharsetElement","5","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"3197","ensureMetaCharsetElement","ensureMetaCharsetElement","5","Body Change, Introduced, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3198","ensureMetaCharsetElement","ensureMetaCharsetElement","5","Body Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"3199","ensureMetaCharsetElement","ensureMetaCharsetElement","5","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"3200","ensureMetaCharsetElement","ensureMetaCharsetElement","5","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3201","ensureXmlDecl","ensureXmlDecl","3","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"3202","ensureXmlDecl","ensureXmlDecl","3","Body Change, Introduced, MultiChange","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3203","ensureXmlDecl","ensureXmlDecl","3","Body Change","Don't try to get child nodes if there aren't any yet

Fixes #2266
","5d31cac5888b872daa54e09238feeaa8e4e435e7","Jonathan Hedley"
"3204","OutputSettings","OutputSettings","8","Introduced","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3205","OutputSettings","OutputSettings","8","Body Change","Minor perf improvements through lower garbage objects.
","5e386d51f396deec5743ca9cc4e3f0e7559d3956","Jonathan Hedley"
"3206","OutputSettings","OutputSettings","8","Body Change","Ensure Android 8 compatibility

Fixes #948
","45111a152d6568c38c268b6460045ad60f7cdeff","Jonathan Hedley"
"3207","OutputSettings","OutputSettings","8","Body Change","Use constants for the standard charsets (#1455)

Also solves thread contention in the constructor of OutputSettings.
Fixes #1454","6ea3c3676bc7f53636dd1db0b5e6937282473798","Jiri Pejchal"
"3208","OutputSettings","OutputSettings","8","Body Change","Remove StandardCharset use

As not in Android 10 which is a runtime target.
","28a4591949d5cb7d6c59a1dcfa5ee83048ad139a","Jonathan Hedley"
"3209","OutputSettings","OutputSettings","8","Body Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3210","OutputSettings","OutputSettings","8","Body Change","Fix NPE in escaping if output settings cloned twice (#1964)

* Fix NPE in escaping if output settings cloned twice

* Refactored coreCharset to be set in charset()

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8e8970650951cef63bae78dd41ba45c98a7d75a5","Talgat"
"3211","OutputSettings","OutputSettings","8","Body Change","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3212","escapeMode","escapeMode","1","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3213","escapeMode","escapeMode","1","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3214","charset","charset","3","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3215","charset","charset","3","Body Change","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3216","charset","charset","3","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3217","charset","charset","4","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3218","charset","charset","4","Body Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3219","charset","charset","4","Return Type Change, Body Change, MultiChange","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3220","charset","charset","4","Body Change","Deprecate Document#updateMetaCharsetElement (#2247)

As the setting had no effect; calls to charset(charset) always enabled it

Users can still call OutputSettings.charset if desired to avoid setting the meta element.
","959994d5c4c8760233023f465830d0e82fc78585","Jonathan Hedley"
"3221","charset","charset","2","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"3222","charset","charset","2","Body Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3223","syntax","syntax","1","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"3224","syntax","syntax","2","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"3225","syntax","syntax","2","Body Change","Set EscapeMode=xhtml when OutputSettings.Syntax = XML

Was already configured when using the Parser.xmlParser(), but this will help users when parsing as HTML and then converting the output to XML.
","c61ce94f35c74f4b2410cb8429511f19a11d5139","Jonathan Hedley"
"3226","prettyPrint","prettyPrint","1","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"3227","prettyPrint","prettyPrint","1","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"3228","outline","outline","1","Body Change, Introduced, MultiChange","Tweaked koz's changes in merge prep.

Adds outline mode to Document.OutputSettings.

Fixes #274
","3982ea1198b8d780b42587e16ace3407bf7621e1","Jonathan Hedley"
"3229","outline","outline","1","Body Change, Introduced, MultiChange","Tweaked koz's changes in merge prep.

Adds outline mode to Document.OutputSettings.

Fixes #274
","3982ea1198b8d780b42587e16ace3407bf7621e1","Jonathan Hedley"
"3230","indentAmount","indentAmount","1","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"3231","indentAmount","indentAmount","2","Body Change, Introduced, MultiChange","Added support for non-pretty-printed HTML output, to more closely mirror the input HTML.

Fixes #8
","e256bb7fc5979de256371bb324f1ca1330e38112","Jonathan Hedley"
"3232","indentAmount","indentAmount","2","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"3233","maxPaddingWidth","maxPaddingWidth","1","Body Change, Introduced, MultiChange","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"3234","maxPaddingWidth","maxPaddingWidth","1","Body Change, Introduced, MultiChange","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"3235","clone","clone","2","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"3236","clone","clone","2","Body Change","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"3237","outputSettings","outputSettings","1","Body Change, Introduced, MultiChange","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3238","outputSettings","outputSettings","1","Body Change, Introduced, MultiChange","In jsoup.clean, allow custom OutputSettings, to control pretty printing, character set, and entity escaping.

Fixes #148
","cf8ae1c58905cca6cddf69d9f736c1f6e7e2933a","Jonathan Hedley"
"3239","quirksMode","quirksMode","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"3240","quirksMode","quirksMode","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3241","quirksMode","quirksMode","2","File Renamed","Implemented Element.getElementById
","f5b1a2ab1294970be9b4fc6abefe38ac7e5039be","Jonathan Hedley"
"3242","quirksMode","quirksMode","2","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3243","parser","parser","1","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3244","parser","parser","1","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3245","connection","connection","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3246","EscapeMode","EscapeMode","1","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3247","codepointForName","codepointForName","2","File Renamed","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3248","codepointForName","codepointForName","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3249","nameForCodepoint","nameForCodepoint","2","File Renamed","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3250","nameForCodepoint","nameForCodepoint","2","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3251","Entities","Entities","1","Introduced","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3252","isNamedEntity","isNamedEntity","1","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3253","isBaseNamedEntity","isBaseNamedEntity","1","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3254","getByName","getByName","1","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3255","codepointsForName","codepointsForName","1","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3256","findPrefix","findPrefix","1","Body Change, Introduced, MultiChange","Entity decoding supports prefix matches

When parsing named HTML entities, base entities should resolve if they are a prefix of the input token (and not in an  attribute). Finds the longest prefix.

Validated matches browser behavior and extended entities *don't* match (like `&clubsuite;`)

Fixes #2207
","5ee376bc5bbe6a4f66eb24e2180552b547b8a4bf","Jonathan Hedley"
"3257","escape","escape","1","Body Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3258","escape","escape","1","Body Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3259","escapeString","escapeString","1","Body Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3260","escape","escape","1","Body Change, Exceptions Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3261","doEscape","doEscape","1","Body Change, Exceptions Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3262","appendEscaped","appendEscaped","2","Body Change, Exceptions Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3263","appendEscaped","appendEscaped","2","Body Change, Exceptions Change, MultiChange","Invalid XML characters should be dropped, not encoded

Fixes #1743
","001752f1a0b73ae17668dc9fd4c5942424a6c1e2","Jonathan Hedley"
"3264","appendNbsp","appendNbsp","1","Body Change, Exceptions Change, Introduced, MultiChange","Simplified the Entities.escape method (#2183)

Simplified the Entities.escape method

Introduced an options bitset instead of all those boolean method options. Reduced cyclomatic complexity of from 29 to 14.

Improved throughput of escape around 22% if the content contains characters in supplemental plane, by no longer going through the charset encoder to test can encode, but pushing it into the CoreCharset. That removes a ByteBuffer allocation on each hit.
","60281c5519b423f095bcec9bb6c79f8b35e49b0e","Jonathan Hedley"
"3265","appendLt","appendLt","1","Body Change, Exceptions Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3266","appendApos","appendApos","1","Body Change, Exceptions Change, Introduced, MultiChange","Simplified the Entities.escape method (#2183)

Simplified the Entities.escape method

Introduced an options bitset instead of all those boolean method options. Reduced cyclomatic complexity of from 29 to 14.

Improved throughput of escape around 22% if the content contains characters in supplemental plane, by no longer going through the charset encoder to test can encode, but pushing it into the CoreCharset. That removes a ByteBuffer allocation on each hit.
","60281c5519b423f095bcec9bb6c79f8b35e49b0e","Jonathan Hedley"
"3267","appendEncoded","appendEncoded","2","Body Change, Exceptions Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3268","appendEncoded","appendEncoded","2","Body Change, Exceptions Change, MultiChange","Removed old deprecated classes and methods
","a7b0c2df028f49fa246c7b6a51b6b83011655865","Jonathan Hedley"
"3269","unescape","unescape","6","Body Change","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3270","unescape","unescape","6","Body Change","Fixed issue in Entities when unescaping &#36; (""$"")

Fixes #34
","20ed24cefb5df53c48021459af98bef83c55f241","Jonathan Hedley"
"3271","unescape","unescape","6","Body Change","Fixed support for HTML entities with numbers in name (e.g. &frac34, &sup1)

Fixes #46
","2e4969497c5734d90d394103728bb517644f9157","Jonathan Hedley"
"3272","unescape","unescape","6","Body Change","Force strict entity matching (must be &xxx; and not &xxx) in element attributes.

Fixes #71
","f317c04acf821d61601f5d986252db40505153bc","Jonathan Hedley"
"3273","unescape","unescape","6","Modifier Change, Body Change, MultiChange","Moved some tests to ConnectTest

So that they run locally, and actually do run (vs @ ignored).

Need to implement the rest too.
","bd789b079038c1b3f41d05f869c244b54840dbca","Jonathan Hedley"
"3274","unescape","unescape","6","Body Change","Moved entity data from resource to .class

Fixes #959 and other issues impacting Android (like crashing on first run after install)
","f3035cafbbd8830de75f641920f8e5dbf0070f7c","Jonathan Hedley"
"3275","unescape","unescape","3","Body Change, Introduced, MultiChange","Force strict entity matching (must be &xxx; and not &xxx) in element attributes.

Fixes #71
","f317c04acf821d61601f5d986252db40505153bc","Jonathan Hedley"
"3276","unescape","unescape","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3277","unescape","unescape","3","Body Change","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"3278","canEncode","canEncode","2","Body Change, Introduced, MultiChange","Speed fix for Android canEncode

Fixes #383
","b14e7357248a0f683b8252be3e68f5e171fb8529","Jonathan Hedley"
"3279","canEncode","canEncode","2","Body Change","Simplified the Entities.escape method (#2183)

Simplified the Entities.escape method

Introduced an options bitset instead of all those boolean method options. Reduced cyclomatic complexity of from 29 to 14.

Improved throughput of escape around 22% if the content contains characters in supplemental plane, by no longer going through the charset encoder to test can encode, but pushing it into the CoreCharset. That removes a ByteBuffer allocation on each hit.
","60281c5519b423f095bcec9bb6c79f8b35e49b0e","Jonathan Hedley"
"3280","isValidXmlChar","isValidXmlChar","2","File Renamed","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3281","isValidXmlChar","isValidXmlChar","2","Body Change, Introduced, MultiChange","Invalid XML characters should be dropped, not encoded

Fixes #1743
","001752f1a0b73ae17668dc9fd4c5942424a6c1e2","Jonathan Hedley"
"3282","byName","byName","2","File Renamed","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3283","byName","byName","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3284","encoderFor","encoderFor","2","File Renamed","Simplified Entity unescaper
","935cab0e00f289ce5369f4c217b5eb3a3d9e33e7","Jonathan Hedley"
"3285","encoderFor","encoderFor","2","Body Change, Introduced, MultiChange","Simplified Entities.escape to not require an OutputSettings

This is a cleaner decoupling of OutputSettings and Entities than the previous impl which required a lazy initialisation of OutputSettings.

Also simplified how we get a fallback encoder.

Related to #1910, #2042
","b731fd772bb4c313e6582e1bd3e6298cd8ccec19","Jonathan Hedley"
"3286","load","load","2","Body Change, Introduced, MultiChange","Moved entity data from resource to .class

Fixes #959 and other issues impacting Android (like crashing on first run after install)
","f3035cafbbd8830de75f641920f8e5dbf0070f7c","Jonathan Hedley"
"3287","load","load","2","Body Change","Make sure Entity reader is closed immediately

Doesn't really mean much as this is just a string - but maybe a useful GC hint.
","2dc914f4e40b5a6d6018572231d26c30c40b0d4f","Jonathan Hedley"
"3288","DataNode","DataNode","2","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3289","DataNode","DataNode","2","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3290","nodeName","nodeName","1","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3291","getWholeData","getWholeData","1","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3292","setWholeData","setWholeData","2","Body Change, Introduced, MultiChange","Implemented DataNode.setWholeData() to allow updating of script and style data contents.
","9e2d3711ff5f23e39b0f956d03c3a2b547239fc1","Jonathan Hedley"
"3293","setWholeData","setWholeData","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3294","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3295","clone","clone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3296","Comment","Comment","4","Body Change, Introduced, MultiChange","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"3297","Comment","Comment","4","Body Change, Deleted, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"3298","Comment","Comment","4","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3299","Comment","Comment","4","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3300","nodeName","nodeName","2","Body Change","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3301","nodeName","nodeName","2","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3302","getData","getData","1","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3303","setData","setData","2","File Renamed","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3304","setData","setData","2","Body Change, Introduced, MultiChange","Added some tests
","50df99d6acacb32da25beb39ab4683edf5a48908","Jonathan Hedley"
"3305","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3306","clone","clone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3307","isXmlDeclaration","isXmlDeclaration","2","Body Change, Introduced, MultiChange","Detect charset from pseudo XML declaration when in HTML parser mode

Fixes #1009
","e38dfd44829e13ee83fd62bfe937580f5a998c11","Jonathan Hedley"
"3308","isXmlDeclaration","isXmlDeclaration","2","Body Change","Don't recurse chasing XML declarations

Fixes #1539
","f84549e9fb5618cf58e37dc2f00adb8a279da371","Jonathan Hedley"
"3309","isXmlDeclarationData","isXmlDeclarationData","3","File Renamed","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3310","isXmlDeclarationData","isXmlDeclarationData","3","Body Change, Introduced, MultiChange","Don't recurse chasing XML declarations

Fixes #1539
","f84549e9fb5618cf58e37dc2f00adb8a279da371","Jonathan Hedley"
"3311","isXmlDeclarationData","isXmlDeclarationData","3","Body Change","More robust prevention of XML Declaration recursion
","f49f92c4c29cc2a8440c4ffccc2fb248cdd30694","Jonathan Hedley"
"3312","asXmlDeclaration","asXmlDeclaration","6","Body Change, Introduced, MultiChange","Detect charset from pseudo XML declaration when in HTML parser mode

Fixes #1009
","e38dfd44829e13ee83fd62bfe937580f5a998c11","Jonathan Hedley"
"3313","asXmlDeclaration","asXmlDeclaration","6","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"3314","asXmlDeclaration","asXmlDeclaration","6","Modifier Change","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3315","asXmlDeclaration","asXmlDeclaration","6","Body Change","Don't recurse chasing XML declarations

Fixes #1539
","f84549e9fb5618cf58e37dc2f00adb8a279da371","Jonathan Hedley"
"3316","asXmlDeclaration","asXmlDeclaration","6","Body Change","More robust prevention of XML Declaration recursion
","f49f92c4c29cc2a8440c4ffccc2fb248cdd30694","Jonathan Hedley"
"3317","asXmlDeclaration","asXmlDeclaration","6","Body Change","Simplify Comment -> XmlDeclaration
","c9695d66b43c7b5087e2de9d55f03c3cdb006d34","Jonathan Hedley"
"3318","parser","parser","1","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3319","selectXpath","selectXpath","3","Body Change","Added support for XPath selection for specific node types
","2bf377f72faa3b85e1a6ef66a21fca9c04001abf","Jonathan Hedley"
"3320","selectXpath","selectXpath","3","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"3321","selectXpath","selectXpath","3","Body Change","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"3322","stream","stream","1","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"3323","spliterator","spliterator","1","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"3324","XmlDeclaration","XmlDeclaration","1","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"3325","nodeName","nodeName","1","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3326","name","name","2","Body Change, Introduced, MultiChange","Detect charset from xml prolog

Fixes #701
","4eb4f2b2e88a2f9e6c5c1e8d0477060954f24218","Jonathan Hedley"
"3327","name","name","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3328","getWholeDeclaration","getWholeDeclaration","5","Body Change","Merge branch 'pr/486'
","684ae68a631f6bd9b6d962e42e46bf0812d8fa4e","Jonathan Hedley"
"3329","getWholeDeclaration","getWholeDeclaration","5","Body Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"3330","getWholeDeclaration","getWholeDeclaration","5","Body Change","Detect charset from xml prolog

Fixes #701
","4eb4f2b2e88a2f9e6c5c1e8d0477060954f24218","Jonathan Hedley"
"3331","getWholeDeclaration","getWholeDeclaration","5","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3332","getWholeDeclaration","getWholeDeclaration","5","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"3333","getWholeDeclaration","getWholeDeclaration","5","Body Change, Exceptions Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3334","getWholeDeclaration","getWholeDeclaration","5","Body Change, Exceptions Change, MultiChange","Skip empty attribute values when serializing XML processing instructions

Fixes #770
","fce241b57f1e0292b143a11d31b8abf9ad949398","Jonathan Hedley"
"3335","getWholeDeclaration","getWholeDeclaration","5","Exceptions Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"3336","getWholeDeclaration","getWholeDeclaration","5","Exceptions Change","Make Entities.escape(string) suitable for both text and attributes

Fixes #1278
","9ba6dc7a955ed23884e8e25f8d503c4fe144c27a","Jonathan Hedley"
"3337","getWholeDeclaration","getWholeDeclaration","5","Exceptions Change","Simplified the Entities.escape method (#2183)

Simplified the Entities.escape method

Introduced an options bitset instead of all those boolean method options. Reduced cyclomatic complexity of from 29 to 14.

Improved throughput of escape around 22% if the content contains characters in supplemental plane, by no longer going through the charset encoder to test can encode, but pushing it into the CoreCharset. That removes a ByteBuffer allocation on each hit.
","60281c5519b423f095bcec9bb6c79f8b35e49b0e","Jonathan Hedley"
"3338","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3339","outerHtmlTail","outerHtmlTail","1","Introduced","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3340","toString","toString","2","Body Change","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"3341","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"3342","clone","clone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3343","FormElement","FormElement","1","Body Change, Introduced, MultiChange","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3344","elements","elements","2","Body Change","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"3345","elements","elements","2","Body Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3346","addElement","addElement","1","Body Change","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"3347","removeChild","removeChild","2","Body Change, Introduced, MultiChange","Merge pull request #969 from lukasschlueter/master

Fix #429","9cb4bf068e6e76836b5fa740d7bcc2bb058a14e5","Jonathan Hedley"
"3348","removeChild","removeChild","2","Body Change","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"3349","submit","submit","4","Exceptions Change","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"3350","submit","submit","4","Exceptions Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"3351","submit","submit","4","Exceptions Change","Minor code tweaks
","ee05221daeba68e00fb452341b13dd6520334630","Jonathan Hedley"
"3352","submit","submit","4","Body Change, Exceptions Change, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3353","formData","formData","8","Body Change","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"3354","formData","formData","8","Body Change","Only submit radio and checkboxes if checked attribute set
","6941818600646156b47d59b2561ec423c832d647","Jonathan Hedley"
"3355","formData","formData","8","Body Change","Form data submission fix

Don’t submit disabled elements
Set checkbox and radio to default val ‘on’ if unset

Fixes #489
","c01fcd338d73dc039e6a3a6cd2c449d9c9d41304","Jonathan Hedley"
"3356","formData","formData","8","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"3357","formData","formData","8","Body Change","Don't submit button values

Fixes #1231
","a9439f0c503ac8e0f009a0ec39f8bff1a6271d51","Jonathan Hedley"
"3358","formData","formData","8","Body Change","formData retrieves ""input type=image"" incorrectly (#2010)

Remove input type=image in formData()","144835d98e8fd6c5f825d90fc39e30a575c5b48b","Erickson Lima"
"3359","formData","formData","8","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"3360","formData","formData","8","Body Change","Dynamically create elements() to reflect the current DOM

Fixes #2140
","56a09caa0eb6ac5997f8bf50ec4e5323b7fabc61","Jonathan Hedley"
"3361","clone","clone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3362","startPos","startPos","1","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3363","endPos","endPos","1","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3364","isImplicit","isImplicit","1","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3365","of","of","1","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"3366","hashCode","hashCode","1","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3367","hashCode","hashCode","1","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3368","AttributeRange","AttributeRange","1","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3369","nameRange","nameRange","1","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3370","valueRange","valueRange","1","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3371","hashCode","hashCode","1","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3372","DocumentType","DocumentType","5","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3373","DocumentType","DocumentType","5","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3374","DocumentType","DocumentType","5","Body Change","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3375","DocumentType","DocumentType","5","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3376","DocumentType","DocumentType","5","Body Change","Don't create a new Parser in Node#attr

If a Node did not (yet) have a parent document, calling attr() would create a parser, to get the default HTML settings to normalize the attribute name. Simplify that to just use defaults directly.

Also, simplified DocumentType to use attributes.add, which does not go through normalization or dedupe.
","c6208d2c8d3f3cb45215053f2656683844155e8a","Jonathan Hedley"
"3377","setPubSysKey","setPubSysKey","2","File Renamed","Fixed an issue with a missing quote when serialising DocumentType nodes.

Fixes #109
","f36b950de16f6db134bd98969cd8fbe578d37480","Jonathan Hedley"
"3378","setPubSysKey","setPubSysKey","2","Body Change, Introduced, MultiChange","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3379","updatePubSyskey","updatePubSyskey","4","File Renamed","Fixed an issue with a missing quote when serialising DocumentType nodes.

Fixes #109
","f36b950de16f6db134bd98969cd8fbe578d37480","Jonathan Hedley"
"3380","updatePubSyskey","updatePubSyskey","4","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3381","updatePubSyskey","updatePubSyskey","4","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3382","updatePubSyskey","updatePubSyskey","4","Body Change","Don't create a new Parser in Node#attr

If a Node did not (yet) have a parent document, calling attr() would create a parser, to get the default HTML settings to normalize the attribute name. Simplify that to just use defaults directly.

Also, simplified DocumentType to use attributes.add, which does not go through normalization or dedupe.
","c6208d2c8d3f3cb45215053f2656683844155e8a","Jonathan Hedley"
"3383","name","name","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3384","name","name","2","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3385","publicId","publicId","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3386","publicId","publicId","2","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3387","systemId","systemId","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"3388","systemId","systemId","2","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3389","nodeName","nodeName","2","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3390","nodeName","nodeName","2","Body Change","Revert to using ""name"" for internal doctype name attribute

Fixes #2241
","ed23a9a458bb0674a83f6c63e2bd5b7492fead09","Jonathan Hedley"
"3391","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3392","has","has","2","File Renamed","Fixed an issue with a missing quote when serialising DocumentType nodes.

Fixes #109
","f36b950de16f6db134bd98969cd8fbe578d37480","Jonathan Hedley"
"3393","has","has","2","Body Change, Introduced, MultiChange","For HTML5 output, use a lowercase doctype
","a35fd085e3bbacbc7c2c9003e2d7b301ec271f4d","Jonathan Hedley"
"3394","Attribute","Attribute","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3395","Attribute","Attribute","1","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3396","getKey","getKey","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"3397","setKey","setKey","4","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3398","setKey","setKey","4","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3399","setKey","setKey","4","Body Change","Merge pull request #931 from kno10/patch-2

Make consistency checks consistent","982ce8a3cea6158e22f351527d12853f0bd7050f","Jonathan Hedley"
"3400","setKey","setKey","4","Body Change","Attribute accessor, and maintain source range after key change

Fixes #2069
Fixes #2070
","b4751ad1c3e49acf06824ba2e3d9e046be159f0d","Jonathan Hedley"
"3401","getValue","getValue","2","Body Change","Return null attribute values as empty string

Previous / defined behaviour.

Fixes #1065
","8b837a43cbe2c12624ab2088dc4ff9a725af5f4d","Jonathan Hedley"
"3402","getValue","getValue","2","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"3403","hasDeclaredValue","hasDeclaredValue","1","Body Change, Introduced, MultiChange","Updated to Attributes#hasDeclaredValueForKey
","528ba552b19ab2ae949feecb373ef85a0b126566","jhy"
"3404","setValue","setValue","2","Body Change, Introduced, MultiChange","Clarify doc that it's OK to set attribute value to null

Also added testcase, and return the value from the parent only if it was there.

Closes #1025
","7ec238bd7c42e9381ac744e97c5fa9a49d54de1b","Jonathan Hedley"
"3405","setValue","setValue","2","Modifier Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3406","prefix","prefix","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3407","localName","localName","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3408","namespace","namespace","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3409","html","html","8","Body Change","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3410","html","html","8","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3411","html","html","8","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"3412","html","html","8","Body Change","Tidy
","ad203677d7d98af76d29ac8938dcdc7751ef14cc","Jonathan Hedley"
"3413","html","html","8","Body Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3414","html","html","8","Body Change","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"3415","html","html","8","Body Change","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3416","html","html","8","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"3417","sourceRange","sourceRange","1","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3418","html","html","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'schmid-michael-master'

Fixes #470
","ce7ceeec5bd729f7f300fce126bb856f7630593b","Jonathan Hedley"
"3419","html","html","2","Body Change, Exceptions Change, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3420","html","html","2","Body Change, Exceptions Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3421","html","html","2","Body Change, Exceptions Change, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"3422","htmlNoValidate","htmlNoValidate","4","Body Change, Exceptions Change, Introduced, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"3423","htmlNoValidate","htmlNoValidate","4","Exceptions Change","Trim leading and trailing spaces in blocks when appropriate

Improved whitespace and indenting behaviour when pretty printing HTML. This corrects the indenting level of textnodes (that were indented in the original source), and improves the round-trip parse/output of pretty-printed HTML.

Trims leading and trailing whitespace for block elements when that whitespace is not part of the text flow.

As an implementation note: the pretty-printing code is getting too dispersed in the various node methods. Particularly, some aspects are not symmetric (e.g. elements and textnode indent, or head and tail). It would be a useful refactoring to make a pretty-print class and contain all this logic, and make the traversor use that and include a little more state (if last indented, if this is meaningful whitespace, etc).

Fixes #1798
","fc41ec98eaf2a9f803602c4d2dea6703edbdf4c7","Jonathan Hedley"
"3424","htmlNoValidate","htmlNoValidate","4","Exceptions Change","Make Entities.escape(string) suitable for both text and attributes

Fixes #1278
","9ba6dc7a955ed23884e8e25f8d503c4fe144c27a","Jonathan Hedley"
"3425","htmlNoValidate","htmlNoValidate","4","Exceptions Change","Simplified the Entities.escape method (#2183)

Simplified the Entities.escape method

Introduced an options bitset instead of all those boolean method options. Reduced cyclomatic complexity of from 29 to 14.

Improved throughput of escape around 22% if the content contains characters in supplemental plane, by no longer going through the charset encoder to test can encode, but pushing it into the CoreCharset. That removes a ByteBuffer allocation on each hit.
","60281c5519b423f095bcec9bb6c79f8b35e49b0e","Jonathan Hedley"
"3426","getValidKey","getValidKey","3","Body Change, Introduced, MultiChange","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"3427","getValidKey","getValidKey","3","Body Change","Replace attribute invalid characters with `_`, vs stripping

Fixes #2143
","6cbe7e494fe88f1d8c082353e2c54f6eb8fdc381","Jonathan Hedley"
"3428","getValidKey","getValidKey","3","Body Change","Speed and GC optimizations in `html()`

Attribute: removed regex matchers to check for key validity, using a simple scan now.

Entities: use a charBuf to append supplemental characters

Improves on #2183
","27e7d5f03d85bea15fbfe5432c37c6de94965a82","Jonathan Hedley"
"3429","isValidXmlKey","isValidXmlKey","3","File Renamed","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3430","isValidXmlKey","isValidXmlKey","3","Body Change, Introduced, MultiChange","Speed and GC optimizations in `html()`

Attribute: removed regex matchers to check for key validity, using a simple scan now.

Entities: use a charBuf to append supplemental characters

Improves on #2183
","27e7d5f03d85bea15fbfe5432c37c6de94965a82","Jonathan Hedley"
"3431","isValidXmlKey","isValidXmlKey","3","Body Change","Fix XML attribute validation

When converting from the `[a-zA-Z_:][-a-zA-Z0-9_:.]*` regex, missed `-`, `.`, and digits.

Also clarified HTML attribute scan.

Fixes #2235
","0a4b830ccb9df906c11d154c774e14fb2eb5deff","Jonathan Hedley"
"3432","isValidHtmlKey","isValidHtmlKey","3","File Renamed","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3433","isValidHtmlKey","isValidHtmlKey","3","Body Change, Introduced, MultiChange","Speed and GC optimizations in `html()`

Attribute: removed regex matchers to check for key validity, using a simple scan now.

Entities: use a charBuf to append supplemental characters

Improves on #2183
","27e7d5f03d85bea15fbfe5432c37c6de94965a82","Jonathan Hedley"
"3434","isValidHtmlKey","isValidHtmlKey","3","Body Change","Fix XML attribute validation

When converting from the `[a-zA-Z_:][-a-zA-Z0-9_:.]*` regex, missed `-`, `.`, and digits.

Also clarified HTML attribute scan.

Fixes #2235
","0a4b830ccb9df906c11d154c774e14fb2eb5deff","Jonathan Hedley"
"3435","toString","toString","3","Body Change","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3436","toString","toString","3","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3437","toString","toString","3","Modifier Change, Body Change, MultiChange","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"3438","createFromEncoded","createFromEncoded","3","Body Change","Use jsoup escaper for attributes, not Apache's.
","050c5b2c4e3b6b6993b71313a82ac50c64d94555","Jonathan Hedley"
"3439","createFromEncoded","createFromEncoded","3","Body Change","Force strict entity matching (must be &xxx; and not &xxx) in element attributes.

Fixes #71
","f317c04acf821d61601f5d986252db40505153bc","Jonathan Hedley"
"3440","createFromEncoded","createFromEncoded","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3441","isDataAttribute","isDataAttribute","3","File Renamed","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3442","isDataAttribute","isDataAttribute","3","Body Change, Introduced, MultiChange","Implemented Element.dataset(), to retrieve a map of custom data attributes.
","847e03ecfe09ae074844e5821ee185cd8c581f42","Jonathan Hedley"
"3443","isDataAttribute","isDataAttribute","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3444","isDataAttribute","isDataAttribute","2","File Renamed","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3445","isDataAttribute","isDataAttribute","2","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3446","shouldCollapseAttribute","shouldCollapseAttribute","2","Body Change, Introduced, MultiChange","Support for HTML output syntax, enabled by default

Introduced the ability to chose between HTML and XML output, and made
HTML the default. This means img tags are
output as <img>, not <img />. XML is the default when using the
XmlTreeBuilder. Control this with the
Document.OutputSettings.syntax() method.

Tightened the scope of what characters are escaped in attributes and
textnodes, to align with the spec. Also, when
using the extended escape entities map, only escape a character if the
current output charset does not support it.
This produces smaller, more legible HTML, with greated control over the
output (by setting charset and escape mode).

Fixes #322
Fixes #373
Fixes #346
Fixes #150
","6c4f16f233cdfd7aedef33374609e9aa4ede255c","Jonathan Hedley"
"3447","shouldCollapseAttribute","shouldCollapseAttribute","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3448","shouldCollapseAttribute","shouldCollapseAttribute","3","Body Change, Introduced, MultiChange","Added nullability annotations to nodes package

And fixed some NPEs
","77fcaf4dcdc8fd185e2f5d8eb6aa9c425a38bc9b","Jonathan Hedley"
"3449","shouldCollapseAttribute","shouldCollapseAttribute","3","Body Change","Make sure attribute names are syntactically correct when serializing

For both HTML and XML variants.
Shared impl for jsoup html() and W3CDom conversion.
Also removed Attributes.html() inline method as we're already making an Attribute method call now.

Fixes #1474
","6a43590f7f59685fdc9838ff32ec5e0f376f9f85","Jonathan Hedley"
"3450","shouldCollapseAttribute","shouldCollapseAttribute","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3451","isBooleanAttribute","isBooleanAttribute","3","Body Change, Introduced, MultiChange","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3452","isBooleanAttribute","isBooleanAttribute","3","Modifier Change","Make BooleanAttribute check public
","c42257ffc4a97010e911a8f7886d49b8b23d969a","Jonathan Hedley"
"3453","isBooleanAttribute","isBooleanAttribute","3","Body Change","Normalize attribute names when testing if a boolean attribute

Fixes #1656
","7eb5a745bd44b26777d99e429bd5036597aa6273","Jonathan Hedley"
"3454","equals","equals","2","Body Change, Introduced, MultiChange","Added Nullable annotations for equals()

Fixed #1628
","f7ef7c3dc986e420891b5d0d58feba27019c5974","jhy"
"3455","equals","equals","2","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3456","hashCode","hashCode","3","Body Change, Introduced, MultiChange","Implemented select(query, query, query) or group selector.
","1f3cfcfb08a5e7454e61513389b814c7da6072ac","Jonathan Hedley"
"3457","hashCode","hashCode","3","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3458","hashCode","hashCode","3","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3459","clone","clone","2","Body Change, Introduced, MultiChange","Implemented Node.clone() to create deep, independent copies of Nodes, Elements, and Documents.

Fixes #47
","5ca6b4041d0605025f1a1582a605d2aee377bc1c","Jonathan Hedley"
"3460","clone","clone","2","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3461","TextNode","TextNode","4","Body Change, Introduced, MultiChange","Set parent on add Child
","047443682327a75059c936fec9a323a0d27659a5","Jonathan Hedley"
"3462","TextNode","TextNode","4","Body Change, Deleted, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"3463","TextNode","TextNode","4","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3464","TextNode","TextNode","4","Body Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3465","nodeName","nodeName","2","Body Change","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3466","nodeName","nodeName","2","Modifier Change","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3467","text","text","3","Body Change, Introduced, MultiChange","Added TextNode#text and TextNode#text(String)

Closes #18
","f607d8fcf01d7053b61b63aabfb8c4d7a0f7e02f","Jonathan Hedley"
"3468","text","text","3","Body Change","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"3469","text","text","3","Body Change","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"3470","text","text","3","Body Change, Introduced, MultiChange","Added TextNode#text and TextNode#text(String)

Closes #18
","f607d8fcf01d7053b61b63aabfb8c4d7a0f7e02f","Jonathan Hedley"
"3471","text","text","3","Body Change","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"3472","text","text","3","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3473","getWholeText","getWholeText","2","Body Change","Optimised textnodes to not hold attributes or childnodes unless required on use.
","f548940dd8be5f8c93ef17a8896b2807aa2a08bc","Jonathan Hedley"
"3474","getWholeText","getWholeText","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3475","isBlank","isBlank","3","Body Change, Introduced, MultiChange","Improved document normalisation.
","d24b485e252d9e86858207da7a57678d41d3f72c","Jonathan Hedley"
"3476","isBlank","isBlank","3","Body Change","Removed dependency on Apache Commons-lang. Jsoup now has no external dependencies.
","18e9a8f2ba83bd50dff8766bb0dab902a317f2f5","Jonathan Hedley"
"3477","isBlank","isBlank","3","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3478","splitText","splitText","2","Body Change, Introduced, MultiChange","Implemented TextNode.splitText
","c114eb0589d947dfe6f047c546380c3cfe413453","Jonathan Hedley"
"3479","splitText","splitText","2","Body Change","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3480","outerHtmlHead","outerHtmlHead","1","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3481","toString","toString","3","Body Change, Introduced, MultiChange","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3482","toString","toString","3","Body Change","All nodes have outerHtml method, elements have (inner) HTML.
","0e4c8bf728d368fed47e458f5f91517c677f1d60","Jonathan Hedley"
"3483","toString","toString","3","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"3484","clone","clone","1","Body Change, Introduced, MultiChange","Deepclone attributes in LeafNodes if set

Fixes #1176
","fb50d9635874185fc050735057b8a7363cd53f3f","Jonathan Hedley"
"3485","createFromEncoded","createFromEncoded","4","Body Change, Introduced, MultiChange","Handle HTML encoded (escaped) data in text nodes and attributes.
","eaf6bf4ad42f86fb6c2608e4a8bb5d5fdf1e46ce","Jonathan Hedley"
"3486","createFromEncoded","createFromEncoded","4","Body Change, Deleted, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"3487","createFromEncoded","createFromEncoded","4","Body Change, Introduced, MultiChange","Project :: Slimfast

Refactored node hierarchy so that leaf nodes (text, comments, scripts,
etc) use 24 bytes vs 40 bytes each.
","f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d","Jonathan Hedley"
"3488","createFromEncoded","createFromEncoded","4","Body Change","Added test coverage for TextNode, LeafNode
","ace38eb5056fe5992744ef5c98f220fe4b1c4fb0","Jonathan Hedley"
"3489","normaliseWhitespace","normaliseWhitespace","4","File Renamed","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3490","normaliseWhitespace","normaliseWhitespace","4","Body Change, Introduced, MultiChange","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"3491","normaliseWhitespace","normaliseWhitespace","4","Body Change","TextNode performance tweaks
","f0f3eab9c34cc32c6ad06a991fe572d243ca9e85","Jonathan Hedley"
"3492","normaliseWhitespace","normaliseWhitespace","4","Body Change","Optimised normaliseWhitespace
","e8e29ca111772980970275662e0027fa695d9f27","Jonathan Hedley"
"3493","stripLeadingWhitespace","stripLeadingWhitespace","2","File Renamed","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3494","stripLeadingWhitespace","stripLeadingWhitespace","2","Body Change, Introduced, MultiChange","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"3495","lastCharIsWhitespace","lastCharIsWhitespace","3","File Renamed","Element child(int) method, attr(key) method
","b04c5412eb75a7a35925896db7121c3a2c67e1c4","Jonathan Hedley"
"3496","lastCharIsWhitespace","lastCharIsWhitespace","3","Body Change, Introduced, MultiChange","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"3497","lastCharIsWhitespace","lastCharIsWhitespace","3","Body Change","Removed dependency on Apache Commons-lang. Jsoup now has no external dependencies.
","18e9a8f2ba83bd50dff8766bb0dab902a317f2f5","Jonathan Hedley"
"3498","outerHtmlHead","outerHtmlHead","1","-","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3499","outerHtmlTail","outerHtmlTail","1","-","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3500","ControllableInputStream","ControllableInputStream","1","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3501","wrap","wrap","1","Body Change, Introduced, MultiChange","A null inputstream should return an empty doc

Fixes #2252
","e99c87d3f52c848db5e891dc57c3ad6b54d55bd2","Jonathan Hedley"
"3502","wrap","wrap","1","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3503","read","read","2","Body Change, Exceptions Change, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3504","read","read","2","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3505","readToByteBuffer","readToByteBuffer","2","Exceptions Change","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3506","readToByteBuffer","readToByteBuffer","2","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3507","reset","reset","1","Body Change","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3508","baseReadFully","baseReadFully","1","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3509","max","max","1","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3510","max","max","2","File Renamed","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3511","max","max","2","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3512","allowClose","allowClose","2","File Renamed","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3513","allowClose","allowClose","2","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3514","close","close","2","File Renamed","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3515","close","close","2","Body Change, Exceptions Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3516","emitProgress","emitProgress","1","Body Change","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3517","onProgress","onProgress","1","Body Change","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"3518","inputStream","inputStream","1","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3519","join","join","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3520","join","join","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3521","join","join","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3522","StringJoiner","StringJoiner","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3523","add","add","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3524","append","append","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3525","complete","complete","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3526","padding","padding","3","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3527","padding","padding","3","Body Change","Performance improvement for clone

The setBaseUri call was redundant now that the base URI is lazy loaded by an element, by walking up the parent stack to find it. But because of that walk, the performance of setBaseUri during clone was ~ O(n^2) or worse.

Also, updated StringUtil to limit padding to 30 wide, otherwise the outerHtml string format made in hasSameValue was blowing the heap for very deep nodes.
","afd73606a90909444e1c443b555dae7b71e6a5a0","Jonathan Hedley"
"3528","padding","padding","3","Body Change","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"3529","padding","padding","1","Body Change, Introduced, MultiChange","Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","3bd4d793ad7af94b3596fdf35be86758ff94696b","Jeremy Landis"
"3530","isBlank","isBlank","1","Body Change, Introduced, MultiChange","Simplified TextNode.outerHtml a little
","f4d00c290325935186f75f1206d16397cc157ced","jhy"
"3531","startsWithNewline","startsWithNewline","1","Body Change, Introduced, MultiChange","Simplified TextNode.outerHtml a little
","f4d00c290325935186f75f1206d16397cc157ced","jhy"
"3532","isNumeric","isNumeric","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3533","isWhitespace","isWhitespace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3534","isActuallyWhitespace","isActuallyWhitespace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3535","isInvisibleChar","isInvisibleChar","2","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3536","isInvisibleChar","isInvisibleChar","2","Body Change","Don't normalize away zwj or zwnj

Fixes #1269, combined emojis broken
","91ca25b341bc5ad1c364b8e7389287c45ca9df2c","Jonathan Hedley"
"3537","normaliseWhitespace","normaliseWhitespace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3538","appendNormalisedWhitespace","appendNormalisedWhitespace","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3539","in","in","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3540","inSorted","inSorted","1","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3541","isAscii","isAscii","1","Body Change, Introduced, MultiChange","Added support for Internationalized Domain Names (IDNs)

Fixes #1300
","21b01b258952fd6aeb55d061f98321e5b9fe93e0","Jonathan Hedley"
"3542","resolve","resolve","3","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3543","resolve","resolve","3","Body Change, Exceptions Change, MultiChange","resolve abnormal urls in compliance with rfc3986 (#1482)

","8db724e82cc73f921adc2fad900e10655438e662","Yohei Kishimoto"
"3544","resolve","resolve","3","Body Change, Exceptions Change, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"3545","resolve","resolve","1","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"3546","stripControlChars","stripControlChars","1","Body Change, Introduced, MultiChange","Strip control characters from URLs when resolving absolute URLs
","4ea768d96b3d232e63edef9594766d44597b3882","Jonathan Hedley"
"3547","borrowBuilder","borrowBuilder","4","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3548","borrowBuilder","borrowBuilder","4","Body Change","Fix some jdoc warnings
","1c51c84e68f0d76ee239a4a1ab52a487a4e2e764","Jonathan Hedley"
"3549","borrowBuilder","borrowBuilder","4","Body Change","Improve StringBuilder cache performance under high concurrency (#1402)

","6e24d79eb0726ef97aa7e579195a650569894fe0","Yohei Kishimoto"
"3550","borrowBuilder","borrowBuilder","4","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3551","releaseBuilder","releaseBuilder","4","Body Change, Introduced, MultiChange","Merge branch 'master' of https://github.com/jhy/jsoup
","ae7d21635654f1e93e4b732983d633af46f53b73","Jonathan Hedley"
"3552","releaseBuilder","releaseBuilder","4","Body Change","Improve StringBuilder cache performance under high concurrency (#1402)

","6e24d79eb0726ef97aa7e579195a650569894fe0","Yohei Kishimoto"
"3553","releaseBuilder","releaseBuilder","4","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"3554","releaseBuilder","releaseBuilder","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3555","releaseBuilderVoid","releaseBuilderVoid","1","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3556","joining","joining","1","Body Change, Introduced, MultiChange","Uncomment stream block in Element (#1988)

* Uncomment stream block in Element

* Add custom StringJoiner collector

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","38615afffecc51519e00f1b4769f6d2dc220c9bc","Isira Seneviratne"
"3557","lowerCase","lowerCase","1","Body Change","NPE fix
","8808e3fbc5a8f25970c151d076636ad05798ff9d","Jonathan Hedley"
"3558","normalize","normalize","1","Body Change, Introduced, MultiChange","fix for bug #1279
","8371a171fcc3314a343223d83bcab7fa2c40c0c7","Michel Petrovic"
"3559","xmlSafeTagName","xmlSafeTagName","2","Body Change, Introduced, MultiChange","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"3560","xmlSafeTagName","xmlSafeTagName","2","Modifier Change, Body Change, MultiChange","Normalize XML tag names

Fixes #1496
","61923e0455c46cc6320188b13c613302f01e7880","Jonathan Hedley"
"3561","Jsoup","Jsoup","1","Introduced","No default constructor for Jsoup
","ac809a4a5e816e69ede5f18005a519f0436a31c3","Jonathan Hedley"
"3562","parse","parse","2","Body Change","Implemented Jsoup.parse(File), and javadocced.
","8929d961dfd44d1a6758b81c9a0c5adf8e408f6b","Jonathan Hedley"
"3563","parse","parse","2","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3564","parse","parse","1","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3565","parse","parse","1","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"3566","parse","parse","2","Body Change","Implemented Jsoup.parse(File), and javadocced.
","8929d961dfd44d1a6758b81c9a0c5adf8e408f6b","Jonathan Hedley"
"3567","parse","parse","2","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3568","connect","connect","3","Body Change, Introduced, MultiChange","Initial implementation of Connection
","ce843ec83988e3e3318fa7db38133b06be741a1f","Jonathan Hedley"
"3569","connect","connect","3","Body Change","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"3570","connect","connect","3","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3571","newSession","newSession","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3572","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"3573","parse","parse","2","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"3574","parse","parse","2","Exceptions Change","Added Jsoup.parse(File) method

Fixes #1693
","3a6e7fa748edc8893e7b110cd530662f53725cee","Jonathan Hedley"
"3575","parse","parse","2","Body Change, Exceptions Change, Introduced, MultiChange","Added Jsoup.parse(File) method

Fixes #1693
","3a6e7fa748edc8893e7b110cd530662f53725cee","Jonathan Hedley"
"3576","parse","parse","2","Exceptions Change","Note since release
","99f925857c0c5bdecf02a729265291f3aec8d616","Jonathan Hedley"
"3577","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"3578","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"3579","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"3580","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"3581","parse","parse","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"3582","parse","parse","4","Body Change, Exceptions Change, Introduced, MultiChange","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"3583","parse","parse","4","Body Change, Exceptions Change, Deleted, MultiChange","Correct javadoc and add @WillClose annotations

Co-authored-by: Jan Artysiewicz <jan.artysiewicz@cronn.de>","38b32245201b405185c2c36c52637f8b27ddbdd2","jartysiewicz"
"3584","parse","parse","4","Body Change, Exceptions Change, Introduced, MultiChange","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"3585","parse","parse","4","Exceptions Change","A null inputstream should return an empty doc

Fixes #2252
","e99c87d3f52c848db5e891dc57c3ad6b54d55bd2","Jonathan Hedley"
"3586","parse","parse","2","Body Change, Exceptions Change, Introduced, MultiChange","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"3587","parse","parse","2","Exceptions Change","A null inputstream should return an empty doc

Fixes #2252
","e99c87d3f52c848db5e891dc57c3ad6b54d55bd2","Jonathan Hedley"
"3588","parseBodyFragment","parseBodyFragment","3","Body Change, Introduced, MultiChange","Adds Parser.parseBodyFragment method.
","7649933bba7ad5960415065dd95cc99aada42240","Jonathan Hedley"
"3589","parseBodyFragment","parseBodyFragment","3","Body Change","Implemented Jsoup.parse(File), and javadocced.
","8929d961dfd44d1a6758b81c9a0c5adf8e408f6b","Jonathan Hedley"
"3590","parseBodyFragment","parseBodyFragment","3","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3591","parseBodyFragment","parseBodyFragment","3","Body Change, Introduced, MultiChange","Adds Parser.parseBodyFragment method.
","7649933bba7ad5960415065dd95cc99aada42240","Jonathan Hedley"
"3592","parseBodyFragment","parseBodyFragment","3","Body Change","Implemented Jsoup.parse(File), and javadocced.
","8929d961dfd44d1a6758b81c9a0c5adf8e408f6b","Jonathan Hedley"
"3593","parseBodyFragment","parseBodyFragment","3","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3594","parse","parse","9","Body Change, Exceptions Change, Introduced, MultiChange","Implemented parse from URL.
","4cfd3c373f49f8e56f53ae28c1401cc2f528e451","Jonathan Hedley"
"3595","parse","parse","9","Exceptions Change","Doc
","3ff2694aa22c5e12bbc67b9d7ddf736a9cb82e5d","Jonathan Hedley"
"3596","parse","parse","9","Body Change","Javadoc
","28418f8335d2b359690e80e61d0081f4e892769c","Jonathan Hedley"
"3597","parse","parse","9","Body Change","Automatically determine charset when parsing from URL or File.
","7eeb74d133625c8819ba8da52e37f4e4db4b8a26","Jonathan Hedley"
"3598","parse","parse","9","Exceptions Change","Added ability to configure the document's output charset.
","57bce6dc8424637621f6b660855f23e72a08c4b3","Jonathan Hedley"
"3599","parse","parse","9","Exceptions Change","Initial implementation of Connection
","ce843ec83988e3e3318fa7db38133b06be741a1f","Jonathan Hedley"
"3600","parse","parse","9","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"3601","parse","parse","9","Body Change, Exceptions Change, MultiChange","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"3602","parse","parse","9","Body Change, Exceptions Change, MultiChange","Introduced finer granularity to Jsoup.connect exceptions.

Fixes #229
","77e6a1a900685c173afd5d88c9bc6123b568fc72","Jonathan Hedley"
"3603","clean","clean","2","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"3604","clean","clean","2","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"3605","clean","clean","4","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"3606","clean","clean","4","Body Change","Clarified some Cleaner documentation
","ae9a18c9e1382b5d8bad14d09279eda725490c25","jhy"
"3607","clean","clean","4","Body Change","Javadoc warning fix
","7cc295c186ff363cfd87745d87df2b5bc7fe2f6c","jhy"
"3608","clean","clean","4","Body Change","Improved javadoc for clean and isValid.
","a0d957cbdbf756bf5111b2272e10418ad0f35124","Jonathan Hedley"
"3609","clean","clean","1","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"3610","isValid","isValid","2","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"3611","isValid","isValid","2","Body Change","Improved javadoc for clean and isValid.
","a0d957cbdbf756bf5111b2272e10418ad0f35124","Jonathan Hedley"
"3612","Parser","Parser","3","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3613","Parser","Parser","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3614","Parser","Parser","3","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3615","newInstance","newInstance","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3616","clone","clone","1","Body Change, Introduced, MultiChange","Clone the Parser when cloning a Document

This ensures that concurrent calls to `doc.append(html)`, which uses the document's parser, are supported.

Fixes #2281
","d55469aa637a3fea7d2a8a7a6291f6ca1774df4f","Jonathan Hedley"
"3617","Parser","Parser","2","File Renamed","Ignore tag ""html"" in parse tree as created by doc
","97f29aa3541dac70b811f766dd58ba47ac34d58c","Jonathan Hedley"
"3618","Parser","Parser","2","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3619","parseInput","parseInput","5","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3620","parseInput","parseInput","5","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3621","parseInput","parseInput","5","Body Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"3622","parseInput","parseInput","5","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3623","parseInput","parseInput","5","Body Change","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3624","parseInput","parseInput","2","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"3625","parseInput","parseInput","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3626","parseFragmentInput","parseFragmentInput","2","Body Change, Introduced, MultiChange","Nullability and other minor code tweaks
","fd55ee80e2857581c6355ad5879c302fc577955a","Jonathan Hedley"
"3627","parseFragmentInput","parseFragmentInput","2","Body Change","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3628","parseFragmentInput","parseFragmentInput","1","Body Change, Introduced, MultiChange","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3629","getTreeBuilder","getTreeBuilder","1","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3630","setTreeBuilder","setTreeBuilder","3","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3631","setTreeBuilder","setTreeBuilder","3","Return Type Change, Body Change, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3632","setTreeBuilder","setTreeBuilder","3","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3633","isTrackErrors","isTrackErrors","3","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3634","isTrackErrors","isTrackErrors","3","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3635","isTrackErrors","isTrackErrors","3","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3636","setTrackErrors","setTrackErrors","2","Body Change, Introduced, MultiChange","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3637","setTrackErrors","setTrackErrors","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3638","getErrors","getErrors","2","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3639","getErrors","getErrors","2","Return Type Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3640","isTrackPosition","isTrackPosition","1","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3641","setTrackPosition","setTrackPosition","1","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3642","settings","settings","1","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3643","settings","settings","1","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3644","tagSet","tagSet","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3645","tagSet","tagSet","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3646","isContentForTagData","isContentForTagData","2","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"3647","isContentForTagData","isContentForTagData","2","Modifier Change, Body Change, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3648","defaultNamespace","defaultNamespace","2","File Renamed","Ignore tag ""html"" in parse tree as created by doc
","97f29aa3541dac70b811f766dd58ba47ac34d58c","Jonathan Hedley"
"3649","defaultNamespace","defaultNamespace","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3650","parse","parse","6","Body Change, Introduced, MultiChange","Implement baseURIs for all Nodes, and absolute URL attribute getter.
","d23db47db68a1b25b90e4ce255156e9758697ed2","Jonathan Hedley"
"3651","parse","parse","6","Body Change","Adds Parser.parseBodyFragment method.
","7649933bba7ad5960415065dd95cc99aada42240","Jonathan Hedley"
"3652","parse","parse","6","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3653","parse","parse","6","Body Change","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3654","parse","parse","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"3655","parse","parse","6","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3656","parseFragment","parseFragment","4","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3657","parseFragment","parseFragment","4","Body Change","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3658","parseFragment","parseFragment","4","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3659","parseFragment","parseFragment","4","Body Change","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3660","parseFragment","parseFragment","2","Body Change, Introduced, MultiChange","Update isValid and cleaner methods

Stricter at enforcing that it is only body content and that there are
no HTML errors.

Fixes #245
Fixes #632
","f44d6e64ac97d4a5c119e3e22f22f4d87c94b7e1","Jonathan Hedley"
"3661","parseFragment","parseFragment","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3662","parseXmlFragment","parseXmlFragment","3","Body Change, Introduced, MultiChange","Introduced Parser.parseXmlFragment(), to allow easy parsing of XML fragments.
","e917ada8cc976397aa5c3e11492f108a35919e48","Jonathan Hedley"
"3663","parseXmlFragment","parseXmlFragment","3","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3664","parseXmlFragment","parseXmlFragment","3","Body Change","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3665","parseBodyFragment","parseBodyFragment","3","Body Change, Introduced, MultiChange","Adds Parser.parseBodyFragment method.
","7649933bba7ad5960415065dd95cc99aada42240","Jonathan Hedley"
"3666","parseBodyFragment","parseBodyFragment","3","Body Change","Parser javadoc
","3f67316f30614c43d14533ccc5246f7d964db70e","Jonathan Hedley"
"3667","parseBodyFragment","parseBodyFragment","3","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3668","unescapeEntities","unescapeEntities","2","Body Change, Introduced, MultiChange","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"3669","unescapeEntities","unescapeEntities","2","Body Change","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"3670","htmlParser","htmlParser","1","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3671","xmlParser","xmlParser","1","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3672","Tag","Tag","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3673","Tag","Tag","3","Body Change, Deleted, MultiChange","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"3674","Tag","Tag","3","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3675","Tag","Tag","6","Body Change, Introduced, MultiChange","Simplifed Tag creator.
","c4bb2a4933994931900cde164e517ff0e3a61353","Jonathan Hedley"
"3676","Tag","Tag","6","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3677","Tag","Tag","6","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"3678","Tag","Tag","6","Body Change, Deleted, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3679","Tag","Tag","6","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3680","Tag","Tag","6","Body Change","Setters for Tag name and namespace
","29bc6f50c0a31614835e9378f0d30fcae9bcc2e8","Jonathan Hedley"
"3681","Tag","Tag","2","Body Change, Introduced, MultiChange","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"3682","Tag","Tag","2","Modifier Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3683","name","name","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3684","name","name","1","Body Change, Introduced, MultiChange","Setters for Tag name and namespace
","29bc6f50c0a31614835e9378f0d30fcae9bcc2e8","Jonathan Hedley"
"3685","prefix","prefix","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3686","localName","localName","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3687","normalName","normalName","1","Body Change, Introduced, MultiChange","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"3688","namespace","namespace","1","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3689","namespace","namespace","1","Body Change, Introduced, MultiChange","Setters for Tag name and namespace
","29bc6f50c0a31614835e9378f0d30fcae9bcc2e8","Jonathan Hedley"
"3690","set","set","3","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3691","set","set","3","Body Change","Set tags as known when options are set
","6681be4553ae9e4153fdabf006655b84dd161160","Jonathan Hedley"
"3692","set","set","3","Body Change","Javadoc for the Tag options
","c09c1f51f4779d259df0423119a83ebe8aa3b86d","Jonathan Hedley"
"3693","is","is","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3694","clear","clear","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3695","clear","clear","2","Body Change","Set tags as known when options are set
","6681be4553ae9e4153fdabf006655b84dd161160","Jonathan Hedley"
"3696","valueOf","valueOf","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3697","valueOf","valueOf","3","Body Change","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"3698","valueOf","valueOf","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3699","valueOf","valueOf","7","Body Change","Don't register unknown tags.

Unknown tags created with Tags.valueOf(String) were being registered, so that further
.valueOf()s would return an == tag. But that's a potential memory leak, particularly with
malicious input HTML, and serves no real purpose (as .equals() still works), so that
functionality has been removed.
","40979c984d6ceebd50dab1ba516babb1570841a7","Jonathan Hedley"
"3700","valueOf","valueOf","7","Body Change","Parse unknown tags as inline elements that can contain blocks.

Ensures <p><custom>Test</custom></p> parses like that, and not
<p></p><custom>Test</custom>.

Closes #1
","2cce405d1eed3536b222f830220ef32f5a2937d7","Jonathan Hedley"
"3701","valueOf","valueOf","7","Body Change","Remove unnecessary synchronisation in Tag.valueOf

Fixes #238
","9b85aea847f85982b6f2d9d910e9112f771ab5a5","Jonathan Hedley"
"3702","valueOf","valueOf","7","Body Change","Micro-optimised Tag.valueOf

Only lower-case and trim tag names if their original form is not found
in the registered tags. Shaves parse time for the bulk of cases where
the tag is already in lowercase.
","c75e9cc85d596ff08ae858da3c61d55e717607d1","Jonathan Hedley"
"3703","valueOf","valueOf","7","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3704","valueOf","valueOf","7","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3705","valueOf","valueOf","7","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3706","valueOf","valueOf","4","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3707","valueOf","valueOf","4","Body Change","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"3708","valueOf","valueOf","4","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3709","valueOf","valueOf","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3710","isBlock","isBlock","2","Body Change","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"3711","isBlock","isBlock","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3712","formatAsBlock","formatAsBlock","2","Body Change, Introduced, MultiChange","Output format tweak
","13c2af3f24fceda5b44776a5257112ac7218d038","Jonathan Hedley"
"3713","formatAsBlock","formatAsBlock","2","Modifier Change, Body Change, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3714","isInline","isInline","4","Body Change","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"3715","isInline","isInline","4","Body Change","Not add line break when pretty printing inline tags

This is a fix for issue #1305.
","3a9bf46eeb36196d841c3fa05597e40a13f51f43","Tamas Kovacs"
"3716","isInline","isInline","4","Body Change","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"3717","isInline","isInline","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3718","isEmpty","isEmpty","2","Body Change, Introduced, MultiChange","Nodes get to html() method.
","ac95e9f55bc7ffb60febb341571d85635dada8fd","Jonathan Hedley"
"3719","isEmpty","isEmpty","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3720","isSelfClosing","isSelfClosing","2","Body Change, Introduced, MultiChange","Improved HTML output format for empty elements and auto-detected self closing tags.

Closes #27
","9824d000c7b73f52a277dcc83b55602225154fb2","Jonathan Hedley"
"3721","isSelfClosing","isSelfClosing","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3722","isKnownTag","isKnownTag","5","Body Change, Introduced, MultiChange","Improved HTML output format for empty elements and auto-detected self closing tags.

Closes #27
","9824d000c7b73f52a277dcc83b55602225154fb2","Jonathan Hedley"
"3723","isKnownTag","isKnownTag","5","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3724","isKnownTag","isKnownTag","5","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3725","isKnownTag","isKnownTag","5","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3726","isKnownTag","isKnownTag","5","Body Change","Javadoc for the Tag options
","c09c1f51f4779d259df0423119a83ebe8aa3b86d","Jonathan Hedley"
"3727","isKnownTag","isKnownTag","3","Body Change, Introduced, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3728","isKnownTag","isKnownTag","3","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3729","isKnownTag","isKnownTag","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3730","preserveWhitespace","preserveWhitespace","2","Body Change, Introduced, MultiChange","Text normalisation.
","ad405f99cb5f41fb311fa086dbd6762a8e84264d","Jonathan Hedley"
"3731","preserveWhitespace","preserveWhitespace","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3732","isFormListed","isFormListed","2","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"3733","isFormListed","isFormListed","2","Modifier Change, Body Change, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3734","isFormSubmittable","isFormSubmittable","2","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"3735","isFormSubmittable","isFormSubmittable","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3736","setSeenSelfClose","setSeenSelfClose","2","File Renamed","Implemented text()
","e65b503c2054ec715d75815c07187e41182efe18","Jonathan Hedley"
"3737","setSeenSelfClose","setSeenSelfClose","2","Body Change, Introduced, MultiChange","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"3738","textState","textState","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3739","equals","equals","6","Body Change","Improved tag definitions to allow limited children and excluded children.
Improved implicit table element creation, particularly around tbody tags.
","ba5d66010db39205e29289ae81122fc85299d145","Jonathan Hedley"
"3740","equals","equals","6","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3741","equals","equals","6","Body Change","Most likely if breaker
","4c844c15ba2c784bdb75458d8ab81f929a97db68","Jonathan Hedley"
"3742","equals","equals","6","Body Change","Bit of a Tag cleanup

Fixes #767

These fields are only advisory for other users now, and no longer used
in tree construction (since the HTML5 builder rewrite).
","c221cc8ab03fe7a88982cdddb9e66cff546d29df","Jonathan Hedley"
"3743","equals","equals","6","Body Change","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"3744","equals","equals","6","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3745","hashCode","hashCode","5","Body Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"3746","hashCode","hashCode","5","Body Change","Bit of a Tag cleanup

Fixes #767

These fields are only advisory for other users now, and no longer used
in tree construction (since the HTML5 builder rewrite).
","c221cc8ab03fe7a88982cdddb9e66cff546d29df","Jonathan Hedley"
"3747","hashCode","hashCode","5","Body Change","Cleaned up Tag, tweaked output for inline text then tag
","279fbe120c5bd4221478481b78d31ddf41475360","Jonathan Hedley"
"3748","hashCode","hashCode","5","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"3749","hashCode","hashCode","5","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3750","toString","toString","1","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"3751","clone","clone","1","Body Change, Introduced, MultiChange","Indent preserve-upper-cased tags correctly
","f4338e20a5e439632e3d2fc8fa3a330ade6d02ad","Jonathan Hedley"
"3752","Tokeniser","Tokeniser","3","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3753","Tokeniser","Tokeniser","3","Body Change, Introduced, MultiChange","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"3754","Tokeniser","Tokeniser","3","Body Change","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"3755","read","read","6","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3756","read","read","6","Body Change","Cleaned up self-closing ack and error track

Fixes #868
","35bceca331e07938a9c4cd62d68e08740cd39575","Jonathan Hedley"
"3757","read","read","6","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"3758","read","read","6","Body Change","Fixed a performance regression in 1.12

Was building useless stringbuilders on every token read!
","9d9e53c8f5ab7d5dfa689ff39ee9e5dc5f7a881e","Jonathan Hedley"
"3759","read","read","6","Body Change","Save a little time - that verification hasn't fired to date
","51278145ef4f55e7b45276ac071332a53e6b19a6","Jonathan Hedley"
"3760","read","read","6","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3761","emit","emit","5","Body Change","Cleaned up self-closing ack and error track

Fixes #868
","35bceca331e07938a9c4cd62d68e08740cd39575","Jonathan Hedley"
"3762","emit","emit","5","Body Change","Save a little time - that verification hasn't fired to date
","51278145ef4f55e7b45276ac071332a53e6b19a6","Jonathan Hedley"
"3763","emit","emit","5","Body Change","Memoize containsIgnoreCase(seq) results and lower GC when scanning for </title

Fixes #1644
","88c19434c6ab8e39ab6c9ffd4854304db57fd911","Jonathan Hedley"
"3764","emit","emit","5","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3765","emit","emit","5","Body Change","Simplify character start position tracking

Fixes #2175

Moves the char start update to the token completion emit event, vs reader state changes. Multiple state changes may happen for the same token as the tokeniser unwinds itself from an invalid state, which would inadvertently clear the char start position.
","dc3b6c59d2d4dc1b72424785e9b8455b1df15664","Jonathan Hedley"
"3766","emit","emit","4","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3767","emit","emit","4","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3768","emit","emit","4","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3769","emit","emit","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3770","emit","emit","4","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3771","emit","emit","4","Body Change","Minor parse speed improvement
","8c50f6f6a76964a0f16e4e3aea127321903c079a","Jonathan Hedley"
"3772","emit","emit","4","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3773","emit","emit","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3774","emit","emit","3","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3775","emit","emit","3","Body Change, Introduced, MultiChange","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3776","emit","emit","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3777","transition","transition","3","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3778","transition","transition","3","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3779","transition","transition","3","Body Change","Simplify character start position tracking

Fixes #2175

Moves the char start update to the token completion emit event, vs reader state changes. Multiple state changes may happen for the same token as the tokeniser unwinds itself from an invalid state, which would inadvertently clear the char start position.
","dc3b6c59d2d4dc1b72424785e9b8455b1df15664","Jonathan Hedley"
"3780","advanceTransition","advanceTransition","2","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3781","advanceTransition","advanceTransition","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3782","consumeCharacterReference","consumeCharacterReference","3","Body Change, Introduced, MultiChange","Nullable annotations
","7c21b2ecdfb3536dca7870b2ffe2093286f4086c","Jonathan Hedley"
"3783","consumeCharacterReference","consumeCharacterReference","3","Body Change","Removed character range check (>= 0xD800 &&  <= 0xDFFF)

That was preventing the valid decode of &#55357;&#56495; to 💯.

This rule must have been in the spec when initially implemented but I can't find a reference to it now. I'm assuming that the range had since been added, but can't immediately identify why it was explicitly excluded originally.

Fixes #2047
","954c46a92a1a0c5052ed241d4398db8b0331e1f3","Jonathan Hedley"
"3784","consumeCharacterReference","consumeCharacterReference","3","Return Type Change, Modifier Change, Body Change, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3785","createTagPending","createTagPending","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3786","createXmlDeclPending","createXmlDeclPending","2","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3787","createXmlDeclPending","createXmlDeclPending","2","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"3788","createCommentPending","createCommentPending","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3789","createBogusCommentPending","createBogusCommentPending","2","File Renamed","Tweaked escaped entity detection in attributes to not treat &entity_... as an entity form.
","d0418222830f42f4f0c770e406f71454ea50e56d","Jonathan Hedley"
"3790","createBogusCommentPending","createBogusCommentPending","2","Body Change, Introduced, MultiChange","Fix edge cases with delimiters being near a buffer boundary.","de97030ff54ee0bd306cbc58bd8093645cc8a5dc","Csaba Varga"
"3791","createDoctypePending","createDoctypePending","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3792","createTempBuffer","createTempBuffer","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3793","createTempBuffer","createTempBuffer","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3794","isAppropriateEndTagToken","isAppropriateEndTagToken","3","Body Change","Fix NPE in style fragment parse

Fixes #189
","002a4940935a7545ed94f1b776e4d7f6bf6c2525","Jonathan Hedley"
"3795","isAppropriateEndTagToken","isAppropriateEndTagToken","3","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3796","isAppropriateEndTagToken","isAppropriateEndTagToken","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3797","appropriateEndTagName","appropriateEndTagName","3","Body Change","Merge pull request #410 from tipabu/fix-title-html

Address #387: prevent NPE when adding markup to <title> elements","97bd42868ba98bb9a757c729d8d6e259644117e4","Jonathan Hedley"
"3798","appropriateEndTagName","appropriateEndTagName","3","Body Change","Simplify
","2b488261f65629bca62d633057566b1dfdd3038a","Jonathan Hedley"
"3799","appropriateEndTagName","appropriateEndTagName","3","Modifier Change","Nullable annotations
","7c21b2ecdfb3536dca7870b2ffe2093286f4086c","Jonathan Hedley"
"3800","appropriateEndTagSeq","appropriateEndTagSeq","1","Body Change, Introduced, MultiChange","Memoize containsIgnoreCase(seq) results and lower GC when scanning for </title

Fixes #1644
","88c19434c6ab8e39ab6c9ffd4854304db57fd911","Jonathan Hedley"
"3801","error","error","3","Body Change","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3802","error","error","3","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3803","error","error","3","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3804","eofError","eofError","3","Body Change","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3805","eofError","eofError","3","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3806","eofError","eofError","3","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3807","characterReferenceError","characterReferenceError","1","Body Change, Introduced, MultiChange","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"3808","error","error","2","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"3809","error","error","2","Modifier Change","Cleaned up self-closing ack and error track

Fixes #868
","35bceca331e07938a9c4cd62d68e08740cd39575","Jonathan Hedley"
"3810","error","error","1","Body Change, Introduced, MultiChange","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"3811","unescapeEntities","unescapeEntities","4","Body Change, Introduced, MultiChange","Refactored entity decoding.

Modified the heuristic entity decoder to be less greedy; does not
repeatedly chomp down the string until a match is found, and requires a
semicolon terminator for extended entities.

Updated Entities to use the entity decoder in Tokeniser, vs the legacy
decoder.

Fixes #224.
","a31ec08e102fd3832f3ff4449e9163440f0afb2c","Jonathan Hedley"
"3812","unescapeEntities","unescapeEntities","4","Body Change","Improved HTML entity support

Fixes #602, #603
","aa81e10c34f48a3c4ac7160aa90ee18af4f5c0c2","Jonathan Hedley"
"3813","unescapeEntities","unescapeEntities","4","Body Change","Minor perf improvements through lower garbage objects.
","5e386d51f396deec5743ca9cc4e3f0e7559d3956","Jonathan Hedley"
"3814","unescapeEntities","unescapeEntities","4","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"3815","ParseError","ParseError","2","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3816","ParseError","ParseError","2","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3817","ParseError","ParseError","1","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3818","ParseError","ParseError","2","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3819","ParseError","ParseError","2","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3820","ParseError","ParseError","2","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3821","ParseError","ParseError","2","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3822","getErrorMessage","getErrorMessage","1","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3823","getPosition","getPosition","1","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3824","getCursorPos","getCursorPos","1","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3825","toString","toString","2","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3826","toString","toString","2","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3827","selectFirst","selectFirst","2","Exceptions Change","StreamParser API is out of beta

As of 1.19.1
","95462785c89e04020c64573bc0a1aa484695cb79","Jonathan Hedley"
"3828","selectFirst","selectFirst","2","Body Change, Exceptions Change, MultiChange","Improved javadoc for StreamParser
","6f8291da9a07dbb0cd8231a39852c9705e4ab65b","Jonathan Hedley"
"3829","selectFirst","selectFirst","2","Exceptions Change","StreamParser API is out of beta

As of 1.19.1
","95462785c89e04020c64573bc0a1aa484695cb79","Jonathan Hedley"
"3830","selectFirst","selectFirst","2","Body Change, Exceptions Change, MultiChange","Improved javadoc for StreamParser
","6f8291da9a07dbb0cd8231a39852c9705e4ab65b","Jonathan Hedley"
"3831","selectNext","selectNext","2","Exceptions Change","StreamParser API is out of beta

As of 1.19.1
","95462785c89e04020c64573bc0a1aa484695cb79","Jonathan Hedley"
"3832","selectNext","selectNext","2","Body Change, Exceptions Change, MultiChange","Improved javadoc for StreamParser
","6f8291da9a07dbb0cd8231a39852c9705e4ab65b","Jonathan Hedley"
"3833","selectNext","selectNext","2","Exceptions Change","StreamParser API is out of beta

As of 1.19.1
","95462785c89e04020c64573bc0a1aa484695cb79","Jonathan Hedley"
"3834","selectNext","selectNext","2","Body Change, Exceptions Change, MultiChange","Improved javadoc for StreamParser
","6f8291da9a07dbb0cd8231a39852c9705e4ab65b","Jonathan Hedley"
"3835","ParseErrorList","ParseErrorList","1","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3836","ParseErrorList","ParseErrorList","1","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3837","clone","clone","1","Body Change, Introduced, MultiChange","Override clone()

To prevent warnings
","3d136d78a0634dbe934b0cce8411c5ea7f1913fc","jhy"
"3838","defaultSettings","defaultSettings","1","Introduced","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"3839","initialiseParse","initialiseParse","8","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3840","initialiseParse","initialiseParse","8","Modifier Change, Body Change, MultiChange","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"3841","initialiseParse","initialiseParse","8","Body Change","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"3842","initialiseParse","initialiseParse","8","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3843","initialiseParse","initialiseParse","8","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"3844","initialiseParse","initialiseParse","8","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3845","initialiseParse","initialiseParse","8","Modifier Change","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"3846","initialiseParse","initialiseParse","8","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3847","completeParse","completeParse","2","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3848","completeParse","completeParse","2","Body Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3849","parse","parse","5","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"3850","parse","parse","5","Body Change","Close and clear the character reader

Saves a bunch of retained memory in Document (and transitively, every Element)

#1321
","c5c5a735d3d3f643ee614e9f9f93a0978970cf20","Jonathan Hedley"
"3851","parse","parse","5","Modifier Change","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"3852","parse","parse","5","Modifier Change","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"3853","parse","parse","5","Body Change","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3854","parseFragment","parseFragment","1","Body Change, Introduced, MultiChange","Support Reader in parseFragment

Fixes #1177
","dd45bb2b7a832850835bcb2a368dc3cca3851fe2","Jonathan Hedley"
"3855","initialiseParseFragment","initialiseParseFragment","1","Body Change, Introduced, MultiChange","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"3856","completeParseFragment","completeParseFragment","1","Introduced","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"3857","nodeListener","nodeListener","1","Body Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3858","newInstance","newInstance","1","Introduced","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"3859","runParser","runParser","5","Modifier Change, Body Change, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3860","runParser","runParser","5","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3861","runParser","runParser","5","Body Change","Fixed a performance regression in 1.12

Was building useless stringbuilders on every token read!
","9d9e53c8f5ab7d5dfa689ff39ee9e5dc5f7a881e","Jonathan Hedley"
"3862","runParser","runParser","5","Modifier Change, Body Change, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3863","runParser","runParser","5","Body Change","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3864","stepParser","stepParser","4","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3865","stepParser","stepParser","4","Body Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3866","stepParser","stepParser","4","Body Change","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"3867","stepParser","stepParser","4","Body Change","Emit onNodeInserted + onNodeClosed for the root document (#2182)

Emit onNodeInserted + onNodeClosed for the root document

This enables the source position tracking on the Document node (which was previously unset). Also enables the node traversor to see the outer Document node.
","eb602e76466ef383d68aecd944af912ab11abfd4","Jonathan Hedley"
"3868","process","process","3","Modifier Change, Body Change, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3869","process","process","3","Modifier Change","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3870","process","process","3","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3871","processStartTag","processStartTag","6","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3872","processStartTag","processStartTag","6","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3873","processStartTag","processStartTag","6","Body Change","Fixed an issue where unexpected elements in a badly nested table could be moved to the wrong location in the document.

Fixes #552
Closes #591
","3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3","Jonathan Hedley"
"3874","processStartTag","processStartTag","6","Body Change","Fixed a performance regression in 1.12

Was building useless stringbuilders on every token read!
","9d9e53c8f5ab7d5dfa689ff39ee9e5dc5f7a881e","Jonathan Hedley"
"3875","processStartTag","processStartTag","6","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3876","processStartTag","processStartTag","6","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3877","processStartTag","processStartTag","6","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3878","processStartTag","processStartTag","6","Body Change","Fixed an issue where unexpected elements in a badly nested table could be moved to the wrong location in the document.

Fixes #552
Closes #591
","3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3","Jonathan Hedley"
"3879","processStartTag","processStartTag","6","Body Change","Fixed a performance regression in 1.12

Was building useless stringbuilders on every token read!
","9d9e53c8f5ab7d5dfa689ff39ee9e5dc5f7a881e","Jonathan Hedley"
"3880","processStartTag","processStartTag","6","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3881","processStartTag","processStartTag","6","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3882","processStartTag","processStartTag","6","Body Change","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"3883","processEndTag","processEndTag","4","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3884","processEndTag","processEndTag","4","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3885","processEndTag","processEndTag","4","Body Change","Fixed an issue where unexpected elements in a badly nested table could be moved to the wrong location in the document.

Fixes #552
Closes #591
","3a7f39c507ed2b6809dc3a8bcc0a28ad19aab2f3","Jonathan Hedley"
"3886","processEndTag","processEndTag","4","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3887","pop","pop","3","Body Change, Deleted, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3888","pop","pop","3","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3889","pop","pop","3","Modifier Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"3890","push","push","2","Body Change, Deleted, MultiChange","First draft of a simple XML treebuilder / parser.

This provides an alternative to the HTML5 parser which enforces HTML
semantics on the parsed input. The simple XML parser has no understanding
of HTML, and will parse the input as-is into a DOM.
","5000be31966a575f54d80ef85ee49ca1f5cb6ea8","Jonathan Hedley"
"3891","push","push","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3892","currentElement","currentElement","5","Modifier Change","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"3893","currentElement","currentElement","5","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3894","currentElement","currentElement","5","Modifier Change","Fixed an NPE hit on Current Element if there was nothing left on the stack

And guarded other calls to Current Element when used in the same manner

Fixes #1603
","26d3c14ec3f0bf81c12e490efd7923e659696cca","Jonathan Hedley"
"3895","currentElement","currentElement","5","Modifier Change","Make CurrentElement not null; return root document if nothing on stack

Fixes #1601
","dd2536b3f6e14411a67e9ef02a9305895fc224c1","Jonathan Hedley"
"3896","currentElement","currentElement","5","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3897","currentElementIs","currentElementIs","4","Body Change, Introduced, MultiChange","Fixed an NPE hit on Current Element if there was nothing left on the stack

And guarded other calls to Current Element when used in the same manner

Fixes #1603
","26d3c14ec3f0bf81c12e490efd7923e659696cca","Jonathan Hedley"
"3898","currentElementIs","currentElementIs","4","Body Change","Make CurrentElement not null; return root document if nothing on stack

Fixes #1601
","dd2536b3f6e14411a67e9ef02a9305895fc224c1","Jonathan Hedley"
"3899","currentElementIs","currentElementIs","4","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3900","currentElementIs","currentElementIs","4","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3901","currentElementIs","currentElementIs","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3902","currentElementIs","currentElementIs","2","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3903","error","error","3","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"3904","error","error","3","Body Change","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"3905","error","error","3","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3906","error","error","2","Body Change, Introduced, MultiChange","Improved parse error messages

Now shows the specific tag / attribute / character reference in error.
","d0ec68fe52b296dece11f1abf36dc59979a66e9e","jhy"
"3907","error","error","2","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3908","tagFor","tagFor","2","Body Change, Introduced, MultiChange","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"3909","tagFor","tagFor","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3910","tagFor","tagFor","3","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3911","tagFor","tagFor","3","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3912","tagFor","tagFor","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3913","defaultNamespace","defaultNamespace","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"3914","defaultNamespace","defaultNamespace","2","Modifier Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3915","defaultTagSet","defaultTagSet","2","File Renamed","Fix an incorrect case fall-through, and add some not-null validations to prevent warnings.

For #103
","ab4890183496beea6d4908c4adb672e15c1136a5","Jonathan Hedley"
"3916","defaultTagSet","defaultTagSet","2","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"3917","onNodeInserted","onNodeInserted","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3918","onNodeInserted","onNodeInserted","2","Body Change","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3919","onNodeClosed","onNodeClosed","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3920","onNodeClosed","onNodeClosed","2","Body Change","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"3921","trackNodePosition","trackNodePosition","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"3922","trackNodePosition","trackNodePosition","2","Modifier Change","Merge branch 'master' into develop-1.20.1
","e10e04da6c7d93daf5f74d449594cba7ea3683e3","Jonathan Hedley"
"3923","Token","Token","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3924","Token","Token","2","Body Change, Introduced, MultiChange","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"3925","tokenType","tokenType","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3926","tokenType","tokenType","2","Body Change, Introduced, MultiChange","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"3927","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3928","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3929","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3930","startPos","startPos","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3931","startPos","startPos","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3932","startPos","startPos","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3933","startPos","startPos","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3934","endPos","endPos","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3935","endPos","endPos","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3936","endPos","endPos","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3937","endPos","endPos","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3938","Doctype","Doctype","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3939","Doctype","Doctype","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3940","Doctype","Doctype","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"3941","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3942","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3943","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3944","getName","getName","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3945","getName","getName","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3946","getName","getName","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3947","getPubSysKey","getPubSysKey","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3948","getPubSysKey","getPubSysKey","3","Body Change, Introduced, MultiChange","Fixed handling of public/system flag in doctypes

Fixes #408
","c28e5bf53a9ce9e32ab84ce2e6eba87ec747d1a0","Jonathan Hedley"
"3949","getPubSysKey","getPubSysKey","3","Modifier Change","Minor tweaks to LeafNode
","4690661055276b9ed269bb56e1147070434aed5d","Jonathan Hedley"
"3950","getPublicIdentifier","getPublicIdentifier","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3951","getPublicIdentifier","getPublicIdentifier","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3952","getPublicIdentifier","getPublicIdentifier","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3953","getSystemIdentifier","getSystemIdentifier","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3954","getSystemIdentifier","getSystemIdentifier","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3955","getSystemIdentifier","getSystemIdentifier","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3956","isForceQuirks","isForceQuirks","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3957","isForceQuirks","isForceQuirks","2","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3958","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3959","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"3960","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"3961","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"3962","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"3963","Tag","Tag","1","Body Change, Introduced, MultiChange","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"3964","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3965","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"3966","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3967","resetPendingAttr","resetPendingAttr","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3968","resetPendingAttr","resetPendingAttr","3","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3969","resetPendingAttr","resetPendingAttr","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3970","newAttribute","newAttribute","14","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3971","newAttribute","newAttribute","14","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3972","newAttribute","newAttribute","14","Body Change","Use a StringBuilder to accumulate attribute values.

When initially implemented I expected attribute values to normally be read in one sweep,
removing the need to accumulate values. However profiling shows that attributes are
often accumulated, and so the string concatination implementation was very slow.

Using a StringBuilder here gives reduces parse times > 50%.
","ede131697f4a1e76d9c291e5070b700143622d30","Jonathan Hedley"
"3973","newAttribute","newAttribute","14","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"3974","newAttribute","newAttribute","14","Modifier Change, Body Change, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3975","newAttribute","newAttribute","14","Body Change","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"3976","newAttribute","newAttribute","14","Body Change","Don't create StringBuilders for every attribute value

Only if actually going to append do we nee one.
","8a22a9d595d26f573d015a5348aeef34e50171d1","Jonathan Hedley"
"3977","newAttribute","newAttribute","14","Body Change","Check attribute name is not empty after trimming before creating attribute

Fixes #793
","a623db776696c0e03f68e849147f6a0c57063c02","Jonathan Hedley"
"3978","newAttribute","newAttribute","14","Body Change","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"3979","newAttribute","newAttribute","14","Body Change","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"3980","newAttribute","newAttribute","14","Body Change","Perf: limit attribute count per element to 512

Prevents runaway situations

Should improve #1578
","1f0b68f5b620928d8f4bfd8658aa7628ee49d1de","Jonathan Hedley"
"3981","newAttribute","newAttribute","14","Body Change","Use a string builder when attribute names need to be accumulated

Fixes #1605
","b4f4f2c900ec261f9dba18255c900d566fb390e5","Jonathan Hedley"
"3982","newAttribute","newAttribute","14","Body Change","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3983","newAttribute","newAttribute","14","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"3984","trackAttributeRange","trackAttributeRange","4","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"3985","trackAttributeRange","trackAttributeRange","4","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"3986","trackAttributeRange","trackAttributeRange","4","Body Change","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"3987","trackAttributeRange","trackAttributeRange","4","Body Change","Copy attribute source range when merging attributes

Also simplified setting source range.

Fixes #2204
","91b5a56c63a9f8dca761b4cab959977fcd3308fd","Jonathan Hedley"
"3988","hasAttributes","hasAttributes","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3989","hasAttributes","hasAttributes","2","Body Change, Introduced, MultiChange","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"3990","hasAttributeIgnoreCase","hasAttributeIgnoreCase","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3991","hasAttributeIgnoreCase","hasAttributeIgnoreCase","2","Body Change, Introduced, MultiChange","Check attributes not null

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63259
","4864af45affc8598dada9a8f970cbc04a793c460","Jonathan Hedley"
"3992","finaliseTag","finaliseTag","5","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"3993","finaliseTag","finaliseTag","5","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3994","finaliseTag","finaliseTag","5","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"3995","finaliseTag","finaliseTag","5","Body Change","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"3996","finaliseTag","finaliseTag","5","Body Change","Use a string builder when attribute names need to be accumulated

Fixes #1605
","b4f4f2c900ec261f9dba18255c900d566fb390e5","Jonathan Hedley"
"3997","name","name","5","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"3998","name","name","5","Body Change","Merge pull request #410 from tipabu/fix-title-html

Address #387: prevent NPE when adding markup to <title> elements","97bd42868ba98bb9a757c729d8d6e259644117e4","Jonathan Hedley"
"3999","name","name","5","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4000","name","name","5","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4001","name","name","5","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4002","normalName","normalName","3","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4003","normalName","normalName","3","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"4004","normalName","normalName","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4005","toStringName","toStringName","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4006","toStringName","toStringName","3","Body Change, Introduced, MultiChange","When parsing fragments, use the context node to insert children

That ensures data for script/style will be treated as DataNode, not TextNode

Fixes #1419
","724b2c5bf576cbd548738756bfe5f7a7b90c6239","Jonathan Hedley"
"4007","toStringName","toStringName","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4008","name","name","6","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4009","name","name","6","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4010","name","name","6","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4011","name","name","6","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4012","name","name","6","Body Change","Make sure Tag.valueOf and Token.StartTag both do the same name normalization

Was allowing elements to be created without correctly processing the state leading to it.
","86602ebe8827631d291d56705cfd61f5ef513e62","Jonathan Hedley"
"4013","name","name","6","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4014","isSelfClosing","isSelfClosing","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4015","isSelfClosing","isSelfClosing","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4016","isSelfClosing","isSelfClosing","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4017","appendTagName","appendTagName","7","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4018","appendTagName","appendTagName","7","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4019","appendTagName","appendTagName","7","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4020","appendTagName","appendTagName","7","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4021","appendTagName","appendTagName","7","Body Change","When a tag has null chars, consume them all in one hit vs stepping

Fixes #1580 fuzz timeout
","68890368513e30e3aeba9ec0ef4dbe8e1c173707","Jonathan Hedley"
"4022","appendTagName","appendTagName","7","Body Change","Performance tweak when appending tag names

For some crafted HTML, this path was accumulating an ultra-long tag name. Removed redundant
","d80275e16ebd34bae5b48f29f3e4437e1b207955","Jonathan Hedley"
"4023","appendTagName","appendTagName","7","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4024","appendTagName","appendTagName","4","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4025","appendTagName","appendTagName","4","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4026","appendTagName","appendTagName","4","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4027","appendTagName","appendTagName","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4028","appendAttributeName","appendAttributeName","2","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4029","appendAttributeName","appendAttributeName","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4030","appendAttributeName","appendAttributeName","2","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4031","appendAttributeName","appendAttributeName","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4032","appendAttributeValue","appendAttributeValue","2","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4033","appendAttributeValue","appendAttributeValue","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4034","appendAttributeValue","appendAttributeValue","2","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4035","appendAttributeValue","appendAttributeValue","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4036","appendAttributeValue","appendAttributeValue","2","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4037","appendAttributeValue","appendAttributeValue","2","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4038","setEmptyAttributeValue","setEmptyAttributeValue","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4039","setEmptyAttributeValue","setEmptyAttributeValue","3","Body Change, Introduced, MultiChange","Merge pull request #555 from Legioth/master

Add custom boolean attribute support #503","e5e184662975e276af582771b9a004f7d56ecfd6","Jonathan Hedley"
"4040","setEmptyAttributeValue","setEmptyAttributeValue","3","Body Change","Use a string builder when attribute names need to be accumulated

Fixes #1605
","b4f4f2c900ec261f9dba18255c900d566fb390e5","Jonathan Hedley"
"4041","attrNamePos","attrNamePos","1","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4042","attrValPos","attrValPos","1","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4043","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4044","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4045","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4046","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4047","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4048","StartTag","StartTag","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4049","StartTag","StartTag","3","Body Change, Introduced, MultiChange","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"4050","StartTag","StartTag","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"4051","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4052","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4053","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4054","nameAttr","nameAttr","4","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4055","nameAttr","nameAttr","4","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4056","nameAttr","nameAttr","4","Body Change","Make sure Tag.valueOf and Token.StartTag both do the same name normalization

Was allowing elements to be created without correctly processing the state leading to it.
","86602ebe8827631d291d56705cfd61f5ef513e62","Jonathan Hedley"
"4057","nameAttr","nameAttr","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4058","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4059","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4060","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4061","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4062","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4063","EndTag","EndTag","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4064","EndTag","EndTag","3","Body Change, Introduced, MultiChange","Moved attribute source range normal+dedupe into Token

Dedupes and normalizes attribute source range as we go.

Ensures that the tracked range is for the correct attribute.

Further fixes #2067
","244db10b40f6b8138747a99d93d95eb57bf47156","Jonathan Hedley"
"4065","EndTag","EndTag","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"4066","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4067","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4068","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4069","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4070","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4071","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4072","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4073","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4074","Comment","Comment","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4075","Comment","Comment","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4076","Comment","Comment","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"4077","getData","getData","3","Modifier Change, Body Change, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4078","getData","getData","3","Body Change","Perf - catch comments in one hit

Vs always String Buffer appending.
Also remove a formatter which on some files would create a lot of garbage.
","696461b3288ad792ae41d057693a07b7e01d0635","Jonathan Hedley"
"4079","getData","getData","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4080","append","append","4","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4081","append","append","4","Body Change, Introduced, MultiChange","Perf - catch comments in one hit

Vs always String Buffer appending.
Also remove a formatter which on some files would create a lot of garbage.
","696461b3288ad792ae41d057693a07b7e01d0635","Jonathan Hedley"
"4082","append","append","4","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4083","append","append","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4084","append","append","4","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4085","append","append","4","Body Change, Introduced, MultiChange","Perf - catch comments in one hit

Vs always String Buffer appending.
Also remove a formatter which on some files would create a lot of garbage.
","696461b3288ad792ae41d057693a07b7e01d0635","Jonathan Hedley"
"4086","append","append","4","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4087","append","append","4","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4088","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4089","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4090","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4091","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4092","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4093","Character","Character","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4094","Character","Character","3","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4095","Character","Character","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"4096","Character","Character","1","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4097","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4098","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4099","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4100","data","data","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4101","data","data","2","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4102","append","append","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4103","append","append","2","Body Change, Introduced, MultiChange","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4104","getData","getData","3","Modifier Change, Body Change, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4105","getData","getData","3","Body Change","Perf - catch comments in one hit

Vs always String Buffer appending.
Also remove a formatter which on some files would create a lot of garbage.
","696461b3288ad792ae41d057693a07b7e01d0635","Jonathan Hedley"
"4106","getData","getData","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4107","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4108","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4109","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4110","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4111","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4112","CData","CData","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4113","CData","CData","2","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"4114","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4115","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4116","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4117","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4118","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4119","XmlDecl","XmlDecl","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4120","XmlDecl","XmlDecl","2","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"4121","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4122","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4123","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4124","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4125","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4126","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4127","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4128","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4129","EOF","EOF","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4130","EOF","EOF","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4131","EOF","EOF","3","Body Change","Finalized TokenType
","03df8cede945507c103249250d758eea72629cc2","Jonathan Hedley"
"4132","reset","reset","3","Introduced","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4133","reset","reset","3","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4134","reset","reset","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4135","toString","toString","5","Body Change","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4136","toString","toString","5","Body Change","Only create attribute objects for end tag tokens when required.

Saves a bit of GC time.
","666275a54f3e6907b5244b612483815ee70a191d","Jonathan Hedley"
"4137","toString","toString","5","Body Change","Fix null guards on start tag attributes

Fixes #1404
","6e3c98c4a578fb7910241e72a5a33014bb8e85f1","Jonathan Hedley"
"4138","toString","toString","5","Modifier Change, Body Change, MultiChange","Dont emit ""EOF"" character tokens

Was occuring due to casting an EOF token to a string (from #540).
","ec03d27474df95abcf36e038e1c98997f57096e0","Jonathan Hedley"
"4139","toString","toString","5","Modifier Change, Body Change, MultiChange","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4140","isDoctype","isDoctype","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4141","isDoctype","isDoctype","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4142","isDoctype","isDoctype","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4143","asDoctype","asDoctype","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4144","asDoctype","asDoctype","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4145","asDoctype","asDoctype","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4146","isStartTag","isStartTag","3","Body Change","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4147","isStartTag","isStartTag","3","Modifier Change, Body Change, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4148","isStartTag","isStartTag","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4149","asStartTag","asStartTag","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4150","asStartTag","asStartTag","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4151","asStartTag","asStartTag","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4152","isEndTag","isEndTag","3","Body Change","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4153","isEndTag","isEndTag","3","Modifier Change, Body Change, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4154","isEndTag","isEndTag","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4155","asEndTag","asEndTag","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4156","asEndTag","asEndTag","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4157","asEndTag","asEndTag","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4158","isComment","isComment","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4159","isComment","isComment","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4160","isComment","isComment","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4161","asComment","asComment","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4162","asComment","asComment","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4163","asComment","asComment","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4164","isCharacter","isCharacter","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4165","isCharacter","isCharacter","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4166","isCharacter","isCharacter","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4167","isCData","isCData","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4168","isCData","isCData","2","Body Change, Introduced, MultiChange","Preserve CDATA sections

Fixes #406
Fixes #965
","c07c0eead5ec708303b7bfb54c28df2e7cad19e9","Jonathan Hedley"
"4169","asCharacter","asCharacter","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4170","asCharacter","asCharacter","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4171","asCharacter","asCharacter","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4172","asXmlDecl","asXmlDecl","2","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4173","asXmlDecl","asXmlDecl","2","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"4174","isEOF","isEOF","3","File Renamed","Draft implementation of Parser.
","a657d090e2f127ebdce131f1f97e7758a8ddc463","Jonathan Hedley"
"4175","isEOF","isEOF","3","Body Change, Introduced, MultiChange","Fix Java 1.5 compatibility
","e30ed5d35cbcb92584d7fee8ae862f3929e443d8","Jonathan Hedley"
"4176","isEOF","isEOF","3","Modifier Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4177","TagSet","TagSet","1","Body Change","Clone tags from source TagSet on demand

This allows the TagSet to vend mutable Tags on demand, without requiring the entire tagset to be cloned on initialization. Otherwise for the HTML tagset, it would create many unused duplicates (all the known tags) on every pass.

Gets the perf to effectively where we were in 1.19.1 with immutable flyweight tags, but with the ability to mutate as required.
","1a031b6742464a6dbb5b42c5132a75e46a45c180","Jonathan Hedley"
"4178","TagSet","TagSet","1","Body Change","Clone tags from source TagSet on demand

This allows the TagSet to vend mutable Tags on demand, without requiring the entire tagset to be cloned on initialization. Otherwise for the HTML tagset, it would create many unused duplicates (all the known tags) on every pass.

Gets the perf to effectively where we were in 1.19.1 with immutable flyweight tags, but with the ability to mutate as required.
","1a031b6742464a6dbb5b42c5132a75e46a45c180","Jonathan Hedley"
"4179","get","get","1","Body Change","Clone tags from source TagSet on demand

This allows the TagSet to vend mutable Tags on demand, without requiring the entire tagset to be cloned on initialization. Otherwise for the HTML tagset, it would create many unused duplicates (all the known tags) on every pass.

Gets the perf to effectively where we were in 1.19.1 with immutable flyweight tags, but with the ability to mutate as required.
","1a031b6742464a6dbb5b42c5132a75e46a45c180","Jonathan Hedley"
"4180","CharacterReader","CharacterReader","6","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4181","CharacterReader","CharacterReader","6","Body Change","If the input file or URL is binary, throw an exception

Prevents useless processing and apparent hangs

Fixes #1192
","247c5d05f4529e55aa1fdbd333f99e323809b5e0","Jonathan Hedley"
"4182","CharacterReader","CharacterReader","6","Body Change","Removed binary input detection attempt

Fixes #1250
","5359490c56501b231d0d1d19e7eed4ffb37425d7","Jonathan Hedley"
"4183","CharacterReader","CharacterReader","6","Body Change","Minor code tweaks
","ee05221daeba68e00fb452341b13dd6520334630","Jonathan Hedley"
"4184","CharacterReader","CharacterReader","6","Body Change","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"4185","CharacterReader","CharacterReader","6","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4186","CharacterReader","CharacterReader","3","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4187","CharacterReader","CharacterReader","3","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4188","CharacterReader","CharacterReader","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4189","CharacterReader","CharacterReader","6","Body Change","Fixed normalisation of carriage returns to newlines on input HTML

Fixes #110
","128b3f8212e357468cb608546a52da3826903fad","Jonathan Hedley"
"4190","CharacterReader","CharacterReader","6","Body Change","No longer strip \r before parsing.

This saves memory and CPU time at start of parse.
","3e284b6ce28acdf41d7a7cc8ead881d6ab54a8f9","Jonathan Hedley"
"4191","CharacterReader","CharacterReader","6","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4192","CharacterReader","CharacterReader","6","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4193","CharacterReader","CharacterReader","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4194","CharacterReader","CharacterReader","6","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4195","close","close","3","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4196","close","close","3","Body Change, Introduced, MultiChange","Close and clear the character reader

Saves a bunch of retained memory in Document (and transitively, every Element)

#1321
","c5c5a735d3d3f643ee614e9f9f93a0978970cf20","Jonathan Hedley"
"4197","close","close","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4198","bufferUp","bufferUp","8","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4199","bufferUp","bufferUp","8","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4200","bufferUp","bufferUp","8","Body Change","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"4201","bufferUp","bufferUp","8","Body Change","Table parse performance tweak
","ae99d7ebaa7ce4e8446150ce4ccbad4646433f8f","Jonathan Hedley"
"4202","bufferUp","bufferUp","8","Body Change","A few cleanups /  sanity assertions
","9e36f9e26cb8342ea54ad1379d6b1bfee718e90e","Jonathan Hedley"
"4203","bufferUp","bufferUp","8","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"4204","bufferUp","bufferUp","8","Body Change","Preserve the mark when buffering

So that we can rewind if required.

Fixes #1324
","62c0595813b817ec593b0941ca4c3f29d10fac55","Jonathan Hedley"
"4205","bufferUp","bufferUp","8","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4206","doBufferUp","doBufferUp","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4207","doBufferUp","doBufferUp","2","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4208","mark","mark","4","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4209","mark","mark","4","Body Change","Do a full bufferUp when marking a reader

This makes sure there is enough buffer to rewind
","54a8d301bb486fcc87887d2961da0e82b55dd54e","Jonathan Hedley"
"4210","mark","mark","4","Body Change","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"4211","mark","mark","4","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4212","unmark","unmark","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4213","unmark","unmark","2","Body Change, Introduced, MultiChange","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"4214","rewindToMark","rewindToMark","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4215","rewindToMark","rewindToMark","2","Body Change","Do a full bufferUp when marking a reader

This makes sure there is enough buffer to rewind
","54a8d301bb486fcc87887d2961da0e82b55dd54e","Jonathan Hedley"
"4216","pos","pos","3","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4217","pos","pos","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4218","pos","pos","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4219","readFully","readFully","1","Body Change, Introduced, MultiChange","Check the buffer is fully read if looking for absent content

Fixes #1929

In this case we are testing for a missing `</textarea>` - but if the buffer hasn't been fully read, we could never find it.

For the normal case that this code is looking for - a missing `</title>` in brief HTML, a best-effort check (assuming the buffer is complete) is sufficient.
","f0ae81b13eb3dee39d4b93e73913e5072bf5debd","Jonathan Hedley"
"4220","trackNewlines","trackNewlines","2","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"4221","trackNewlines","trackNewlines","2","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4222","isTrackNewlines","isTrackNewlines","1","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"4223","lineNumber","lineNumber","2","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"4224","lineNumber","lineNumber","2","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4225","lineNumber","lineNumber","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4226","lineNumber","lineNumber","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4227","columnNumber","columnNumber","2","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"4228","columnNumber","columnNumber","2","Modifier Change, Body Change, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4229","columnNumber","columnNumber","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4230","columnNumber","columnNumber","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4231","posLineCol","posLineCol","1","Body Change, Introduced, MultiChange","Tracks the source range of attributes (name and value) when source tracking is on (#2057)

When source tracking is enabled, the source position for attribute names and values is now available.`Attribute#sourceRange()` provides the ranges.","2d517c769763e749ce0c3242b40be66c36af9918","Jonathan Hedley"
"4232","lineNumIndex","lineNumIndex","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4233","lineNumIndex","lineNumIndex","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4234","scanBufferForNewlines","scanBufferForNewlines","3","Body Change, Introduced, MultiChange","Added support for tracking newlines in CharacterReader

So that parse errors can be reported more intuitively.
","440d82455a0c88f8472e901c1d8331d15be798bf","Jonathan Hedley"
"4235","scanBufferForNewlines","scanBufferForNewlines","3","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4236","scanBufferForNewlines","scanBufferForNewlines","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4237","isEmpty","isEmpty","3","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4238","isEmpty","isEmpty","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4239","isEmpty","isEmpty","3","Body Change","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"4240","isEmptyNoBufferUp","isEmptyNoBufferUp","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4241","isEmptyNoBufferUp","isEmptyNoBufferUp","2","Body Change, Introduced, MultiChange","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"4242","current","current","5","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4243","current","current","5","Body Change","A couple perf tweaks
","80158d6fa7445506eaaafdeadb1f4dc291ca10a5","Jonathan Hedley"
"4244","current","current","5","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4245","current","current","5","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4246","current","current","5","Body Change","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"4247","consume","consume","6","Body Change","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4248","consume","consume","6","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4249","consume","consume","6","Body Change","A couple perf tweaks
","80158d6fa7445506eaaafdeadb1f4dc291ca10a5","Jonathan Hedley"
"4250","consume","consume","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4251","consume","consume","6","Body Change","isEmpty() should bufferUp

isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.

Fixes #995
","b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c","Jonathan Hedley"
"4252","consume","consume","6","Modifier Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4253","unconsume","unconsume","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4254","unconsume","unconsume","3","Body Change","Do a full bufferUp when marking a reader

This makes sure there is enough buffer to rewind
","54a8d301bb486fcc87887d2961da0e82b55dd54e","Jonathan Hedley"
"4255","unconsume","unconsume","3","Body Change","Don't try to unconsume after a potential bufferUp when moving from RCData to TagOpen state

Should fix #1542 - I wasn't able to directly test this with the sample fuzz output, but was able to reconstruct the same code execution path and error with a standard unit test.

Also reviewed all 14 other uses of unconsume() and verified that these all are directly after a consume() and there's no bufferUp() potential, so those cannot trigger this underrun.
","48d86458bfef17e5ed1118235c422b7a9d4e5c7c","Jonathan Hedley"
"4256","advance","advance","2","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4257","advance","advance","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4258","nextIndexOf","nextIndexOf","2","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4259","nextIndexOf","nextIndexOf","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4260","nextIndexOf","nextIndexOf","3","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4261","nextIndexOf","nextIndexOf","3","Body Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4262","nextIndexOf","nextIndexOf","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4263","consumeTo","consumeTo","5","Body Change","Make copies of all strings returned, vs returning pointers to substrings of input.

The former method is a little faster, and creates less garbage. However when the input is large,
and apps retain data pulled from the DOM, the app may perceive a memory leak, as even a small string
is actually as large as the original input (although multiple strings are all backed by the one
original input).

So, this implementation is a little less performant, but has a potential for greater safety,
depending on how the library is used.
","07a3c08a7ddb06711c3d1b5b1126076a43efa6e1","Jonathan Hedley"
"4264","consumeTo","consumeTo","5","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4265","consumeTo","consumeTo","5","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4266","consumeTo","consumeTo","5","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4267","consumeTo","consumeTo","5","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4268","consumeTo","consumeTo","6","Body Change","Make copies of all strings returned, vs returning pointers to substrings of input.

The former method is a little faster, and creates less garbage. However when the input is large,
and apps retain data pulled from the DOM, the app may perceive a memory leak, as even a small string
is actually as large as the original input (although multiple strings are all backed by the one
original input).

So, this implementation is a little less performant, but has a potential for greater safety,
depending on how the library is used.
","07a3c08a7ddb06711c3d1b5b1126076a43efa6e1","Jonathan Hedley"
"4269","consumeTo","consumeTo","6","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4270","consumeTo","consumeTo","6","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4271","consumeTo","consumeTo","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4272","consumeTo","consumeTo","6","Body Change","Fix edge cases with delimiters being near a buffer boundary.","de97030ff54ee0bd306cbc58bd8093645cc8a5dc","Csaba Varga"
"4273","consumeTo","consumeTo","6","Modifier Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4274","consumeMatching","consumeMatching","1","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4275","consumeMatching","consumeMatching","1","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4276","consumeToAny","consumeToAny","8","Body Change, Introduced, MultiChange","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4277","consumeToAny","consumeToAny","8","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4278","consumeToAny","consumeToAny","8","Body Change","Perf improvement during parsing.

Don't binary search for chars in short lists, just scan.
","5886dd28e5f0740680c270cf83ffe8c1cd4ce269","Jonathan Hedley"
"4279","consumeToAny","consumeToAny","8","Modifier Change","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"4280","consumeToAny","consumeToAny","8","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4281","consumeToAny","consumeToAny","8","Body Change","Table parse performance tweak
","ae99d7ebaa7ce4e8446150ce4ccbad4646433f8f","Jonathan Hedley"
"4282","consumeToAny","consumeToAny","8","Body Change","Perf tweaks in start tags, data
","16491229eeee7cea72d35ff0de6ed7302fd088de","Jonathan Hedley"
"4283","consumeToAny","consumeToAny","8","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4284","consumeToAnySorted","consumeToAnySorted","6","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4285","consumeToAnySorted","consumeToAnySorted","6","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4286","consumeToAnySorted","consumeToAnySorted","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4287","consumeToAnySorted","consumeToAnySorted","6","Body Change","Table parse performance tweak
","ae99d7ebaa7ce4e8446150ce4ccbad4646433f8f","Jonathan Hedley"
"4288","consumeToAnySorted","consumeToAnySorted","6","Body Change","Perf tweaks in start tags, data
","16491229eeee7cea72d35ff0de6ed7302fd088de","Jonathan Hedley"
"4289","consumeToAnySorted","consumeToAnySorted","6","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4290","consumeData","consumeData","5","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4291","consumeData","consumeData","5","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4292","consumeData","consumeData","5","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4293","consumeData","consumeData","5","Body Change","Perf tweaks in start tags, data
","16491229eeee7cea72d35ff0de6ed7302fd088de","Jonathan Hedley"
"4294","consumeData","consumeData","5","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4295","consumeAttributeQuoted","consumeAttributeQuoted","3","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4296","consumeAttributeQuoted","consumeAttributeQuoted","3","Body Change, Introduced, MultiChange","Minor parse speed improvement
","8c50f6f6a76964a0f16e4e3aea127321903c079a","Jonathan Hedley"
"4297","consumeAttributeQuoted","consumeAttributeQuoted","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4298","consumeRawData","consumeRawData","3","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4299","consumeRawData","consumeRawData","3","Body Change, Introduced, MultiChange","Speed tweaks in hot methods
","f93f2fe951a73a386cac980ad917a675ee557f67","Jonathan Hedley"
"4300","consumeRawData","consumeRawData","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4301","consumeTagName","consumeTagName","9","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4302","consumeTagName","consumeTagName","9","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4303","consumeTagName","consumeTagName","9","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4304","consumeTagName","consumeTagName","9","Body Change","Treat < in a start tag as a new tag, not an attribute name

Fixes #797
","bdf1df7eb3ca76cdcdaca38f7df5d941bbb1c664","Jonathan Hedley"
"4305","consumeTagName","consumeTagName","9","Body Change","Table parse performance tweak
","ae99d7ebaa7ce4e8446150ce4ccbad4646433f8f","Jonathan Hedley"
"4306","consumeTagName","consumeTagName","9","Body Change","Perf tweaks in start tags, data
","16491229eeee7cea72d35ff0de6ed7302fd088de","Jonathan Hedley"
"4307","consumeTagName","consumeTagName","9","Body Change","When a tag has null chars, consume them all in one hit vs stepping

Fixes #1580 fuzz timeout
","68890368513e30e3aeba9ec0ef4dbe8e1c173707","Jonathan Hedley"
"4308","consumeTagName","consumeTagName","9","Body Change","Allow `<` in tag name state

We used to have specific handling for this, but that moves us out of spec, and it's not a clear-cut intent.

Fixes #2230
","0ef4b70b2acf47c1094aedbb9954324a2e84c05e","Jonathan Hedley"
"4309","consumeTagName","consumeTagName","9","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4310","consumeToEnd","consumeToEnd","4","Body Change","Make copies of all strings returned, vs returning pointers to substrings of input.

The former method is a little faster, and creates less garbage. However when the input is large,
and apps retain data pulled from the DOM, the app may perceive a memory leak, as even a small string
is actually as large as the original input (although multiple strings are all backed by the one
original input).

So, this implementation is a little less performant, but has a potential for greater safety,
depending on how the library is used.
","07a3c08a7ddb06711c3d1b5b1126076a43efa6e1","Jonathan Hedley"
"4311","consumeToEnd","consumeToEnd","4","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4312","consumeToEnd","consumeToEnd","4","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4313","consumeToEnd","consumeToEnd","4","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4314","consumeLetterSequence","consumeLetterSequence","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4315","consumeLetterSequence","consumeLetterSequence","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4316","consumeLetterSequence","consumeLetterSequence","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4317","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4318","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","Body Change, Introduced, MultiChange","Fixed HTML entity parser to correctly parse entities like frac14 (letter + number combo).

Fixes #145
","1d37cef1d8367af963fee4dc99164708f5d3c6f8","Jonathan Hedley"
"4319","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4320","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","Body Change","Fix getting stuck on non-ascii tags

Fixed #704
","49db84f8f2beb846fb8271fa20a28271afe37d90","Jonathan Hedley"
"4321","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4322","consumeLetterThenDigitSequence","consumeLetterThenDigitSequence","6","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4323","consumeHexSequence","consumeHexSequence","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4324","consumeHexSequence","consumeHexSequence","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4325","consumeHexSequence","consumeHexSequence","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4326","consumeDigitSequence","consumeDigitSequence","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4327","consumeDigitSequence","consumeDigitSequence","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4328","consumeDigitSequence","consumeDigitSequence","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4329","matches","matches","2","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4330","matches","matches","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4331","matches","matches","2","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4332","matches","matches","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4333","matchesIgnoreCase","matchesIgnoreCase","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4334","matchesIgnoreCase","matchesIgnoreCase","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4335","matchesIgnoreCase","matchesIgnoreCase","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4336","matchesAny","matchesAny","2","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4337","matchesAny","matchesAny","2","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4338","matchesAnySorted","matchesAnySorted","3","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4339","matchesAnySorted","matchesAnySorted","3","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4340","matchesAnySorted","matchesAnySorted","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4341","matchesLetter","matchesLetter","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4342","matchesLetter","matchesLetter","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4343","matchesLetter","matchesLetter","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4344","matchesAsciiAlpha","matchesAsciiAlpha","2","Body Change, Introduced, MultiChange","Make sure tags and related start with an ascii alpha, per spec

Fixes #1006
","e6b11b0bdd86e333fa0054c83760394f8fb76b1c","Jonathan Hedley"
"4345","matchesAsciiAlpha","matchesAsciiAlpha","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4346","matchesDigit","matchesDigit","3","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4347","matchesDigit","matchesDigit","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4348","matchesDigit","matchesDigit","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4349","matchConsume","matchConsume","1","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4350","containsIgnoreCase","containsIgnoreCase","2","Body Change","Set Locale.ENGLISH when running upper/lowercase methods, to ensure locale independence.
","4b763cc86f698d31f59e22e169e7a5a83e696a55","Jonathan Hedley"
"4351","containsIgnoreCase","containsIgnoreCase","2","Body Change","Memoize containsIgnoreCase(seq) results and lower GC when scanning for </title

Fixes #1644
","88c19434c6ab8e39ab6c9ffd4854304db57fd911","Jonathan Hedley"
"4352","toString","toString","4","Body Change","Replaced Strings with char array in CharacterReader, for well improved parse times.

Faster to scan, and less garbage created.
","231aab61e228513853d08374e188217933f70986","Jonathan Hedley"
"4353","toString","toString","4","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4354","toString","toString","4","Body Change","Minor (~2%) increase in cache hit rate

By including length in the hash function.

I tried various changes including 2048 cache size, or not replacing conflicts. Larger did not give a hit rate improvement commensurate to the extra size, and not replacing conflicts led to a significant drop to the hit rate.
","7a405918f4fdf71ebc2a8b07ce3f6fb09f987c0a","Jonathan Hedley"
"4355","toString","toString","4","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4356","cacheString","cacheString","5","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4357","cacheString","cacheString","5","Body Change","Don't OBE at  EOF

Fixes #972
","b8411990753314ed3b746d3402dec5a65ff6d603","Jonathan Hedley"
"4358","cacheString","cacheString","5","Body Change","Minor (~2%) increase in cache hit rate

By including length in the hash function.

I tried various changes including 2048 cache size, or not replacing conflicts. Larger did not give a hit rate improvement commensurate to the extra size, and not replacing conflicts led to a significant drop to the hit rate.
","7a405918f4fdf71ebc2a8b07ce3f6fb09f987c0a","Jonathan Hedley"
"4359","cacheString","cacheString","5","Body Change","Minor code cleanup in flyweight
","bf0e74d7cc5ff794efba7860c95b1893ade9efd8","Jonathan Hedley"
"4360","cacheString","cacheString","5","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"4361","rangeEquals","rangeEquals","1","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4362","rangeEquals","rangeEquals","1","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4363","test","test","1","Introduced","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4364","isAsciiLetter","isAsciiLetter","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4365","isAsciiLetter","isAsciiLetter","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4366","isDigit","isDigit","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4367","isDigit","isDigit","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4368","isHexDigit","isHexDigit","2","File Renamed","Fixed CharacterReader to handle unconsuming at EOF correctly. Additional <script> test at EOF.
","f16c0c17aa38ecff097f5fc50db7cd5e247c8737","Jonathan Hedley"
"4369","isHexDigit","isHexDigit","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4370","defaultSettings","defaultSettings","3","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4371","defaultSettings","defaultSettings","3","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4372","defaultSettings","defaultSettings","3","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4373","newInstance","newInstance","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4374","initialiseParse","initialiseParse","3","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4375","initialiseParse","initialiseParse","3","Modifier Change","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"4376","initialiseParse","initialiseParse","3","Modifier Change","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"4377","initialiseParseFragment","initialiseParseFragment","4","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4378","initialiseParseFragment","initialiseParseFragment","4","Body Change, Introduced, MultiChange","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"4379","initialiseParseFragment","initialiseParseFragment","4","Body Change","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"4380","initialiseParseFragment","initialiseParseFragment","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4381","completeParseFragment","completeParseFragment","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4382","completeParseFragment","completeParseFragment","2","Body Change, Introduced, MultiChange","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"4383","process","process","2","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"4384","process","process","2","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4385","useCurrentOrForeignInsert","useCurrentOrForeignInsert","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4386","useCurrentOrForeignInsert","useCurrentOrForeignInsert","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4387","isMathmlTextIntegration","isMathmlTextIntegration","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"4388","isMathmlTextIntegration","isMathmlTextIntegration","2","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4389","isHtmlIntegration","isHtmlIntegration","3","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4390","isHtmlIntegration","isHtmlIntegration","3","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"4391","isHtmlIntegration","isHtmlIntegration","3","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4392","process","process","1","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4393","error","error","4","Body Change","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4394","error","error","4","Body Change","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4395","error","error","4","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4396","error","error","4","Body Change","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4397","createElementFor","createElementFor","1","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4398","insertElementFor","insertElementFor","3","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4399","insertElementFor","insertElementFor","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4400","insertElementFor","insertElementFor","3","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"4401","insertForeignElementFor","insertForeignElementFor","3","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4402","insertForeignElementFor","insertForeignElementFor","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4403","insertForeignElementFor","insertForeignElementFor","3","Body Change","Bring self-closing tags into HTML5 spec

For #2300

In HTML, only foreign elements (svg, math) can self close.

Allows users to override via custom tags.

XML parse and syntax will allow self-closing.
","78383995e7cf5f0c6a068a94aea3e0c0dc10e73d","Jonathan Hedley"
"4404","insertEmptyElementFor","insertEmptyElementFor","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4405","insertEmptyElementFor","insertEmptyElementFor","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4406","insertFormElement","insertFormElement","1","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4407","doInsertElement","doInsertElement","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4408","insertCommentNode","insertCommentNode","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4409","insertCommentNode","insertCommentNode","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4410","insertCharacterNode","insertCharacterNode","1","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4411","insertCharacterToElement","insertCharacterToElement","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4412","insertCharacterToElement","insertCharacterToElement","2","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4413","getStack","getStack","1","Return Type Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4414","onStack","onStack","1","Body Change","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4415","onStack","onStack","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4416","onStack","onStack","1","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4417","getFromStack","getFromStack","3","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4418","getFromStack","getFromStack","3","Body Change","Limit how far up the stack to scan for foster elements

Prevents unbounded scan when supplied with crafted HTML

Fixes #1593
","b09511eb6510fd1ea70deaf55f60d0ccc4814c45","Jonathan Hedley"
"4419","getFromStack","getFromStack","3","Modifier Change","Speed improvement when the stack was thousands of items deep, and non-matching close tags sent.

Fixes #1596
","adbfd71cfbe2fe2eb7a8b986a57676d0eb76e546","Jonathan Hedley"
"4420","removeFromStack","removeFromStack","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4421","popStackToClose","popStackToClose","7","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4422","popStackToClose","popStackToClose","7","Return Type Change, Body Change, MultiChange","Preserve whitespace in nodes before <head>
","9675a92b41593244d6d3ecd99425aeb19e2a6219","Jonathan Hedley"
"4423","popStackToClose","popStackToClose","7","Modifier Change","Make sure null elements aren't added to the stack

Fixes #1579
","9031164b7f2acfd99391a7149d4f865b6b79e9d7","Jonathan Hedley"
"4424","popStackToClose","popStackToClose","7","Body Change","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4425","popStackToClose","popStackToClose","7","Body Change","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4426","popStackToClose","popStackToClose","7","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4427","popStackToClose","popStackToClose","7","Body Change","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"4428","popStackToCloseAnyNamespace","popStackToCloseAnyNamespace","2","Body Change, Introduced, MultiChange","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4429","popStackToCloseAnyNamespace","popStackToCloseAnyNamespace","2","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4430","popStackToClose","popStackToClose","4","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4431","popStackToClose","popStackToClose","4","Body Change","Call onNodeClosed when closing header tags

Ensures that the end source range for headers is tracked correctly.

Fixes #1987
","0eb8232cfc4926fe5ece8e16edcd2a806ccc413f","Jonathan Hedley"
"4432","popStackToClose","popStackToClose","4","Body Change","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4433","popStackToClose","popStackToClose","4","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4434","clearStackToTableContext","clearStackToTableContext","1","Body Change","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4435","clearStackToTableRowContext","clearStackToTableRowContext","1","Body Change","allow template inside thead/tbody/tr. Fixes #807 (#901)

","4fa93397353a7cd3cf15f9c29c40f8a18fc051e5","Maxim Ermilov"
"4436","clearStackToContext","clearStackToContext","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4437","clearStackToContext","clearStackToContext","2","Body Change","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4438","aboveOnStack","aboveOnStack","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4439","aboveOnStack","aboveOnStack","2","Modifier Change","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4440","replaceInQueue","replaceInQueue","2","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4441","replaceInQueue","replaceInQueue","2","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4442","resetInsertionMode","resetInsertionMode","11","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4443","resetInsertionMode","resetInsertionMode","11","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"4444","resetInsertionMode","resetInsertionMode","11","Body Change","Fix potential NPE in resetInsertionMode()

Fixes #1538
","33da0583c5dff6b20b291f4709addf2afbea8ecb","Jonathan Hedley"
"4445","resetInsertionMode","resetInsertionMode","11","Body Change","Updated resetInsertionMode

Fixes #1491

Need to add support for template tags
","2676f413ede8139d58bf6ea43aae8c82d0b301ff","Jonathan Hedley"
"4446","resetInsertionMode","resetInsertionMode","11","Body Change","Limit stack depth when missing tags hit resetInsertionMode()

Fixes #1606
","436d119977bd44376e9dac92d82b21848a69732e","Jonathan Hedley"
"4447","resetInsertionMode","resetInsertionMode","11","Body Change","Make sure resetInsertionMode breaks out to Body if nothing left on stack

Fixes #1607
","b4f20f07b81aa35ccf5432ed9be6f6049d9f5139","Jonathan Hedley"
"4448","resetInsertionMode","resetInsertionMode","11","Body Change","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4449","resetInsertionMode","resetInsertionMode","11","Body Change","Refactored reset insertion mode to a switch from an if/else ladder

Will make for a few less string equals hits, particularly on big stacks.
","4940b036720ca7d7ea1f61b933d5ebfb2ddcb6c4","jhy"
"4450","resetInsertionMode","resetInsertionMode","11","Body Change","Reset insertion mode correctly in very deeply stacks

Fixes #1642
","011e83f495e1b7ab768985446abc9395c35f6e5e","Jonathan Hedley"
"4451","resetInsertionMode","resetInsertionMode","11","Return Type Change, Body Change, MultiChange","Break out of InTableBody correctly

If resetInsertionMode doesn't change the current state, break out.

Fixes #1697
","ae61237a7d2b02b5e82dfef6c9729e00409d77d3","Jonathan Hedley"
"4452","resetInsertionMode","resetInsertionMode","11","Body Change","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4453","resetBody","resetBody","2","Body Change, Introduced, MultiChange","Improved newline and whitespace normalization

Fixes #1787

In TextNode, if this is a blank, check the next Element if it will indent. If so, can skip. Previously would check if the parent el would indent, which is wrong for inline elements.

Also made empty tags (like <img>) not indent, but inline.

And fixed up how whitespace is normalized at the end of an element, and after the body tag.
","e714ef12fab4fd00cf7133a22fba4a71ccf7af8e","Jonathan Hedley"
"4454","resetBody","resetBody","2","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4455","inSpecificScope","inSpecificScope","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4456","inSpecificScope","inSpecificScope","4","Body Change, Introduced, MultiChange","Correct to use inScope for ruby element test

Per spec, tests for if stack is in specific scope
","465695f9a6c6e195a7c8ab1527cb843cd786a456","Jonathan Hedley"
"4457","inSpecificScope","inSpecificScope","4","Body Change","Update InRow state to current spec

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63242
","d61ec5a78f9f220b2535a93d82851262a29d9f0b","Jonathan Hedley"
"4458","inSpecificScope","inSpecificScope","4","Body Change","Updated in specific scope tag searches

Includes template and SVG / MathML tags.

This is not currently specifically namespace aware. In practice I think that's OK, but we can update if required.

Fixes #2271
","b875b92b832949abbbb54e9770bf35cfd3825f65","Jonathan Hedley"
"4459","inSpecificScope","inSpecificScope","4","Body Change","Updated InScope search basetypes to be namespace aware

Implements the todo added in b875b92b832949abbbb54e9770bf35cfd3825f65

Case found by the fuzzer.
","4b733b16a8ac0dd417c1c57db78743a2b13ea1a1","Jonathan Hedley"
"4460","inScope","inScope","1","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4461","inScope","inScope","2","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4462","inScope","inScope","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4463","inListItemScope","inListItemScope","1","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4464","inButtonScope","inButtonScope","1","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4465","inTableScope","inTableScope","1","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4466","inSelectScope","inSelectScope","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4467","inSelectScope","inSelectScope","2","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"4468","onStackNot","onStackNot","1","Body Change, Introduced, MultiChange","Updated AfterBody and AfterAfterBody to current spec

Don't pop stack to close on </body> or </html>, but leave them on the stack.

Had to deviate from the spec slightly to allow whitespace to be added to the html or doc elements. (The goal of that is so that when pretty-printing is off, the output more closely resembles the input, by tracking newlines after </body> etc)

Fixes #1851
","dea49696e976b389864cd2926f93c6ff07bdcfa6","Jonathan Hedley"
"4469","getFormElement","getFormElement","2","Return Type Change","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"4470","getFormElement","getFormElement","2","Modifier Change","Test formElement != null before copying isindex action

As there will not be a form element pointer for inferred forms within template elements.
","80c6ec7dbe424351193a29bb873476034e668057","Jonathan Hedley"
"4471","setFormElement","setFormElement","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4472","setFormElement","setFormElement","2","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"4473","resetPendingTableCharacters","resetPendingTableCharacters","3","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4474","resetPendingTableCharacters","resetPendingTableCharacters","3","Body Change, Introduced, MultiChange","Clone Token.Characters into PendingTableCharacters

Keeps the source start/end tracking.

Fixes #1927
","c93ea51dabfbfd34d6b979f5cc876ed3b5d093a4","Jonathan Hedley"
"4475","resetPendingTableCharacters","resetPendingTableCharacters","3","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4476","getPendingTableCharacters","getPendingTableCharacters","2","Return Type Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4477","getPendingTableCharacters","getPendingTableCharacters","2","Return Type Change","Clone Token.Characters into PendingTableCharacters

Keeps the source start/end tracking.

Fixes #1927
","c93ea51dabfbfd34d6b979f5cc876ed3b5d093a4","Jonathan Hedley"
"4478","addPendingTableCharacters","addPendingTableCharacters","3","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4479","addPendingTableCharacters","addPendingTableCharacters","3","Body Change, Introduced, MultiChange","Clone Token.Characters into PendingTableCharacters

Keeps the source start/end tracking.

Fixes #1927
","c93ea51dabfbfd34d6b979f5cc876ed3b5d093a4","Jonathan Hedley"
"4480","addPendingTableCharacters","addPendingTableCharacters","3","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4481","generateImpliedEndTags","generateImpliedEndTags","4","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4482","generateImpliedEndTags","generateImpliedEndTags","4","Body Change","Merge branch 'master' into pr/1154
","2da07a110b04c7d181c04c0fbcfb141035255374","Jonathan Hedley"
"4483","generateImpliedEndTags","generateImpliedEndTags","4","Body Change","Make CurrentElement not null; return root document if nothing on stack

Fixes #1601
","dd2536b3f6e14411a67e9ef02a9305895fc224c1","Jonathan Hedley"
"4484","generateImpliedEndTags","generateImpliedEndTags","4","Body Change","Fixed generateImpliedEndTags

When no exlude tag was provided, the search was incorrect. And so optional closers like <p> would incorrectly add errors.
","880720e9118936174187c2dcb7fb747c38a12874","jhy"
"4485","generateImpliedEndTags","generateImpliedEndTags","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4486","generateImpliedEndTags","generateImpliedEndTags","2","Body Change","Ensure stack pops are HTML namespaced

Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63202
","26cfb42bd468351092ff1acb2f16ac2311d2b536","Jonathan Hedley"
"4487","closeElement","closeElement","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4488","closeElement","closeElement","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4489","isSpecial","isSpecial","3","Body Change","Performance: reduced String[] allocations in Builder

Reduces GC load of tag searchers from 15% of objects to 2%. A little
harder to read but worth it.
","de098c35e91f9a8c15c56cc3dd30a2ff32582201","Jonathan Hedley"
"4490","isSpecial","isSpecial","3","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4491","isSpecial","isSpecial","3","Body Change","`template` is a special tag

Also updated isSpecial to current spec

Fixes #2258
","72fb5963d96c7a6f2663513aa993049239bada23","Jonathan Hedley"
"4492","lastFormattingElement","lastFormattingElement","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4493","lastFormattingElement","lastFormattingElement","2","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4494","positionOfElement","positionOfElement","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4495","positionOfElement","positionOfElement","2","Body Change, Introduced, MultiChange","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"4496","removeLastFormattingElement","removeLastFormattingElement","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4497","removeLastFormattingElement","removeLastFormattingElement","2","Body Change, Introduced, MultiChange","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4498","pushActiveFormattingElements","pushActiveFormattingElements","3","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4499","pushActiveFormattingElements","pushActiveFormattingElements","3","Body Change","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"4500","pushActiveFormattingElements","pushActiveFormattingElements","3","Body Change","Rangecheck bookmarks

Fixes #1576
","478b568061b317c79ba6fd018d9ac5fa931bdb02","Jonathan Hedley"
"4501","pushWithBookmark","pushWithBookmark","2","Body Change, Introduced, MultiChange","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"4502","pushWithBookmark","pushWithBookmark","2","Body Change","Rangecheck bookmarks

Fixes #1576
","478b568061b317c79ba6fd018d9ac5fa931bdb02","Jonathan Hedley"
"4503","checkActiveFormattingElements","checkActiveFormattingElements","3","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4504","checkActiveFormattingElements","checkActiveFormattingElements","3","Body Change, Introduced, MultiChange","Complete adoption agency algorithm (#1517)

Follow adoption agency algorithm","e45e53c849197be70364a63db8a7c6c8971c1ead","Hulmes"
"4505","checkActiveFormattingElements","checkActiveFormattingElements","3","Body Change","Perf: cap the number of active formatting elements

Also, use add() vs put() when applicable to save scanning for existing attributes in addAll()

Fixes #1695
","f8decb298cc9f6de8e181aa4ad72898c31aef341","Jonathan Hedley"
"4506","isSameFormattingElement","isSameFormattingElement","1","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4507","reconstructFormattingElements","reconstructFormattingElements","3","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4508","reconstructFormattingElements","reconstructFormattingElements","3","Body Change","Speed improvement: cap number of cloned active formatting elements

Also saves on memory allocations for empty attribute lists.

Fixes #1613
","d2c455c94a3aaaca29d8cec6bd53ee9824622b51","Jonathan Hedley"
"4509","reconstructFormattingElements","reconstructFormattingElements","3","Body Change","Perf tweaks for #1695
","d0df41957bb9f1530c9cb6678e2b59fa8926ae81","Jonathan Hedley"
"4510","clearFormattingElementsToLastMarker","clearFormattingElementsToLastMarker","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4511","removeFromActiveFormattingElements","removeFromActiveFormattingElements","1","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4512","isInActiveFormattingElements","isInActiveFormattingElements","1","Body Change","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4513","getActiveFormattingElement","getActiveFormattingElement","2","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4514","getActiveFormattingElement","getActiveFormattingElement","2","Modifier Change","Brought ruby elements up to current spec

Fixes #1294.
","220a3b21be3b3d50ed90f5665aff031a989572f4","Jonathan Hedley"
"4515","insertInFosterParent","insertInFosterParent","1","Body Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4516","pushTemplateMode","pushTemplateMode","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4517","pushTemplateMode","pushTemplateMode","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4518","popTemplateMode","popTemplateMode","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4519","popTemplateMode","popTemplateMode","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4520","templateModeSize","templateModeSize","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4521","templateModeSize","templateModeSize","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4522","currentTemplateMode","currentTemplateMode","2","File Renamed","Added support to optionally keep track of errors while tokenising and tree-building.
","be94f5547d6b8f15ee48117afe46ae302c361464","Jonathan Hedley"
"4523","currentTemplateMode","currentTemplateMode","2","Body Change, Introduced, MultiChange","Added full parser support for template tags (#1635)

Fixes #1634","a049edcdae373ef6c24747845adb846d1298cb72","Jonathan Hedley"
"4524","isContentForTagData","isContentForTagData","3","Body Change, Introduced, MultiChange","Simplified isContentForTagData

Loop was showing up during profiling; not needed with just two options
","c2ef8e9785d814fcb2b805df120a99036267ed81","Jonathan Hedley"
"4525","isContentForTagData","isContentForTagData","3","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4526","isContentForTagData","isContentForTagData","3","Modifier Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4527","TokenQueue","TokenQueue","6","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4528","TokenQueue","TokenQueue","6","Body Change","Parsing performance optimisation.

Modified TokenQueue chompTo method to use indexOf to allow rapid
scan for next token.
","6cff72ab387d211de65567d7537a73d81a37fd69","Jonathan Hedley"
"4529","TokenQueue","TokenQueue","6","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4530","TokenQueue","TokenQueue","6","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"4531","TokenQueue","TokenQueue","6","Body Change","Tidy
","ad203677d7d98af76d29ac8938dcdc7751ef14cc","Jonathan Hedley"
"4532","TokenQueue","TokenQueue","6","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4533","isEmpty","isEmpty","2","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4534","isEmpty","isEmpty","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4535","consume","consume","5","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4536","consume","consume","5","Body Change","TokenQueue optimisations
","19aecf27292e894fefe4552309549325387163d2","Jonathan Hedley"
"4537","consume","consume","5","Return Type Change, Body Change, MultiChange","removing char boxing
","112c1541b0f7034e63c9015e582ed13efbbb5bd3","Anton Kazennikov"
"4538","consume","consume","5","Body Change","small optimizations
","f11c3b4f92660b44dae8f6541c9b6908e6196b3a","Anton Kazennikov"
"4539","consume","consume","5","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4540","advance","advance","2","Body Change, Introduced, MultiChange","Working on escape/unescape routine.
","f8841edabba28d6125dd87ed72f557e85570066b","Jonathan Hedley"
"4541","advance","advance","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4542","current","current","3","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4543","current","current","3","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4544","current","current","3","Modifier Change, Body Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4545","addFirst","addFirst","6","Body Change, Introduced, MultiChange","Parser updated to handle CDATA, and rogue < in text nodes.
","070396808fcb7cf41ff29ad52f7d1078aba99832","Jonathan Hedley"
"4546","addFirst","addFirst","6","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4547","addFirst","addFirst","6","Body Change","Parsing performance optimisation.

Modified TokenQueue chompTo method to use indexOf to allow rapid
scan for next token.
","6cff72ab387d211de65567d7537a73d81a37fd69","Jonathan Hedley"
"4548","addFirst","addFirst","6","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4549","addFirst","addFirst","6","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"4550","addFirst","addFirst","6","Modifier Change, Body Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4551","matches","matches","6","Body Change","Support for data only tags (script, textarea etc)
","4bd743a3a5492d1d185bd21f421e49ce3a27af7c","Jonathan Hedley"
"4552","matches","matches","6","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4553","matches","matches","6","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4554","matches","matches","6","Body Change","small optimizations
","f11c3b4f92660b44dae8f6541c9b6908e6196b3a","Anton Kazennikov"
"4555","matches","matches","6","Body Change","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"4556","matches","matches","6","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4557","matchesAny","matchesAny","1","Modifier Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4558","matchesAny","matchesAny","2","Body Change, Introduced, MultiChange","TokenQueue optimisations
","19aecf27292e894fefe4552309549325387163d2","Jonathan Hedley"
"4559","matchesAny","matchesAny","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4560","matchChomp","matchChomp","2","Body Change","TokenQueue optimisations
","19aecf27292e894fefe4552309549325387163d2","Jonathan Hedley"
"4561","matchChomp","matchChomp","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4562","matchesWhitespace","matchesWhitespace","3","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4563","matchesWhitespace","matchesWhitespace","3","Body Change","Merge branch 'master' of https://github.com/chikei/jsoup into chikei-master
","7dfce519e65d669edc8aec5dfaf8069905707b92","Jonathan Hedley"
"4564","matchesWhitespace","matchesWhitespace","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4565","matchesWord","matchesWord","2","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4566","matchesWord","matchesWord","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4567","consume","consume","3","Body Change","Support for data only tags (script, textarea etc)
","4bd743a3a5492d1d185bd21f421e49ce3a27af7c","Jonathan Hedley"
"4568","consume","consume","3","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4569","consume","consume","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4570","consumeTo","consumeTo","3","Body Change","Parsing performance optimisation.

Modified TokenQueue chompTo method to use indexOf to allow rapid
scan for next token.
","6cff72ab387d211de65567d7537a73d81a37fd69","Jonathan Hedley"
"4571","consumeTo","consumeTo","3","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4572","consumeTo","consumeTo","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4573","consumeToIgnoreCase","consumeToIgnoreCase","4","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4574","consumeToIgnoreCase","consumeToIgnoreCase","4","Body Change, Introduced, MultiChange","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4575","consumeToIgnoreCase","consumeToIgnoreCase","4","Body Change","Fixed tokeniser optimisation when scanning for missing data element close tags.

Fixes #67
","4a470a028e1f146c04695819c48b9ec8b7950f36","Jonathan Hedley"
"4576","consumeToIgnoreCase","consumeToIgnoreCase","4","Modifier Change, Body Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4577","consumeToAny","consumeToAny","4","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4578","consumeToAny","consumeToAny","4","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4579","consumeToAny","consumeToAny","4","Body Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"4580","consumeToAny","consumeToAny","4","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4581","chompTo","chompTo","1","Modifier Change, Body Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4582","chompToIgnoreCase","chompToIgnoreCase","2","Body Change, Introduced, MultiChange","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4583","chompToIgnoreCase","chompToIgnoreCase","2","Modifier Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4584","chompBalanced","chompBalanced","8","Body Change, Introduced, MultiChange","small optimizations
","f11c3b4f92660b44dae8f6541c9b6908e6196b3a","Anton Kazennikov"
"4585","chompBalanced","chompBalanced","8","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"4586","chompBalanced","chompBalanced","8","Body Change","Allow selectors to contain unbalanced braces

Fixes #611
","a229d7354da5210a728ce5d43158d5cd780772db","Jonathan Hedley"
"4587","chompBalanced","chompBalanced","8","Body Change","Adding support for nested quotes in attribute selection
","1791ef17ad6e0624a7b057b89439f7a33b3bbb82","Himanshu Garg"
"4588","chompBalanced","chompBalanced","8","Body Change","Avoid unnecessary boxing of char in TokenQueue#chompBalanced.
","f91e1e8dac668024c693a2ecd238b1c6b7219c30","Pascal Schumacher"
"4589","chompBalanced","chompBalanced","8","Body Change","Minor code tweaks
","ee05221daeba68e00fb452341b13dd6520334630","Jonathan Hedley"
"4590","chompBalanced","chompBalanced","8","Body Change","Merge branch 'master' of https://github.com/jhy/jsoup
","6e9efc9f4dd3cd307e3dae7fbc67bdb0b92936d7","Jonathan Hedley"
"4591","chompBalanced","chompBalanced","8","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4592","unescape","unescape","6","Body Change, Introduced, MultiChange","Updated TokenQueue so :contains(text) can be escaped, if looking
for ( or ) within text
","e6cc4ceff4e1d119f1779d1370ff99aaa2911f23","Jonathan Hedley"
"4593","unescape","unescape","6","Body Change","small optimizations
","f11c3b4f92660b44dae8f6541c9b6908e6196b3a","Anton Kazennikov"
"4594","unescape","unescape","6","Body Change","Minor perf improvements through lower garbage objects.
","5e386d51f396deec5743ca9cc4e3f0e7559d3956","Jonathan Hedley"
"4595","unescape","unescape","6","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"4596","unescape","unescape","6","Body Change","Fix unescape for runs of escaped characters

Enables the example in #838 by @DulithaRanatunga to work
","bc2181dd4be4e702d54edba8b498e64fc568cf96","Jonathan Hedley"
"4597","unescape","unescape","6","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4598","escapeCssIdentifier","escapeCssIdentifier","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4599","escapeCssIdentifier","escapeCssIdentifier","2","Body Change, Introduced, MultiChange","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"4600","consumeWhitespace","consumeWhitespace","2","Return Type Change, Body Change, MultiChange","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"4601","consumeWhitespace","consumeWhitespace","2","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4602","consumeWord","consumeWord","3","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4603","consumeWord","consumeWord","3","Body Change","Performance tweaks.
","6b0dd15b9542b184a55040de992e0140e613fec8","Jonathan Hedley"
"4604","consumeWord","consumeWord","3","Modifier Change, Body Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4605","consumeElementSelector","consumeElementSelector","3","Body Change, Introduced, MultiChange","Added support for namespaced elements (<fb:name>) and selectors (fb|name)
","e5f6e084f755969196ca9a87c6b334f7125359aa","Jonathan Hedley"
"4606","consumeElementSelector","consumeElementSelector","3","Body Change","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"4607","consumeElementSelector","consumeElementSelector","3","Body Change","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"4608","consumeCssIdentifier","consumeCssIdentifier","7","Body Change, Introduced, MultiChange","Allow - and _ in CSS ID selectors.

Closes #10.
","ec69d09deb79468edde57456c0f79c19128e19e1","Jonathan Hedley"
"4609","consumeCssIdentifier","consumeCssIdentifier","7","Body Change","Parsing optimisation.

Modified TokenQueue to use a StringBuilder + offset to back the queue,
instead of a linked list. Reduces memory and CPU use.
","027c41520e029ae88e578cc9b28491a74d8bb25a","Jonathan Hedley"
"4610","consumeCssIdentifier","consumeCssIdentifier","7","Body Change","TokenQueue optimisations
","19aecf27292e894fefe4552309549325387163d2","Jonathan Hedley"
"4611","consumeCssIdentifier","consumeCssIdentifier","7","Body Change","Add support for escaping selectors

Fixes #838

Closes #1441
Closes #1442
Closes #598
","e61f688b75f8b80f871d199ea4ad67bbf28c97ce","Jonathan Hedley"
"4612","consumeCssIdentifier","consumeCssIdentifier","7","Body Change","Escape components in Element.cssSelector

Fixes #1742
","32597ce483a0ae66deb7f837957cbea1e9c710c3","Jonathan Hedley"
"4613","consumeCssIdentifier","consumeCssIdentifier","7","Body Change, Exceptions Change, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4614","consumeCssIdentifier","consumeCssIdentifier","7","Body Change, Exceptions Change, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4615","consumeCssEscapeSequenceInto","consumeCssEscapeSequenceInto","3","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4616","consumeCssEscapeSequenceInto","consumeCssEscapeSequenceInto","3","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4617","consumeCssEscapeSequenceInto","consumeCssEscapeSequenceInto","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4618","isNonAscii","isNonAscii","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4619","isNonAscii","isNonAscii","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4620","isIdentStart","isIdentStart","3","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4621","isIdentStart","isIdentStart","3","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4622","isIdentStart","isIdentStart","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4623","isIdent","isIdent","3","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4624","isIdent","isIdent","3","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4625","isIdent","isIdent","3","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4626","isNewline","isNewline","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4627","isNewline","isNewline","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4628","isValidCodePoint","isValidCodePoint","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4629","isValidCodePoint","isValidCodePoint","2","Body Change, Introduced, MultiChange","Change `TokenQueue.consumeCssIdentifier()` to support hex digit unescaping (#2297)

To meet the https://www.w3.org/TR/css-syntax-3/#consume-name spec.

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","6bffda376d35aaa5101115013b49b655f396c15c","cketti"
"4630","consumeEscapedCssIdentifier","consumeEscapedCssIdentifier","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4631","consumeEscapedCssIdentifier","consumeEscapedCssIdentifier","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4632","matchesCssIdentifier","matchesCssIdentifier","2","File Renamed","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4633","matchesCssIdentifier","matchesCssIdentifier","2","Body Change, Introduced, MultiChange","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4634","remainder","remainder","5","Body Change","Implemented select(""ancestor descendant"").
","e8e755bfb9a0b1b8b19e8312942ea29cb9b626da","Jonathan Hedley"
"4635","remainder","remainder","5","Body Change","Fixed selector so that ""parent child"" doesn't contain parent, and ""element.class"" is an AND on parent element, and doesn't match .class in child element (i.e. I re-read the CSS3 selector doc, which is clearer than jquery doc).
","eb95cc7662dc5c438de8d9ef47ccf131bf7191a8","Jonathan Hedley"
"4636","remainder","remainder","5","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"4637","remainder","remainder","5","Body Change","Minor code tweaks
","ee05221daeba68e00fb452341b13dd6520334630","Jonathan Hedley"
"4638","remainder","remainder","5","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4639","toString","toString","4","Body Change, Introduced, MultiChange","New: E + F adjacent sibling selector, E ~ F preceding sibling.
","79c672355bb31aa69c23d2dd1ed8cc3f89dd2844","Jonathan Hedley"
"4640","toString","toString","4","Body Change","Performance optimisation in parsing.
","0831a08ea788e93c68159318fe8880d435d40c23","Jonathan Hedley"
"4641","toString","toString","4","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4642","toString","toString","4","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"4643","preserveTagCase","preserveTagCase","1","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"4644","preserveAttributeCase","preserveAttributeCase","1","Body Change, Introduced, MultiChange","On duplicate attributes, retain first not last instance

Fixes #1219
","0fc3d6728ae270fb38f9778ad7fa2663060b50c7","Jonathan Hedley"
"4645","ParseSettings","ParseSettings","2","File Renamed","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"4646","ParseSettings","ParseSettings","2","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4647","normalizeTag","normalizeTag","1","Modifier Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4648","normalizeAttribute","normalizeAttribute","1","Modifier Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4649","normalizeAttributes","normalizeAttributes","2","File Renamed","Refactored Attributes to be an array pair vs LinkedHashSet

Also a couple perf (cpu / garbage) tweaks
","ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1","Jonathan Hedley"
"4650","normalizeAttributes","normalizeAttributes","2","Body Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"4651","normalName","normalName","2","Body Change, Introduced, MultiChange","Make sure Tag.valueOf and Token.StartTag both do the same name normalization

Was allowing elements to be created without correctly processing the state leading to it.
","86602ebe8827631d291d56705cfd61f5ef513e62","Jonathan Hedley"
"4652","normalName","normalName","2","Body Change","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"4653","defaultSettings","defaultSettings","3","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4654","defaultSettings","defaultSettings","3","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4655","defaultSettings","defaultSettings","3","Modifier Change","Add override annotations

And clean up some other weak warnings.
","b93e31d94b18b183d7c3571db164f3cc30a127ad","Jonathan Hedley"
"4656","initialiseParse","initialiseParse","8","Body Change, Introduced, MultiChange","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4657","initialiseParse","initialiseParse","8","Modifier Change","Add initial nullability annotations (#1467)

Using JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.

Includes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","d45098eb5657e83880476fd1f7ff257f0ba6b59c","Jonathan Hedley"
"4658","initialiseParse","initialiseParse","8","Body Change","Disable pretty printing of XML input by default
","20797a47313b115eb220f4df74d39da9de94f5e0","Jonathan Hedley"
"4659","initialiseParse","initialiseParse","8","Body Change","Using the XML parser will default to XML output

And make sure < in attributes are escaped when in XML output mode.

Fixes #1420
","528d85f3a99bf3a064eb8582af0643e1cc65f206","jhy"
"4660","initialiseParse","initialiseParse","8","Modifier Change","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"4661","initialiseParse","initialiseParse","8","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4662","initialiseParse","initialiseParse","8","Body Change","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"4663","initialiseParse","initialiseParse","8","Body Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"4664","initialiseParseFragment","initialiseParseFragment","4","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4665","initialiseParseFragment","initialiseParseFragment","4","Body Change, Introduced, MultiChange","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"4666","initialiseParseFragment","initialiseParseFragment","4","Body Change","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"4667","initialiseParseFragment","initialiseParseFragment","4","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4668","parse","parse","2","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4669","parse","parse","2","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4670","parse","parse","3","Body Change, Introduced, MultiChange","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"4671","parse","parse","3","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"4672","parse","parse","3","Body Change","Maintain the Parser used when parsing a Document

Allows appropriate fragment parsing as XML or HTML, and remembers case sensitivity choice.

Fixes #769
","850a9cc02fb72cc450d1a9dc41912fa80fee9020","Jonathan Hedley"
"4673","completeParseFragment","completeParseFragment","2","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4674","completeParseFragment","completeParseFragment","2","Body Change, Introduced, MultiChange","StreamParser: add fragment parse methods

#2096
","1f1f72d1e89821c630dcfc35e1a0a7f653cc877b","Jonathan Hedley"
"4675","newInstance","newInstance","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4676","defaultNamespace","defaultNamespace","2","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4677","defaultNamespace","defaultNamespace","2","Body Change, Introduced, MultiChange","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"4678","defaultTagSet","defaultTagSet","1","Body Change, Introduced, MultiChange","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4679","process","process","2","Body Change","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4680","process","process","2","Body Change","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"4681","insertElementFor","insertElementFor","7","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4682","insertElementFor","insertElementFor","7","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4683","insertElementFor","insertElementFor","7","Body Change","Perf: removed redundant lowercase normalization
","0679bef07f1e29ae72ae54102d5af9a1f80d45d4","Jonathan Hedley"
"4684","insertElementFor","insertElementFor","7","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4685","insertElementFor","insertElementFor","7","Body Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"4686","insertElementFor","insertElementFor","7","Body Change","Apply namespaces when fragment parsing

For #2299
","aabf0b0dbb19f6ff13f28cf1b5033b1661437a71","Jonathan Hedley"
"4687","insertElementFor","insertElementFor","7","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4688","processNamespaces","processNamespaces","2","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"4689","processNamespaces","processNamespaces","2","Body Change","Apply namespaces when fragment parsing

For #2299
","aabf0b0dbb19f6ff13f28cf1b5033b1661437a71","Jonathan Hedley"
"4690","applyNamespacesToAttributes","applyNamespacesToAttributes","1","Body Change, Introduced, MultiChange","Apply namespaces when fragment parsing

For #2299
","aabf0b0dbb19f6ff13f28cf1b5033b1661437a71","Jonathan Hedley"
"4691","resolveNamespace","resolveNamespace","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"4692","insertLeafNode","insertLeafNode","2","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4693","insertLeafNode","insertLeafNode","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4694","insertCommentFor","insertCommentFor","3","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4695","insertCommentFor","insertCommentFor","3","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4696","insertCommentFor","insertCommentFor","3","Body Change","XML treebuilder handles XML decls directly

So we can remove this as redundant
","0844e2105e4f45e036f6748e2e748e44b588ffc4","Jonathan Hedley"
"4697","insertCharacterFor","insertCharacterFor","3","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4698","insertCharacterFor","insertCharacterFor","3","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4699","insertCharacterFor","insertCharacterFor","3","Body Change","Merge branch 'printer' into develop-1.20.1

Reimplemented the pretty-printer algo
","37043421d95508823b888c6ddabd45deab62c496","Jonathan Hedley"
"4700","insertDoctypeFor","insertDoctypeFor","2","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4701","insertDoctypeFor","insertDoctypeFor","2","Body Change, Introduced, MultiChange","Improved accuracy of tracked source positions (#2056)

Revised tree builder method names
Using more explicit names vs overrides; removed some duplication.
Improved accuracy of tracked source positions
Track implicit vs explicitly created / closed elements","2cf9e90e9a482ef80c70264e7e13191c8632d241","Jonathan Hedley"
"4702","insertXmlDeclarationFor","insertXmlDeclarationFor","2","File Renamed","Updated parser error tracking to cap the max size of errors tracked. Defaults to 0 (disabled).
","f8a5dfb037d363a6b6657fa71af59b66c6bec257","Jonathan Hedley"
"4703","insertXmlDeclarationFor","insertXmlDeclarationFor","2","Body Change, Introduced, MultiChange","Directly parse XML declarations in XmlTreeBuilder (#2275)

Vs the old method of bouncing through the HTML parser's bogus comments.

This simplifies the parse flow for declarations and can better handle dodgy inputs.
","3c66e8730f72e37e17609af2732723c4fff02200","Jonathan Hedley"
"4704","pop","pop","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"4705","popStackToClose","popStackToClose","6","Body Change","Merge branch 'speedbird'
","3a82c2f9ccf2a782a3c521bd4cebc31ae12afedf","Jonathan Hedley"
"4706","popStackToClose","popStackToClose","6","Body Change","In XML parse mode set to lowercase, normalize closing tags

Fixes #998
","df272b77c2cf89e9cbe2512bbddf8a3bc28a704b","Jonathan Hedley"
"4707","popStackToClose","popStackToClose","6","Body Change","Corrected fix for #998
","e5210d1f9ef4f1d41ff0a8c4a2ab8e9192d5e087","Jonathan Hedley"
"4708","popStackToClose","popStackToClose","6","Body Change","Speed improvement for very deeply nested stacks and fake closing tags

Limit the search depth to 256, like in the HTML parser. Otherwise, performance would get bogged down when a huge (thousands) deep stack was created and then followed by many fake closing tags.

Fixes #1640
","cfa5c1d0ffbf9b1b5ff749951a2d62c7ad0c09e4","Jonathan Hedley"
"4709","popStackToClose","popStackToClose","6","Modifier Change","Uplift insertNode and popStackToClose to protected, so they can be used in other implementations

","d1e333c4f15ac01f41c2248a214e25224a8145f4","Andrej Fink"
"4710","popStackToClose","popStackToClose","6","Body Change","Use TokenData to simplify String + StringBuilder use (#2304)

Goal of minimizing new StringBuilders on each new parse, and simplifying the code.

Gives a decent GC reduction","4a4602387d08458c463be57a26e74dc91d58e218","Jonathan Hedley"
"4711","none","none","1","Body Change","Improved javadoc for clean and isValid.
","a0d957cbdbf756bf5111b2272e10418ad0f35124","Jonathan Hedley"
"4712","Safelist","Safelist","1","Body Change","Fix/safelist deep copy constructor (#1763)

Copies nested data structures instead of using a shallow copy to avoid unexpected state mutations after copy constructor usage.","eaf5028718840d71c9a7f94f538b65b135012702","Christian Schwier"
"4713","addTags","addTags","1","Body Change","Prevent noscript tags in Safelist
","5f20fcc2f728a930444c2ba9252ec26b20587a80","Jonathan Hedley"
"4714","addAttributes","addAttributes","2","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4715","addAttributes","addAttributes","2","Body Change","Use computeIfAbsent() (#1990)

Use `computeIfAbsent()`, with constant function variables

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","bf40e9ca9b325fd8a49b6df20bbb2ddf644b5a1c","Isira Seneviratne"
"4716","removeAttributes","removeAttributes","1","Body Change","Use Iterator.remove to avoid ConcurrentModificationException

Add improved test coverage
","b5de45fee2354f06829292fae8bb24822017d848","Jonathan Hedley"
"4717","addEnforcedAttribute","addEnforcedAttribute","1","Body Change","Use computeIfAbsent() (#1990)

Use `computeIfAbsent()`, with constant function variables

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","bf40e9ca9b325fd8a49b6df20bbb2ddf644b5a1c","Isira Seneviratne"
"4718","preserveRelativeLinks","preserveRelativeLinks","1","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"4719","preserveRelativeLinks","preserveRelativeLinks","1","Body Change, Introduced, MultiChange","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"4720","addProtocols","addProtocols","1","Body Change","Use computeIfAbsent() (#1990)

Use `computeIfAbsent()`, with constant function variables

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","bf40e9ca9b325fd8a49b6df20bbb2ddf644b5a1c","Isira Seneviratne"
"4721","isSafeTag","isSafeTag","1","Modifier Change","Make isSafe* public

Fixes #1780
","8a597925a7dae0b3bce86b1b5638699abed72331","Jonathan Hedley"
"4722","isSafeAttribute","isSafeAttribute","1","Modifier Change","Make isSafe* public

Fixes #1780
","8a597925a7dae0b3bce86b1b5638699abed72331","Jonathan Hedley"
"4723","isValidAnchor","isValidAnchor","1","Modifier Change","Minor code cleanup
","dd5eb3bcc1a26f67a8cd13f882190fbeb6d17b12","Jonathan Hedley"
"4724","getEnforcedAttributes","getEnforcedAttributes","1","Modifier Change","Made getEnforcedAttributes public
","7a83ffee4641ca44816d113c3acf1d52722ef217","Jonathan Hedley"
"4725","valueOf","valueOf","1","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4726","valueOf","valueOf","1","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4727","valueOf","valueOf","1","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4728","valueOf","valueOf","1","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4729","hashCode","hashCode","1","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"4730","equals","equals","1","Body Change","Improve equals and hashCode implementations using Objects (#2095)

* Improve equals and hashCode implementations using Objects

* Format tweak

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","48d4be45a72c8f98c29e10fe03a3ac80fcc170bd","Isira Seneviratne"
"4731","Cleaner","Cleaner","1","Body Change, Introduced, MultiChange","Corrected uses of Whitelist to Safelist (#1464)

And introduced a (deprecated) compatibility shim.

Tested with japicmp binary and source compatibility report, and checked binary compat with some test utilities (local testing).

Many thanks to @drei01 (#1408), @nkiesel (#1423) and others for highlighting the issue and for PRs which this commit refines.","02bb8a90cad36fe00cf5887a2924df658b084ff5","Jonathan Hedley"
"4732","clean","clean","2","Body Change","Check for null body, possible in framesets.

Fixes #154
","d7b5d5b28a6dd7ff198f02e1ee82160220135a74","Jonathan Hedley"
"4733","clean","clean","2","Body Change","Clone outputsettings from dirty to clean document
","532b79a61ae8191e2927c59300af68d18a54aa4e","Jonathan Hedley"
"4734","isValid","isValid","3","Body Change, Introduced, MultiChange","Cleaner.isValid() method.

Closes #6.
","19f2541e9dad74a7e734225f3d1b598324a6ea49","Jonathan Hedley"
"4735","isValid","isValid","3","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"4736","isValid","isValid","3","Body Change","Improved javadoc for clean and isValid.
","a0d957cbdbf756bf5111b2272e10418ad0f35124","Jonathan Hedley"
"4737","isValidBodyHtml","isValidBodyHtml","3","Body Change, Introduced, MultiChange","Update isValid and cleaner methods

Stricter at enforcing that it is only body content and that there are
no HTML errors.

Fixes #245
Fixes #632
","f44d6e64ac97d4a5c119e3e22f22f4d87c94b7e1","Jonathan Hedley"
"4738","isValidBodyHtml","isValidBodyHtml","3","Body Change","Improved javadoc for clean and isValid.
","a0d957cbdbf756bf5111b2272e10418ad0f35124","Jonathan Hedley"
"4739","isValidBodyHtml","isValidBodyHtml","3","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"4740","CleaningVisitor","CleaningVisitor","1","Body Change, Introduced, MultiChange","Refactored the Cleaner to traverse rather than recurse child nodes

Avoids the risk of overflowing the stack

Fixes #246
","dfac9ce465ff9c988904d05014d2be2715aa1d2b","Jonathan Hedley"
"4741","head","head","4","Body Change, Introduced, MultiChange","Refactored the Cleaner to traverse rather than recurse child nodes

Avoids the risk of overflowing the stack

Fixes #246
","dfac9ce465ff9c988904d05014d2be2715aa1d2b","Jonathan Hedley"
"4742","head","head","4","Body Change","Merge pull request #388 from amferraz/master

Fix issue with invalid document when script tag is whitelisted","74c61a13acb6fc11456cd442d4d982a0e943e9d0","Jonathan Hedley"
"4743","head","head","4","Body Change","Use Tag#normalName, not Element#tagName for all comparisons
","75815e2d6b743bbdffede8e46d80da5c9684385c","Jonathan Hedley"
"4744","head","head","4","Modifier Change","Specify overrides
","bc798109ea212dc6117a31c114a0b3641d2658a5","Jonathan Hedley"
"4745","tail","tail","2","Body Change, Introduced, MultiChange","Refactored the Cleaner to traverse rather than recurse child nodes

Avoids the risk of overflowing the stack

Fixes #246
","dfac9ce465ff9c988904d05014d2be2715aa1d2b","Jonathan Hedley"
"4746","tail","tail","2","Modifier Change","Specify overrides
","bc798109ea212dc6117a31c114a0b3641d2658a5","Jonathan Hedley"
"4747","copySafeNodes","copySafeNodes","3","Return Type Change, Body Change, MultiChange","Cleaner.isValid() method.

Closes #6.
","19f2541e9dad74a7e734225f3d1b598324a6ea49","Jonathan Hedley"
"4748","copySafeNodes","copySafeNodes","3","Body Change","Refactored the Cleaner to traverse rather than recurse child nodes

Avoids the risk of overflowing the stack

Fixes #246
","dfac9ce465ff9c988904d05014d2be2715aa1d2b","Jonathan Hedley"
"4749","copySafeNodes","copySafeNodes","3","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"4750","createSafeElement","createSafeElement","8","Body Change","Removed StartTag
","3205f0ef9409bb622f66315983830aa89d9313cf","Jonathan Hedley"
"4751","createSafeElement","createSafeElement","8","Body Change","Dropped ""get""
","e2c62cdc3cc8f265af6ea100b60964ac6336d6e2","Jonathan Hedley"
"4752","createSafeElement","createSafeElement","8","Return Type Change, Body Change, MultiChange","Cleaner.isValid() method.

Closes #6.
","19f2541e9dad74a7e734225f3d1b598324a6ea49","Jonathan Hedley"
"4753","createSafeElement","createSafeElement","8","Body Change","Track source position from original to cleaned elements.
","12175ab43e639289c387d4af4a3741a477416f45","Jonathan Hedley"
"4754","createSafeElement","createSafeElement","8","Body Change","Added support for svg and math foreign elements (#2008)

Added support for svg and math foreign elements

Includes namespace support in tags.","6d48703a9f290d83576241e65af12ee0327818a6","Jonathan Hedley"
"4755","createSafeElement","createSafeElement","8","Body Change","In Cleaner, use the normalized tag name in the tail hit

And ensure that tags added to the safelist are normalized.

In copy safe nodes, head was using normalized but the tail was using nodename. So if the safelist and the input had different cases, the tail hit would not ascend the stack on an otherwise safe tag, leading to mis-nested children.

Also fixed an issue that the cleaned element did not preserve the self-closing style of the input document.

Fixes #2049
","94af4ec25ded5c74b4a5748d59378fb955b5ecc1","Jonathan Hedley"
"4756","createSafeElement","createSafeElement","8","Body Change","Refactored UserData to be tucked into a hash (#2060)

And make sure attribute source ranges are copied in the cleaner","73d450657932370e516f205537b395d1d055d043","Jonathan Hedley"
"4757","createSafeElement","createSafeElement","8","Body Change","In the Cleaner, don't add nofollow to relative links (#2245)

Don't nofollow relative links

And allow relative links to be isValid.

Applies a dummy URI if one is not otherwise provided, to allow protocol resolution.","eb35cdcbcd22b281e585238842321c3b53052eaf","Jonathan Hedley"
"4758","ElementMeta","ElementMeta","1","Body Change, Introduced, MultiChange","Cleaner.isValid() method.

Closes #6.
","19f2541e9dad74a7e734225f3d1b598324a6ea49","Jonathan Hedley"
"4759","main","main","3","Exceptions Change","Splelling.
","fa9d20a3fb3060daaaa4f183a4be5cf27caf2583","Jonathan Hedley"
"4760","main","main","3","Body Change, Exceptions Change, MultiChange","Add CSS selector filter to HtmlToPlainText example
","ab7feede4eedee351f320896114394235c2395ef","Jonathan Hedley"
"4761","main","main","3","Body Change, Exceptions Change, MultiChange","Reintroduced CLI executable examples

Into jsoup-examples.jar.

Also tweaked HtmlToPlainText to exclude elements that descend from a previously seen element, to prevent redundant output when a greedy selector is used.
","d6ed47079b9daa6734582443ea668963f166abb4","Jonathan Hedley"
"4762","getPlainText","getPlainText","2","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"4763","getPlainText","getPlainText","2","Modifier Change","Reintroduced CLI executable examples

Into jsoup-examples.jar.

Also tweaked HtmlToPlainText to exclude elements that descend from a previously seen element, to prevent redundant output when a greedy selector is used.
","d6ed47079b9daa6734582443ea668963f166abb4","Jonathan Hedley"
"4764","head","head","2","Body Change","Add CSS selector filter to HtmlToPlainText example
","ab7feede4eedee351f320896114394235c2395ef","Jonathan Hedley"
"4765","head","head","2","Modifier Change","Reintroduced CLI executable examples

Into jsoup-examples.jar.

Also tweaked HtmlToPlainText to exclude elements that descend from a previously seen element, to prevent redundant output when a greedy selector is used.
","d6ed47079b9daa6734582443ea668963f166abb4","Jonathan Hedley"
"4766","tail","tail","2","Body Change","Add CSS selector filter to HtmlToPlainText example
","ab7feede4eedee351f320896114394235c2395ef","Jonathan Hedley"
"4767","tail","tail","2","Modifier Change","Reintroduced CLI executable examples

Into jsoup-examples.jar.

Also tweaked HtmlToPlainText to exclude elements that descend from a previously seen element, to prevent redundant output when a greedy selector is used.
","d6ed47079b9daa6734582443ea668963f166abb4","Jonathan Hedley"
"4768","toString","toString","1","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4769","trimParents","trimParents","2","File Renamed","Splelling.
","fa9d20a3fb3060daaaa4f183a4be5cf27caf2583","Jonathan Hedley"
"4770","trimParents","trimParents","2","Body Change, Introduced, MultiChange","Reintroduced CLI executable examples

Into jsoup-examples.jar.

Also tweaked HtmlToPlainText to exclude elements that descend from a previously seen element, to prevent redundant output when a greedy selector is used.
","d6ed47079b9daa6734582443ea668963f166abb4","Jonathan Hedley"
"4771","log","log","1","Body Change","Clean up varargs compilation warning
","a908dc9cc08fc0a2b0a1d7d9ff895cfdc1514958","Jonathan Hedley"
"4772","main","main","3","Body Change, Exceptions Change, MultiChange","Updated the link example program to use Jsoup.connect()
","8877dab91c2c4074db6ff7b459d247959019caad","Jonathan Hedley"
"4773","main","main","3","Exceptions Change","Use Tag#normalName, not Element#tagName for all comparisons
","75815e2d6b743bbdffede8e46d80da5c9684385c","Jonathan Hedley"
"4774","main","main","3","Body Change, Exceptions Change, MultiChange","Added nameIs, parentNameIs, elementIs methods

Simplifies tests that are based on normal name or parent name.
","3244429f2e5a023e8833c39acfef36237de015c8","Jonathan Hedley"
"4775","Method","Method","2","Body Change, Introduced, MultiChange","Support for PUT, DELETE, PATCH
","a76f2e9fa14185dae1e96ae2561e3ff07c966e11","Jonathan Hedley"
"4776","Method","Method","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4777","hasBody","hasBody","1","Body Change, Introduced, MultiChange","Support for PUT, DELETE, PATCH
","a76f2e9fa14185dae1e96ae2561e3ff07c966e11","Jonathan Hedley"
"4778","newRequest","newRequest","2","Introduced","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4779","newRequest","newRequest","2","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4780","newRequest","newRequest","1","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"4781","newRequest","newRequest","1","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"4782","url","url","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4783","url","url","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4784","proxy","proxy","1","Introduced","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4785","proxy","proxy","1","Introduced","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"4786","userAgent","userAgent","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4787","timeout","timeout","4","-","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4788","timeout","timeout","4","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4789","timeout","timeout","4","Body Change","Javadoc tweaks
","040ce712b73fcb3ff16b7d8dda1246ccd23a6988","Jonathan Hedley"
"4790","timeout","timeout","4","Body Change","Implemented a proper total duration timeout
","a63fcab33707b7b466fbbf4ce4e7e63d787ba23e","Jonathan Hedley"
"4791","maxBodySize","maxBodySize","2","Introduced","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"4792","maxBodySize","maxBodySize","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4793","referrer","referrer","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4794","followRedirects","followRedirects","2","Introduced","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"4795","followRedirects","followRedirects","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4796","method","method","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4797","ignoreHttpErrors","ignoreHttpErrors","2","Introduced","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"4798","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4799","ignoreContentType","ignoreContentType","2","Introduced","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"4800","ignoreContentType","ignoreContentType","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4801","sslSocketFactory","sslSocketFactory","1","Introduced","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"4802","data","data","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4803","data","data","3","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"4804","data","data","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4805","data","data","3","Body Change","Revised Connection.data javadoc
","00f85a826668e5dc1e7b180bba52f35ccb9dbaaf","Jonathan Hedley"
"4806","data","data","1","Body Change, Introduced, MultiChange","Add option to set mimetype on uploads
","4685bd091a690e219e629687bf84cc6f752eff81","Jonathan Hedley"
"4807","data","data","2","Introduced","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"4808","data","data","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4809","data","data","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4810","data","data","4","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"4811","data","data","4","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4812","data","data","4","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4813","data","data","4","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4814","data","data","2","Introduced","Added Connection.data(key)
","1406292ba194201a0314c1e7f0161f66ffea7335","Jonathan Hedley"
"4815","data","data","2","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4816","requestBody","requestBody","1","Introduced","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"4817","requestBodyStream","requestBodyStream","1","Body Change, Introduced, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"4818","header","header","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4819","headers","headers","1","Body Change, Introduced, MultiChange","Merge pull request #725 from zJiaJun/master

Add Connection.headers(map)","4029b29631731c9bd613fbbaf3efd399192f43bf","Jonathan Hedley"
"4820","cookie","cookie","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4821","cookies","cookies","3","Introduced","Added jsoup.connect.cookies(Map) method, to set multiple cookies at once, possibly from a prior request.
","93ff111c590ea57b311705360111a3e54329a026","Jonathan Hedley"
"4822","cookies","cookies","3","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"4823","cookies","cookies","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4824","cookieStore","cookieStore","1","Introduced","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4825","cookieStore","cookieStore","1","Introduced","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4826","parser","parser","3","Introduced","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"4827","parser","parser","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4828","parser","parser","3","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4829","postDataCharset","postDataCharset","3","Introduced","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"4830","postDataCharset","postDataCharset","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4831","postDataCharset","postDataCharset","3","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4832","auth","auth","2","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"4833","auth","auth","2","Body Change","Tweak HTML javadoc `>`
","51909b1af727eea21bc011633519e31aaff82048","Jonathan Hedley"
"4834","get","get","5","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4835","get","get","5","Exceptions Change","Documented Connection interface methods
","6c28472ebeca802a22d8b4b775c381b7117393d6","Jonathan Hedley"
"4836","get","get","5","Exceptions Change","Introduced finer granularity to Jsoup.connect exceptions.

Fixes #229
","77e6a1a900685c173afd5d88c9bc6123b568fc72","Jonathan Hedley"
"4837","get","get","5","Modifier Change, Exceptions Change, MultiChange","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4838","get","get","5","Exceptions Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4839","post","post","4","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4840","post","post","4","Exceptions Change","Documented Connection interface methods
","6c28472ebeca802a22d8b4b775c381b7117393d6","Jonathan Hedley"
"4841","post","post","4","Exceptions Change","Introduced finer granularity to Jsoup.connect exceptions.

Fixes #229
","77e6a1a900685c173afd5d88c9bc6123b568fc72","Jonathan Hedley"
"4842","post","post","4","Modifier Change, Exceptions Change, MultiChange","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4843","execute","execute","5","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4844","execute","execute","5","Exceptions Change","Documented Connection interface methods
","6c28472ebeca802a22d8b4b775c381b7117393d6","Jonathan Hedley"
"4845","execute","execute","5","Exceptions Change","Introduced finer granularity to Jsoup.connect exceptions.

Fixes #229
","77e6a1a900685c173afd5d88c9bc6123b568fc72","Jonathan Hedley"
"4846","execute","execute","5","Modifier Change, Exceptions Change, MultiChange","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4847","execute","execute","5","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4848","request","request","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4849","request","request","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4850","response","response","3","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4851","response","response","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4852","response","response","3","Exceptions Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4853","response","response","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4854","onResponseProgress","onResponseProgress","1","Body Change, Introduced, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"4855","url","url","4","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4856","url","url","4","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4857","url","url","4","Modifier Change, Body Change, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4858","url","url","4","Modifier Change, Body Change, Exceptions Change, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4859","url","url","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4860","method","method","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4861","method","method","3","Modifier Change, Body Change, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4862","method","method","3","Modifier Change, Body Change, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4863","method","method","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4864","header","header","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4865","header","header","2","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4866","headers","headers","1","Introduced","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"4867","header","header","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4868","addHeader","addHeader","1","Introduced","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"4869","hasHeader","hasHeader","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4870","hasHeaderWithValue","hasHeaderWithValue","2","Introduced","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"4871","hasHeaderWithValue","hasHeaderWithValue","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4872","removeHeader","removeHeader","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4873","headers","headers","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4874","multiHeaders","multiHeaders","1","Introduced","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"4875","cookie","cookie","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4876","cookie","cookie","2","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4877","cookie","cookie","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4878","hasCookie","hasCookie","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4879","removeCookie","removeCookie","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4880","cookies","cookies","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4881","cookies","cookies","2","Body Change","Improved cookies() javadoc
","96cc4f258b0b86370d176f623c10aad18b960236","Jonathan Hedley"
"4882","proxy","proxy","2","Introduced","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"4883","proxy","proxy","2","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4884","proxy","proxy","1","Introduced","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4885","proxy","proxy","1","Introduced","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"4886","timeout","timeout","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4887","timeout","timeout","4","-","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4888","timeout","timeout","4","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4889","timeout","timeout","4","Body Change","Javadoc tweaks
","040ce712b73fcb3ff16b7d8dda1246ccd23a6988","Jonathan Hedley"
"4890","timeout","timeout","4","Body Change","Implemented a proper total duration timeout
","a63fcab33707b7b466fbbf4ce4e7e63d787ba23e","Jonathan Hedley"
"4891","maxBodySize","maxBodySize","2","Introduced","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"4892","maxBodySize","maxBodySize","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4893","maxBodySize","maxBodySize","2","Introduced","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"4894","maxBodySize","maxBodySize","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4895","followRedirects","followRedirects","2","Introduced","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"4896","followRedirects","followRedirects","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4897","followRedirects","followRedirects","2","Introduced","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"4898","followRedirects","followRedirects","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4899","ignoreHttpErrors","ignoreHttpErrors","2","Introduced","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"4900","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4901","ignoreHttpErrors","ignoreHttpErrors","2","Introduced","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"4902","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4903","ignoreContentType","ignoreContentType","2","Introduced","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"4904","ignoreContentType","ignoreContentType","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4905","ignoreContentType","ignoreContentType","2","Introduced","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"4906","ignoreContentType","ignoreContentType","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4907","sslSocketFactory","sslSocketFactory","2","Introduced","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"4908","sslSocketFactory","sslSocketFactory","2","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4909","sslSocketFactory","sslSocketFactory","1","Introduced","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"4910","data","data","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4911","data","data","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4912","requestBody","requestBody","1","Introduced","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4913","requestBody","requestBody","2","Introduced","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"4914","requestBody","requestBody","2","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4915","requestBodyStream","requestBodyStream","1","Body Change, Introduced, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"4916","parser","parser","3","Introduced","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"4917","parser","parser","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4918","parser","parser","3","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4919","parser","parser","2","Introduced","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"4920","parser","parser","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4921","postDataCharset","postDataCharset","3","Introduced","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"4922","postDataCharset","postDataCharset","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4923","postDataCharset","postDataCharset","3","Body Change","Javadoc updates
","8c81b965418227c5542c795c30cfa83ae89afb18","Jonathan Hedley"
"4924","postDataCharset","postDataCharset","2","Introduced","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"4925","postDataCharset","postDataCharset","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4926","auth","auth","2","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"4927","auth","auth","2","Body Change","Tweak HTML javadoc `>`
","51909b1af727eea21bc011633519e31aaff82048","Jonathan Hedley"
"4928","auth","auth","1","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"4929","statusCode","statusCode","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4930","statusMessage","statusMessage","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4931","charset","charset","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4932","charset","charset","2","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4933","charset","charset","1","Introduced","Enable charset override

Fixes #743.
","00c8d2b7623259246c4eb5df63494c6b42c08f85","Jonathan Hedley"
"4934","contentType","contentType","3","Introduced","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"4935","contentType","contentType","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4936","contentType","contentType","3","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4937","parse","parse","4","Exceptions Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"4938","parse","parse","4","Exceptions Change","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"4939","parse","parse","4","Modifier Change, Exceptions Change, MultiChange","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4940","parse","parse","4","Body Change","Added bufferUp method to response
","cde6403a3c881403a7cf06f4d7d087464038daf6","Jonathan Hedley"
"4941","body","body","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4942","bodyAsBytes","bodyAsBytes","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4943","bufferUp","bufferUp","2","Body Change, Introduced, MultiChange","Added bufferUp method to response
","cde6403a3c881403a7cf06f4d7d087464038daf6","Jonathan Hedley"
"4944","bufferUp","bufferUp","2","Exceptions Change","DataUtil should throw IOException on failed reads during parse

Fixes #980
","2c4e79b104c0ff32566ce247617d47c0b39cc2c7","Jonathan Hedley"
"4945","bodyStream","bodyStream","2","Introduced","Added bodyStream method
","35e80a779b7908ddcd41a6a7df5f21b30bf999d2","Jonathan Hedley"
"4946","bodyStream","bodyStream","2","Body Change","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"4947","streamParser","streamParser","1","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"4948","key","key","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4949","key","key","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4950","value","value","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4951","value","value","1","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4952","inputStream","inputStream","2","Introduced","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"4953","inputStream","inputStream","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4954","inputStream","inputStream","3","Introduced","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"4955","inputStream","inputStream","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4956","inputStream","inputStream","3","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4957","hasInputStream","hasInputStream","2","Introduced","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"4958","hasInputStream","hasInputStream","2","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4959","contentType","contentType","1","Body Change, Introduced, MultiChange","Add option to set mimetype on uploads
","4685bd091a690e219e629687bf84cc6f752eff81","Jonathan Hedley"
"4960","contentType","contentType","3","Introduced","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"4961","contentType","contentType","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"4962","contentType","contentType","3","Modifier Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"4963","HttpStatusException","HttpStatusException","1","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"4964","traverse","traverse","5","Body Change, Introduced, MultiChange","Allow `static` use of NodeTraversor.traverse()
","655e3aab5ad477a790f967f563b8d41c1267475b","Erich Schubert"
"4965","traverse","traverse","5","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4966","traverse","traverse","5","Body Change","Support node.replaceWith(node) during node traversal

Closes #1289
","d66decd3c6ce450c19f276e9693a2727b7aa9748","Jonathan Hedley"
"4967","traverse","traverse","5","Body Change","Safety validations
","049204c2d47eb26315b519de65c89b692f92230c","Jonathan Hedley"
"4968","traverse","traverse","5","Body Change","Allow nodes to be removed in NodeTraversor
","2bad736e9a18bab0b4660423b0eb3c4dc961a312","Jonathan Hedley"
"4969","traverse","traverse","1","Body Change, Introduced, MultiChange","Add `traverse(NodeVisitor, Elements)`.
","6a284f14e1ddf238cbdab0cbf4e1c33dd5b81566","Erich Schubert"
"4970","filter","filter","3","Body Change, Introduced, MultiChange","Add new NodeFilter interface to NodeTraversor
","ad23b481e4c40fcc73c1fa59513b5a7ab0e271d6","Erich Schubert"
"4971","filter","filter","3","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"4972","filter","filter","3","Body Change","Revised Javadoc
","c46870c266b0c1112f4b1d423cf6dd9290d04d2f","Jonathan Hedley"
"4973","filter","filter","1","Body Change, Introduced, MultiChange","Add new NodeFilter interface to NodeTraversor
","ad23b481e4c40fcc73c1fa59513b5a7ab0e271d6","Erich Schubert"
"4974","StructuralEvaluator","StructuralEvaluator","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4975","StructuralEvaluator","StructuralEvaluator","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"4976","memoMatches","memoMatches","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"4977","memoMatches","memoMatches","2","Body Change","Use computeIfAbsent() (#1990)

Use `computeIfAbsent()`, with constant function variables

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","bf40e9ca9b325fd8a49b6df20bbb2ddf644b5a1c","Isira Seneviratne"
"4978","reset","reset","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4979","reset","reset","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"4980","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"4981","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4982","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"4983","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4984","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"4985","Has","Has","4","Body Change","Substantially reduced GC for :has() selectors

The getAllElements created a lot of garbage objects during query evaluation. Removing that gives a meaningful speedup.
","d80c0a99da0ff53a15d85381dd92a2a8f9742d66","Jonathan Hedley"
"4986","Has","Has","4","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"4987","Has","Has","4","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"4988","Has","Has","4","Body Change","In `:has()`, check siblings vs descendants if required

Fixes @2137
","c3963d4bb19414d56f42986db96d62208309e748","Jonathan Hedley"
"4989","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"4990","evalWantsSiblings","evalWantsSiblings","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4991","evalWantsSiblings","evalWantsSiblings","2","Body Change, Introduced, MultiChange","In `:has()`, check siblings vs descendants if required

Fixes @2137
","c3963d4bb19414d56f42986db96d62208309e748","Jonathan Hedley"
"4992","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4993","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"4994","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4995","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"4996","Is","Is","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"4997","Is","Is","2","Body Change, Introduced, MultiChange","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"4998","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"4999","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5000","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5001","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5002","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5003","Not","Not","1","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5004","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"5005","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5006","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5007","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5008","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5009","Ancestor","Ancestor","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5010","Ancestor","Ancestor","2","Body Change, Introduced, MultiChange","Optimize `#id .class` selector performance

Fixes #2254
","36ba3edad1de83e61dff71ca929909587eebd834","Jonathan Hedley"
"5011","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"5012","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5013","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5014","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5015","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5016","ImmediateParentRun","ImmediateParentRun","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5017","ImmediateParentRun","ImmediateParentRun","2","Body Change, Introduced, MultiChange","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"5018","add","add","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5019","add","add","2","Body Change, Introduced, MultiChange","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"5020","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"5021","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5022","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5023","reset","reset","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5024","reset","reset","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5025","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5026","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5027","PreviousSibling","PreviousSibling","1","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5028","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"5029","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5030","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5031","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5032","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5033","ImmediatePreviousSibling","ImmediatePreviousSibling","1","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5034","matches","matches","1","Modifier Change","Add override annotations
","d8fff2de1676e50557a1d6356e6599b6df180598","jhy"
"5035","cost","cost","2","File Renamed","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5036","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5037","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5038","toString","toString","2","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5039","Collector","Collector","1","Introduced","Tweaks
","b57bab46e4241cd3cacce52cb6ff310bbf69eb7b","Jonathan Hedley"
"5040","collect","collect","6","Body Change","Use a Visitor instead of recursion for HTML and selectors.
","10cfa0465c9d48f6a3ce3f5996259e77b43fa858","Jonathan Hedley"
"5041","collect","collect","6","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"5042","collect","collect","6","Body Change","Convert Accumulator to a lambda. (#1880)

","9942cc43bb12be33cb75c9c500e81aad7554f2de","Isira Seneviratne"
"5043","collect","collect","6","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5044","collect","collect","6","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"5045","collect","collect","6","Body Change","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"5046","stream","stream","1","Body Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"5047","findFirst","findFirst","6","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"5048","findFirst","findFirst","6","Modifier Change, Body Change, MultiChange","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"5049","findFirst","findFirst","6","Body Change","Substantially reduced GC for :has() selectors

The getAllElements created a lot of garbage objects during query evaluation. Removing that gives a meaningful speedup.
","d80c0a99da0ff53a15d85381dd92a2a8f9742d66","Jonathan Hedley"
"5050","findFirst","findFirst","6","Body Change","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5051","findFirst","findFirst","6","Body Change","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"5052","findFirst","findFirst","6","Body Change","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"5053","Elements","Elements","2","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5054","Elements","Elements","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5055","Elements","Elements","2","Body Change, Introduced, MultiChange","If a node has no parent, return null on previousSibling and nextSibling instead of throwing a null pointer exception.

Fixes #184
","4b0dde413a3c38a77461ac64ad278a042d6eea68","Jonathan Hedley"
"5056","Elements","Elements","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5057","Elements","Elements","2","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5058","Elements","Elements","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5059","Elements","Elements","2","Body Change, Introduced, MultiChange","Removed Element children list, and create on fly from nodes.
","e5cd584705f746893f75e85cf7acdb2d7a0db1af","Jonathan Hedley"
"5060","Elements","Elements","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5061","Elements","Elements","2","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"5062","Elements","Elements","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5063","clone","clone","4","Body Change, Introduced, MultiChange","added .clone() for Elements
","749687cbe07d824be68474a68724255f4a14e15f","Anton Kazennikov"
"5064","clone","clone","4","Body Change","Tweaked Elements.clone()

So that extenders' clones will be the correct type.
","73e26919b941be2816d60e15872ee0d9ca77c56e","Jonathan Hedley"
"5065","clone","clone","4","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5066","clone","clone","4","Body Change","Fixed whitespace formating
","4fcd4f855e0d4a6424353b7e2d70c37cfbc6fde7","Jonathan Hedley"
"5067","asList","asList","1","Body Change, Introduced, MultiChange","Added Elements.deselect and Elements.asList

Methods to allow modification of the contents of the list without modifying the DOM.

Fixes #2100
","aa6e0d92728d67e242515d41c14188d5efe1c730","Jonathan Hedley"
"5068","attr","attr","3","Body Change, Introduced, MultiChange","Updated parser to support namespaced attributes (i.e xml:lang=en).
Implemented Elements first(), last(), attr(), hasAttr() methods.
","7b1a8763534bb06d5f83b03ed8f6abb3e6d4db80","Jonathan Hedley"
"5069","attr","attr","3","Body Change","Changed Elements#attr(key) to scan all elements for attribute.

Closes #4.
","4a0e5a59e690f53f4fbeb16ef80ba5afe66bb744","Jonathan Hedley"
"5070","attr","attr","3","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5071","hasAttr","hasAttr","3","Body Change, Introduced, MultiChange","Updated parser to support namespaced attributes (i.e xml:lang=en).
Implemented Elements first(), last(), attr(), hasAttr() methods.
","7b1a8763534bb06d5f83b03ed8f6abb3e6d4db80","Jonathan Hedley"
"5072","hasAttr","hasAttr","3","Body Change","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"5073","hasAttr","hasAttr","3","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5074","eachAttr","eachAttr","1","Body Change, Introduced, MultiChange","Added eachText and eachAttr
","16b2ab8e25e6bea39ae04f9d310331e411fb2e65","Jonathan Hedley"
"5075","attr","attr","2","Body Change, Introduced, MultiChange","Attribute helpers in Element and Elements.
","43e16a608ddc00981c92cf3772c350c8b7e934dc","Jonathan Hedley"
"5076","attr","attr","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5077","removeAttr","removeAttr","2","Body Change, Introduced, MultiChange","Attribute helpers in Element and Elements.
","43e16a608ddc00981c92cf3772c350c8b7e934dc","Jonathan Hedley"
"5078","removeAttr","removeAttr","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5079","addClass","addClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"5080","removeClass","removeClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"5081","toggleClass","toggleClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"5082","hasClass","hasClass","1","Body Change, Introduced, MultiChange","Add addClass, removeClass, toggleClass, hasClass to Element and Elements.

Closes #2
","d2f4ea69702a20eb74cc0e43491fc156d0c88d6e","Jonathan Hedley"
"5083","val","val","2","Body Change, Introduced, MultiChange","Added val() and val(string) to Element and Elements.

Treat contents of textarea as text, not data.

Closes #14
","fcab98cdd311deb3dd4fd63fef2bc6c4c397f186","Jonathan Hedley"
"5084","val","val","2","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5085","val","val","2","Body Change, Introduced, MultiChange","Added val() and val(string) to Element and Elements.

Treat contents of textarea as text, not data.

Closes #14
","fcab98cdd311deb3dd4fd63fef2bc6c4c397f186","Jonathan Hedley"
"5086","val","val","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5087","text","text","4","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"5088","text","text","4","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5089","text","text","4","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5090","text","text","4","Body Change","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"5091","hasText","hasText","2","Body Change, Introduced, MultiChange","hasText
","93e9d84da0e87896aaaac14769eece487ba9e64d","Jonathan Hedley"
"5092","hasText","hasText","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5093","eachText","eachText","2","Body Change, Introduced, MultiChange","Added eachText and eachAttr
","16b2ab8e25e6bea39ae04f9d310331e411fb2e65","Jonathan Hedley"
"5094","eachText","eachText","2","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"5095","html","html","4","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"5096","html","html","4","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5097","html","html","4","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5098","html","html","4","Body Change","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"5099","outerHtml","outerHtml","4","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"5100","outerHtml","outerHtml","4","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5101","outerHtml","outerHtml","4","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5102","outerHtml","outerHtml","4","Body Change","Add uses of StringUtil.joining() (#2119)

* Add uses of StringUtil.joining()

* Tweaked method name, code format

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","e89cf549b14af5bc0ced21c83f6c2fe4c0bca5fd","Isira Seneviratne"
"5103","toString","toString","2","Body Change, Introduced, MultiChange","Implement Elements.empty() and Elements.remove().
","210eeadbea339e00711cfe3f8bd68f600ea0765c","Jonathan Hedley"
"5104","toString","toString","2","Modifier Change","Merge pull request #477 from offa/some_fixes

Some code improvements","ed95f9b8e9cd56e2d81eddeda7d12075a40aea5b","Jonathan Hedley"
"5105","tagName","tagName","2","Body Change, Introduced, MultiChange","Added ability to change an element's tag with Element.tagName(String), and to change many at once with Elements.tagName(String).
","9ae3df9993f3f5991d0e6fd96c649d93d547d475","Jonathan Hedley"
"5106","tagName","tagName","2","Body Change","Doc hints for rename
","fbd74e726108934eb7002a24aeef60c589eafdef","Jonathan Hedley"
"5107","html","html","2","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"5108","html","html","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5109","prepend","prepend","2","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"5110","prepend","prepend","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5111","append","append","2","Body Change, Introduced, MultiChange","Implemented Elements html(), html(string), append, and prepend.

Closes #5.
","0c312ebdb813b1128061ba0d32b10f4a2e098c39","Jonathan Hedley"
"5112","append","append","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5113","before","before","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"5114","before","before","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5115","after","after","2","Body Change, Introduced, MultiChange","Added .before(html) and .after(html) methods to Element and Elements, to insert sibling HTML
","8c07dc18a69efe2ea811d4c1ffe630b56e2d8629","Jonathan Hedley"
"5116","after","after","2","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5117","wrap","wrap","1","Body Change, Introduced, MultiChange","Implemented Element#wrap and #Elements#wrap

Also protected Node.replaceChild, removeChild, addChild.
","f992e41708287a8251dc9d92ce9db874e0e8f076","Jonathan Hedley"
"5118","unwrap","unwrap","2","Body Change, Introduced, MultiChange","Added Node.unwrap() and Elements.unwrap(), to remove a node but keep its contents.

Fixes #100
","444b5cea6a4c02cecfd50e5d1ecaaaa389d05781","Jonathan Hedley"
"5119","unwrap","unwrap","2","Body Change","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"5120","empty","empty","1","Body Change, Introduced, MultiChange","Implement Elements.empty() and Elements.remove().
","210eeadbea339e00711cfe3f8bd68f600ea0765c","Jonathan Hedley"
"5121","remove","remove","1","Body Change, Introduced, MultiChange","Implement Elements.empty() and Elements.remove().
","210eeadbea339e00711cfe3f8bd68f600ea0765c","Jonathan Hedley"
"5122","select","select","4","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5123","select","select","4","Body Change, Deleted, MultiChange","Renamed Elements#select to Elements#filter.

Renamed so the API is better self describing.
","314fa9d2351741b47c34337f57faacc8fd5448da","Jonathan Hedley"
"5124","select","select","4","Body Change, Introduced, MultiChange","Elements
","48a63ff1edb2b35098ca14ff9e03733dd9fab0a6","Jonathan Hedley"
"5125","select","select","4","Body Change","Added Elements.not(selector) method, to remove undesired results from selector results.
","ca8bad78bf898f808ad6028d4a7c09a69bc65b84","Jonathan Hedley"
"5126","selectFirst","selectFirst","1","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"5127","expectFirst","expectFirst","1","Body Change, Exceptions Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"5128","not","not","1","Body Change, Introduced, MultiChange","Added Elements.not(selector) method, to remove undesired results from selector results.
","ca8bad78bf898f808ad6028d4a7c09a69bc65b84","Jonathan Hedley"
"5129","eq","eq","3","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"5130","eq","eq","3","Body Change","Tweaks
","b57bab46e4241cd3cacce52cb6ff310bbf69eb7b","Jonathan Hedley"
"5131","eq","eq","3","Body Change","Javadoc note for Elements.get(int)
","e96bd4bc44fa8e57993679ba0f4851554a8e7131","Jonathan Hedley"
"5132","is","is","3","Body Change, Introduced, MultiChange","Implemented Elements methods text(), eq(), and is().
","56bacbd1532e9a985a879e686fdfdbf65d24be7c","Jonathan Hedley"
"5133","is","is","3","Body Change","Tweaks
","b57bab46e4241cd3cacce52cb6ff310bbf69eb7b","Jonathan Hedley"
"5134","is","is","3","Body Change","Implemented Element.is()
","4f707008353e272c12a7a6543d6ecfc666a7cc64","Jonathan Hedley"
"5135","next","next","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5136","next","next","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5137","nextAll","nextAll","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5138","nextAll","nextAll","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5139","prev","prev","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5140","prev","prev","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5141","prevAll","prevAll","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5142","prevAll","prevAll","1","Body Change, Introduced, MultiChange","Support prev and next etc
","fcd8807033d27e7591291cd5143d912dd94e09c3","Jonathan Hedley"
"5143","siblings","siblings","2","Body Change, Introduced, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5144","siblings","siblings","2","Body Change","Simplified siblings() a little
","515423d68b19ca13b6040a980bd5933aaeb0681d","Jonathan Hedley"
"5145","parents","parents","3","Body Change, Introduced, MultiChange","Added :has(selector) pseudo-selector.
Added Element#parents() and Elements#parents() methods.

Fixes #20
","aec561f3328980182f299e61eaae45420245141b","Jonathan Hedley"
"5146","parents","parents","3","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5147","parents","parents","3","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"5148","first","first","3","Body Change, Introduced, MultiChange","Updated parser to support namespaced attributes (i.e xml:lang=en).
Implemented Elements first(), last(), attr(), hasAttr() methods.
","7b1a8763534bb06d5f83b03ed8f6abb3e6d4db80","Jonathan Hedley"
"5149","first","first","3","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5150","first","first","3","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5151","last","last","4","Body Change, Introduced, MultiChange","Updated parser to support namespaced attributes (i.e xml:lang=en).
Implemented Elements first(), last(), attr(), hasAttr() methods.
","7b1a8763534bb06d5f83b03ed8f6abb3e6d4db80","Jonathan Hedley"
"5152","last","last","4","Body Change","Tweaks
","b57bab46e4241cd3cacce52cb6ff310bbf69eb7b","Jonathan Hedley"
"5153","last","last","4","Body Change","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5154","last","last","4","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5155","traverse","traverse","2","Body Change, Introduced, MultiChange","Added Node.traverse() and Elements.traverse() methods, to iterate through a node's descendants.
","f45de034880877582fb6414c4d09f40c5999ac70","Jonathan Hedley"
"5156","traverse","traverse","2","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"5157","filter","filter","1","Body Change, Introduced, MultiChange","Add Node.filter, Elements.filter convenience API
","fe001bcccd29f9659ff375a625fd575c9285ce86","Erich Schubert"
"5158","forms","forms","4","Body Change, Introduced, MultiChange","Added a forms() convenience method to Elements

This allows one to get at FormElements without casting.
","834d3142304e0927dc659791da6a4521f271d7fd","Jonathan Hedley"
"5159","forms","forms","4","Body Change","Doc format cleanup

Fixes #414
","3c5061f03f27f13dcf546c9752e424af715bb02a","Jonathan Hedley"
"5160","forms","forms","4","Body Change","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"5161","forms","forms","4","Body Change","Fix Elements.forms()

the forms() method used to return FormElement-s that are directly in the Elements collection.
This behavior was broken since a657ae0240b875a703a1e4909d56ad59997d362d

Fixes #1384
","982c993a1b886a807d7facc47dcb29dbed2961f3","Arnaud Pflieger"
"5162","comments","comments","1","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"5163","textNodes","textNodes","1","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"5164","dataNodes","dataNodes","1","Body Change, Introduced, MultiChange","Added forms(), comments(), textNodes(), dataNodes()
","a657ae0240b875a703a1e4909d56ad59997d362d","jhy"
"5165","childNodesOfType","childNodesOfType","1","Body Change, Introduced, MultiChange","Fix Elements.forms()

the forms() method used to return FormElement-s that are directly in the Elements collection.
This behavior was broken since a657ae0240b875a703a1e4909d56ad59997d362d

Fixes #1384
","982c993a1b886a807d7facc47dcb29dbed2961f3","Arnaud Pflieger"
"5166","set","set","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5167","set","set","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5168","set","set","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5169","remove","remove","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5170","remove","remove","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5171","remove","remove","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5172","remove","remove","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5173","remove","remove","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5174","remove","remove","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5175","deselect","deselect","1","Body Change, Introduced, MultiChange","Added Elements.deselect and Elements.asList

Methods to allow modification of the contents of the list without modifying the DOM.

Fixes #2100
","aa6e0d92728d67e242515d41c14188d5efe1c730","Jonathan Hedley"
"5176","deselect","deselect","1","Body Change, Introduced, MultiChange","Added Elements.deselect and Elements.asList

Methods to allow modification of the contents of the list without modifying the DOM.

Fixes #2100
","aa6e0d92728d67e242515d41c14188d5efe1c730","Jonathan Hedley"
"5177","clear","clear","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5178","clear","clear","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5179","clear","clear","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5180","deselectAll","deselectAll","1","Body Change, Introduced, MultiChange","Added `Elements.deselectAll()`, like `clear()` but no DOM impact

Fixes #2100

Also added see references
","63023f8b29048e2768cb6c0cfa5c168357b2955d","Jonathan Hedley"
"5181","removeAll","removeAll","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5182","removeAll","removeAll","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5183","removeAll","removeAll","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5184","retainAll","retainAll","3","Body Change, Introduced, MultiChange","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5185","retainAll","retainAll","3","Body Change, Deleted, MultiChange","Merge pull request #487 from cromoteca/master

Refactor the Elements collection to extend instead of delegate","37ab504f88dbe95358898bbdaba626cd937a7ea1","Jonathan Hedley"
"5186","retainAll","retainAll","3","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5187","removeIf","removeIf","1","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5188","replaceAll","replaceAll","1","Body Change, Introduced, MultiChange","Extend Elements to update the backing DOM on set(), remove(), et al (#2017)

Fixes #1522","61ac59b7103e6b1932cd1c65d7ddc59df3cc9978","Jonathan Hedley"
"5189","QueryParser","QueryParser","1","Body Change","Don't throw an exception if a selector ends in a space, just trim it.

Fixes #1274
","f5fc1bb04c224865f8eee5ed718f4ffee0e18712","Jonathan Hedley"
"5190","parse","parse","1","Body Change","Improved CSS query parse validation

Fixes #803
","8fecf72da0c9d1d6da7ec1aab0214ff68588da88","Jonathan Hedley"
"5191","parse","parse","2","Body Change","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5192","parse","parse","2","Body Change","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5193","combinator","combinator","5","Body Change","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5194","combinator","combinator","5","Body Change","Fixed precedence parsing of group OR (,) in CSS selectors.

Added tests, and repaired cheekily / hastily / incorrectly modified test.
","5d56ace149ae3264d2502d49dd85302fc613a27c","Jonathan Hedley"
"5195","combinator","combinator","5","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5196","combinator","combinator","5","Body Change","Use a switch jump table for combinator selection
","42d77caa66546bfeb4451b0061c74569e3100815","Jonathan Hedley"
"5197","combinator","combinator","5","Body Change","Fix StackOverflowErrors on extremely deeply nested Elements

Removed recursion on parent() in cssSelector, which could overflow.

Refactored ImmediateParent into a run of parents, so that a very deep chain of And(ImmediateParent, eval) evaluators would not be constructed, which could stack overflow when evaluated.

Fixes #2001
","9170b1d17b3b0c953c0a07b3d62a7884f3a7e019","Jonathan Hedley"
"5198","consumeSubQuery","consumeSubQuery","4","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5199","consumeSubQuery","consumeSubQuery","4","Body Change","Consume empty sub queries 

Fix #issue1425","4ac8a93b0a85f666941ef0198556d1e2395991eb","Ryderxxx"
"5200","consumeSubQuery","consumeSubQuery","4","Body Change","consumeSubQuery should not drop leading combinators

Refactored so that it eats until a combinator is seen after non-combinator content, and returns it all.

And corrected unit tests that were incorrectly relying on that behavior.

Note that a leading combinator will combine against the root element, which is either the Document, or the context element.

Fixes #1707
","d126488db626790a69ce99bb96bf3cfe9c591534","Jonathan Hedley"
"5201","consumeSubQuery","consumeSubQuery","4","Body Change","Sub-query should terminate on a combinator after any clause

Missed setting seenCombinator for attributes / sub-clauses.

Fixes #2073
Regression in: d126488db626790a69ce99bb96bf3cfe9c591534

Also added EvaluatorDebug which creates a XML outline and a sexpr for the query, to aid visualizing the query. Might make it public and add it to try.jsoup.org.
","7e9160110f3cac233e748f4f31c2ec22f0286f6b","Jonathan Hedley"
"5202","consumeEvaluator","consumeEvaluator","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5203","consumeEvaluator","consumeEvaluator","2","Body Change, Introduced, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5204","parsePseudoSelector","parsePseudoSelector","3","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5205","parsePseudoSelector","parsePseudoSelector","3","Body Change, Introduced, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5206","parsePseudoSelector","parsePseudoSelector","3","Body Change","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"5207","byId","byId","1","Return Type Change","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5208","byClass","byClass","1","Return Type Change","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5209","byTag","byTag","7","Body Change","Merge pull request #724 from er1c/wildcardnamespace

Add wildcard-namespace selector support '*|' Issue #723","1eecd1ad42097adba8f43ab1928e76b6027d3ad1","Jonathan Hedley"
"5210","byTag","byTag","7","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5211","byTag","byTag","7","Body Change","Fix case in-sensitivity for Tag.Endswith (namespaced elements)

Fixes #1257
","f2ff26b63c74c379c52da1f9c58bf328598fd2ba","Jonathan Hedley"
"5212","byTag","byTag","7","Body Change","Fix the Evaluator for wildcard namespace queries

The *|el wildcard namespace selector now also matches elements with no namespace.

Fixes #1565
","426e35ec1cd48cd2802e031fc8b4ef4a42de0482","jhy"
"5213","byTag","byTag","7","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5214","byTag","byTag","7","Body Change","Added support for `ns|*` selector

Fixes #1811
","5ad4b5347b9aec819ed1017fff5faac9c9da715e","Jonathan Hedley"
"5215","byTag","byTag","7","Body Change","Tidied up the namespace tag eval builder a little
","61ecdf33d20d345beaf5c044f18596f63f98746c","Jonathan Hedley"
"5216","byAttribute","byAttribute","3","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5217","byAttribute","byAttribute","3","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5218","byAttribute","byAttribute","3","Body Change","Implement the `[*]` any attribute selector

Fixes #2079
","945b5218b271d8c8cc0df529e8b1fd0330971e41","Jonathan Hedley"
"5219","cssNthChild","cssNthChild","1","Body Change, Introduced, MultiChange","Fix parse of :nth-child(-n+2)

The `-` sign of the nth-child step was ignored if there was no digit for the step.

Also cleaned up the function a bit.

Fixes #1147
","62674f903bd2fc352601fa39a3d9dea348e59f4b","Jonathan Hedley"
"5220","consumeParens","consumeParens","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5221","consumeParens","consumeParens","2","Body Change, Introduced, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5222","consumeIndex","consumeIndex","1","Body Change","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5223","has","has","1","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5224","is","is","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5225","is","is","2","Body Change, Introduced, MultiChange","Added the `:is` pseudo selector
","bbb9cdcbaf45f6459fdb9059b2616c590d4de710","Jonathan Hedley"
"5226","contains","contains","2","Body Change","Simplified ownText evaluator
","ab1d80bbe65788925f798d4313361285b1e7216c","Jonathan Hedley"
"5227","contains","contains","2","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5228","containsWholeText","containsWholeText","3","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5229","containsWholeText","containsWholeText","3","Body Change, Introduced, MultiChange","Simplified ownText evaluator
","ab1d80bbe65788925f798d4313361285b1e7216c","Jonathan Hedley"
"5230","containsWholeText","containsWholeText","3","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5231","containsData","containsData","3","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5232","containsData","containsData","3","Body Change, Introduced, MultiChange","Added :containsData() selector
","1038abfd34a21905e176e6d28f6377c90fce27d7","Jonathan Hedley"
"5233","containsData","containsData","3","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5234","matches","matches","2","Body Change","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"5235","matches","matches","2","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5236","matchesWholeText","matchesWholeText","3","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5237","matchesWholeText","matchesWholeText","3","Body Change, Introduced, MultiChange","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"5238","matchesWholeText","matchesWholeText","3","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5239","not","not","1","Return Type Change, Body Change, MultiChange","Optimization: parse psuedo-selectors in a switch

Vs an if/else-if hunt in the TokenQueue.

Also a light refactoring to return the Evaluators vs each method adding to the eval list directly.
","0bed59f3aad172aafb9732b77dde87a7643aebf0","Jonathan Hedley"
"5240","toString","toString","1","Body Change, Introduced, MultiChange","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"5241","CombiningEvaluator","CombiningEvaluator","1","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5242","CombiningEvaluator","CombiningEvaluator","1","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5243","reset","reset","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5244","reset","reset","2","Body Change, Introduced, MultiChange","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5245","cost","cost","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5246","cost","cost","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5247","rightMostEvaluator","rightMostEvaluator","4","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5248","rightMostEvaluator","rightMostEvaluator","4","Body Change, Introduced, MultiChange","Fixed precedence parsing of group OR (,) in CSS selectors.

Added tests, and repaired cheekily / hastily / incorrectly modified test.
","5d56ace149ae3264d2502d49dd85302fc613a27c","Jonathan Hedley"
"5249","rightMostEvaluator","rightMostEvaluator","4","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5250","rightMostEvaluator","rightMostEvaluator","4","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5251","replaceRightMostEvaluator","replaceRightMostEvaluator","4","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5252","replaceRightMostEvaluator","replaceRightMostEvaluator","4","Body Change, Introduced, MultiChange","Fixed precedence parsing of group OR (,) in CSS selectors.

Added tests, and repaired cheekily / hastily / incorrectly modified test.
","5d56ace149ae3264d2502d49dd85302fc613a27c","Jonathan Hedley"
"5253","replaceRightMostEvaluator","replaceRightMostEvaluator","4","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5254","replaceRightMostEvaluator","replaceRightMostEvaluator","4","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5255","updateEvaluators","updateEvaluators","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5256","updateEvaluators","updateEvaluators","2","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5257","And","And","1","Modifier Change","Make And and Or constructors public

Allows composability

Fixes #2214
","708fc1fc5e41b8bb02d0ce15a9da8086f6bdb9dd","Jonathan Hedley"
"5258","matches","matches","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5259","Or","Or","2","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5260","Or","Or","2","Modifier Change","Make And and Or constructors public

Allows composability

Fixes #2214
","708fc1fc5e41b8bb02d0ce15a9da8086f6bdb9dd","Jonathan Hedley"
"5261","Or","Or","2","File Renamed","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5262","Or","Or","2","Body Change, Introduced, MultiChange","Merge pull request #724 from er1c/wildcardnamespace

Add wildcard-namespace selector support '*|' Issue #723","1eecd1ad42097adba8f43ab1928e76b6027d3ad1","Jonathan Hedley"
"5263","Or","Or","1","Body Change","Fixed parsing of group-or commas in CSS selectors.

Fixes #179
","249e5a8aae9324cc6c8caf5303a607056b15a9da","Jonathan Hedley"
"5264","add","add","1","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5265","matches","matches","4","Body Change","Don't create Iterator objects in these tight Evaluator loops.

Saves a fair bit of GC time when selecting.
","d55af6718e4b1b4bcbea954616ce7fb2e5a8f42b","Jonathan Hedley"
"5266","matches","matches","4","Body Change","Performance: CPU and memory improvements for Selectors

Reduced CPU load and GC load for common selector use
","2c8b9ad145d3b808be19ce03a99797215e0c3ca3","Jonathan Hedley"
"5267","matches","matches","4","Body Change","Fixes the toString() methods of the Evaluators
","4861505419b35b5373d00840b3f06775ccbf1454","Jonathan Hedley"
"5268","matches","matches","4","Body Change","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5269","Selector","Selector","1","Introduced","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"5270","select","select","4","Exceptions Change","Implemented ElementList.select()
","c1ef042a598d492cbcf0bcf09526a49c74bec073","Jonathan Hedley"
"5271","select","select","4","Return Type Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5272","select","select","4","Exceptions Change","Javadoc for selector parse exceptions

Fixes #507
","6e14804768c3553c0670ea08135675d67d51d811","Jonathan Hedley"
"5273","select","select","4","Body Change, Exceptions Change, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"5274","select","select","2","Body Change, Introduced, MultiChange","Improve performance when selecting against multiple roots

Caches the parsed query

Fixes #518
","585eb726fdb2165a91146a3c9f8fbbfeb4ad9e7b","Jonathan Hedley"
"5275","select","select","2","Body Change","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"5276","selectStream","selectStream","1","Body Change, Exceptions Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"5277","selectStream","selectStream","1","Body Change, Introduced, MultiChange","Add select methods returning element streams (#2092)

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","d5bbe252f1472f95372612fa9f9fe1616f0b5dbc","Isira Seneviratne"
"5278","select","select","7","Body Change","Implemented ElementList.select()
","c1ef042a598d492cbcf0bcf09526a49c74bec073","Jonathan Hedley"
"5279","select","select","7","Return Type Change","Renamed ElementList to Elements
","e4ff08f2bad145ec500228de112c8e821e8725cc","Jonathan Hedley"
"5280","select","select","7","Body Change","Improve performance when selecting against multiple roots

Caches the parsed query

Fixes #518
","585eb726fdb2165a91146a3c9f8fbbfeb4ad9e7b","Jonathan Hedley"
"5281","select","select","7","Body Change","Dedupe elements by identity, not equality

Fixed #614
","73b52d0d995b8c6091c0e92f8ada03a2753b576a","Jonathan Hedley"
"5282","select","select","7","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"5283","select","select","7","Body Change","Minor performance improvement to Selector.select() (#1479)

","73e23c1aafe283c227b22993a9c9510d1113ac86","David Ehrmann"
"5284","select","select","7","Body Change","Simplified multi-root select dedupe

Very previously required IdentityHashMap as Element.equals was a value test, but is now actually a reference test.
","0a2a2c48e3e69f30ab22c3343de05ea92c443c44","Jonathan Hedley"
"5285","filterOut","filterOut","1","Body Change, Introduced, MultiChange","Added :not() selector, to find elements that do not match the selector. E.g. div:not(.logo) finds divs that
do not have the ""logo"" class name.

Fixes #36
","f462438f2ebfb354c823cd2c0b677b0674f0e80c","Jonathan Hedley"
"5286","selectFirst","selectFirst","2","Body Change, Introduced, MultiChange","Added Element.selectFirst()
","a97672ad240f679f0071e046a119edb6d7dcbb1c","Jonathan Hedley"
"5287","selectFirst","selectFirst","2","Modifier Change","Updated Document#head and #body to normalize, always return Element

Also fixed Cleaner(Whitelist) method
","415f625565edde917945beedb201285d744365d3","Jonathan Hedley"
"5288","selectFirst","selectFirst","1","Body Change, Introduced, MultiChange","Add `selectFirst` and `expectFirst` to Elements (#2263)

Add `selectFirst` and `expectFirst` to Elements

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","8086b1e4088eb586e0abf939af18cf2d4beb4acb","Chris Midgley"
"5289","SelectorParseException","SelectorParseException","2","File Renamed","Implemented ElementList.select()
","c1ef042a598d492cbcf0bcf09526a49c74bec073","Jonathan Hedley"
"5290","SelectorParseException","SelectorParseException","2","Body Change, Introduced, MultiChange","Don't String.format the message unless there are formatting parameters

Fixes #1691
","7f1732a50ae9478496f74307fc0ac22044a504d0","Jonathan Hedley"
"5291","SelectorParseException","SelectorParseException","1","Body Change, Introduced, MultiChange","Maintain the root cause for Xpath parse exceptions
","0b10d516ed8f907f8fb4acb9a0806137a8988d45","Jonathan Hedley"
"5292","SelectorParseException","SelectorParseException","1","Body Change, Introduced, MultiChange","Maintain the root cause for Xpath parse exceptions
","0b10d516ed8f907f8fb4acb9a0806137a8988d45","Jonathan Hedley"
"5293","Evaluator","Evaluator","3","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5294","Evaluator","Evaluator","3","Modifier Change","Cleanup of selector class files
","64ec9cfb151f26e85c0c206ce6aba063695e47cd","Jonathan Hedley"
"5295","Evaluator","Evaluator","3","Modifier Change","Made Evaluator constructor public to allow custom implementations
","f2535d705491ba6a582abff96ba77dc1144f64a5","LogDigger"
"5296","asPredicate","asPredicate","2","Body Change, Introduced, MultiChange","Added NodeIterator and Stream support (#2051)

Improvement: added the NodeIterator class, to efficiently traverse a node tree using the Iterator interface.

And added Stream Element#stream() and Node#nodeStream() methods, to enable fluent composable stream pipelines of node traversals.

NodeIterator only hits nodes once (vs head and tail for NodeTraversor), is restartable, supports modifications of the node it just emitted (e.g. replace, remove), supports type filtering, and emits in document order.

Refactored most head-only uses of NodeTraversor to use the NodeIterator or a Stream backed by it.
","f51115f52afc4b293423d5961f4e9b0e5e4cc7c2","Jonathan Hedley"
"5297","asPredicate","asPredicate","2","Body Change","Convert evaluator predicate to lambda (#2053)

","6307b94928ffb7998f8bd1222130c62b0188f174","Isira Seneviratne"
"5298","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5299","reset","reset","1","Introduced","Optimization: memoize matches in StructuralEvaluator

As the StructuralEvaluator looks for matches on multiple elements (preceding siblings, ancetors, etc), it's useful to keep a cache of previous match results. This saves re-executing the same match repeatedly.

The cache is implemented in a ThreadLocal, as an Evaluator may be reused across multiple queries.
","c57e68388f521bbb84cc4b281e6f79eb46d7a3ad","Jonathan Hedley"
"5300","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5301","Tag","Tag","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5302","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5303","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5304","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5305","TagStartsWith","TagStartsWith","1","Body Change, Introduced, MultiChange","Added support for `ns|*` selector

Fixes #1811
","5ad4b5347b9aec819ed1017fff5faac9c9da715e","Jonathan Hedley"
"5306","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5307","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5308","TagEndsWith","TagEndsWith","1","Body Change, Introduced, MultiChange","Merge pull request #724 from er1c/wildcardnamespace

Add wildcard-namespace selector support '*|' Issue #723","1eecd1ad42097adba8f43ab1928e76b6027d3ad1","Jonathan Hedley"
"5309","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5310","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5311","Id","Id","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5312","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5313","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5314","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5315","Class","Class","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5316","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5317","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5318","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5319","Attribute","Attribute","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5320","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5321","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5322","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5323","AttributeStarting","AttributeStarting","3","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5324","AttributeStarting","AttributeStarting","3","Body Change","Merge branch 'parsesettings'
","e38b916ba1ebd3f5c00a6b6b8e77a4cdfea2800f","Jonathan Hedley"
"5325","AttributeStarting","AttributeStarting","3","Body Change","Relax validator to support `[^]` any attribute prefix

This discovered functionality previously worked.

Relates to #2079
","3375e1c24fcbb2b53819bf87460f3eb4932b1c78","Jonathan Hedley"
"5326","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5327","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5328","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5329","AttributeWithValue","AttributeWithValue","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5330","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5331","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5332","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5333","AttributeWithValueNot","AttributeWithValueNot","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5334","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5335","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5336","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5337","AttributeWithValueStarting","AttributeWithValueStarting","2","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5338","AttributeWithValueStarting","AttributeWithValueStarting","2","Body Change","fix for bug #1279
","8371a171fcc3314a343223d83bcab7fa2c40c0c7","Michel Petrovic"
"5339","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5340","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5341","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5342","AttributeWithValueEnding","AttributeWithValueEnding","2","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5343","AttributeWithValueEnding","AttributeWithValueEnding","2","Body Change","Also add fix for ends with spaces

Fixes #1279
","a4210b7a958aa2eaff2b78881f5a1e16f8265dc8","Jonathan Hedley"
"5344","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5345","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5346","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5347","AttributeWithValueContaining","AttributeWithValueContaining","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5348","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5349","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5350","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5351","AttributeWithValueMatching","AttributeWithValueMatching","2","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5352","AttributeWithValueMatching","AttributeWithValueMatching","2","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5353","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5354","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5355","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5356","AttributeKeyPair","AttributeKeyPair","5","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5357","AttributeKeyPair","AttributeKeyPair","5","Body Change","Merge pull request #400 from mdaniel/css2-quoted-attributes-fix

Add support for quoted attribute values","d84d6a145fa09440803bf184f7ad405167463f10","Jonathan Hedley"
"5358","AttributeKeyPair","AttributeKeyPair","5","Body Change","Merge pull request #655 from javalite/master

#650 Cannot use single quotes in selectors","97c3cb4d63c5512e2b596fbe0de6f3709418e157","Jonathan Hedley"
"5359","AttributeKeyPair","AttributeKeyPair","5","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5360","AttributeKeyPair","AttributeKeyPair","5","Body Change","fix for bug #1279
","8371a171fcc3314a343223d83bcab7fa2c40c0c7","Michel Petrovic"
"5361","AttributeKeyPair","AttributeKeyPair","1","Body Change, Introduced, MultiChange","fix for bug #1279
","8371a171fcc3314a343223d83bcab7fa2c40c0c7","Michel Petrovic"
"5362","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5363","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5364","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5365","IndexLessThan","IndexLessThan","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5366","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5367","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5368","IndexGreaterThan","IndexGreaterThan","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5369","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5370","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5371","IndexEquals","IndexEquals","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5372","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5373","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5374","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5375","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5376","IsFirstOfType","IsFirstOfType","1","Body Change, Introduced, MultiChange","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5377","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5378","IsLastOfType","IsLastOfType","1","Body Change, Introduced, MultiChange","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5379","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5380","CssNthEvaluator","CssNthEvaluator","2","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5381","CssNthEvaluator","CssNthEvaluator","2","Body Change","These field names are part of the API :(
","ae606bf695eb20559e824600245b781d815d23e1","Jonathan Hedley"
"5382","CssNthEvaluator","CssNthEvaluator","1","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5383","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5384","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5385","getPseudoClass","getPseudoClass","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5386","calculatePosition","calculatePosition","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5387","IsNthChild","IsNthChild","1","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5388","calculatePosition","calculatePosition","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5389","getPseudoClass","getPseudoClass","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5390","IsNthLastChild","IsNthLastChild","1","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5391","calculatePosition","calculatePosition","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5392","getPseudoClass","getPseudoClass","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5393","IsNthOfType","IsNthOfType","1","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5394","calculatePosition","calculatePosition","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5395","getPseudoClass","getPseudoClass","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5396","IsNthLastOfType","IsNthLastOfType","1","Body Change, Introduced, MultiChange","Added Evaluator toString tests, fixed formatting
","34fb15336ecb6504338c5a17052c158d17241958","Jonathan Hedley"
"5397","calculatePosition","calculatePosition","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5398","getPseudoClass","getPseudoClass","1","Introduced","Merge commit 'db2d5aa85352fe63531540ef396b944e2fe58e2c'

Added selector javadoc
","dd8e832191e78a417a03c88512b1d7eeb7f486d4","Jonathan Hedley"
"5399","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5400","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5401","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5402","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5403","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5404","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5405","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5406","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5407","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5408","matches","matches","1","Body Change, Introduced, MultiChange","Don't short-circuit on blank text in `:empty`

Fixes #2130

Also clarified the documentation, and reduced GC during the loop by not hitting element.childNodes().

Regressed by #1976
","6de7cfcd9dbe64297a2d430601f69d0b8005eece","Jonathan Hedley"
"5409","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5410","IndexEvaluator","IndexEvaluator","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5411","ContainsText","ContainsText","3","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5412","ContainsText","ContainsText","3","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5413","ContainsText","ContainsText","3","Body Change","Normalize the query in :contains and :containsOwn selectors

Addresses #876
","ec9847624f75ee485247f1173cafa20eb4a385a8","jhy"
"5414","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5415","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5416","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5417","ContainsWholeText","ContainsWholeText","1","Body Change, Introduced, MultiChange","Added :containsWholeText

Part of #1636
","adba4e80be13fb7a8d0ddfb31258b628bba61b99","jhy"
"5418","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5419","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5420","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5421","ContainsWholeOwnText","ContainsWholeOwnText","1","Body Change, Introduced, MultiChange","Added the :containsWholeOwnText selector

And the corresponding Element#wholeOwnText() method.

For #1636
","027c70c94368c2793a42c0532d29f4e05a0307f8","Jonathan Hedley"
"5422","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5423","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5424","ContainsData","ContainsData","2","Body Change, Introduced, MultiChange","Added :containsData() selector
","1038abfd34a21905e176e6d28f6377c90fce27d7","Jonathan Hedley"
"5425","ContainsData","ContainsData","2","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5426","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5427","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5428","ContainsOwnText","ContainsOwnText","3","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5429","ContainsOwnText","ContainsOwnText","3","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5430","ContainsOwnText","ContainsOwnText","3","Body Change","Normalize the query in :contains and :containsOwn selectors

Addresses #876
","ec9847624f75ee485247f1173cafa20eb4a385a8","jhy"
"5431","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5432","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5433","Matches","Matches","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5434","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5435","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5436","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5437","MatchesOwn","MatchesOwn","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5438","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5439","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5440","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5441","MatchesWholeText","MatchesWholeText","1","Body Change, Introduced, MultiChange","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"5442","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5443","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5444","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5445","MatchesWholeOwnText","MatchesWholeOwnText","1","Body Change, Introduced, MultiChange","Added selectors for matchesWholeText and matchesWholeOwnText

Fixes #1636
","4535a57711d160318d8716618d8b9c5d6fd02394","Jonathan Hedley"
"5446","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5447","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5448","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5449","matches","matches","1","Introduced","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5450","cost","cost","1","Body Change, Introduced, MultiChange","Added a cost-based query planner for CSS selectors

Simpler queries are executed before more complex queries, to improve performance.

Notably, in a query like `div:has(p)`, the element under test is now first evaluated to match the `div` tag, before the deep `:has(p)` scan is executed. Previously it would be the other way around, as the And evaluator always performed a RTL execution.

The initial costs are fairly arbitrary and may be tweaked if required upon further analysis.
","32d247d6f4ec66b10c32be2fb6d2f2666c2399bf","Jonathan Hedley"
"5451","toString","toString","1","Body Change, Introduced, MultiChange","Integrated new single-pass selector evaluators, contributed by knz (Anton Kazennikov).
","bbca7db20b9a45fb3d8efb29447349ed8593649c","Jonathan Hedley"
"5452","tail","tail","1","Modifier Change, Body Change, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"5453","head","head","3","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"5454","head","head","3","Body Change","Support node.replaceWith(node) during node traversal

Closes #1289
","d66decd3c6ce450c19f276e9693a2727b7aa9748","Jonathan Hedley"
"5455","head","head","3","Body Change","Allow nodes to be removed in NodeTraversor
","2bad736e9a18bab0b4660423b0eb3c4dc961a312","Jonathan Hedley"
"5456","tail","tail","4","Modifier Change","Code cleanup
","616d3c40fe99402c4b1311a2af2819fe1ad52cfb","Jonathan Hedley"
"5457","tail","tail","4","Body Change","Support node.replaceWith(node) during node traversal

Closes #1289
","d66decd3c6ce450c19f276e9693a2727b7aa9748","Jonathan Hedley"
"5458","tail","tail","4","Modifier Change, Body Change, MultiChange","Added default impls of tail() for Node Visitor and Filters

Allows to be called via a lambda
","6c7679ce2f00a517717962fc896d80ff5b50d4be","Jonathan Hedley"
"5459","tail","tail","4","Body Change","Allow nodes to be removed in NodeTraversor
","2bad736e9a18bab0b4660423b0eb3c4dc961a312","Jonathan Hedley"
"5460","applyCookiesToRequest","applyCookiesToRequest","1","Body Change, Exceptions Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5461","storeCookies","storeCookies","2","Body Change, Exceptions Change, MultiChange","Ensure that response.cookies() includes all set cookies

A rollback from b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73. The net effect is that cookies() will include any cookies set on the response, but if there is a duplicate, the last one will be set. The cookies via the cookie store are still appropriately scoped.
","8dec9c302e2f2d2b5560fefa0d3ed7e1b813e195","Jonathan Hedley"
"5462","storeCookies","storeCookies","2","Body Change, Exceptions Change, MultiChange","Skip empty cookie names

Fixes #2242
","9591169019cbf964f748eb657d1f0ab8cd0b0f09","Jonathan Hedley"
"5463","parseCookie","parseCookie","2","Body Change, Introduced, MultiChange","Skip empty cookie names

Fixes #2242
","9591169019cbf964f748eb657d1f0ab8cd0b0f09","Jonathan Hedley"
"5464","parseCookie","parseCookie","2","Body Change","Token Queue refactor (#2303)

Removed redundancies between the TokenQueue and CharacterReader classes, and simplified the implementation.","7707efccded0f1cca2efc8ab961f64bc0b204cd4","Jonathan Hedley"
"5465","DataUtil","DataUtil","1","Introduced","Tweaks
","b57bab46e4241cd3cacce52cb6ff310bbf69eb7b","Jonathan Hedley"
"5466","load","load","2","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"5467","load","load","2","Exceptions Change","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"5468","load","load","2","Body Change, Exceptions Change, Introduced, MultiChange","Refactored fuzz tests to iterate all files in directory; run timeout tests
","530c5b0fcbef330ea762071144a864e19b1c7595","Jonathan Hedley"
"5469","load","load","2","Body Change, Exceptions Change, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"5470","load","load","1","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"5471","load","load","3","Body Change, Exceptions Change, Introduced, MultiChange","Add Path-accepting Jsoup methods (#2055)

Add Path-accepting Jsoup methods

Also improve file parsing using SeekableByteChannel

Clean up parseInputStream

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>","c37e8d66dd7acd1cef8a5fc860140f8796c84ab4","Isira Seneviratne"
"5472","load","load","3","Body Change, Exceptions Change, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5473","load","load","3","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5474","streamParser","streamParser","4","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5475","streamParser","streamParser","4","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5476","streamParser","streamParser","4","Body Change","Improved javadoc for StreamParser
","6f8291da9a07dbb0cd8231a39852c9705e4ab65b","Jonathan Hedley"
"5477","streamParser","streamParser","4","Exceptions Change","Close resources if IOException on setup
","453af8c1c8475260ed67da7ca201823158c23d63","Jonathan Hedley"
"5478","openStream","openStream","3","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5479","openStream","openStream","3","Return Type Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5480","openStream","openStream","3","Body Change, Exceptions Change, MultiChange","Close resources if IOException on setup
","453af8c1c8475260ed67da7ca201823158c23d63","Jonathan Hedley"
"5481","load","load","4","Body Change, Exceptions Change, Introduced, MultiChange","Annotate some nullables
","9d538e634c47754f976e6503ed7e427f92802ec2","Jonathan Hedley"
"5482","load","load","4","Body Change, Exceptions Change, Deleted, MultiChange","Correct javadoc and add @WillClose annotations

Co-authored-by: Jan Artysiewicz <jan.artysiewicz@cronn.de>","38b32245201b405185c2c36c52637f8b27ddbdd2","jartysiewicz"
"5483","load","load","4","Body Change, Exceptions Change, Introduced, MultiChange","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"5484","load","load","4","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5485","load","load","4","Body Change, Exceptions Change, Introduced, MultiChange","Annotate some nullables
","9d538e634c47754f976e6503ed7e427f92802ec2","Jonathan Hedley"
"5486","load","load","4","Body Change, Exceptions Change, Deleted, MultiChange","Correct javadoc and add @WillClose annotations

Co-authored-by: Jan Artysiewicz <jan.artysiewicz@cronn.de>","38b32245201b405185c2c36c52637f8b27ddbdd2","jartysiewicz"
"5487","load","load","4","Body Change, Exceptions Change, Introduced, MultiChange","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"5488","load","load","4","Exceptions Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5489","crossStreams","crossStreams","2","Body Change, Exceptions Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5490","crossStreams","crossStreams","2","Body Change, Exceptions Change, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"5491","CharsetDoc","CharsetDoc","1","Body Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5492","parseInputStream","parseInputStream","1","Body Change, Exceptions Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5493","detectCharset","detectCharset","1","Body Change, Exceptions Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5494","parseInputStream","parseInputStream","2","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5495","parseInputStream","parseInputStream","2","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5496","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, Introduced, MultiChange","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"5497","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Modified maxBodySize to truncate at precise max.

Rather than previous implementation which was up to the internal buffer
size (130K) larger.
","f9f37e19876202a1db257a9e59452b0f10035fbf","Jonathan Hedley"
"5498","readToByteBuffer","readToByteBuffer","9","Exceptions Change","Code cleanup
","63b778a5b41e75cb46a817fbdcc8e65db740a46c","Jonathan Hedley"
"5499","readToByteBuffer","readToByteBuffer","9","Modifier Change, Body Change, Exceptions Change, MultiChange","Use jsoup's CharacterReader instead of regexes to parse Entities

Faster, less memory.
","6dc38f26dd31f1a367961f27c56b143cd0462e5a","Jonathan Hedley"
"5500","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Suggesting an implementation to issue #711
","cd45173d0787948003ffc41bba0ffbd34c915900","Alon Cohen"
"5501","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Tidied up interrupt check, added test case to make sure it works.
","032c97320f4ca7256a60e7319b6354c62971702c","Jonathan Hedley"
"5502","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"5503","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Simplified and corrected ConstrainableInputStream impl
","a129f801497f6dc90048fa5cd52672274425cc18","Jonathan Hedley"
"5504","readToByteBuffer","readToByteBuffer","9","Body Change, Exceptions Change, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"5505","emptyByteBuffer","emptyByteBuffer","1","Body Change, Introduced, MultiChange","Check content-length != 0, or will throw an IO Exception

Fixes #538
","b8c259cfaf668e4237de09a0327b82080cfd37ba","Jonathan Hedley"
"5506","getCharsetFromContentType","getCharsetFromContentType","1","Body Change, Introduced, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5507","validateCharset","validateCharset","1","Body Change, Introduced, MultiChange","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5508","mimeBoundary","mimeBoundary","2","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5509","mimeBoundary","mimeBoundary","2","Body Change","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5510","detectCharsetFromBom","detectCharsetFromBom","1","Body Change, Exceptions Change, Introduced, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5511","getPasswordAuthentication","getPasswordAuthentication","1","Body Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5512","enable","enable","1","-","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5513","enable","enable","1","Body Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5514","notNull","notNull","3","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5515","notNull","notNull","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5516","notNull","notNull","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5517","notNullParam","notNullParam","1","Body Change, Exceptions Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5518","notNull","notNull","3","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5519","notNull","notNull","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5520","notNull","notNull","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5521","ensureNotNull","ensureNotNull","3","Body Change, Exceptions Change, Introduced, MultiChange","Improvement: adds optional source position tracking (#1790)

* Improvement: adds optional source position tracking

Updated the Tokeniser to optionally track the input source character ranges for nodes, and the end tags for Elements. This gives the ability to (for example) visually link an editor to the parsed DOM.","5abf30a8ec16ec447123c0f7c4e5763cd7e1797b","Jonathan Hedley"
"5522","ensureNotNull","ensureNotNull","3","Body Change, Exceptions Change, MultiChange","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5523","ensureNotNull","ensureNotNull","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5524","ensureNotNull","ensureNotNull","1","Body Change, Exceptions Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5525","isTrue","isTrue","3","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5526","isTrue","isTrue","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5527","isTrue","isTrue","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5528","isTrue","isTrue","3","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5529","isTrue","isTrue","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5530","isTrue","isTrue","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5531","isFalse","isFalse","3","Body Change, Exceptions Change, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5532","isFalse","isFalse","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5533","isFalse","isFalse","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5534","isFalse","isFalse","3","Body Change, Exceptions Change, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5535","isFalse","isFalse","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5536","isFalse","isFalse","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5537","noNullElements","noNullElements","3","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5538","noNullElements","noNullElements","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5539","noNullElements","noNullElements","3","Exceptions Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5540","noNullElements","noNullElements","3","Exceptions Change","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5541","noNullElements","noNullElements","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5542","noNullElements","noNullElements","3","Exceptions Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5543","notEmpty","notEmpty","3","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5544","notEmpty","notEmpty","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5545","notEmpty","notEmpty","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5546","notEmptyParam","notEmptyParam","1","Body Change, Exceptions Change, Introduced, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5547","notEmpty","notEmpty","3","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5548","notEmpty","notEmpty","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5549","notEmpty","notEmpty","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5550","wtf","wtf","2","Body Change, Introduced, MultiChange","Ensure enough data is buffered to survive a Mark reset

Fixes #1218
","a0b87bf10a9a520b49748c619c868caed8d7a109","Jonathan Hedley"
"5551","wtf","wtf","2","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5552","fail","fail","3","Body Change, Exceptions Change, MultiChange","Reimplementation of parser and tokeniser, to make jsoup a HTML5 conformat parser, against the
http://whatwg.org/html spec.
","8749726a79c22451b1f01b14fb2137f734e926b4","Jonathan Hedley"
"5553","fail","fail","3","Exceptions Change","Tidied up documentation
","fe0f9263435b44534182ddac830e6c6fd897bf92","Jonathan Hedley"
"5554","fail","fail","3","Body Change, Exceptions Change, MultiChange","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5555","assertFail","assertFail","1","Body Change, Exceptions Change, Introduced, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"5556","fail","fail","1","Body Change, Exceptions Change, Introduced, MultiChange","Added Document#expectForm
","bc320aa0e93c45fbb27e2d6ac5596f6afd9d371a","Jonathan Hedley"
"5557","HttpConnection","HttpConnection","3","Modifier Change","Make HttpConnection constructor public

For DI tasks

Fixes #1052
","1933e9727c694863d6b7a9bb98682b560510d212","Jonathan Hedley"
"5558","HttpConnection","HttpConnection","3","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5559","HttpConnection","HttpConnection","3","Body Change","Reuse HttpClient throughout a Connection session

Enables http/2 connection reuse

#2257
","a62c7f37d4132f3180bfef3e0d872d8e3cf87b5e","Jonathan Hedley"
"5560","HttpConnection","HttpConnection","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5561","encodeMimeName","encodeMimeName","4","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5562","encodeMimeName","encodeMimeName","4","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5563","encodeMimeName","encodeMimeName","4","Body Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5564","encodeMimeName","encodeMimeName","4","Modifier Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5565","newRequest","newRequest","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5566","HttpConnection","HttpConnection","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5567","url","url","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5568","url","url","5","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5569","url","url","5","Body Change","Merge branch 'pr/354'
","b67cc18ba1814d1abdb16f8ee9bb5473aaa42cf8","Jonathan Hedley"
"5570","url","url","5","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5571","url","url","5","Body Change","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"5572","url","url","5","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5573","proxy","proxy","2","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5574","proxy","proxy","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5575","proxy","proxy","2","Body Change, Introduced, MultiChange","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"5576","proxy","proxy","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5577","userAgent","userAgent","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5578","userAgent","userAgent","4","Body Change","Updated default timeout and user-agent
","2a9f635f6448f101916e3b723af567149a94ab0b","Jonathan Hedley"
"5579","userAgent","userAgent","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5580","userAgent","userAgent","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5581","timeout","timeout","2","Body Change, Introduced, MultiChange","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"5582","timeout","timeout","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5583","maxBodySize","maxBodySize","2","Body Change, Introduced, MultiChange","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"5584","maxBodySize","maxBodySize","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5585","followRedirects","followRedirects","2","Body Change, Introduced, MultiChange","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"5586","followRedirects","followRedirects","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5587","referrer","referrer","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5588","referrer","referrer","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5589","referrer","referrer","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5590","method","method","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5591","ignoreHttpErrors","ignoreHttpErrors","2","Body Change, Introduced, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5592","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5593","ignoreContentType","ignoreContentType","3","Body Change, Introduced, MultiChange","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"5594","ignoreContentType","ignoreContentType","3","Body Change","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5595","ignoreContentType","ignoreContentType","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5596","data","data","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5597","sslSocketFactory","sslSocketFactory","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"5598","sslSocketFactory","sslSocketFactory","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5599","data","data","2","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5600","data","data","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5601","data","data","1","Body Change, Introduced, MultiChange","Add option to set mimetype on uploads
","4685bd091a690e219e629687bf84cc6f752eff81","Jonathan Hedley"
"5602","data","data","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5603","data","data","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5604","data","data","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5605","data","data","4","Body Change","URL connection tests
","102caa116c375ab74da564ac0f4d5d954b6296dc","Jonathan Hedley"
"5606","data","data","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5607","data","data","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5608","data","data","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5609","data","data","3","Body Change, Introduced, MultiChange","First pass at a FomElement

The FormElement extends Element to provide ready access to a form's
controls, and to allow the form to be submitted. It also connects forms
to their controls in situations when the DOM tree created does not have
the form element be a parent of the control, like when the form tag is
in a TR but the control in a TD. In that case the form tag gets
reparented.
","c5792eb641b13f8a853b6f065b6998053d106b7d","Jonathan Hedley"
"5610","data","data","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5611","data","data","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5612","data","data","4","Body Change, Introduced, MultiChange","Added Connection.data(key)
","1406292ba194201a0314c1e7f0161f66ffea7335","Jonathan Hedley"
"5613","data","data","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5614","data","data","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5615","data","data","4","Return Type Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5616","requestBody","requestBody","2","Body Change, Introduced, MultiChange","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"5617","requestBody","requestBody","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5618","requestBodyStream","requestBodyStream","1","Body Change, Introduced, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"5619","header","header","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5620","headers","headers","3","Body Change, Introduced, MultiChange","Merge pull request #725 from zJiaJun/master

Add Connection.headers(map)","4029b29631731c9bd613fbbaf3efd399192f43bf","Jonathan Hedley"
"5621","headers","headers","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5622","headers","headers","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5623","cookie","cookie","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5624","cookies","cookies","3","Body Change, Introduced, MultiChange","Added jsoup.connect.cookies(Map) method, to set multiple cookies at once, possibly from a prior request.
","93ff111c590ea57b311705360111a3e54329a026","Jonathan Hedley"
"5625","cookies","cookies","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5626","cookies","cookies","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5627","cookieStore","cookieStore","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5628","cookieStore","cookieStore","1","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5629","parser","parser","3","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"5630","parser","parser","3","Body Change","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"5631","parser","parser","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5632","get","get","3","Exceptions Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5633","get","get","3","Body Change, Exceptions Change, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5634","get","get","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5635","post","post","3","Exceptions Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5636","post","post","3","Body Change, Exceptions Change, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5637","post","post","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5638","execute","execute","3","Body Change, Exceptions Change, MultiChange","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"5639","execute","execute","3","Body Change, Exceptions Change, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5640","execute","execute","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5641","request","request","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5642","request","request","2","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5643","request","request","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5644","response","response","2","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5645","response","response","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5646","response","response","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5647","postDataCharset","postDataCharset","2","Body Change, Introduced, MultiChange","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"5648","postDataCharset","postDataCharset","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5649","auth","auth","3","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5650","auth","auth","3","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"5651","auth","auth","3","Return Type Change, Body Change, MultiChange","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5652","onResponseProgress","onResponseProgress","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5653","onResponseProgress","onResponseProgress","2","Body Change, Introduced, MultiChange","Added a Response progress event interface  (#2164)

Added a Response progress event interface

Fixes #656","8c8f3f96e29c3dd7d7ad571f570d11abc21bf30e","Jonathan Hedley"
"5654","Base","Base","1","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"5655","Base","Base","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5656","Base","Base","2","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5657","url","url","3","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5658","url","url","3","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5659","url","url","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5660","url","url","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5661","method","method","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5662","method","method","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5663","header","header","7","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5664","header","header","7","Body Change","Handle UTF headers and encode URLs better

Fixes #706
","2cad0592106c30b04fe328b3989af619dcb6a49c","Jonathan Hedley"
"5665","header","header","7","Body Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5666","header","header","7","Body Change","Multiple headers should be comma joined
","35b592536592219f1b7731641726f0c7585039a5","Jonathan Hedley"
"5667","header","header","7","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5668","header","header","7","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5669","header","header","7","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5670","addHeader","addHeader","2","Body Change, Introduced, MultiChange","Only attempt to correct 8559 -> UTF on response headers

Fixes #2011

This allows header values to be sent as UTF-8 (as encoded by Java HTTP request writer). But that's out of spec and depending on how the upstream server handles that, may or may not work as the user intended. Hence added a note on the docs to suggest encoding the data first.
","9de27fa7cd823f6d26e33e48b36ef010c05f977c","Jonathan Hedley"
"5671","addHeader","addHeader","2","Body Change","Tidied up Nullable array values
","55e50b916fb05259d1a191c1390f5c0fdb10620a","Jonathan Hedley"
"5672","headers","headers","2","Body Change, Introduced, MultiChange","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5673","headers","headers","2","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5674","header","header","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5675","hasHeader","hasHeader","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5676","hasHeader","hasHeader","4","Body Change","Treat HTTP headers as case insensitive in Jsoup.Connection. Improves compatibility for HTTP responses.
","3091fd44859c3e5849fbc51fcab48342823276c2","Jonathan Hedley"
"5677","hasHeader","hasHeader","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5678","hasHeader","hasHeader","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5679","hasHeaderWithValue","hasHeaderWithValue","3","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5680","hasHeaderWithValue","hasHeaderWithValue","3","Body Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5681","hasHeaderWithValue","hasHeaderWithValue","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5682","removeHeader","removeHeader","5","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5683","removeHeader","removeHeader","5","Body Change","Treat HTTP headers as case insensitive in Jsoup.Connection. Improves compatibility for HTTP responses.
","3091fd44859c3e5849fbc51fcab48342823276c2","Jonathan Hedley"
"5684","removeHeader","removeHeader","5","Body Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5685","removeHeader","removeHeader","5","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5686","removeHeader","removeHeader","5","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5687","headers","headers","2","Body Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5688","headers","headers","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5689","multiHeaders","multiHeaders","1","Body Change, Introduced, MultiChange","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5690","getHeadersCaseInsensitive","getHeadersCaseInsensitive","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5691","getHeadersCaseInsensitive","getHeadersCaseInsensitive","2","Body Change, Introduced, MultiChange","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5692","scanHeaders","scanHeaders","5","Body Change, Introduced, MultiChange","Treat HTTP headers as case insensitive in Jsoup.Connection. Improves compatibility for HTTP responses.
","3091fd44859c3e5849fbc51fcab48342823276c2","Jonathan Hedley"
"5693","scanHeaders","scanHeaders","5","Body Change","Merge pull request #820 from cketti/GH-256_fix_locale_bugs

Don't use default locale when lowercasing","7ba0ee75547878ddccc5ab50777b67c712aa73e4","Jonathan Hedley"
"5694","scanHeaders","scanHeaders","5","Return Type Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5695","scanHeaders","scanHeaders","5","Modifier Change","More nullability assertions
","9b8e81ab9b7c92d59bfa3977f9ee5cb78ee5b40c","Jonathan Hedley"
"5696","scanHeaders","scanHeaders","5","Return Type Change, Modifier Change, MultiChange","Migrate Nullability assertions to jspecify (#2048)

Away from jsr305

With the goal of having a nullability assertion annotation that supports Java modules, so we can release the next version of jsoup.

Annotation options appear limited and does not support @​WillClose, but rest appears OK.

Fixes #2028
Fixes #1992","d11450cd5099eab34451af7caf54e09ef985673e","Jonathan Hedley"
"5697","cookie","cookie","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5698","cookie","cookie","4","Body Change","Merge pull request #377 from kaznovac/master

Fix Validation of cookie names in HttpConnection","333a6469ffec02354a56d1a5eb5867dc16da58a0","Jonathan Hedley"
"5699","cookie","cookie","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5700","cookie","cookie","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5701","cookie","cookie","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5702","hasCookie","hasCookie","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5703","hasCookie","hasCookie","4","Body Change","Merge pull request #377 from kaznovac/master

Fix Validation of cookie names in HttpConnection","333a6469ffec02354a56d1a5eb5867dc16da58a0","Jonathan Hedley"
"5704","hasCookie","hasCookie","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5705","hasCookie","hasCookie","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5706","removeCookie","removeCookie","4","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5707","removeCookie","removeCookie","4","Body Change","Merge pull request #377 from kaznovac/master

Fix Validation of cookie names in HttpConnection","333a6469ffec02354a56d1a5eb5867dc16da58a0","Jonathan Hedley"
"5708","removeCookie","removeCookie","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5709","removeCookie","removeCookie","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5710","cookies","cookies","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5711","Request","Request","10","Body Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5712","Request","Request","10","Body Change","Added support for gzipped output.

Fixes #28
","d65b6dad2a88e584be032481d30b7fc09112d225","Jonathan Hedley"
"5713","Request","Request","10","Body Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"5714","Request","Request","10","Body Change","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"5715","Request","Request","10","Body Change","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"5716","Request","Request","10","Body Change","Updated default timeout and user-agent
","2a9f635f6448f101916e3b723af567149a94ab0b","Jonathan Hedley"
"5717","Request","Request","10","Body Change","Updated from Java 5 to Java 7
","e2ff399dfdb1d4cf4ebb639d1fc2689aa2f6f3eb","Jonathan Hedley"
"5718","Request","Request","10","Modifier Change","Added support for multiple headers
","ea00e065f6245a94f87becf7d6ea80c46bc21ef1","Jonathan Hedley"
"5719","Request","Request","10","Body Change","Update default max body to 2MB. Update default UA.
","86d69ea625edc3650b50b8f13364c58a173fb9bf","Jonathan Hedley"
"5720","Request","Request","10","Body Change","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5721","Request","Request","4","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5722","Request","Request","4","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5723","Request","Request","4","Body Change","Don't copy request data or body on newRequest()

Enables multi-step forms, or requests after a form submission, without sending data from earlier submissions.

Fixes #1778
","a242df8520f59cbdfcf15a0f55fdf22d14fa9ad6","Jonathan Hedley"
"5724","Request","Request","4","Body Change","Reuse HttpClient throughout a Connection session

Enables http/2 connection reuse

#2257
","a62c7f37d4132f3180bfef3e0d872d8e3cf87b5e","Jonathan Hedley"
"5725","proxy","proxy","3","Body Change, Introduced, MultiChange","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"5726","proxy","proxy","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5727","proxy","proxy","3","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5728","proxy","proxy","2","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5729","proxy","proxy","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5730","proxy","proxy","2","Body Change, Introduced, MultiChange","Merge proxy support
","7bb01c0fd0ea1e97e66b2b1cccc39e3c57bc883d","Jonathan Hedley"
"5731","proxy","proxy","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5732","timeout","timeout","2","Body Change","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"5733","timeout","timeout","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5734","timeout","timeout","2","Body Change, Introduced, MultiChange","Connection timeout specified in millis, not seconds
","35090950b41fdd4f3c4cee798d53229d837e7599","Jonathan Hedley"
"5735","timeout","timeout","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5736","maxBodySize","maxBodySize","2","Body Change, Introduced, MultiChange","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"5737","maxBodySize","maxBodySize","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5738","maxBodySize","maxBodySize","2","Body Change, Introduced, MultiChange","Added a maximum body response size to Jsoup.Connection
","a8da2e7da25921dffd9fe6bbd53668bed08dd148","Jonathan Hedley"
"5739","maxBodySize","maxBodySize","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5740","followRedirects","followRedirects","2","Body Change, Introduced, MultiChange","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"5741","followRedirects","followRedirects","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5742","followRedirects","followRedirects","2","Body Change, Introduced, MultiChange","Updated Jsoup.Connection so that cookies set on a redirect response will be included on the redirected request and response.
","39915966a8b7329cdae21623f239e652fb6af763","Jonathan Hedley"
"5743","followRedirects","followRedirects","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5744","ignoreHttpErrors","ignoreHttpErrors","2","Body Change, Introduced, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5745","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5746","sslSocketFactory","sslSocketFactory","3","Body Change, Introduced, MultiChange","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"5747","sslSocketFactory","sslSocketFactory","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5748","sslSocketFactory","sslSocketFactory","3","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5749","sslSocketFactory","sslSocketFactory","2","Body Change, Introduced, MultiChange","Merge branch 'pr/1038'
","04f0ab3bf48a4ea1247fa9619b34cac6f6049a6a","Jonathan Hedley"
"5750","sslSocketFactory","sslSocketFactory","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5751","ignoreHttpErrors","ignoreHttpErrors","2","Body Change, Introduced, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5752","ignoreHttpErrors","ignoreHttpErrors","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5753","ignoreContentType","ignoreContentType","2","Body Change, Introduced, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5754","ignoreContentType","ignoreContentType","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5755","ignoreContentType","ignoreContentType","3","Body Change, Introduced, MultiChange","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"5756","ignoreContentType","ignoreContentType","3","Body Change","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5757","ignoreContentType","ignoreContentType","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5758","data","data","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5759","data","data","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5760","data","data","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5761","data","data","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5762","requestBody","requestBody","4","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5763","requestBody","requestBody","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5764","requestBody","requestBody","4","Body Change","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"5765","requestBody","requestBody","4","Body Change","Simplified request.body and bodyStream fields
","1a68cc9b8133cb847268b1b1fc00a6edf4a74bcb","Jonathan Hedley"
"5766","requestBody","requestBody","4","Body Change, Introduced, MultiChange","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"5767","requestBody","requestBody","4","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5768","requestBody","requestBody","4","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5769","requestBody","requestBody","4","Body Change","Simplified request.body and bodyStream fields
","1a68cc9b8133cb847268b1b1fc00a6edf4a74bcb","Jonathan Hedley"
"5770","requestBodyStream","requestBodyStream","1","Body Change, Introduced, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"5771","parser","parser","3","Body Change, Introduced, MultiChange","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"5772","parser","parser","3","Body Change","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"5773","parser","parser","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5774","parser","parser","2","Body Change, Introduced, MultiChange","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"5775","parser","parser","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5776","postDataCharset","postDataCharset","2","Body Change, Introduced, MultiChange","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"5777","postDataCharset","postDataCharset","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5778","postDataCharset","postDataCharset","2","Body Change, Introduced, MultiChange","Merge pull request #491 from andyphillips404/master

Update to allow for specification of form post data charset.","a2e331f03f2d439caa54c3014f8d5fb2dc206162","Jonathan Hedley"
"5779","postDataCharset","postDataCharset","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5780","cookieManager","cookieManager","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5781","cookieManager","cookieManager","2","Body Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5782","auth","auth","3","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5783","auth","auth","3","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"5784","auth","auth","3","Return Type Change, Body Change, MultiChange","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5785","auth","auth","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5786","auth","auth","2","Body Change, Introduced, MultiChange","Added support for per-request authentication to Jsoup.connect (#2046)

Added support for per-request authentication

Uses the multi-version support so that in Java versions that support it (9+), an authenticator is set via `java.net.HttpURLConnection.setAuthenticator()`.

On Java 8, we set the system-wide default authenticator, and use ThreadLocals to enable per-request authenticators.

Also adds tests for HTTP and HTTPS server and proxy basic authentication.","1123dd210a4b06b56986029386e5562aad63aa0d","Jonathan Hedley"
"5787","Response","Response","2","Body Change, Introduced, MultiChange","Prevent infinite redirection loops in jsoup.connect.
","9c46f13fc4b17bfa6c3cb58945568ae8d8b191af","Jonathan Hedley"
"5788","Response","Response","2","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5789","execute","execute","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5790","execute","execute","2","Body Change, Exceptions Change, Introduced, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5791","execute","execute","3","Body Change, Exceptions Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5792","execute","execute","3","Body Change, Exceptions Change, MultiChange","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"5793","execute","execute","3","Body Change, Exceptions Change, MultiChange","Simplified request.body and bodyStream fields
","1a68cc9b8133cb847268b1b1fc00a6edf4a74bcb","Jonathan Hedley"
"5794","statusCode","statusCode","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5795","statusMessage","statusMessage","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5796","charset","charset","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5797","charset","charset","2","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5798","charset","charset","2","Body Change, Introduced, MultiChange","Enable charset override

Fixes #743.
","00c8d2b7623259246c4eb5df63494c6b42c08f85","Jonathan Hedley"
"5799","charset","charset","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5800","contentType","contentType","3","Body Change, Introduced, MultiChange","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"5801","contentType","contentType","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5802","contentType","contentType","3","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5803","prepareParse","prepareParse","2","Body Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5804","prepareParse","prepareParse","2","Return Type Change, Body Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5805","parse","parse","15","Exceptions Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5806","parse","parse","15","Body Change, Exceptions Change, MultiChange","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"5807","parse","parse","15","Body Change, Exceptions Change, MultiChange","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5808","parse","parse","15","Body Change, Exceptions Change, MultiChange","Allow Jsoup.Connect to parse application/xml and application/xhtml+xml responses.

Fixes #72
","fa8a8deb6e03ee00c10138f42b9b5cf83803e425","Jonathan Hedley"
"5809","parse","parse","15","Body Change, Exceptions Change, MultiChange","Allow 400-500 errors and response with no content-type to be parsed.
","dc0b7cb2754e714a4e65553b7ef3d186f52d1004","Jesse Piascik"
"5810","parse","parse","15","Body Change, Exceptions Change, MultiChange","Documentation and test cases for jsoup.Connect ignoreHttpErrors and ignoreContentType options.
","1bc34292ffd940a8936ed317a4bf617dfc66f0cb","Jonathan Hedley"
"5811","parse","parse","15","Exceptions Change","Allow an alternate parser to be supplied for core use cases.
","433d2f180058b8b73e1951c6cfbb986714e68b0f","Jonathan Hedley"
"5812","parse","parse","15","Exceptions Change","Fixed invocation of alternative parser in Jsoup.Connection.
Updated test to confirm.
","d8c3f9cbc6a562a7d23711d4c0f97f4e4758444e","Jonathan Hedley"
"5813","parse","parse","15","Body Change, Exceptions Change, MultiChange","In jsoup.connect, fail faster if the return content type is not supported.

Fixes #153.
","e313f95e19c752a3316048468547af939e19cdd3","Jonathan Hedley"
"5814","parse","parse","15","Body Change, Exceptions Change, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"5815","parse","parse","15","Exceptions Change","Close input stream after reading to release resources
","d8fb52127f867cdf5171429dac2b812382170dd5","Jonathan Hedley"
"5816","parse","parse","15","Body Change, Exceptions Change, MultiChange","Adds easy request session-state and corrects cookie domain and path rules (#1476)

","b431fb2dd002c0425d5938ca2ce4d1c967336a5b","Jonathan Hedley"
"5817","parse","parse","15","Body Change, Exceptions Change, MultiChange","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"5818","parse","parse","15","Modifier Change, Body Change, Exceptions Change, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5819","parse","parse","15","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5820","streamParser","streamParser","3","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5821","streamParser","streamParser","3","Body Change, Exceptions Change, Introduced, MultiChange","Progressive parsing with StreamParser (#2096)

A StreamParser provides a progressive parse of its input. As each Element is completed, it is emitted via a Stream or Iterator interface. Elements returned will be complete with all their children, and an (empty) next sibling, if applicable.","2b443dff8770a97fe6f2a49db88f58e30b84abc6","Jonathan Hedley"
"5822","streamParser","streamParser","3","Body Change, Exceptions Change, MultiChange","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5823","prepareByteData","prepareByteData","3","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5824","prepareByteData","prepareByteData","3","Body Change, Introduced, MultiChange","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"5825","prepareByteData","prepareByteData","3","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5826","body","body","7","Body Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5827","body","body","7","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5828","body","body","7","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"5829","body","body","7","Body Change","Reduce hits to Charset.forName, prefer static Charset
","c0b275361ce8409f85de3573d89f6a617f0084d5","Jonathan Hedley"
"5830","body","body","7","Body Change","Remove StandardCharset use

As not in Android 10 which is a runtime target.
","28a4591949d5cb7d6c59a1dcfa5ee83048ad139a","Jonathan Hedley"
"5831","body","body","7","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5832","body","body","7","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5833","bodyAsBytes","bodyAsBytes","5","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5834","bodyAsBytes","bodyAsBytes","5","Body Change","Stream network loading (#905)

Implements a stream based input reader.

This changes URL & file inputs from buffering the whole content into a
string before starting to parse, into a stream based read.

Memory consumption when loading large pages from the network or a file is substantially reduced.","654bc6f981587bd4b39b66702550bad33e1eacc9","Jonathan Hedley"
"5835","bodyAsBytes","bodyAsBytes","5","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5836","bodyAsBytes","bodyAsBytes","5","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5837","bodyAsBytes","bodyAsBytes","5","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5838","bufferUp","bufferUp","1","Body Change, Introduced, MultiChange","Added bufferUp method to response
","cde6403a3c881403a7cf06f4d7d087464038daf6","Jonathan Hedley"
"5839","bodyStream","bodyStream","3","Body Change, Introduced, MultiChange","Added bodyStream method
","35e80a779b7908ddcd41a6a7df5f21b30bf999d2","Jonathan Hedley"
"5840","bodyStream","bodyStream","3","Body Change","Avoid BufferedInputStream synchronized reads (#2058)

To avoid pinning a virtual thread to a carrier thread, refactored ConstrainedInputStream into ControllableInputStream, which does not extend BufferedInputStream, but wraps it instead.

Had to provide a deprecation path in ConstrainedInputStream as changing the extends causes a binary backwards compatibility issue. Even though folks shouldn't be using Internal package classes, they may be.

Also enabled bodyStream to return a byte array stream after bufferUp(), in case constrains on the stream are still required.

This does not include a test case for pinning. Verified manually. Would be good to find a way to IT test it.","f638410d05d486d7851163acdb43a9c41774e9c9","Jonathan Hedley"
"5841","bodyStream","bodyStream","3","Body Change","Improve buffer management throughout the load/fetch and parse lifecycle (#2186)

* Introduces SoftPool

A SoftPool is a ThreadLocal SofReference Stack of <T>, with borrow and release methods. Allows simple recycling of objects between uses, and for those to be reaped when inactive.

* Refactored bufferUp in CharacterReader
Removed the use of a backing BufferedInputReader, which was redundant and creating large char array buffers, and reuse the char[] buffer via SoftPool.

* Maintain the string flyweight cache between runs in CharacterReader

* Updated ControllableInputStream to use new SimpleBufferedInput, instead of BufferedInputStream, so we can reuse those byte[] buffers. Also, those are only borrowed/created on the first need for the buffer; otherwise fill reads cascade down to the underlying stream. And removes synchronized / lock sections, as this is not passed between threads concurrently.

* Reduced the DefaultBufferSize to 8K from 32K

* In DataUtil, when reading ahead to detect the charset, instead of buffering into a new ByteBuffer, reuse the ControllableInputStream.

* Simplify BOM character skip

Overall, heap allocations and GC during the read & parse phase are down between -6% and -89%, and throughput improved up to +143%.
","ec2d0c4b34f0cc306d61e3b0122307bbf72335c5","Jonathan Hedley"
"5842","safeClose","safeClose","4","Body Change, Introduced, MultiChange","Close input stream after reading to release resources
","d8fb52127f867cdf5171429dac2b812382170dd5","Jonathan Hedley"
"5843","safeClose","safeClose","4","Body Change","Call .disconnect() in close, so Android OKHttp impl can clean its pool
","eec4cf3503d226272642c7507686e96870307dfb","Jonathan Hedley"
"5844","safeClose","safeClose","4","Body Change","Reorder conn.disconnect, to support keepalives when bodyStream read

Fixes #1232
","fb588770a45a9ab6b64fce0f800d50ec225a42ee","Jonathan Hedley"
"5845","safeClose","safeClose","4","Body Change","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5846","Response","Response","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5847","Response","Response","2","Body Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5848","prepareResponse","prepareResponse","1","Body Change, Exceptions Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5849","processResponseHeaders","processResponseHeaders","5","Body Change, Introduced, MultiChange","Fixed cookie handling issue in jsoup.Connect where empty cookies would cause a validation exception.

Fixes #87
","76de9d87000f375749f355a7d7d6af9fe37c3558","Jonathan Hedley"
"5850","processResponseHeaders","processResponseHeaders","5","Body Change","Merge pull request #512 from mitemitreski/master

Unused statements","a9fb01bd2b46dffbb1da3d93b0f8c566e25bc36e","Jonathan Hedley"
"5851","processResponseHeaders","processResponseHeaders","5","Body Change","Combine header values with comma

Fixes #618
","65553582d184e18de10e496b0eaa53fbe206ba17","Jonathan Hedley"
"5852","processResponseHeaders","processResponseHeaders","5","Body Change","Multiple headers should be comma joined
","35b592536592219f1b7731641726f0c7585039a5","Jonathan Hedley"
"5853","processResponseHeaders","processResponseHeaders","5","Body Change","Use the CookieManager to populate response cookies

Vs manually parsing them. This corrects handling for the various properties (order, path, TLS only, etc) that were not handled in the simple cookie map previously.

Fixes #1831.
","b6bd4b455c54fa44c68df961b9d5c21a2bb0ae73","Jonathan Hedley"
"5854","fixHeaderEncoding","fixHeaderEncoding","2","Body Change, Introduced, MultiChange","Only attempt to correct 8559 -> UTF on response headers

Fixes #2011

This allows header values to be sent as UTF-8 (as encoded by Java HTTP request writer). But that's out of spec and depending on how the upstream server handles that, may or may not work as the user intended. Hence added a note on the docs to suggest encoding the data first.
","9de27fa7cd823f6d26e33e48b36ef010c05f977c","Jonathan Hedley"
"5855","fixHeaderEncoding","fixHeaderEncoding","2","Modifier Change","Tests for fixHeaderEncoding

These already pass - if the header was mojibaked (e.g. the server sent UTF8, but JVM decoded it as 8859), that's detected and we convert. If the server sent UTF8 and Android decoded it as UTF8, it gets passed through untouched.

Related to #2011
","da185458a86a9a820e2b522e40b6df597d4f31f8","Jonathan Hedley"
"5856","looksLikeUtf8","looksLikeUtf8","4","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5857","looksLikeUtf8","looksLikeUtf8","4","Body Change, Introduced, MultiChange","Handle UTF headers and encode URLs better

Fixes #706
","2cad0592106c30b04fe328b3989af619dcb6a49c","Jonathan Hedley"
"5858","looksLikeUtf8","looksLikeUtf8","4","Body Change","Cleanup UTF BOM recognition
","cedf83c47f5fe58c4c9b2514c864bc2d576321d4","jhy"
"5859","looksLikeUtf8","looksLikeUtf8","4","Body Change","Don't recode ascii only strings
","f0eb6bd1ccced79ee04256e9aeb457f65bc7ea30","Jonathan Hedley"
"5860","setOutputContentType","setOutputContentType","2","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5861","setOutputContentType","setOutputContentType","2","Body Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5862","writePost","writePost","5","Body Change, Exceptions Change, Introduced, MultiChange","Support http/2 requests via HttpClient (#2257)

This adds support for the Java 11+ HttpClient on systems that support it, enabling http/2 requests. On Java 8, and on Android, requests will still go via the existing HttpURLConnection.

This is currently disabled by default -- set the system property `jsoup.useHttpClient` to enable it.
","18f87f1803f3481106e5291d4fd1a06cc53ea2c1","Jonathan Hedley"
"5863","writePost","writePost","5","Exceptions Change","Added `Connection#requestBodyStream(InputStream stream)`
","6c413dffdc415ec6cc7f661604635f2d9ef6ca5b","Jonathan Hedley"
"5864","writePost","writePost","5","Body Change, Exceptions Change, MultiChange","Simplified request.body and bodyStream fields
","1a68cc9b8133cb847268b1b1fc00a6edf4a74bcb","Jonathan Hedley"
"5865","writePost","writePost","5","Body Change, Exceptions Change, MultiChange","Simplify charset
","68ab3cf1ad8772ab53936d666c33383eb2cec413","Jonathan Hedley"
"5866","writePost","writePost","5","Body Change, Exceptions Change, MultiChange","Fix Java 8 compat
","ccea63a4eb3c76a82b609fdfab39300034d5bd63","Jonathan Hedley"
"5867","serialiseRequestUrl","serialiseRequestUrl","7","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5868","serialiseRequestUrl","serialiseRequestUrl","7","Body Change, Exceptions Change, Introduced, MultiChange","Fixed support for jsoup.connect to follow redirects between http & https URLs.

Fixes #37
","ef57a000b65f075de35f8d593a5223779755ac26","Jonathan Hedley"
"5869","serialiseRequestUrl","serialiseRequestUrl","7","Body Change, Exceptions Change, MultiChange","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"5870","serialiseRequestUrl","serialiseRequestUrl","7","Body Change, Exceptions Change, MultiChange","Minor perf improvements through lower garbage objects.
","5e386d51f396deec5743ca9cc4e3f0e7559d3956","Jonathan Hedley"
"5871","serialiseRequestUrl","serialiseRequestUrl","7","Body Change, Exceptions Change, MultiChange","Use a stack for StringBuilder flyweight, so threads can use more than one at a time
","c8c05694da5489221c27e45a5e49d0f5fcb41863","Jonathan Hedley"
"5872","serialiseRequestUrl","serialiseRequestUrl","7","Exceptions Change","Reduce hits to Charset.forName, prefer static Charset
","c0b275361ce8409f85de3573d89f6a617f0084d5","Jonathan Hedley"
"5873","serialiseRequestUrl","serialiseRequestUrl","7","Body Change, Exceptions Change, MultiChange","Refactored URL normalization

Introduced a simple UrlBuilder that encodes Unicode in paths in addition to existing normalizations (puny code etc)

Consistently normalize input URLs, both user-supplied and internally constructed.

Encode ' ' as '+' in query strings (vs %20).

Fixes #1914
","6e71f35c9e940ce32439bb8cbdea70579c9fe2b4","Jonathan Hedley"
"5874","needsMultipart","needsMultipart","3","File Renamed","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5875","needsMultipart","needsMultipart","3","Body Change, Introduced, MultiChange","Added support for sending plain HTTP request bodies
","d3b8326ef5d739d8df1de21f4a58bbeb04a2a88a","Jonathan Hedley"
"5876","needsMultipart","needsMultipart","3","Body Change","Simplify code a bit
","4d104721d96baaa6a6c28d2b472a37f631227f46","Jonathan Hedley"
"5877","create","create","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5878","create","create","3","Body Change","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5879","create","create","3","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5880","create","create","2","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5881","create","create","2","Body Change","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5882","KeyVal","KeyVal","4","Modifier Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5883","KeyVal","KeyVal","4","Body Change, Deleted, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5884","KeyVal","KeyVal","4","Body Change, Introduced, MultiChange","Clarified the nullability annotations within Connection and HttpConnection
","55e5a4284e0b45f57380f062a933a746564b264a","Jonathan Hedley"
"5885","KeyVal","KeyVal","4","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5886","key","key","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5887","key","key","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5888","key","key","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5889","key","key","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5890","value","value","3","Body Change","Validations for Connection
","961e4d7186308a33aad544f83e67e0a57d30b35e","Jonathan Hedley"
"5891","value","value","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5892","value","value","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5893","value","value","1","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5894","inputStream","inputStream","3","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5895","inputStream","inputStream","3","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5896","inputStream","inputStream","3","Modifier Change","Minor code cleanup
","dd5eb3bcc1a26f67a8cd13f882190fbeb6d17b12","Jonathan Hedley"
"5897","inputStream","inputStream","3","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5898","inputStream","inputStream","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5899","inputStream","inputStream","3","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5900","hasInputStream","hasInputStream","2","Body Change, Introduced, MultiChange","Merge branch 'feature-file-upload'
","bd5e1753a13b5f2d19cb80907b9502d6abfdb08f","Jonathan Hedley"
"5901","hasInputStream","hasInputStream","2","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5902","contentType","contentType","1","Body Change, Introduced, MultiChange","Add option to set mimetype on uploads
","4685bd091a690e219e629687bf84cc6f752eff81","Jonathan Hedley"
"5903","contentType","contentType","3","Body Change, Introduced, MultiChange","Tidied up Connection and Jsoup use
","00aa39e3faef106f8fbb3068fa65991b1001a7c8","Jonathan Hedley"
"5904","contentType","contentType","3","Modifier Change","Added some @Override annotations
","498da155d0bdc6b4420fdd942657ba43f38dd16a","Jonathan Hedley"
"5905","contentType","contentType","3","Modifier Change","Cleaned up some nullability warnings
","c4ea303d1e982f2c5345b2fe39f126c355748f04","Jonathan Hedley"
"5906","toString","toString","1","Body Change","Working on http connection implementation
","444f558a8ed804f8851f16dc234ced136252d485","Jonathan Hedley"
"5907","build","build","1","Body Change","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"5908","appendToAscii","appendToAscii","3","Exceptions Change","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"5909","appendToAscii","appendToAscii","3","Exceptions Change","Escape supplemental characters correctly
","6ccd158754e21a749b2390ca27282a8dda7fb4f6","Jonathan Hedley"
"5910","appendToAscii","appendToAscii","3","Body Change, Exceptions Change, MultiChange","Improved URL component escaping

Checks for specific unsafe characters

Fixes #2142
","6c0c2d4514278a82eb0868c5d978612a79c6d058","Jonathan Hedley"
"5911","isHex","isHex","2","File Renamed","Don't recode URL paths

URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII.

Fixes #1952
","1e69577e358c75a85b769583f0cf860eedb18a5e","Jonathan Hedley"
"5912","isHex","isHex","2","Body Change, Introduced, MultiChange","Improved URL component escaping

Checks for specific unsafe characters

Fixes #2142
","6c0c2d4514278a82eb0868c5d978612a79c6d058","Jonathan Hedley"
"5913","W3CDom","W3CDom","2","File Renamed","Merge pull request #517 from offa/javadoc_fix

Fixed JavaDoc errors and warnings for JDK8 with stricter doc rules","bcdd5bb2265b3702ae287a75abc45a603cd2f1ef","Jonathan Hedley"
"5914","W3CDom","W3CDom","2","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5915","namespaceAware","namespaceAware","1","Body Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"5916","namespaceAware","namespaceAware","2","Body Change, Introduced, MultiChange","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"5917","namespaceAware","namespaceAware","2","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"5918","convert","convert","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5919","asString","asString","3","Body Change, Introduced, MultiChange","In W3CDom, treat illegal tag names as text Nodes

Fixes #1093
","165b3c8225eaed0dd3bff1284375b1ff4340c9ad","Jonathan Hedley"
"5920","asString","asString","3","Body Change","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"5921","asString","asString","3","Body Change","Test we don't expand entities when converting to W3CDom
","5ec472da5f5b48ecf38027d81fde2f22ddb85a54","Jonathan Hedley"
"5922","propertiesFromMap","propertiesFromMap","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5923","OutputHtml","OutputHtml","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5924","OutputXml","OutputXml","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5925","methodMap","methodMap","1","Body Change, Introduced, MultiChange","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5926","fromJsoup","fromJsoup","3","Body Change","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"5927","fromJsoup","fromJsoup","3","Body Change","In W3CDom, handle doctypes, and don't force XML output

Fixes #1183
Updates #1098
","e02085409f0bdd7e71441fc62448192720305444","Jonathan Hedley"
"5928","fromJsoup","fromJsoup","3","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5929","fromJsoup","fromJsoup","3","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5930","fromJsoup","fromJsoup","3","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5931","fromJsoup","fromJsoup","3","Body Change","Discard invalid doctypes during W3CDom conversion
","98200dbe4e99dfddc2a44e709332c8ee45cba966","Jonathan Hedley"
"5932","convert","convert","2","Body Change","Use static NodeTraversor.traverse
","6652240656471a34544ccc1a8c337408cd235a46","Erich Schubert"
"5933","convert","convert","2","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5934","convert","convert","3","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5935","convert","convert","3","Body Change","Allow attributes valid in html when converting (#1648)

When parsing and converting an html document, the syntax was hard-coded to xml. This PR checks the document type of the output document and uses that to determine which attributes are valid.

Co-authored-by: jhy <jonathan@hedley.net>

Fixes #1647","6b1fbb51b501de87049b250fecc9a5076a186f6d","Jairam Chandar"
"5936","convert","convert","3","Body Change","Keep the W3CBuilder static

Ensures API backcompat
","7fb6d02a43c25ff60f992a702a5baf47c01f6b5b","Jonathan Hedley"
"5937","selectXpath","selectXpath","2","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5938","selectXpath","selectXpath","2","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5939","selectXpath","selectXpath","2","Body Change, Introduced, MultiChange","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5940","selectXpath","selectXpath","2","Body Change","Improved Validate error messages

Filter the Validate class out of ValidationExceptions, to make it simpler to identify where the validation error originated.

Made malformed URL and empty selection error messages more explicit.

Simplified raising errors for null and empty parameters.
","6b67d05d883fdfe0f978d77d219e80324e0a223d","Jonathan Hedley"
"5941","sourceNodes","sourceNodes","1","Body Change, Introduced, MultiChange","Added support for XPath selection for specific node types
","2bf377f72faa3b85e1a6ef66a21fca9c04001abf","Jonathan Hedley"
"5942","contextNode","contextNode","1","Body Change, Introduced, MultiChange","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5943","asString","asString","2","Body Change","W3CDom#asString should emit XML

Fixes #1098
","fe92494c7716eeb04d5d4040cc43d67b8f2f4aaf","Jonathan Hedley"
"5944","asString","asString","2","Body Change","In W3CDom, add an xmlns for undeclared attribute prefixes

Fixes #2087
","3082a4f3b3bdf4b2ce5c2cf8ec6a35392d60f20f","Jonathan Hedley"
"5945","W3CBuilder","W3CBuilder","6","Body Change","Maintain stack for namespaces

Fixes #977
","3475dc846d78e56422b3e6fdf36dfd4416f359f5","Jonathan Hedley"
"5946","W3CBuilder","W3CBuilder","6","Body Change","In W3CDom, treat illegal tag names as text Nodes

Fixes #1093
","165b3c8225eaed0dd3bff1284375b1ff4340c9ad","Jonathan Hedley"
"5947","W3CBuilder","W3CBuilder","6","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5948","W3CBuilder","W3CBuilder","6","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"5949","W3CBuilder","W3CBuilder","6","Body Change","Fix NullPointerException in case a custom document is passed to W3CDom#convert
","385219da0dea81918ffc285b42cca51f9c8d9df9","Andreas Hager"
"5950","W3CBuilder","W3CBuilder","6","Body Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"5951","head","head","11","Body Change","Merge branch 'pr/672'
","06dd896804814dbd9c1fae2eeb1ca587016eba80","Jonathan Hedley"
"5952","head","head","11","Body Change","Maintain stack for namespaces

Fixes #977
","3475dc846d78e56422b3e6fdf36dfd4416f359f5","Jonathan Hedley"
"5953","head","head","11","Body Change","Don't blow up if a namespace is undefined

Fixes #848
","a810d2e3615da9a37ad74a7db2ca8bc6945ab9a8","Jonathan Hedley"
"5954","head","head","11","Body Change","In W3CDom, treat illegal tag names as text Nodes

Fixes #1093
","165b3c8225eaed0dd3bff1284375b1ff4340c9ad","Jonathan Hedley"
"5955","head","head","11","Body Change","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5956","head","head","11","Body Change","When evaluating XPath on a context node, use the entire w3c document

And track the context in user data sections. This allows queries to evaluate against the complete document, vs just a sub-tree.

Fixes #1652
","1e4d12797caa0cd53e140fe32b4fe0a21b07eb30","Jonathan Hedley"
"5957","head","head","11","Body Change","Disable namespaces in Element#selectXpath

Simplifies use of xpath queries when there are xmlns attributes set, by allowing elements to be found by their local name, consistently.

Fixes #180
","2b573de884aad36f3f6be3dc46e51ee06b7269f1","Jonathan Hedley"
"5958","head","head","11","Body Change","Put W3C DOM elements in HTML namespace by default

* Put W3C DOM elements in HTML namespace by default

* Included imputed HTML namespace in serialization

* Impute HTML namespace only if input document is HTML

* Use namespaceAware to choose if to set XHTML namespace

---------

Co-authored-by: Jonathan Hedley <jonathan@hedley.net>

Fixes #1837","4a278e9b8e9c0515ee005775703a40d7b0a86d2f","Garret Wilson"
"5959","head","head","11","Modifier Change","Minor code cleanup
","dd5eb3bcc1a26f67a8cd13f882190fbeb6d17b12","Jonathan Hedley"
"5960","head","head","11","Body Change","Normalize XML tag names (#2276)

`foo<bar`, OK in HTML5, becomes `foo_bar` in XML output, or when converting to W3C DOM.","1b36b066948a2e25caca1fafe54d5210a95a3b35","Jonathan Hedley"
"5961","head","head","11","Body Change","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"5962","append","append","1","Body Change, Introduced, MultiChange","Native XPath support in jsoup (#1629)

Bringing in as a beta feature in 1.14.3","c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","Jonathan Hedley"
"5963","tail","tail","1","Modifier Change","Minor code cleanup
","dd5eb3bcc1a26f67a8cd13f882190fbeb6d17b12","Jonathan Hedley"
"5964","copyAttributes","copyAttributes","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"5965","setAttribute","setAttribute","1","Body Change, Exceptions Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
"5966","maybeAddUndeclaredNs","maybeAddUndeclaredNs","1","Body Change, Introduced, MultiChange","Move xmlns processing from W3CDom to XmlTreeBuilder

For #2299
","85a4fa2fb8e979b7bc3197aa7c9b822ab2052e38","Jonathan Hedley"
